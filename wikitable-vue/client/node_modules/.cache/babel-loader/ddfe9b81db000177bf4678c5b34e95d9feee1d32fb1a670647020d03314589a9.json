{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a89cbc96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"simple-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"simple-text\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"simple-pie-container\"\n};\nconst _hoisted_4 = {\n  class: \"simple-pie\"\n};\nconst _hoisted_5 = {\n  class: \"pie-values\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"simple-bars-container\"\n};\nconst _hoisted_8 = {\n  class: \"simple-bars\"\n};\nconst _hoisted_9 = {\n  class: \"bar-values\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"simple-line-container\"\n};\nconst _hoisted_12 = {\n  viewBox: \"0 0 100 50\",\n  class: \"line-svg\"\n};\nconst _hoisted_13 = [\"points\"];\nconst _hoisted_14 = [\"cx\", \"cy\"];\nconst _hoisted_15 = {\n  class: \"line-values\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_17 = {\n  class: \"simple-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.formatSimpleText($props.field)), 1 /* TEXT */)) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 简化饼图 - 显示所有数据 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 修改后的饼图渲染逻辑 \"), $setup.pieData.length === 1 ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"pie-slice-full\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.pieColors[0]\n    })\n  }, null, 4 /* STYLE */)) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($setup.pieSlices, (slice, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"pie-slice\",\n      style: _normalizeStyle(slice.style)\n    }, null, 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.formattedPieData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"pie-value-item\"\n    }, [_createElementVNode(\"span\", {\n      class: \"pie-color\",\n      style: _normalizeStyle({\n        backgroundColor: $setup.pieColors[index]\n      })\n    }, null, 4 /* STYLE */), _createTextVNode(\" \" + _toDisplayString(item), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 简化柱状图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.simpleBarData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"simple-bar\",\n      style: _normalizeStyle({\n        height: item.height + '%',\n        backgroundColor: $setup.barColors[index]\n      })\n    }, null, 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.formattedBarData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"bar-value-item\"\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 简化折线图 - 显示趋势 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_12, [_createElementVNode(\"polyline\", {\n    points: $setup.linePoints,\n    fill: \"none\",\n    stroke: \"#3498db\",\n    \"stroke-width\": \"2\"\n  }, null, 8 /* PROPS */, _hoisted_13), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.linePointsArray, (point, index) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: index,\n      cx: point.x,\n      cy: point.y,\n      r: \"2\",\n      fill: \"#3498db\"\n    }, null, 8 /* PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))])), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.formattedLineData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"line-value-item\"\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \"-\"))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", _hoisted_17, _toDisplayString($setup.formatSimpleText($props.field)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","viewBox","_createElementBlock","_hoisted_1","_createCommentVNode","$props","visualization","_hoisted_2","_toDisplayString","$setup","formatSimpleText","field","_Fragment","hasData","_hoisted_3","_createElementVNode","_hoisted_4","pieData","length","style","_normalizeStyle","pieColors","_renderList","pieSlices","slice","index","_hoisted_5","formattedPieData","item","backgroundColor","_createTextVNode","_hoisted_6","_hoisted_7","_hoisted_8","simpleBarData","height","barColors","_hoisted_9","formattedBarData","_hoisted_10","_hoisted_11","_hoisted_12","points","linePoints","fill","stroke","_hoisted_13","linePointsArray","point","cx","x","cy","y","r","_hoisted_14","_hoisted_15","formattedLineData","_hoisted_16","_hoisted_17"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 简化饼图 - 显示所有数据 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-pie-container\">\r\n\t\t\t\t<div class=\"simple-pie\">\r\n\t\t\t\t\t<!-- 修改后的饼图渲染逻辑 -->\r\n\t\t\t\t\t<template v-if=\"pieData.length === 1\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"pie-slice-full\"\r\n\t\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\t\tbackgroundColor: pieColors[0]\r\n\t\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tv-for=\"(slice, index) in pieSlices\"\r\n\t\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:style=\"slice.style\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"pie-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedPieData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"pie-value-item\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"pie-color\"\r\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: pieColors[index] }\"></span>\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 简化柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-bars-container\">\r\n\t\t\t\t<div class=\"simple-bars\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in simpleBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"simple-bar\"\r\n\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\theight: item.height + '%',\r\n\t\t\t\t\t\t\tbackgroundColor: barColors[index]\r\n\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bar-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"bar-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 简化折线图 - 显示趋势 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-line-container\">\r\n\t\t\t\t<svg viewBox=\"0 0 100 50\" class=\"line-svg\">\r\n\t\t\t\t\t<polyline\r\n\t\t\t\t\t\t:points=\"linePoints\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"#3498db\"\r\n\t\t\t\t\t\tstroke-width=\"2\" />\r\n\t\t\t\t\t<circle\r\n\t\t\t\t\t\tv-for=\"(point, index) in linePointsArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t:cx=\"point.x\"\r\n\t\t\t\t\t\t:cy=\"point.y\"\r\n\t\t\t\t\t\tr=\"2\"\r\n\t\t\t\t\t\tfill=\"#3498db\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<div class=\"line-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedLineData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"line-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\t// 颜色定义\r\n\tconst pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\r\n\t// 根据字段key获取单位转换因子\r\n\tconst getUnitFactor = fieldKey => {\r\n\t\tswitch (fieldKey) {\r\n\t\t\tcase \"GDP\":\r\n\t\t\t\treturn 1e12; // 转换为万亿\r\n\t\t\tcase \"Population\":\r\n\t\t\t\treturn 1e8; // 转换为亿\r\n\t\t\tdefault:\r\n\t\t\t\treturn 1;\r\n\t\t}\r\n\t};\r\n\r\n\t// 安全转换为数字并应用单位转换\r\n\tconst safeToNumber = (value, fieldKey) => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (typeof value === \"number\") return value / getUnitFactor(fieldKey);\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 格式化数值显示\r\n\tconst formatNumber = (value, fieldKey) => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\r\n\t\t// 根据字段类型格式化\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\treturn num.toFixed(1) + \"%\";\r\n\t\t}\r\n\r\n\t\tif (fieldKey === \"GDP\") {\r\n\t\t\treturn num.toFixed(2) + \"T\";\r\n\t\t}\r\n\r\n\t\tif (fieldKey === \"Population\") {\r\n\t\t\treturn num.toFixed(2) + \"亿\";\r\n\t\t}\r\n\r\n\t\treturn num.toFixed(2);\r\n\t};\r\n\r\n\t// 格式化简单文本\r\n\tconst formatSimpleText = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tconst items = value.map(item => item.raw || item.value || item);\r\n\t\t\treturn items.length > 2\r\n\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t: items.join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || \"-\";\r\n\t\t}\r\n\t\treturn value.toString().length > 50\r\n\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t: value.toString();\r\n\t};\r\n\r\n\t// 饼图数据\r\n\tconst pieData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tlet value = safeToNumber(item.value || item.raw, props.fieldKey);\r\n\t\t\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tlet value = safeToNumber(\r\n\t\t\t\tprops.field.value || props.field.raw,\r\n\t\t\t\tprops.fieldKey\r\n\t\t\t);\r\n\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t: \"项目\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 格式化饼图数据\r\n\tconst formattedPieData = computed(() => {\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\treturn `${item.name}: ${formatNumber(item.value, props.fieldKey)}`;\r\n\t\t});\r\n\t});\r\n\r\n\t// 饼图切片\r\n\tconst pieSlices = computed(() => {\r\n\t\tif (pieData.value.length <= 1) return []; // 单值或空值情况由模板特殊处理\r\n\r\n\t\tconst total = pieData.value.reduce((sum, item) => sum + item.value, 0);\r\n\t\tif (total <= 0) return [];\r\n\r\n\t\tlet accumulated = 0;\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\tconst start = (accumulated / total) * 360;\r\n\t\t\taccumulated += item.value;\r\n\t\t\tconst end = (accumulated / total) * 360;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: pieColors[index % pieColors.length],\r\n\t\t\t\t\ttransform: `rotate(${start}deg)`,\r\n\t\t\t\t\tclipPath: `polygon(50% 50%, 50% 0%, ${\r\n\t\t\t\t\t\tend > 180 ? \"100% 0%, 100% 100%, 50% 100%\" : \"100% 0%\"\r\n\t\t\t\t\t}, ${getPieSlicePoint(end)})`\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算饼图切片点\r\n\tconst getPieSlicePoint = degrees => {\r\n\t\tconst radians = ((degrees - 90) * Math.PI) / 180;\r\n\t\tconst x = 50 + 50 * Math.cos(radians);\r\n\t\tconst y = 50 + 50 * Math.sin(radians);\r\n\t\treturn `${x}% ${y}%`;\r\n\t};\r\n\r\n\t// 柱状图数据\r\n\tconst simpleBarData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tlet values = [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\tvalues = props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => safeToNumber(item.value || item.raw, props.fieldKey));\r\n\t\t} else if (typeof props.field === \"object\") {\r\n\t\t\tvalues = [\r\n\t\t\t\tsafeToNumber(props.field.value || props.field.raw, props.fieldKey)\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tvalues = [safeToNumber(props.field, props.fieldKey)];\r\n\t\t}\r\n\r\n\t\tif (values.length === 0) return [];\r\n\r\n\t\tconst max = Math.max(...values, 1);\r\n\t\treturn values.map((v, index) => ({\r\n\t\t\tvalue: v,\r\n\t\t\theight: (v / max) * 100,\r\n\t\t\tcolor: barColors[index % barColors.length]\r\n\t\t}));\r\n\t});\r\n\r\n\t// 格式化柱状图数据\r\n\tconst formattedBarData = computed(() => {\r\n\t\treturn simpleBarData.value.map(item => {\r\n\t\t\treturn formatNumber(item.value, props.fieldKey);\r\n\t\t});\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = safeToNumber(item.value || item.raw, props.fieldKey);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: index,\r\n\t\t\t\t\t\ty: value,\r\n\t\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = safeToNumber(\r\n\t\t\t\tprops.field.value || props.field.raw,\r\n\t\t\t\tprops.fieldKey\r\n\t\t\t);\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: value,\r\n\t\t\t\t\traw: props.field.raw || props.field.value\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tconst value = safeToNumber(props.field, props.fieldKey);\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: value,\r\n\t\t\t\traw: props.field\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\t// 折线图点\r\n\tconst linePointsArray = computed(() => {\r\n\t\tif (lineData.value.length === 0) return [];\r\n\r\n\t\tconst maxY = Math.max(...lineData.value.map(p => p.y), 1);\r\n\t\tconst minY = Math.min(...lineData.value.map(p => p.y), 0);\r\n\t\tconst rangeY = maxY - minY;\r\n\r\n\t\treturn lineData.value.map(point => {\r\n\t\t\tconst x = (point.x / (lineData.value.length - 1)) * 100;\r\n\t\t\tconst y = rangeY > 0 ? 50 - ((point.y - minY) / rangeY) * 50 : 25;\r\n\t\t\treturn { x, y };\r\n\t\t});\r\n\t});\r\n\r\n\tconst linePoints = computed(() => {\r\n\t\treturn linePointsArray.value.map(p => `${p.x},${p.y}`).join(\" \");\r\n\t});\r\n\r\n\t// 格式化折线图数据\r\n\tconst formattedLineData = computed(() => {\r\n\t\treturn lineData.value.map(item => {\r\n\t\t\treturn formatNumber(item.y, props.fieldKey);\r\n\t\t});\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return props.field.length > 0;\r\n\t\tif (typeof props.field === \"object\")\r\n\t\t\treturn Object.keys(props.field).length > 0;\r\n\t\treturn String(props.field).trim().length > 0;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t/* 饼图样式 */\r\n\t.simple-pie-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-pie {\r\n\t\twidth: 60px;\r\n\t\theight: 60px;\r\n\t\tborder-radius: 50%;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.pie-slice {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\ttransform-origin: center;\r\n\t}\r\n\r\n\t.pie-slice-full {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tborder-radius: 50%;\r\n\t}\r\n\r\n\t.pie-values {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tgap: 5px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.pie-value-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 3px;\r\n\t}\r\n\r\n\t.pie-color {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t/* 柱状图样式 */\r\n\t.simple-bars-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-bars {\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-end;\r\n\t\theight: 60px;\r\n\t\tgap: 4px;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 10px;\r\n\t}\r\n\r\n\t.simple-bar {\r\n\t\tflex: 1;\r\n\t\tmin-width: 5px;\r\n\t\ttransition: height 0.3s;\r\n\t\tborder-radius: 2px 2px 0 0;\r\n\t}\r\n\r\n\t.bar-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.bar-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 折线图样式 */\r\n\t.simple-line-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.line-svg {\r\n\t\twidth: 100%;\r\n\t\theight: 60px;\r\n\t}\r\n\r\n\t.line-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.line-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}