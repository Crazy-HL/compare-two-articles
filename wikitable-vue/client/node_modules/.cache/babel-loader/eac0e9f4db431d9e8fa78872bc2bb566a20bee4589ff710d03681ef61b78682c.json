{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n    const div1InfoboxData = ref(null);\n    const div3InfoboxData = ref(null);\n    const showSuggestedQuestion = ref(false);\n    const suggestedQuestion = ref(\"\");\n    const currentFieldKey = ref(\"\");\n    const leftData = ref(null);\n    const rightData = ref(null);\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n\n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    };\n\n    // 获取最近的分析内容\n    const getLastAnalysis = () => {\n      const reversed = [...chatHistory.value].reverse();\n      const lastAssistantMsg = reversed.find(msg => msg.role === \"assistant\" && !msg.error);\n      return lastAssistantMsg ? lastAssistantMsg.content : \"\";\n    };\n\n    // 从问题中提取属性名\n    const extractFieldFromQuestion = question => {\n      const patterns = [/分析(.*?)(属性|指标|字段)/, /比较(.*?)(?:的|和)/, /(.*?)(?:的|)差异/, /查看(.*?)(?:的|)情况/];\n      for (const pattern of patterns) {\n        const match = question.match(pattern);\n        if (match && match[1]) {\n          return match[1].trim();\n        }\n      }\n      return null;\n    };\n\n    // 判断是否为追问问题\n    const isFollowUpQuestion = question => {\n      if (!currentFieldKey.value) return false;\n      return question.includes(suggestedQuestion.value) || question.includes(currentFieldKey.value) || question.includes(\"原因\") || question.includes(\"为什么\") || question.includes(\"解释\") || question.includes(\"详细分析\");\n    };\n\n    // 判断是否为其他属性提问\n    const isNewAttributeQuestion = question => {\n      return /(分析|比较|对比|查看|了解).*(属性|指标|字段|差异|情况)/.test(question);\n    };\n\n    // 简化infobox数据\n    const simplifyInfobox = infobox => {\n      if (!infobox) return {};\n      const simpleData = {};\n      const fieldsToKeep = [\"score\", \"rate\", \"value\", \"amount\", \"size\", \"level\", \"name\", \"type\"];\n      Object.entries(infobox).forEach(_ref2 => {\n        let [key, value] = _ref2;\n        if (fieldsToKeep.includes(key) || typeof value === \"number\" || typeof value === \"string\" && value.length < 50) {\n          simpleData[key] = value;\n        }\n      });\n      return simpleData;\n    };\n\n    // 格式化分析结果\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n      text = text.replace(/^# (.*$)/gm, \"<h1>$1</h1>\").replace(/^## (.*$)/gm, \"<h2>$1</h2>\").replace(/^### (.*$)/gm, \"<h3>$1</h3>\").replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\*(.*?)\\*/g, \"<em>$1</em>\").replace(/`(.*?)`/g, \"<code>$1</code>\").replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">').replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>').replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\").replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\").replace(/\\n\\n/g, \"<br><br>\").replace(/\\n/g, \"<br>\");\n      return `<div class=\"markdown-content\">${text}</div>`;\n    };\n\n    // 处理初始化属性对比\n    const handleInitialComparison = async () => {\n      await api.post(\"compare_attributes\", {\n        chartData: {\n          leftData: leftData.value,\n          rightData: rightData.value,\n          fieldKey: currentFieldKey.value,\n          analysisType: \"initial_comparison\"\n        }\n      }, response => {\n        const formattedAnswer = formatAnalysisResult(response.analysis);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formattedAnswer,\n          timestamp: new Date().toLocaleString()\n        });\n        suggestedQuestion.value = `请结合其他属性深入分析${currentFieldKey.value}差异的原因`;\n        showSuggestedQuestion.value = true;\n        scrollToBottom();\n      }, error => {\n        throw error;\n      });\n    };\n\n    // 处理追问问题\n    const handleFollowUpQuestion = async question => {\n      await api.post(\"compare_attributes\", {\n        chartData: {\n          leftData: leftData.value,\n          rightData: rightData.value,\n          fieldKey: currentFieldKey.value,\n          leftInfobox: simplifyInfobox(div1InfoboxData.value),\n          rightInfobox: simplifyInfobox(div3InfoboxData.value),\n          userQuestion: question,\n          analysisType: \"follow_up\"\n        },\n        previousAnalysis: getLastAnalysis()\n      }, response => {\n        const formattedAnswer = formatAnalysisResult(response.analysis);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formattedAnswer,\n          timestamp: new Date().toLocaleString()\n        });\n        scrollToBottom();\n      }, error => {\n        throw error;\n      });\n    };\n\n    // 处理其他属性提问\n    const handleNewAttributeQuestion = async question => {\n      const extractedField = extractFieldFromQuestion(question) || \"general\";\n      await api.post(\"compare_attributes\", {\n        chartData: {\n          leftData: leftData.value,\n          rightData: rightData.value,\n          fieldKey: extractedField,\n          leftInfobox: simplifyInfobox(div1InfoboxData.value),\n          rightInfobox: simplifyInfobox(div3InfoboxData.value),\n          userQuestion: question,\n          analysisType: \"new_attribute\"\n        }\n      }, response => {\n        const formattedAnswer = formatAnalysisResult(response.analysis);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formattedAnswer,\n          timestamp: new Date().toLocaleString()\n        });\n        if (extractedField !== \"general\") {\n          currentFieldKey.value = extractedField;\n        }\n        scrollToBottom();\n      }, error => {\n        throw error;\n      });\n    };\n\n    // 处理普通问题\n    const handleGeneralQuestion = async question => {\n      await api.post(\"compare_attributes\", {\n        chartData: {\n          leftInfobox: simplifyInfobox(div1InfoboxData.value),\n          rightInfobox: simplifyInfobox(div3InfoboxData.value),\n          userQuestion: question,\n          analysisType: \"general_question\"\n        }\n      }, response => {\n        const formattedAnswer = formatAnalysisResult(response.analysis);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formattedAnswer,\n          timestamp: new Date().toLocaleString()\n        });\n        scrollToBottom();\n      }, error => {\n        throw error;\n      });\n    };\n\n    // 主提问函数\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"问题不能为空\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      const question = userQuestion.value;\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      showSuggestedQuestion.value = false;\n      isLoading.value = true;\n      try {\n        if (currentFieldKey.value && isFollowUpQuestion(question)) {\n          await handleFollowUpQuestion(question);\n        } else if (isNewAttributeQuestion(question)) {\n          await handleNewAttributeQuestion(question);\n        } else if (currentFieldKey.value) {\n          await handleInitialComparison();\n        } else {\n          await handleGeneralQuestion(question);\n        }\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `请求失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 使用建议问题\n    const useSuggestedQuestion = () => {\n      userQuestion.value = suggestedQuestion.value;\n      showSuggestedQuestion.value = false;\n      nextTick(() => {\n        document.querySelector(\".input-container textarea\").focus();\n      });\n    };\n\n    // 处理选择事件\n    const handleSelection = (data, source) => {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    };\n\n    // 从HTML内容获取纯文本\n    const getPlainTextFromSelection = htmlContent => {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    };\n\n    // 处理属性对比\n    const handleAttributeComparison = async _ref3 => {\n      let {\n        fieldKey,\n        leftData: incomingLeftData,\n        rightData: incomingRightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref3;\n      if (!incomingLeftData || !incomingRightData) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请先选择要对比的数据\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      leftData.value = incomingLeftData;\n      rightData.value = incomingRightData;\n      currentFieldKey.value = fieldKey;\n      isLoading.value = true;\n      try {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `正在对比分析<strong>${fieldKey}</strong>属性...`,\n          timestamp: new Date().toLocaleString()\n        });\n        const requestPayload = {\n          chartData: {\n            leftData: leftData.value,\n            rightData: rightData.value,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType,\n            allFields: Object.keys({\n              ...div1InfoboxData.value,\n              ...div3InfoboxData.value\n            }),\n            leftInfobox: simplifyInfobox(div1InfoboxData.value),\n            rightInfobox: simplifyInfobox(div3InfoboxData.value)\n          },\n          chartType: \"comparison\"\n        };\n        await api.post(\"compare_attributes\", requestPayload, response => {\n          const formattedAnalysis = formatAnalysisResult(response.analysis);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formattedAnalysis,\n            timestamp: new Date().toLocaleString()\n          });\n          suggestedQuestion.value = `请结合其他属性深入分析${fieldLabel || fieldKey}差异的原因`;\n          showSuggestedQuestion.value = true;\n          scrollToBottom();\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `对比分析失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 事件监听\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n      bus.on(\"div1_InfoboxData\", data => {\n        div1InfoboxData.value = data;\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        div3InfoboxData.value = data;\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      currentChartData,\n      currentChartType,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      div1InfoboxData,\n      div3InfoboxData,\n      showSuggestedQuestion,\n      suggestedQuestion,\n      currentFieldKey,\n      leftData,\n      rightData,\n      loadChatHistory,\n      scrollToBottom,\n      getLastAnalysis,\n      extractFieldFromQuestion,\n      isFollowUpQuestion,\n      isNewAttributeQuestion,\n      simplifyInfobox,\n      formatAnalysisResult,\n      handleInitialComparison,\n      handleFollowUpQuestion,\n      handleNewAttributeQuestion,\n      handleGeneralQuestion,\n      askQuestion,\n      useSuggestedQuestion,\n      handleSelection,\n      getPlainTextFromSelection,\n      handleAttributeComparison,\n      handleDiv1Event,\n      handleDiv3Event,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","userQuestion","chatHistory","selectText2","selectText3","currentChartData","currentChartType","div1RawData","div3RawData","isLoading","div1InfoboxData","div3InfoboxData","showSuggestedQuestion","suggestedQuestion","currentFieldKey","leftData","rightData","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","getLastAnalysis","reversed","reverse","lastAssistantMsg","find","msg","role","content","extractFieldFromQuestion","question","patterns","pattern","match","trim","isFollowUpQuestion","includes","isNewAttributeQuestion","test","simplifyInfobox","infobox","simpleData","fieldsToKeep","Object","entries","forEach","_ref2","key","length","formatAnalysisResult","text","replace","handleInitialComparison","api","post","chartData","fieldKey","analysisType","response","formattedAnswer","analysis","push","timestamp","Date","toLocaleString","handleFollowUpQuestion","leftInfobox","rightInfobox","previousAnalysis","handleNewAttributeQuestion","extractedField","handleGeneralQuestion","askQuestion","message","useSuggestedQuestion","focus","handleSelection","data","source","plainText","getPlainTextFromSelection","htmlContent","createElement","innerHTML","innerText","textContent","handleAttributeComparison","_ref3","incomingLeftData","incomingRightData","leftTitle","rightTitle","fieldType","fieldLabel","requestPayload","allFields","keys","chartType","formattedAnalysis","handleDiv1Event","handleDiv3Event","on","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\" v-html=\"message.content\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"showSuggestedQuestion\" class=\"suggested-question\">\r\n\t\t\t\t\t<div class=\"suggestion-text\">建议深入分析的问题：</div>\r\n\t\t\t\t\t<div class=\"suggestion-content\" @click=\"useSuggestedQuestion\">\r\n\t\t\t\t\t\t{{ suggestedQuestion }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input-area\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\tconst showSuggestedQuestion = ref(false);\r\n\tconst suggestedQuestion = ref(\"\");\r\n\tconst currentFieldKey = ref(\"\");\r\n\tconst leftData = ref(null);\r\n\tconst rightData = ref(null);\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 滚动到底部\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 获取最近的分析内容\r\n\tconst getLastAnalysis = () => {\r\n\t\tconst reversed = [...chatHistory.value].reverse();\r\n\t\tconst lastAssistantMsg = reversed.find(\r\n\t\t\tmsg => msg.role === \"assistant\" && !msg.error\r\n\t\t);\r\n\t\treturn lastAssistantMsg ? lastAssistantMsg.content : \"\";\r\n\t};\r\n\r\n\t// 从问题中提取属性名\r\n\tconst extractFieldFromQuestion = question => {\r\n\t\tconst patterns = [\r\n\t\t\t/分析(.*?)(属性|指标|字段)/,\r\n\t\t\t/比较(.*?)(?:的|和)/,\r\n\t\t\t/(.*?)(?:的|)差异/,\r\n\t\t\t/查看(.*?)(?:的|)情况/\r\n\t\t];\r\n\r\n\t\tfor (const pattern of patterns) {\r\n\t\t\tconst match = question.match(pattern);\r\n\t\t\tif (match && match[1]) {\r\n\t\t\t\treturn match[1].trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 判断是否为追问问题\r\n\tconst isFollowUpQuestion = question => {\r\n\t\tif (!currentFieldKey.value) return false;\r\n\r\n\t\treturn (\r\n\t\t\tquestion.includes(suggestedQuestion.value) ||\r\n\t\t\tquestion.includes(currentFieldKey.value) ||\r\n\t\t\tquestion.includes(\"原因\") ||\r\n\t\t\tquestion.includes(\"为什么\") ||\r\n\t\t\tquestion.includes(\"解释\") ||\r\n\t\t\tquestion.includes(\"详细分析\")\r\n\t\t);\r\n\t};\r\n\r\n\t// 判断是否为其他属性提问\r\n\tconst isNewAttributeQuestion = question => {\r\n\t\treturn /(分析|比较|对比|查看|了解).*(属性|指标|字段|差异|情况)/.test(\r\n\t\t\tquestion\r\n\t\t);\r\n\t};\r\n\r\n\t// 简化infobox数据\r\n\tconst simplifyInfobox = infobox => {\r\n\t\tif (!infobox) return {};\r\n\t\tconst simpleData = {};\r\n\t\tconst fieldsToKeep = [\r\n\t\t\t\"score\",\r\n\t\t\t\"rate\",\r\n\t\t\t\"value\",\r\n\t\t\t\"amount\",\r\n\t\t\t\"size\",\r\n\t\t\t\"level\",\r\n\t\t\t\"name\",\r\n\t\t\t\"type\"\r\n\t\t];\r\n\r\n\t\tObject.entries(infobox).forEach(([key, value]) => {\r\n\t\t\tif (\r\n\t\t\t\tfieldsToKeep.includes(key) ||\r\n\t\t\t\ttypeof value === \"number\" ||\r\n\t\t\t\t(typeof value === \"string\" && value.length < 50)\r\n\t\t\t) {\r\n\t\t\t\tsimpleData[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn simpleData;\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\r\n\t\ttext = text\r\n\t\t\t.replace(/^# (.*$)/gm, \"<h1>$1</h1>\")\r\n\t\t\t.replace(/^## (.*$)/gm, \"<h2>$1</h2>\")\r\n\t\t\t.replace(/^### (.*$)/gm, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\r\n\t\t\t.replace(/`(.*?)`/g, \"<code>$1</code>\")\r\n\t\t\t.replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">')\r\n\t\t\t.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>')\r\n\t\t\t.replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\")\r\n\t\t\t.replace(/\\n\\n/g, \"<br><br>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\");\r\n\r\n\t\treturn `<div class=\"markdown-content\">${text}</div>`;\r\n\t};\r\n\r\n\t// 处理初始化属性对比\r\n\tconst handleInitialComparison = async () => {\r\n\t\tawait api.post(\r\n\t\t\t\"compare_attributes\",\r\n\t\t\t{\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tfieldKey: currentFieldKey.value,\r\n\t\t\t\t\tanalysisType: \"initial_comparison\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${currentFieldKey.value}差异的原因`;\r\n\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t\tscrollToBottom();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 处理追问问题\r\n\tconst handleFollowUpQuestion = async question => {\r\n\t\tawait api.post(\r\n\t\t\t\"compare_attributes\",\r\n\t\t\t{\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tfieldKey: currentFieldKey.value,\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value),\r\n\t\t\t\t\tuserQuestion: question,\r\n\t\t\t\t\tanalysisType: \"follow_up\"\r\n\t\t\t\t},\r\n\t\t\t\tpreviousAnalysis: getLastAnalysis()\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t\tscrollToBottom();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 处理其他属性提问\r\n\tconst handleNewAttributeQuestion = async question => {\r\n\t\tconst extractedField = extractFieldFromQuestion(question) || \"general\";\r\n\r\n\t\tawait api.post(\r\n\t\t\t\"compare_attributes\",\r\n\t\t\t{\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tfieldKey: extractedField,\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value),\r\n\t\t\t\t\tuserQuestion: question,\r\n\t\t\t\t\tanalysisType: \"new_attribute\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (extractedField !== \"general\") {\r\n\t\t\t\t\tcurrentFieldKey.value = extractedField;\r\n\t\t\t\t}\r\n\t\t\t\tscrollToBottom();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 处理普通问题\r\n\tconst handleGeneralQuestion = async question => {\r\n\t\tawait api.post(\r\n\t\t\t\"compare_attributes\",\r\n\t\t\t{\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value),\r\n\t\t\t\t\tuserQuestion: question,\r\n\t\t\t\t\tanalysisType: \"general_question\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t\tscrollToBottom();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 主提问函数\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tif (currentFieldKey.value && isFollowUpQuestion(question)) {\r\n\t\t\t\tawait handleFollowUpQuestion(question);\r\n\t\t\t} else if (isNewAttributeQuestion(question)) {\r\n\t\t\t\tawait handleNewAttributeQuestion(question);\r\n\t\t\t} else if (currentFieldKey.value) {\r\n\t\t\t\tawait handleInitialComparison();\r\n\t\t\t} else {\r\n\t\t\t\tawait handleGeneralQuestion(question);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 使用建议问题\r\n\tconst useSuggestedQuestion = () => {\r\n\t\tuserQuestion.value = suggestedQuestion.value;\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tnextTick(() => {\r\n\t\t\tdocument.querySelector(\".input-container textarea\").focus();\r\n\t\t});\r\n\t};\r\n\r\n\t// 处理选择事件\r\n\tconst handleSelection = (data, source) => {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t};\r\n\r\n\t// 从HTML内容获取纯文本\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\t// 处理属性对比\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData: incomingLeftData,\r\n\t\trightData: incomingRightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!incomingLeftData || !incomingRightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tleftData.value = incomingLeftData;\r\n\t\trightData.value = incomingRightData;\r\n\t\tcurrentFieldKey.value = fieldKey;\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在对比分析<strong>${fieldKey}</strong>属性...`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tconst requestPayload = {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tleftTitle,\r\n\t\t\t\t\trightTitle,\r\n\t\t\t\t\tfieldKey,\r\n\t\t\t\t\tfieldType,\r\n\t\t\t\t\tallFields: Object.keys({\r\n\t\t\t\t\t\t...div1InfoboxData.value,\r\n\t\t\t\t\t\t...div3InfoboxData.value\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t},\r\n\t\t\t\tchartType: \"comparison\"\r\n\t\t\t};\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"compare_attributes\",\r\n\t\t\t\trequestPayload,\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${\r\n\t\t\t\t\t\tfieldLabel || fieldKey\r\n\t\t\t\t\t}差异的原因`;\r\n\t\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 事件监听\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100vh;\r\n\t\tbackground: #f5f7fa;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\theight: 50vh;\r\n\t\tmin-height: 50vh;\r\n\t\toverflow: hidden;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\tscroll-behavior: smooth;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\theight: 30vh;\r\n\t\tmin-height: 30vh;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tmargin: 0 10px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-area {\r\n\t\theight: 15vh;\r\n\t\tmin-height: 15vh;\r\n\t\tpadding: 15px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-top: 1px solid #e0e0e0;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 15px 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tline-height: 1.6;\r\n\t\tposition: relative;\r\n\t\tmax-width: 85%;\r\n\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.message.user {\r\n\t\tbackground: #e3f2fd;\r\n\t\tmargin-left: auto;\r\n\t\tborder-bottom-right-radius: 4px;\r\n\t\tborder: 1px solid #bbdefb;\r\n\t}\r\n\r\n\t.message.assistant {\r\n\t\tbackground: #f8f9fa;\r\n\t\tmargin-right: auto;\r\n\t\tborder-bottom-left-radius: 4px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.message.error {\r\n\t\tbackground: #ffebee;\r\n\t\tborder-left: 4px solid #f44336;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tword-wrap: break-word;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.input-container textarea {\r\n\t\twidth: 100%;\r\n\t\tpadding: 12px 16px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 12px;\r\n\t\tresize: none;\r\n\t\tfont-size: 14px;\r\n\t\toutline: none;\r\n\t\tbackground: #f9f9f9;\r\n\t}\r\n\r\n\t.input-container textarea:focus {\r\n\t\tbackground: #ffffff;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tbackground: #4285f4;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 20px;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.button-container button:hover {\r\n\t\tbackground: #3367d6;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t.button-container button:disabled {\r\n\t\tbackground: #b3c6e0;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 15px;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\tborder: 3px solid rgba(66, 133, 244, 0.2);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top: 3px solid #4285f4;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.markdown-content {\r\n\t\tline-height: 1.7;\r\n\t\tfont-size: 15px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.markdown-content h1 {\r\n\t\tfont-size: 1.5em;\r\n\t\tmargin: 20px 0 15px;\r\n\t\tpadding-bottom: 5px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.markdown-content h2 {\r\n\t\tfont-size: 1.3em;\r\n\t\tmargin: 18px 0 12px;\r\n\t\tcolor: #34495e;\r\n\t}\r\n\r\n\t.markdown-content h3 {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin: 15px 0 10px;\r\n\t\tcolor: #4285f4;\r\n\t}\r\n\r\n\t.markdown-content ul,\r\n\t.markdown-content ol {\r\n\t\tpadding-left: 25px;\r\n\t\tmargin: 12px 0;\r\n\t}\r\n\r\n\t.markdown-content li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.markdown-content ul li::before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #4285f4;\r\n\t\tposition: absolute;\r\n\t\tleft: -15px;\r\n\t}\r\n\r\n\t.markdown-content strong {\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.markdown-content em {\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.markdown-content code {\r\n\t\tbackground: rgba(66, 133, 244, 0.1);\r\n\t\tpadding: 2px 6px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\r\n\t\tfont-size: 0.9em;\r\n\t\tcolor: #d63384;\r\n\t}\r\n\r\n\t.markdown-content blockquote {\r\n\t\tborder-left: 3px solid #4285f4;\r\n\t\tpadding: 10px 15px;\r\n\t\tmargin: 15px 0;\r\n\t\tbackground: rgba(66, 133, 244, 0.05);\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.markdown-content a {\r\n\t\tcolor: #4285f4;\r\n\t\ttext-decoration: none;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.markdown-content a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n\r\n\t.suggested-question {\r\n\t\tmargin: 15px 0;\r\n\t\tpadding: 12px;\r\n\t\tbackground-color: #f5f7fa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px dashed #4285f4;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.suggested-question:hover {\r\n\t\tbackground-color: #e8f0fe;\r\n\t}\r\n\r\n\t.suggestion-text {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.suggestion-content {\r\n\t\tcolor: #4285f4;\r\n\t\tfont-weight: 500;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}