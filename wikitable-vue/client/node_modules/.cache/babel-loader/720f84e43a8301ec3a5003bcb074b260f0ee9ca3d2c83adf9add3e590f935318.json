{"ast":null,"code":"import { ref, computed, watch } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const processedTable1 = ref({\n      title: \"表格1\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"表格2\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n\n    // 完整图表弹窗相关状态\n    const showFullChartModal = ref(false);\n    const currentAttribute = ref(\"\");\n    const currentChartData = ref([]);\n    const currentColor = ref(\"#4a90e2\");\n    const showFullChart = (attr, side) => {\n      currentAttribute.value = attr;\n      currentColor.value = side === \"left\" ? \"#4a90e2\" : \"#ef4444\";\n      if (side === \"left\") {\n        currentChartData.value = processedTable1.value.timeSeriesData[attr] || [];\n      } else {\n        currentChartData.value = processedTable2.value.timeSeriesData[attr] || [];\n      }\n      showFullChartModal.value = true;\n    };\n    const hideFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hasData = computed(() => {\n      return props.div1RawData && props.div3RawData && processedTable1.value.columns.length > 0 && processedTable2.value.columns.length > 0;\n    });\n    const commonAttributes = computed(() => {\n      const attrs1 = processedTable1.value.rows || [];\n      const attrs2 = processedTable2.value.rows || [];\n      return attrs1.filter(attr => attrs2.includes(attr) && (hasDataForAttribute(processedTable1.value, attr) || hasDataForAttribute(processedTable2.value, attr)));\n    });\n\n    // ...保留原有的 parseTableToStandardJSON、smartValueConversion、extractTitleFromHTML 等方法...\n\n    function hasDataForAttribute(table, attr) {\n      return table.timeSeriesData[attr]?.length > 0;\n    }\n    function getAverage(table, attr) {\n      const values = table.timeSeriesData[attr]?.map(item => item.value) || [];\n      return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(2) : \"N/A\";\n    }\n    function getMax(table, attr) {\n      const values = table.timeSeriesData[attr]?.map(item => item.value) || [];\n      return values.length ? Math.max(...values).toFixed(2) : \"N/A\";\n    }\n    async function sendToBackend() {\n      try {\n        console.log(\"t1：\", processedTable1.value);\n        console.log(\"t2：\", processedTable2.value);\n        // const response = await api.post(\"table_attributes\", {\n        //   table1: processedTable1.value,\n        //   table2: processedTable2.value\n        // });\n        console.log(\"分析结果:\", response);\n      } catch (error) {\n        console.error(\"API请求失败:\", error);\n      }\n    }\n\n    // ...保留原有的 watch 代码...\n\n    const __returned__ = {\n      props,\n      processedTable1,\n      processedTable2,\n      showFullChartModal,\n      currentAttribute,\n      currentChartData,\n      currentColor,\n      showFullChart,\n      hideFullChart,\n      hasData,\n      commonAttributes,\n      hasDataForAttribute,\n      getAverage,\n      getMax,\n      sendToBackend,\n      ref,\n      computed,\n      watch,\n      SparklineChart,\n      FullChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","SparklineChart","FullChart","props","__props","processedTable1","title","rows","columns","timeSeriesData","processedTable2","showFullChartModal","currentAttribute","currentChartData","currentColor","showFullChart","attr","side","value","hideFullChart","hasData","div1RawData","div3RawData","length","commonAttributes","attrs1","attrs2","filter","includes","hasDataForAttribute","table","getAverage","values","map","item","reduce","a","b","toFixed","getMax","Math","max","sendToBackend","console","log","response","error"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t:width=\"250\"\r\n\t\t\t\t\t\t\t\t:height=\"80\"\r\n\t\t\t\t\t\t\t\t:show-year-markers=\"true\" />\r\n\t\t\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t\t\t平均: {{ getAverage(processedTable1, attr) }} | 最大:\r\n\t\t\t\t\t\t\t\t{{ getMax(processedTable1, attr) }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t:width=\"250\"\r\n\t\t\t\t\t\t\t\t:height=\"80\"\r\n\t\t\t\t\t\t\t\t:show-year-markers=\"true\" />\r\n\t\t\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t\t\t平均: {{ getAverage(processedTable2, attr) }} | 最大:\r\n\t\t\t\t\t\t\t\t{{ getMax(processedTable2, attr) }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:color=\"currentColor\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"表格1\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"表格2\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\r\n\t// 完整图表弹窗相关状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentChartData = ref([]);\r\n\tconst currentColor = ref(\"#4a90e2\");\r\n\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentColor.value = side === \"left\" ? \"#4a90e2\" : \"#ef4444\";\r\n\r\n\t\tif (side === \"left\") {\r\n\t\t\tcurrentChartData.value = processedTable1.value.timeSeriesData[attr] || [];\r\n\t\t} else {\r\n\t\t\tcurrentChartData.value = processedTable2.value.timeSeriesData[attr] || [];\r\n\t\t}\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.div1RawData &&\r\n\t\t\tprops.div3RawData &&\r\n\t\t\tprocessedTable1.value.columns.length > 0 &&\r\n\t\t\tprocessedTable2.value.columns.length > 0\r\n\t\t);\r\n\t});\r\n\r\n\tconst commonAttributes = computed(() => {\r\n\t\tconst attrs1 = processedTable1.value.rows || [];\r\n\t\tconst attrs2 = processedTable2.value.rows || [];\r\n\t\treturn attrs1.filter(\r\n\t\t\tattr =>\r\n\t\t\t\tattrs2.includes(attr) &&\r\n\t\t\t\t(hasDataForAttribute(processedTable1.value, attr) ||\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr))\r\n\t\t);\r\n\t});\r\n\r\n\t// ...保留原有的 parseTableToStandardJSON、smartValueConversion、extractTitleFromHTML 等方法...\r\n\r\n\tfunction hasDataForAttribute(table, attr) {\r\n\t\treturn table.timeSeriesData[attr]?.length > 0;\r\n\t}\r\n\r\n\tfunction getAverage(table, attr) {\r\n\t\tconst values = table.timeSeriesData[attr]?.map(item => item.value) || [];\r\n\t\treturn values.length\r\n\t\t\t? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(2)\r\n\t\t\t: \"N/A\";\r\n\t}\r\n\r\n\tfunction getMax(table, attr) {\r\n\t\tconst values = table.timeSeriesData[attr]?.map(item => item.value) || [];\r\n\t\treturn values.length ? Math.max(...values).toFixed(2) : \"N/A\";\r\n\t}\r\n\r\n\tasync function sendToBackend() {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"t1：\", processedTable1.value);\r\n\t\t\tconsole.log(\"t2：\", processedTable2.value);\r\n\t\t\t// const response = await api.post(\"table_attributes\", {\r\n\t\t\t//   table1: processedTable1.value,\r\n\t\t\t//   table2: processedTable2.value\r\n\t\t\t// });\r\n\t\t\tconsole.log(\"分析结果:\", response);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"API请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t// ...保留原有的 watch 代码...\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmax-height: 800px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tfont-family: system-ui, -apple-system, sans-serif;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 0.3fr 1fr;\r\n\t\tgap: 1px;\r\n\t\tbackground: #8e8e8e;\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmax-height: 30px;\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 16px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.left-column {\r\n\t\tborder-right: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.right-column {\r\n\t\tborder-left: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: 1.1em;\r\n\t}\r\n\r\n\t.stats-summary {\r\n\t\tmargin-top: 8px;\r\n\t\tfont-size: 0.85em;\r\n\t\tcolor: #34495e;\r\n\t\ttext-align: center;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t}\r\n\r\n\t.empty-cell {\r\n\t\tmin-height: 120px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tborder-bottom: 1px solid #e9ecef;\r\n\t}\r\n\r\n\t/* 新增弹窗样式 */\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 80%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 12px;\r\n\t\t}\r\n\r\n\t\t.modal-content {\r\n\t\t\twidth: 95%;\r\n\t\t\tmax-height: 90vh;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}