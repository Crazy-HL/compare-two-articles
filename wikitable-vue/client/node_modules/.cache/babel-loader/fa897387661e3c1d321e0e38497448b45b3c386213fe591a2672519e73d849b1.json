{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'InfoboxField',\n  props: {\n    value: {\n      type: [Object, Array, String, Number],\n      default: null\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 处理列表值，提取标签和值\n    const processedListValue = computed(() => {\n      if (!Array.isArray(props.value)) return [];\n      return props.value.map(item => {\n        if (typeof item === \"object\") {\n          // 尝试从raw中提取标签\n          let label = \"\";\n          if (item.raw) {\n            const match = item.raw.match(/^([^:]+):/);\n            if (match) label = match[1].trim();\n          }\n          return {\n            label,\n            value: item.value || item.raw || \"\",\n            unit: item.unit,\n            year: item.year\n          };\n        }\n        return {\n          value: item\n        };\n      });\n    });\n\n    // 计算属性\n    const hasContent = computed(() => {\n      if (props.value === null || props.value === undefined) return false;\n      if (Array.isArray(props.value)) return props.value.length > 0;\n      if (typeof props.value === \"object\") return Object.keys(props.value).length > 0;\n      return String(props.value).trim().length > 0;\n    });\n    const isSimpleValue = computed(() => {\n      return typeof props.value === \"string\" || typeof props.value === \"number\";\n    });\n    const isListValue = computed(() => {\n      return Array.isArray(props.value);\n    });\n    const isObjectValue = computed(() => {\n      return typeof props.value === \"object\" && !Array.isArray(props.value);\n    });\n    const displayValue = computed(() => {\n      if (!props.value) return \"\";\n      if (isSimpleValue.value) return props.value;\n      if (isListValue.value) return props.value;\n      return props.value;\n    });\n    const unit = computed(() => {\n      if (isObjectValue.value && props.value.unit) return props.value.unit;\n      return null;\n    });\n    const __returned__ = {\n      props,\n      processedListValue,\n      hasContent,\n      isSimpleValue,\n      isListValue,\n      isObjectValue,\n      displayValue,\n      unit,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","processedListValue","Array","isArray","value","map","item","label","raw","match","trim","unit","year","hasContent","undefined","length","Object","keys","String","isSimpleValue","isListValue","isObjectValue","displayValue"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/InfoboxField.vue"],"sourcesContent":["<template>\r\n\t<div class=\"infobox-field\">\r\n\t\t<template v-if=\"hasContent\">\r\n\t\t\t<!-- 简单值显示 -->\r\n\t\t\t<div v-if=\"isSimpleValue\" class=\"simple-value\">\r\n\t\t\t\t{{ displayValue }}\r\n\t\t\t\t<span v-if=\"unit\" class=\"unit\">{{ unit }}</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 列表值显示 -->\r\n\t\t\t<div v-else-if=\"isListValue\" class=\"list-value\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in processedListValue\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"list-item\">\r\n\t\t\t\t\t<span v-if=\"item.label\" class=\"label\">{{ item.label }}: </span>\r\n\t\t\t\t\t<span class=\"value\">{{ item.value }}</span>\r\n\t\t\t\t\t<span v-if=\"item.unit\" class=\"unit\">{{ item.unit }}</span>\r\n\t\t\t\t\t<span v-if=\"item.year\" class=\"year\">({{ item.year }})</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 对象值显示 -->\r\n\t\t\t<div v-else-if=\"isObjectValue\" class=\"object-value\">\r\n\t\t\t\t<div v-if=\"displayValue.value !== undefined\">\r\n\t\t\t\t\t<span class=\"value\">{{ displayValue.value }}</span>\r\n\t\t\t\t\t<span v-if=\"displayValue.unit\" class=\"unit\">{{\r\n\t\t\t\t\t\tdisplayValue.unit\r\n\t\t\t\t\t}}</span>\r\n\t\t\t\t\t<div v-if=\"displayValue.year\" class=\"year\">\r\n\t\t\t\t\t\t({{ displayValue.year }})\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-else-if=\"displayValue.raw\" class=\"raw-value\">\r\n\t\t\t\t\t{{ displayValue.raw }}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-else>\r\n\t\t\t\t\t{{ JSON.stringify(displayValue) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"empty-content\">-</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tvalue: {\r\n\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 处理列表值，提取标签和值\r\n\tconst processedListValue = computed(() => {\r\n\t\tif (!Array.isArray(props.value)) return [];\r\n\r\n\t\treturn props.value.map(item => {\r\n\t\t\tif (typeof item === \"object\") {\r\n\t\t\t\t// 尝试从raw中提取标签\r\n\t\t\t\tlet label = \"\";\r\n\t\t\t\tif (item.raw) {\r\n\t\t\t\t\tconst match = item.raw.match(/^([^:]+):/);\r\n\t\t\t\t\tif (match) label = match[1].trim();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel,\r\n\t\t\t\t\tvalue: item.value || item.raw || \"\",\r\n\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\tyear: item.year\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tvalue: item\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算属性\r\n\tconst hasContent = computed(() => {\r\n\t\tif (props.value === null || props.value === undefined) return false;\r\n\t\tif (Array.isArray(props.value)) return props.value.length > 0;\r\n\t\tif (typeof props.value === \"object\")\r\n\t\t\treturn Object.keys(props.value).length > 0;\r\n\t\treturn String(props.value).trim().length > 0;\r\n\t});\r\n\r\n\tconst isSimpleValue = computed(() => {\r\n\t\treturn typeof props.value === \"string\" || typeof props.value === \"number\";\r\n\t});\r\n\r\n\tconst isListValue = computed(() => {\r\n\t\treturn Array.isArray(props.value);\r\n\t});\r\n\r\n\tconst isObjectValue = computed(() => {\r\n\t\treturn typeof props.value === \"object\" && !Array.isArray(props.value);\r\n\t});\r\n\r\n\tconst displayValue = computed(() => {\r\n\t\tif (!props.value) return \"\";\r\n\t\tif (isSimpleValue.value) return props.value;\r\n\t\tif (isListValue.value) return props.value;\r\n\t\treturn props.value;\r\n\t});\r\n\r\n\tconst unit = computed(() => {\r\n\t\tif (isObjectValue.value && props.value.unit) return props.value.unit;\r\n\t\treturn null;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.infobox-field {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 40px;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.simple-value {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.unit {\r\n\t\tfont-size: 0.8em;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.list-value {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.list-item {\r\n\t\tpadding: 2px 0;\r\n\t\tborder-bottom: 1px dashed #eee;\r\n\t}\r\n\r\n\t.object-value {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 2px;\r\n\t}\r\n\r\n\t.object-value .value {\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.object-value .year {\r\n\t\tfont-size: 0.8em;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.empty-content {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.label {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-right: 4px;\r\n\t}\r\n\r\n\t.raw-value {\r\n\t\twhite-space: pre-wrap;\r\n\t}\r\n</style>\r\n"],"mappings":"AA8CC,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAKZ;;IAEF;IACA,MAAMC,kBAAkB,GAAGH,QAAQ,CAAC,MAAM;MACzC,IAAI,CAACI,KAAK,CAACC,OAAO,CAACJ,KAAK,CAACK,KAAK,CAAC,EAAE,OAAO,EAAE;MAE1C,OAAOL,KAAK,CAACK,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;QAC9B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;UAC7B;UACA,IAAIC,KAAK,GAAG,EAAE;UACd,IAAID,IAAI,CAACE,GAAG,EAAE;YACb,MAAMC,KAAK,GAAGH,IAAI,CAACE,GAAG,CAACC,KAAK,CAAC,WAAW,CAAC;YACzC,IAAIA,KAAK,EAAEF,KAAK,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;UACnC;UAEA,OAAO;YACNH,KAAK;YACLH,KAAK,EAAEE,IAAI,CAACF,KAAK,IAAIE,IAAI,CAACE,GAAG,IAAI,EAAE;YACnCG,IAAI,EAAEL,IAAI,CAACK,IAAI;YACfC,IAAI,EAAEN,IAAI,CAACM;UACZ,CAAC;QACF;QACA,OAAO;UACNR,KAAK,EAAEE;QACR,CAAC;MACF,CAAC,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAMO,UAAU,GAAGf,QAAQ,CAAC,MAAM;MACjC,IAAIC,KAAK,CAACK,KAAK,KAAK,IAAI,IAAIL,KAAK,CAACK,KAAK,KAAKU,SAAS,EAAE,OAAO,KAAK;MACnE,IAAIZ,KAAK,CAACC,OAAO,CAACJ,KAAK,CAACK,KAAK,CAAC,EAAE,OAAOL,KAAK,CAACK,KAAK,CAACW,MAAM,GAAG,CAAC;MAC7D,IAAI,OAAOhB,KAAK,CAACK,KAAK,KAAK,QAAQ,EAClC,OAAOY,MAAM,CAACC,IAAI,CAAClB,KAAK,CAACK,KAAK,CAAC,CAACW,MAAM,GAAG,CAAC;MAC3C,OAAOG,MAAM,CAACnB,KAAK,CAACK,KAAK,CAAC,CAACM,IAAI,CAAC,CAAC,CAACK,MAAM,GAAG,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMI,aAAa,GAAGrB,QAAQ,CAAC,MAAM;MACpC,OAAO,OAAOC,KAAK,CAACK,KAAK,KAAK,QAAQ,IAAI,OAAOL,KAAK,CAACK,KAAK,KAAK,QAAQ;IAC1E,CAAC,CAAC;IAEF,MAAMgB,WAAW,GAAGtB,QAAQ,CAAC,MAAM;MAClC,OAAOI,KAAK,CAACC,OAAO,CAACJ,KAAK,CAACK,KAAK,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMiB,aAAa,GAAGvB,QAAQ,CAAC,MAAM;MACpC,OAAO,OAAOC,KAAK,CAACK,KAAK,KAAK,QAAQ,IAAI,CAACF,KAAK,CAACC,OAAO,CAACJ,KAAK,CAACK,KAAK,CAAC;IACtE,CAAC,CAAC;IAEF,MAAMkB,YAAY,GAAGxB,QAAQ,CAAC,MAAM;MACnC,IAAI,CAACC,KAAK,CAACK,KAAK,EAAE,OAAO,EAAE;MAC3B,IAAIe,aAAa,CAACf,KAAK,EAAE,OAAOL,KAAK,CAACK,KAAK;MAC3C,IAAIgB,WAAW,CAAChB,KAAK,EAAE,OAAOL,KAAK,CAACK,KAAK;MACzC,OAAOL,KAAK,CAACK,KAAK;IACnB,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAGb,QAAQ,CAAC,MAAM;MAC3B,IAAIuB,aAAa,CAACjB,KAAK,IAAIL,KAAK,CAACK,KAAK,CAACO,IAAI,EAAE,OAAOZ,KAAK,CAACK,KAAK,CAACO,IAAI;MACpE,OAAO,IAAI;IACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}