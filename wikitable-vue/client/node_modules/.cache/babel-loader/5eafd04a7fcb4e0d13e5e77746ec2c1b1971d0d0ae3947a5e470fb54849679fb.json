{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9d3193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"outline-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"文章1 大纲\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"href\", \"onMouseenter\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"similar-icon\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"文章2 大纲\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"href\", \"onMouseenter\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"similar-icon\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 左侧大纲（文章1） \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"outline\", ['left-outline', {\n      visible: $setup.isVisible\n    }]])\n  }, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline1, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      style: _normalizeStyle({\n        paddingLeft: `${(item.level - 1) * 15}px`\n      })\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id,\n      onMouseenter: $event => $setup.highlightSimilar(item, 1),\n      onMouseleave: _cache[0] || (_cache[0] = $event => $setup.resetHighlight(1))\n    }, [_createTextVNode(_toDisplayString(item.text) + \" \", 1 /* TEXT */), _createCommentVNode(\" 显示相似章节标记 \"), item.isSimilar ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"🔗\")) : _createCommentVNode(\"v-if\", true)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_3)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */), _createCommentVNode(\" 右侧大纲（文章2） \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"outline\", ['right-outline', {\n      visible: $setup.isVisible\n    }]])\n  }, [_hoisted_5, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline2, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      style: _normalizeStyle({\n        paddingLeft: `${(item.level - 1) * 15}px`\n      })\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id,\n      onMouseenter: $event => $setup.highlightSimilar(item, 2),\n      onMouseleave: _cache[1] || (_cache[1] = $event => $setup.resetHighlight(2))\n    }, [_createTextVNode(_toDisplayString(item.text) + \" \", 1 /* TEXT */), _createCommentVNode(\" 显示相似章节标记 \"), item.isSimilar ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"🔗\")) : _createCommentVNode(\"v-if\", true)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createCommentVNode","_normalizeClass","visible","$setup","isVisible","_hoisted_2","_Fragment","_renderList","outline1","item","index","id","style","_normalizeStyle","paddingLeft","level","href","onMouseenter","$event","highlightSimilar","onMouseleave","_cache","resetHighlight","_createTextVNode","_toDisplayString","text","isSimilar","_hoisted_4","_hoisted_3","_hoisted_5","outline2","_hoisted_7","_hoisted_6"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div class=\"outline-container\">\r\n\t\t<!-- 左侧大纲（文章1） -->\r\n\t\t<div class=\"outline\" :class=\"['left-outline', { visible: isVisible }]\">\r\n\t\t\t<h2>文章1 大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline1\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\t:href=\"'#' + item.id\"\r\n\t\t\t\t\t\t@mouseenter=\"highlightSimilar(item, 1)\"\r\n\t\t\t\t\t\t@mouseleave=\"resetHighlight(1)\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t\t<!-- 显示相似章节标记 -->\r\n\t\t\t\t\t\t<span v-if=\"item.isSimilar\" class=\"similar-icon\">🔗</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<!-- 右侧大纲（文章2） -->\r\n\t\t<div class=\"outline\" :class=\"['right-outline', { visible: isVisible }]\">\r\n\t\t\t<h2>文章2 大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline2\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\t:href=\"'#' + item.id\"\r\n\t\t\t\t\t\t@mouseenter=\"highlightSimilar(item, 2)\"\r\n\t\t\t\t\t\t@mouseleave=\"resetHighlight(2)\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t\t<!-- 显示相似章节标记 -->\r\n\t\t\t\t\t\t<span v-if=\"item.isSimilar\" class=\"similar-icon\">🔗</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent1: String, // 文章1的HTML\r\n\t\tcontent2: String // 文章2的HTML\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline1 = ref([]);\r\n\tconst outline2 = ref([]);\r\n\tconst similarChapters = ref([]); // 存储相似章节的标识，格式为{article1Id: article2Id}\r\n\r\n\t/**\r\n\t * 解析文章，提取标题并返回大纲结构\r\n\t */\r\n\tconst extractOutline = (content, divId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\r\n\t\t\tconst id = `heading-${index}-${divId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * 计算相似章节，可以使用余弦相似度、Jaccard相似性等算法\r\n\t */\r\n\tconst computeSimilarChapters = () => {\r\n\t\tconst similarities = {\r\n\t\t\t\"heading-0-div1\": \"heading-1-div2\", // 示例：文章1第0章与文章2第1章相似\r\n\t\t\t\"heading-2-div1\": \"heading-3-div2\" // 示例：文章1第2章与文章2第3章相似\r\n\t\t};\r\n\r\n\t\t// 将相似章节映射到similarChapters\r\n\t\tsimilarChapters.value = similarities;\r\n\t};\r\n\r\n\t/**\r\n\t * 更新大纲并标记相似章节\r\n\t */\r\n\tconst markSimilarChapters = () => {\r\n\t\t// 标记文章1和文章2的相似章节\r\n\t\toutline1.value = outline1.value.map(item => {\r\n\t\t\titem.isSimilar = !!similarChapters.value[item.id]; // 如果该章节在相似章节中，则标记为相似\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\toutline2.value = outline2.value.map(item => {\r\n\t\t\tconst matchingId = Object.values(similarChapters.value).find(\r\n\t\t\t\tid => id === item.id\r\n\t\t\t);\r\n\t\t\titem.isSimilar = !!matchingId; // 如果该章节与文章1中的章节相似，则标记为相似\r\n\t\t\treturn item;\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * 鼠标悬停高亮显示相似章节\r\n\t */\r\n\tconst highlightSimilar = (item, articleNumber) => {\r\n\t\tconst similarId =\r\n\t\t\tarticleNumber === 1\r\n\t\t\t\t? similarChapters.value[item.id]\r\n\t\t\t\t: Object.keys(similarChapters.value).find(\r\n\t\t\t\t\t\tkey => similarChapters.value[key] === item.id\r\n\t\t\t\t  );\r\n\t\tif (similarId) {\r\n\t\t\t// 高亮显示相似章节\r\n\t\t\tconst similarItem =\r\n\t\t\t\tarticleNumber === 1\r\n\t\t\t\t\t? outline2.value.find(i => i.id === similarId)\r\n\t\t\t\t\t: outline1.value.find(i => i.id === similarId);\r\n\t\t\tif (similarItem) {\r\n\t\t\t\tsimilarItem.isHighlighted = true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * 重置高亮显示\r\n\t */\r\n\tconst resetHighlight = articleNumber => {\r\n\t\tif (articleNumber === 1) {\r\n\t\t\toutline1.value.forEach(item => (item.isHighlighted = false));\r\n\t\t} else {\r\n\t\t\toutline2.value.forEach(item => (item.isHighlighted = false));\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听文章内容的变化并更新大纲\r\n\twatch(\r\n\t\t[() => props.content1, () => props.content2],\r\n\t\t() => {\r\n\t\t\toutline1.value = extractOutline(props.content1, \"div1\");\r\n\t\t\toutline2.value = extractOutline(props.content2, \"div2\");\r\n\t\t\tcomputeSimilarChapters(); // 计算相似章节\r\n\t\t\tmarkSimilarChapters(); // 标记相似章节\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\toutline1.value = extractOutline(props.content1, \"div1\");\r\n\t\toutline2.value = extractOutline(props.content2, \"div2\");\r\n\t\tcomputeSimilarChapters(); // 计算相似章节\r\n\t\tmarkSimilarChapters(); // 标记相似章节\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **大纲容器样式** */\r\n\t.outline-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\t.outline {\r\n\t\twidth: 45%;\r\n\t\tpadding: 10px;\r\n\t\toverflow-y: auto;\r\n\t\tmax-height: 80vh;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t/* **高亮显示相似章节** */\r\n\t.outline li a:hover {\r\n\t\tbackground-color: #f0f0f0;\r\n\t}\r\n\r\n\t.similar-icon {\r\n\t\tcolor: #ff9800; /* 你可以选择其他颜色 */\r\n\t\tfont-size: 16px;\r\n\t\tmargin-left: 8px;\r\n\t}\r\n\r\n\t/* **高亮显示整个大纲的章节**\r\n.outline li.highlighted a {\r\n\tbackground-color: #f0f0f0;\r\n}\r\n*/\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAmB;gEAG5BC,mBAAA,CAAe,YAAX,QAAM;mBAJb;;EAAAC,GAAA;EAgBkCF,KAAK,EAAC;;gEAQrCC,mBAAA,CAAe,YAAX,QAAM;mBAxBb;;EAAAC,GAAA;EAoCkCF,KAAK,EAAC;;;uBAnCvCG,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCLC,mBAAA,eAAkB,EAClBJ,mBAAA,CAiBM;IAjBDD,KAAK,EAHZM,eAAA,EAGa,SAAS;MAAAC,OAAA,EAAqCC,MAAA,CAAAC;IAAS;MACjEC,UAAe,EACfT,mBAAA,CAcK,c,kBAbJE,mBAAA,CAYKQ,SAAA,QAlBTC,WAAA,CAO6BJ,MAAA,CAAAK,QAAQ,EAPrC,CAOaC,IAAI,EAAEC,KAAK;yBADpBZ,mBAAA,CAYK;MAVHD,GAAG,EAAEY,IAAI,CAACE,EAAE;MACZC,KAAK,EATXC,eAAA;QAAAC,WAAA,MASgCL,IAAI,CAACM,KAAK;MAAA;QACrCnB,mBAAA,CAOI;MANFoB,IAAI,QAAQP,IAAI,CAACE,EAAE;MACnBM,YAAU,EAAAC,MAAA,IAAEf,MAAA,CAAAgB,gBAAgB,CAACV,IAAI;MACjCW,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEf,MAAA,CAAAmB,cAAc;QAbjCC,gBAAA,CAAAC,gBAAA,CAcSf,IAAI,CAACgB,IAAI,IAAG,GACf,iBAAAzB,mBAAA,cAAiB,EACLS,IAAI,CAACiB,SAAS,I,cAA1B5B,mBAAA,CAA0D,QAA1D6B,UAA0D,EAAT,IAAE,KAhBzD3B,mBAAA,e,kCAAA4B,UAAA,E;qDAsBE5B,mBAAA,eAAkB,EAClBJ,mBAAA,CAiBM;IAjBDD,KAAK,EAvBZM,eAAA,EAuBa,SAAS;MAAAC,OAAA,EAAsCC,MAAA,CAAAC;IAAS;MAClEyB,UAAe,EACfjC,mBAAA,CAcK,c,kBAbJE,mBAAA,CAYKQ,SAAA,QAtCTC,WAAA,CA2B6BJ,MAAA,CAAA2B,QAAQ,EA3BrC,CA2BarB,IAAI,EAAEC,KAAK;yBADpBZ,mBAAA,CAYK;MAVHD,GAAG,EAAEY,IAAI,CAACE,EAAE;MACZC,KAAK,EA7BXC,eAAA;QAAAC,WAAA,MA6BgCL,IAAI,CAACM,KAAK;MAAA;QACrCnB,mBAAA,CAOI;MANFoB,IAAI,QAAQP,IAAI,CAACE,EAAE;MACnBM,YAAU,EAAAC,MAAA,IAAEf,MAAA,CAAAgB,gBAAgB,CAACV,IAAI;MACjCW,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEf,MAAA,CAAAmB,cAAc;QAjCjCC,gBAAA,CAAAC,gBAAA,CAkCSf,IAAI,CAACgB,IAAI,IAAG,GACf,iBAAAzB,mBAAA,cAAiB,EACLS,IAAI,CAACiB,SAAS,I,cAA1B5B,mBAAA,CAA0D,QAA1DiC,UAA0D,EAAT,IAAE,KApCzD/B,mBAAA,e,kCAAAgC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}