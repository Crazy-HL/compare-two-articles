{"ast":null,"code":"/**\r\n * 通用维基百科信息框解析器\r\n * @param {HTMLElement} infoboxElement - 信息框DOM元素\r\n * @returns {Object} 结构化数据\r\n */\nexport function parseGenericInfobox(infoboxElement) {\n  if (!infoboxElement) return null;\n  const result = {\n    title: extractTitle(infoboxElement),\n    type: detectInfoboxType(infoboxElement),\n    data: {}\n  };\n\n  // 提取所有行\n  const rows = infoboxElement.querySelectorAll('tr:has(th):has(td)');\n  rows.forEach(row => {\n    const th = row.querySelector('th');\n    const td = row.querySelector('td');\n    if (th && td) {\n      const label = normalizeFieldLabel(th.textContent);\n      const value = extractFieldValue(td);\n      if (label && value) {\n        result.data[label] = value;\n      }\n    }\n  });\n  return result;\n}\nfunction extractTitle(infobox) {\n  return infobox.querySelector('caption')?.textContent.trim() || infobox.previousElementSibling?.textContent.trim() || \"\";\n}\nfunction detectInfoboxType(infobox) {\n  const classNames = infobox.className.toLowerCase();\n  const content = infobox.textContent.toLowerCase();\n  if (classNames.includes('country') || content.includes('country')) return '国家';\n  if (classNames.includes('person') || content.includes('birth')) return '人物';\n  if (classNames.includes('company') || content.includes('revenue')) return '公司';\n  if (content.includes('event') || content.includes('date')) return '事件';\n  return '通用';\n}\nfunction normalizeFieldLabel(label) {\n  return label.trim().replace(/[:：]\\s*$/, '').replace(/\\s+/g, ' ').replace(/[[\\]]/g, '').replace(/\\(.*\\)/g, '');\n}\nfunction extractFieldValue(tdElement) {\n  const td = tdElement.cloneNode(true);\n  td.querySelectorAll('.reference, .mw-editsection, sup').forEach(el => el.remove());\n  const textValue = td.textContent.trim().replace(/\\[\\d+\\]/g, '').replace(/\\s+/g, ' ').replace(/^[:：]\\s*/, '');\n  const links = Array.from(td.querySelectorAll('a')).filter(a => a.href).map(a => ({\n    text: a.textContent.trim(),\n    href: a.href,\n    isWikiLink: a.href.includes('wikipedia.org/wiki/')\n  }));\n  const image = td.querySelector('img');\n  const imageData = image ? {\n    src: image.src.startsWith('//') ? `https:${image.src}` : image.src,\n    alt: image.alt,\n    caption: image.closest('figure')?.querySelector('figcaption')?.textContent.trim()\n  } : null;\n  return {\n    text: textValue,\n    html: td.innerHTML.trim(),\n    links,\n    image: imageData,\n    dataType: detectValueType(textValue)\n  };\n}\nfunction detectValueType(value) {\n  if (!value) return 'text';\n  if (/(\\d{4}[年\\-]\\d{1,2}[月\\-]\\d{1,2}日?)|(\\d{1,2}[月\\/]\\d{1,2}[日\\/]\\d{4})/.test(value)) {\n    return 'date';\n  }\n  if (/^\\d{4}年?$/.test(value)) {\n    return 'year';\n  }\n  if (/[\\d,\\.]+\\s*[^\\d\\s,\\.]+/.test(value)) {\n    return 'measurement';\n  }\n  if (/^(是|否|有|无|存在|不存在)$/.test(value)) {\n    return 'boolean';\n  }\n  if (/^参见：|^见：|^链接：/.test(value)) {\n    return 'link';\n  }\n  return 'text';\n}","map":{"version":3,"names":["parseGenericInfobox","infoboxElement","result","title","extractTitle","type","detectInfoboxType","data","rows","querySelectorAll","forEach","row","th","querySelector","td","label","normalizeFieldLabel","textContent","value","extractFieldValue","infobox","trim","previousElementSibling","classNames","className","toLowerCase","content","includes","replace","tdElement","cloneNode","el","remove","textValue","links","Array","from","filter","a","href","map","text","isWikiLink","image","imageData","src","startsWith","alt","caption","closest","html","innerHTML","dataType","detectValueType","test"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/wikiInfoboxParser.js"],"sourcesContent":["/**\r\n * 通用维基百科信息框解析器\r\n * @param {HTMLElement} infoboxElement - 信息框DOM元素\r\n * @returns {Object} 结构化数据\r\n */\r\nexport function parseGenericInfobox(infoboxElement) {\r\n  if (!infoboxElement) return null;\r\n\r\n  const result = {\r\n    title: extractTitle(infoboxElement),\r\n    type: detectInfoboxType(infoboxElement),\r\n    data: {}\r\n  };\r\n\r\n  // 提取所有行\r\n  const rows = infoboxElement.querySelectorAll('tr:has(th):has(td)');\r\n  \r\n  rows.forEach(row => {\r\n    const th = row.querySelector('th');\r\n    const td = row.querySelector('td');\r\n    \r\n    if (th && td) {\r\n      const label = normalizeFieldLabel(th.textContent);\r\n      const value = extractFieldValue(td);\r\n      \r\n      if (label && value) {\r\n        result.data[label] = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nfunction extractTitle(infobox) {\r\n  return infobox.querySelector('caption')?.textContent.trim() || \r\n         infobox.previousElementSibling?.textContent.trim() || \"\";\r\n}\r\n\r\nfunction detectInfoboxType(infobox) {\r\n  const classNames = infobox.className.toLowerCase();\r\n  const content = infobox.textContent.toLowerCase();\r\n  \r\n  if (classNames.includes('country') || content.includes('country')) return '国家';\r\n  if (classNames.includes('person') || content.includes('birth')) return '人物';\r\n  if (classNames.includes('company') || content.includes('revenue')) return '公司';\r\n  if (content.includes('event') || content.includes('date')) return '事件';\r\n  \r\n  return '通用';\r\n}\r\n\r\nfunction normalizeFieldLabel(label) {\r\n  return label.trim()\r\n    .replace(/[:：]\\s*$/, '')\r\n    .replace(/\\s+/g, ' ')\r\n    .replace(/[[\\]]/g, '')\r\n    .replace(/\\(.*\\)/g, '');\r\n}\r\n\r\nfunction extractFieldValue(tdElement) {\r\n  const td = tdElement.cloneNode(true);\r\n  td.querySelectorAll('.reference, .mw-editsection, sup').forEach(el => el.remove());\r\n  \r\n  const textValue = td.textContent.trim()\r\n    .replace(/\\[\\d+\\]/g, '')\r\n    .replace(/\\s+/g, ' ')\r\n    .replace(/^[:：]\\s*/, '');\r\n  \r\n  const links = Array.from(td.querySelectorAll('a'))\r\n    .filter(a => a.href)\r\n    .map(a => ({\r\n      text: a.textContent.trim(),\r\n      href: a.href,\r\n      isWikiLink: a.href.includes('wikipedia.org/wiki/')\r\n    }));\r\n  \r\n  const image = td.querySelector('img');\r\n  const imageData = image ? {\r\n    src: image.src.startsWith('//') ? `https:${image.src}` : image.src,\r\n    alt: image.alt,\r\n    caption: image.closest('figure')?.querySelector('figcaption')?.textContent.trim()\r\n  } : null;\r\n  \r\n  return {\r\n    text: textValue,\r\n    html: td.innerHTML.trim(),\r\n    links,\r\n    image: imageData,\r\n    dataType: detectValueType(textValue)\r\n  };\r\n}\r\n\r\nfunction detectValueType(value) {\r\n  if (!value) return 'text';\r\n  \r\n  if (/(\\d{4}[年\\-]\\d{1,2}[月\\-]\\d{1,2}日?)|(\\d{1,2}[月\\/]\\d{1,2}[日\\/]\\d{4})/.test(value)) {\r\n    return 'date';\r\n  }\r\n  \r\n  if (/^\\d{4}年?$/.test(value)) {\r\n    return 'year';\r\n  }\r\n  \r\n  if (/[\\d,\\.]+\\s*[^\\d\\s,\\.]+/.test(value)) {\r\n    return 'measurement';\r\n  }\r\n  \r\n  if (/^(是|否|有|无|存在|不存在)$/.test(value)) {\r\n    return 'boolean';\r\n  }\r\n  \r\n  if (/^参见：|^见：|^链接：/.test(value)) {\r\n    return 'link';\r\n  }\r\n  \r\n  return 'text';\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}