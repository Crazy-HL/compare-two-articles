{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n    const COMPARABLE_FIELDS = [{\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"行业分布(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\"\n    }\n    // 其他字段...\n    ];\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) return section[fieldKey];\n      }\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n    const getUnifiedYRange = fieldKey => {\n      const leftData = getField(leftInfobox.value, fieldKey);\n      const rightData = getField(rightInfobox.value, fieldKey);\n      const extractValues = data => {\n        if (!data) return [];\n        if (Array.isArray(data)) return data.map(item => parseFloat(item?.value) || 0);\n        if (typeof data === \"object\" && !Array.isArray(data)) return Object.values(data).map(v => parseFloat(v) || 0);\n        return [parseFloat(data?.value) || 0];\n      };\n      const allValues = [...extractValues(leftData), ...extractValues(rightData)].filter(v => !isNaN(v));\n      if (allValues.length === 0) return [0, 1];\n      const max = Math.max(...allValues);\n      return [0, max * 1.2];\n    };\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal || rightVal;\n      });\n    });\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      getField,\n      getUnifiedYRange,\n      comparableFields,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","sections","COMPARABLE_FIELDS","key","typeLabel","visualization","getField","infobox","fieldKey","section","Object","values","undefined","cleanKey","toLowerCase","replace","matchedKey","keys","find","k","getUnifiedYRange","leftData","value","rightData","extractValues","Array","isArray","map","item","parseFloat","v","allValues","filter","isNaN","length","max","Math","comparableFields","field","leftVal","rightVal","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t:compare-data=\"getField(rightInfobox, field.key)\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t:compare-data=\"getField(leftInfobox, field.key)\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"行业分布(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t}\r\n\t\t// 其他字段...\r\n\t];\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst getUnifiedYRange = fieldKey => {\r\n\t\tconst leftData = getField(leftInfobox.value, fieldKey);\r\n\t\tconst rightData = getField(rightInfobox.value, fieldKey);\r\n\r\n\t\tconst extractValues = data => {\r\n\t\t\tif (!data) return [];\r\n\t\t\tif (Array.isArray(data))\r\n\t\t\t\treturn data.map(item => parseFloat(item?.value) || 0);\r\n\t\t\tif (typeof data === \"object\" && !Array.isArray(data))\r\n\t\t\t\treturn Object.values(data).map(v => parseFloat(v) || 0);\r\n\t\t\treturn [parseFloat(data?.value) || 0];\r\n\t\t};\r\n\r\n\t\tconst allValues = [\r\n\t\t\t...extractValues(leftData),\r\n\t\t\t...extractValues(rightData)\r\n\t\t].filter(v => !isNaN(v));\r\n\r\n\t\tif (allValues.length === 0) return [0, 1];\r\n\r\n\t\tconst max = Math.max(...allValues);\r\n\t\treturn [0, max * 1.2];\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal || rightVal;\r\n\t\t});\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 样式保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\theight: 180px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.cell[data-viz=\"bar-chart\"]::after {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 30%;\r\n\t\tborder-top: 1px dashed rgba(0, 0, 0, 0.1);\r\n\t\tz-index: 1;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}