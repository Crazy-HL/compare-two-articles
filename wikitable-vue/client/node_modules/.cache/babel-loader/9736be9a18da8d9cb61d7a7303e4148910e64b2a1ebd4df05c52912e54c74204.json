{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e43c18bc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"div2\",\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"text-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"extracted-text\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"选中的文本:\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 嵌入维基百科 \"), _createElementVNode(\"iframe\", {\n    id: \"wikiFrame\",\n    src: \"https://en.wikipedia.org/wiki/France\",\n    width: \"100%\",\n    height: \"500px\",\n    style: {\n      \"border\": \"none\"\n    },\n    onLoad: $setup.onIframeLoad\n  }, null, 32 /* NEED_HYDRATION */), _createCommentVNode(\" 高亮提取文本 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: $setup.highlightSelectedText\n  }, \"高亮选中的文字\"), _createElementVNode(\"button\", {\n    onClick: $setup.extractSelectedText\n  }, \"提取选中的文字\"), $setup.selectedText ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, _toDisplayString($setup.selectedText), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","src","width","height","style","onLoad","$setup","onIframeLoad","_hoisted_2","onClick","highlightSelectedText","extractSelectedText","selectedText","_hoisted_3","_hoisted_4","_toDisplayString"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\test.vue"],"sourcesContent":["<template>\r\n\t<div id=\"div2\" class=\"container\">\r\n\t\t<!-- 嵌入维基百科 -->\r\n\t\t<iframe\r\n\t\t\tid=\"wikiFrame\"\r\n\t\t\tsrc=\"https://en.wikipedia.org/wiki/France\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\theight=\"500px\"\r\n\t\t\tstyle=\"border: none\"\r\n\t\t\t@load=\"onIframeLoad\"></iframe>\r\n\r\n\t\t<!-- 高亮提取文本 -->\r\n\t\t<div class=\"text-container\">\r\n\t\t\t<button @click=\"highlightSelectedText\">高亮选中的文字</button>\r\n\t\t\t<button @click=\"extractSelectedText\">提取选中的文字</button>\r\n\t\t\t<div v-if=\"selectedText\" class=\"extracted-text\">\r\n\t\t\t\t<strong>选中的文本:</strong>\r\n\t\t\t\t<p>{{ selectedText }}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref } from \"vue\";\r\n\r\n\t// 用于存储选中的文本\r\n\tconst selectedText = ref(\"\");\r\n\r\n\tlet wikiIframe;\r\n\r\n\t// 获取 iframe 内容并绑定事件\r\n\tconst onIframeLoad = () => {\r\n\t\twikiIframe = document.getElementById(\"wikiFrame\");\r\n\r\n\t\t// 在 iframe 内部添加事件监听器（跨域问题需要注意）\r\n\t\twikiIframe.contentWindow.document.addEventListener(\"mouseup\", () => {\r\n\t\t\tconst selection = wikiIframe.contentWindow.getSelection();\r\n\t\t\tif (selection.toString()) {\r\n\t\t\t\tselectedText.value = selection.toString();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 高亮选中的文字\r\n\tconst highlightSelectedText = () => {\r\n\t\tconst iframeDoc = wikiIframe.contentWindow.document;\r\n\t\tconst selection = iframeDoc.getSelection();\r\n\r\n\t\tif (selection.toString()) {\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst span = iframeDoc.createElement(\"span\");\r\n\t\t\tspan.style.backgroundColor = \"yellow\"; // 设置高亮颜色\r\n\t\t\trange.surroundContents(span);\r\n\t\t}\r\n\t};\r\n\r\n\t// 提取选中的文字\r\n\tconst extractSelectedText = () => {\r\n\t\tif (selectedText.value) {\r\n\t\t\talert(`提取的文本: ${selectedText.value}`);\r\n\t\t} else {\r\n\t\t\talert(\"没有选中任何文本！\");\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.text-container {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tmargin: 10px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t.extracted-text {\r\n\t\tmargin-top: 20px;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #f1f1f1;\r\n\t\tborder-radius: 4px;\r\n\t\tborder: 1px solid #ccc;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,EAAE,EAAC,MAAM;EAACC,KAAK,EAAC;;;EAWfA,KAAK,EAAC;AAAgB;;EAZ7BC,GAAA;EAe4BD,KAAK,EAAC;;gEAC9BE,mBAAA,CAAuB,gBAAf,QAAM;;uBAfjBC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBLC,mBAAA,YAAe,EACfH,mBAAA,CAM+B;IAL9BH,EAAE,EAAC,WAAW;IACdO,GAAG,EAAC,sCAAsC;IAC1CC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdC,KAAoB,EAApB;MAAA;IAAA,CAAoB;IACnBC,MAAI,EAAEC,MAAA,CAAAC;qCAERP,mBAAA,YAAe,EACfH,mBAAA,CAOM,OAPNW,UAOM,GANLX,mBAAA,CAAuD;IAA9CY,OAAK,EAAEH,MAAA,CAAAI;EAAqB,GAAE,SAAO,GAC9Cb,mBAAA,CAAqD;IAA5CY,OAAK,EAAEH,MAAA,CAAAK;EAAmB,GAAE,SAAO,GACjCL,MAAA,CAAAM,YAAY,I,cAAvBd,mBAAA,CAGM,OAHNe,UAGM,GAFLC,UAAuB,EACvBjB,mBAAA,CAAyB,WAAAkB,gBAAA,CAAnBT,MAAA,CAAAM,YAAY,iB,KAjBtBZ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}