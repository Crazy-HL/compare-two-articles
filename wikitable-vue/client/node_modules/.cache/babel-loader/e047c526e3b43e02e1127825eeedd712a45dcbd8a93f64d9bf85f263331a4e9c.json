{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport ArticleOutline from \"./ArticleOutline.vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nimport { parseInfoboxForComparison } from \"@/js/wikiInfoboxParser\";\nimport api from \"@/api\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String,\n    linkedOutline: Array\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 原有状态\n    const pageHtml = ref(\"\");\n    const loading = ref(true);\n    const error = ref(\"\");\n    const selectedText = ref({});\n    const showPopup = ref({});\n    const divRef = ref(null);\n    const highlightedParagraphs = ref({});\n    const MainTextContent = ref(\"\");\n\n    // 新增配置：区分左右维基的精确高亮文本\n    const exactHighlightTexts = {\n      div1: {\n        // 左侧维基百科\n        GDP: [\"China is also the world's largest consumer of numerous commodities, and accounts for about half of global consumption of metals\", \"China has bilateral free trade agreements with many nations and is a member of the Regional Comprehensive Economic Partnership (RCEP).\"],\n        Population: [\"1.4 billion\", \"population census\"]\n      },\n      div3: {\n        // 右侧维基百科\n        GDP: [\"The American Reinvestment and Recovery Act was enacted by the United States Congress, and in the ensuing years the U.S. experienced the longest economic expansion on record by July 2019\"],\n        Population: [\"330 million\", \"population density\"]\n      }\n    };\n\n    // async function parseInfobox(html) {\n    // \ttry {\n    // \t\tapi.post(\"parse\", { html }, data => {\n    // \t\t\tconsole.log(\"infodata:\", data);\n    // \t\t});\n    // \t} catch (error) {\n    // \t\tconsole.error(\"Error parsing infobox:\", error);\n    // \t\treturn null;\n    // \t}\n    // }\n    // 原有方法 - 完全保留\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `<url id=\"d0c81sqi597ajdgia57g\" type=\"url\" status=\"failed\" title=\"\" wc=\"0\">https://en.wikipedia.org/api/rest_v1/page/html/</url> ${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n        const MainTextContent = cleanWikipediaContent(html); // 直接获取纯文本\n        console.log(MainTextContent);\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n        const infobox = doc.querySelector(\".infobox, .sidebar, .toccolours\");\n        const comparisonData = parseInfoboxForComparison(infobox);\n\n        // if (infobox) {\n        //     const parsedData = await parseInfobox(infobox);\n        //     console.log(\"Final parsed data:\", parsedData);\n        //     bus.emit(`${props.divId}_InfoboxData`, parsedData || comparisonData);\n        // } else {\n        //     console.warn(\"No infobox found in the document\");\n        //     bus.emit(`${props.divId}_InfoboxData`, comparisonData);\n        // }\n        const sidebar = doc.querySelector(\".sidebar\");\n        if (sidebar) sidebar.remove();\n        bus.emit(`${props.divId}_InfoboxData`, comparisonData);\n        const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n        headings.forEach((heading, index) => {\n          const uniqueId = `heading-${index}-${props.divId}`;\n          heading.id = uniqueId;\n        });\n        const tables = doc.querySelectorAll(\"table\");\n        tables.forEach(table => {\n          table.classList.add(\"custom-table\");\n        });\n        const styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\n        styles.forEach(link => {\n          if (!document.querySelector(`link[href=\"${link.href}\"]`)) {\n            const styleTag = document.createElement(\"link\");\n            styleTag.rel = \"stylesheet\";\n            styleTag.href = link.href;\n            document.head.appendChild(styleTag);\n          }\n        });\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n        injectWikipediaStyles();\n        bus.emit(`${props.divId}_FullContent`, {\n          content: pageHtml.value,\n          title: props.pageTitle\n        });\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n        console.error(\"获取维基百科内容失败:\", err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const cleanWikipediaContent = html => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n\n      // 移除不需要的元素（Infobox、参考文献、目录等）\n      const selectorsToRemove = [\".infobox\", \".sidebar\", \".toc\", \".reflist\", \".hatnote\", \".navbox\", \".mw-editsection\", \"img\", \"figure\"];\n      selectorsToRemove.forEach(selector => {\n        doc.querySelectorAll(selector).forEach(el => el.remove());\n      });\n\n      // 提取正文部分（通常是 #bodyContent 或 #mw-content-text ）\n      const bodyContent = doc.querySelector(\"#bodyContent, #mw-content-text\") || doc.body;\n\n      // 获取纯文本并优化格式\n      let plainText = bodyContent.textContent || bodyContent.innerText;\n\n      // 格式化文本：合并多余换行和空格\n      plainText = plainText.replace(/\\s+/g, \" \") // 将多个空格/换行符替换为单个空格\n      .replace(/\\[\\d+\\]/g, \"\") // 移除维基百科的引用标记（如 [1] [2] ）\n      .trim();\n      return plainText;\n    };\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles \", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles \", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles \", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles \"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n    const handleHoverInfobox = _ref2 => {\n      let {\n        fieldKey,\n        infoboxTitle\n      } = _ref2;\n      if (props.pageTitle !== infoboxTitle) return;\n      const infobox = divRef.value.querySelector(\".infobox, .sidebar, .toccolours\");\n      if (!infobox) return;\n      clearInfoboxHighlights();\n      const rows = infobox.querySelectorAll(\"tr\");\n      for (const row of rows) {\n        const th = row.querySelector(\"th\");\n        if (th && th.textContent.trim() === fieldKey) {\n          row.classList.add(\"infobox-highlight\");\n          break;\n        }\n      }\n    };\n    const handleUnhoverInfobox = () => {\n      clearInfoboxHighlights();\n    };\n    const clearInfoboxHighlights = () => {\n      const infobox = divRef.value.querySelector(\".infobox, .sidebar, .toccolours\");\n      if (infobox) {\n        infobox.querySelectorAll(\".infobox-highlight\").forEach(row => {\n          row.classList.remove(\"infobox-highlight\");\n        });\n      }\n    };\n    const handleSelection = content => {\n      const isTable = /<table.*?>.*?<\\/table>/s.test(content);\n      const selection = window.getSelection();\n      if (!selection || selection.rangeCount === 0) return;\n      const range = selection.getRangeAt(0);\n      const selectedNodes = range.cloneContents().childNodes;\n      let sourceId = undefined;\n      for (const node of selectedNodes) {\n        if (node.nodeType === Node.ELEMENT_NODE && /^h[1-6]$/i.test(node.tagName)) {\n          sourceId = node.id;\n          break;\n        }\n      }\n      if (!sourceId) {\n        let startElement = range.startContainer;\n        while (startElement && !/^h[1-6]$/i.test(startElement.tagName)) {\n          startElement = startElement.parentElement;\n        }\n        sourceId = startElement ? startElement.id : undefined;\n      }\n      if (!sourceId) {\n        selectedText.value[props.divId] = content;\n        bus.emit(`${props.divId}_Event`, {\n          content\n        });\n        showPopup.value[props.divId] = true;\n        nextTick(() => {\n          updatePopupPosition();\n        });\n        return;\n      }\n      handleSelectionWithSourceId(content, sourceId, isTable);\n    };\n    const handleSelectionWithSourceId = (content, sourceId, isTable) => {\n      selectedText.value[props.divId] = content;\n      bus.emit(`${props.divId}_Event`, {\n        content\n      });\n      showPopup.value[props.divId] = true;\n      if (isTable) {\n        const {\n          linkedItem,\n          chapterContent\n        } = extractLinkedChapterContent(sourceId, props.divId);\n        if (linkedItem && chapterContent) {\n          const otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\n          const targetId = props.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\n          const targetElement = document.getElementById(targetId);\n          if (targetElement) {\n            targetElement.scrollIntoView({\n              behavior: \"smooth\"\n            });\n          }\n          bus.emit(`${otherContainerId}_Event`, {\n            content: chapterContent\n          });\n          bus.emit(`${otherContainerId}Event`, {\n            content: chapterContent,\n            sourceId: sourceId\n          });\n        }\n      }\n      nextTick(() => {\n        updatePopupPosition();\n      });\n    };\n    const closePopup = () => {\n      showPopup.value[props.divId] = false;\n      selectedText.value[props.divId] = \"\";\n      const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n      d3.select(container).html(\"\");\n    };\n    const updatePopupPosition = () => {\n      if (showPopup.value[props.divId] && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        const overlay = divRef.value.querySelector(\".overlay\");\n        if (popup && overlay) {\n          const rect = divRef.value.getBoundingClientRect();\n          const scrollTop = divRef.value.scrollTop;\n          const scrollLeft = divRef.value.scrollLeft;\n          overlay.style.top = `${scrollTop}px`;\n          overlay.style.left = `${scrollLeft}px`;\n          overlay.style.width = `${divRef.value.clientWidth}px`;\n          overlay.style.height = `${divRef.value.clientHeight}px`;\n          popup.style.top = `${rect.height / 2 + scrollTop}px`;\n          popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n        }\n      }\n    };\n    const extractLinkedChapterContent = (sourceId, sourceContainerId) => {\n      if (!props.linkedOutline) {\n        return {\n          linkedItem: null,\n          chapterContent: \"\"\n        };\n      }\n      const linkedItem = props.linkedOutline.find(linked => linked.leftId === sourceId || linked.rightId === sourceId);\n      if (!linkedItem) {\n        return {\n          linkedItem: null,\n          chapterContent: \"\"\n        };\n      }\n      const targetContainerId = sourceContainerId === \"div1\" ? \"div3\" : \"div1\";\n      const targetId = sourceContainerId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\n      const targetContainer = document.getElementById(targetContainerId);\n      if (!targetContainer) {\n        return {\n          linkedItem: null,\n          chapterContent: \"\"\n        };\n      }\n      const targetElement = targetContainer.querySelector(`#${targetId}`);\n      if (!targetElement) {\n        return {\n          linkedItem: null,\n          chapterContent: \"\"\n        };\n      }\n      let chapterContent = \"\";\n      let currentNode = targetElement;\n      while (currentNode) {\n        if (currentNode !== targetElement && currentNode.nodeType === Node.ELEMENT_NODE && /^h[1-6]$/i.test(currentNode.tagName)) {\n          break;\n        }\n        if (currentNode.nodeType === Node.ELEMENT_NODE || currentNode.nodeType === Node.TEXT_NODE) {\n          chapterContent += currentNode.outerHTML || currentNode.textContent;\n        }\n        currentNode = currentNode.nextSibling;\n      }\n      return {\n        linkedItem,\n        chapterContent\n      };\n    };\n\n    // 修改后的高亮方法\n    const highlightParagraphs = payload => {\n      const attributes = payload.attributes || [];\n      clearHighlights();\n      if (!divRef.value) return;\n      attributes.forEach(attr => {\n        highlightExactText(attr);\n      });\n    };\n\n    // 精确高亮指定文本\n    const highlightExactText = textToHighlight => {\n      if (!textToHighlight) return;\n      const contentElement = divRef.value.querySelector(\".wikipedia-content\");\n      if (!contentElement) return;\n\n      // 使用TreeWalker遍历文本节点\n      const walker = document.createTreeWalker(contentElement, NodeFilter.SHOW_TEXT, null, false);\n      let node;\n      const matches = [];\n\n      // 第一阶段：收集所有匹配位置\n      while (node = walker.nextNode()) {\n        const nodeValue = node.nodeValue;\n        let pos = 0;\n        while ((pos = nodeValue.indexOf(textToHighlight, pos)) >= 0) {\n          matches.push({\n            node,\n            start: pos,\n            end: pos + textToHighlight.length\n          });\n          pos += textToHighlight.length;\n        }\n      }\n\n      // 第二阶段：从后往前处理（避免偏移问题）\n      matches.reverse().forEach(_ref3 => {\n        let {\n          node,\n          start,\n          end\n        } = _ref3;\n        const parent = node.parentNode;\n\n        // 分割文本节点\n        const before = node.splitText(start);\n        const highlighted = before.splitText(end - start);\n\n        // 创建高亮span\n        const span = document.createElement(\"span\");\n        span.className = `highlight-exact highlight-${props.divId}`;\n        span.textContent = before.nodeValue;\n\n        // 替换文本\n        parent.replaceChild(span, before);\n\n        // 保存高亮引用\n        if (!highlightedParagraphs.value[props.divId]) {\n          highlightedParagraphs.value[props.divId] = [];\n        }\n        highlightedParagraphs.value[props.divId].push(span);\n      });\n\n      // 滚动到第一个高亮处\n      if (highlightedParagraphs.value[props.divId]?.[0]) {\n        highlightedParagraphs.value[props.divId][0].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\"\n        });\n      }\n    };\n\n    // 清除高亮\n    const clearHighlights = () => {\n      if (!highlightedParagraphs.value[props.divId]) return;\n      highlightedParagraphs.value[props.divId].forEach(highlight => {\n        if (highlight.parentNode) {\n          const textNode = document.createTextNode(highlight.textContent);\n          highlight.parentNode.replaceChild(textNode, highlight);\n        }\n      });\n      highlightedParagraphs.value[props.divId] = [];\n    };\n    onMounted(() => {\n      fetchWikipediaContent();\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n      const hoverEvent = `hover-${props.divId === \"div1\" ? \"left\" : \"right\"}-infobox`;\n      const unhoverEvent = `unhover-${props.divId === \"div1\" ? \"left\" : \"right\"}-infobox`;\n      bus.on(hoverEvent, handleHoverInfobox);\n      bus.on(unhoverEvent, handleUnhoverInfobox);\n      bus.on(`${props.divId}Event`, _ref4 => {\n        let {\n          content,\n          sourceId\n        } = _ref4;\n        selectedText.value[props.divId] = content;\n        showPopup.value[props.divId] = true;\n        nextTick(() => {\n          updatePopupPosition();\n        });\n      });\n\n      // 修改事件监听\n      bus.on(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\n      bus.on(`clear-${props.divId}-highlights`, clearHighlights);\n    });\n    onUnmounted(() => {\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n      const hoverEvent = `hover-${props.divId === \"div1\" ? \"left\" : \"right\"}-infobox`;\n      const unhoverEvent = `unhover-${props.divId === \"div1\" ? \"left\" : \"right\"}-infobox`;\n      bus.off(hoverEvent, handleHoverInfobox);\n      bus.off(unhoverEvent, handleUnhoverInfobox);\n      bus.off(`${props.divId}Event`);\n\n      // 移除事件监听\n      bus.off(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\n      bus.off(`clear-${props.divId}-highlights`, clearHighlights);\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      highlightedParagraphs,\n      MainTextContent,\n      exactHighlightTexts,\n      fetchWikipediaContent,\n      cleanWikipediaContent,\n      injectWikipediaStyles,\n      handleHoverInfobox,\n      handleUnhoverInfobox,\n      clearInfoboxHighlights,\n      handleSelection,\n      handleSelectionWithSourceId,\n      closePopup,\n      updatePopupPosition,\n      extractLinkedChapterContent,\n      highlightParagraphs,\n      highlightExactText,\n      clearHighlights,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      ArticleOutline,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      },\n      get parseInfoboxForComparison() {\n        return parseInfoboxForComparison;\n      },\n      get api() {\n        return api;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","ArticleOutline","d3","bus","parseInfoboxForComparison","api","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","highlightedParagraphs","MainTextContent","exactHighlightTexts","div1","GDP","Population","div3","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","cleanWikipediaContent","console","log","parser","DOMParser","doc","parseFromString","infobox","querySelector","comparisonData","sidebar","remove","emit","divId","headings","querySelectorAll","forEach","heading","index","uniqueId","id","tables","table","classList","add","styles","Array","from","link","document","href","styleTag","createElement","rel","head","appendChild","contentElement","value","innerHTML","injectWikipediaStyles","content","title","err","message","selectorsToRemove","selector","el","bodyContent","body","plainText","textContent","innerText","replace","trim","wikipediaStyles","url","handleHoverInfobox","_ref2","fieldKey","infoboxTitle","clearInfoboxHighlights","rows","row","th","handleUnhoverInfobox","handleSelection","isTable","test","selection","window","getSelection","rangeCount","range","getRangeAt","selectedNodes","cloneContents","childNodes","sourceId","undefined","node","nodeType","Node","ELEMENT_NODE","tagName","startElement","startContainer","parentElement","updatePopupPosition","handleSelectionWithSourceId","linkedItem","chapterContent","extractLinkedChapterContent","otherContainerId","targetId","rightId","leftId","targetElement","getElementById","scrollIntoView","behavior","closePopup","container","select","popup","overlay","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","left","width","clientWidth","height","clientHeight","sourceContainerId","linkedOutline","find","linked","targetContainerId","targetContainer","currentNode","TEXT_NODE","outerHTML","nextSibling","highlightParagraphs","payload","attributes","clearHighlights","attr","highlightExactText","textToHighlight","walker","createTreeWalker","NodeFilter","SHOW_TEXT","matches","nextNode","nodeValue","pos","indexOf","push","start","end","length","reverse","_ref3","parent","parentNode","before","splitText","highlighted","span","className","replaceChild","block","highlight","textNode","createTextNode","addEventListener","hoverEvent","unhoverEvent","on","_ref4","removeEventListener","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ props.pageTitle }}</h1>\r\n\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport { parseInfoboxForComparison } from \"@/js/wikiInfoboxParser\";\r\n\timport api from \"@/api\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String,\r\n\t\tlinkedOutline: Array\r\n\t});\r\n\r\n\t// 原有状态\r\n\tconst pageHtml = ref(\"\");\r\n\tconst loading = ref(true);\r\n\tconst error = ref(\"\");\r\n\tconst selectedText = ref({});\r\n\tconst showPopup = ref({});\r\n\tconst divRef = ref(null);\r\n\tconst highlightedParagraphs = ref({});\r\n\tconst MainTextContent = ref(\"\");\r\n\r\n\t// 新增配置：区分左右维基的精确高亮文本\r\n\tconst exactHighlightTexts = {\r\n\t\tdiv1: {\r\n\t\t\t// 左侧维基百科\r\n\t\t\tGDP: [\r\n\t\t\t\t\"China is also the world's largest consumer of numerous commodities, and accounts for about half of global consumption of metals\",\r\n\t\t\t\t\"China has bilateral free trade agreements with many nations and is a member of the Regional Comprehensive Economic Partnership (RCEP).\"\r\n\t\t\t],\r\n\t\t\tPopulation: [\"1.4 billion\", \"population census\"]\r\n\t\t},\r\n\t\tdiv3: {\r\n\t\t\t// 右侧维基百科\r\n\t\t\tGDP: [\r\n\t\t\t\t\"The American Reinvestment and Recovery Act was enacted by the United States Congress, and in the ensuing years the U.S. experienced the longest economic expansion on record by July 2019\"\r\n\t\t\t],\r\n\t\t\tPopulation: [\"330 million\", \"population density\"]\r\n\t\t}\r\n\t};\r\n\r\n\t// async function parseInfobox(html) {\r\n\t// \ttry {\r\n\t// \t\tapi.post(\"parse\", { html }, data => {\r\n\t// \t\t\tconsole.log(\"infodata:\", data);\r\n\t// \t\t});\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(\"Error parsing infobox:\", error);\r\n\t// \t\treturn null;\r\n\t// \t}\r\n\t// }\r\n\t// 原有方法 - 完全保留\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `<url id=\"d0c81sqi597ajdgia57g\" type=\"url\" status=\"failed\" title=\"\" wc=\"0\">https://en.wikipedia.org/api/rest_v1/page/html/</url> ${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\t\t\tconst MainTextContent = cleanWikipediaContent(html); // 直接获取纯文本\r\n\t\t\tconsole.log(MainTextContent);\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\tconst infobox = doc.querySelector(\".infobox, .sidebar, .toccolours\");\r\n\t\t\tconst comparisonData = parseInfoboxForComparison(infobox);\r\n\r\n\t\t\t// if (infobox) {\r\n\t\t\t//     const parsedData = await parseInfobox(infobox);\r\n\t\t\t//     console.log(\"Final parsed data:\", parsedData);\r\n\t\t\t//     bus.emit(`${props.divId}_InfoboxData`, parsedData || comparisonData);\r\n\t\t\t// } else {\r\n\t\t\t//     console.warn(\"No infobox found in the document\");\r\n\t\t\t//     bus.emit(`${props.divId}_InfoboxData`, comparisonData);\r\n\t\t\t// }\r\n\t\t\tconst sidebar = doc.querySelector(\".sidebar\");\r\n\t\t\tif (sidebar) sidebar.remove();\r\n\r\n\t\t\tbus.emit(`${props.divId}_InfoboxData`, comparisonData);\r\n\r\n\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\tconst uniqueId = `heading-${index}-${props.divId}`;\r\n\t\t\t\theading.id = uniqueId;\r\n\t\t\t});\r\n\r\n\t\t\tconst tables = doc.querySelectorAll(\"table\");\r\n\t\t\ttables.forEach(table => {\r\n\t\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\t});\r\n\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\tinjectWikipediaStyles();\r\n\r\n\t\t\tbus.emit(`${props.divId}_FullContent`, {\r\n\t\t\t\tcontent: pageHtml.value,\r\n\t\t\t\ttitle: props.pageTitle\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t\tconsole.error(\"获取维基百科内容失败:\", err);\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst cleanWikipediaContent = html => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t// 移除不需要的元素（Infobox、参考文献、目录等）\r\n\t\tconst selectorsToRemove = [\r\n\t\t\t\".infobox\",\r\n\t\t\t\".sidebar\",\r\n\t\t\t\".toc\",\r\n\t\t\t\".reflist\",\r\n\t\t\t\".hatnote\",\r\n\t\t\t\".navbox\",\r\n\t\t\t\".mw-editsection\",\r\n\t\t\t\"img\",\r\n\t\t\t\"figure\"\r\n\t\t];\r\n\r\n\t\tselectorsToRemove.forEach(selector => {\r\n\t\t\tdoc.querySelectorAll(selector).forEach(el => el.remove());\r\n\t\t});\r\n\r\n\t\t// 提取正文部分（通常是 #bodyContent 或 #mw-content-text ）\r\n\t\tconst bodyContent =\r\n\t\t\tdoc.querySelector(\"#bodyContent, #mw-content-text\") || doc.body;\r\n\r\n\t\t// 获取纯文本并优化格式\r\n\t\tlet plainText = bodyContent.textContent || bodyContent.innerText;\r\n\r\n\t\t// 格式化文本：合并多余换行和空格\r\n\t\tplainText = plainText\r\n\t\t\t.replace(/\\s+/g, \" \") // 将多个空格/换行符替换为单个空格\r\n\t\t\t.replace(/\\[\\d+\\]/g, \"\") // 移除维基百科的引用标记（如 [1] [2] ）\r\n\t\t\t.trim();\r\n\r\n\t\treturn plainText;\r\n\t};\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles \",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles \",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles \",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles \"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleHoverInfobox = ({ fieldKey, infoboxTitle }) => {\r\n\t\tif (props.pageTitle !== infoboxTitle) return;\r\n\r\n\t\tconst infobox = divRef.value.querySelector(\r\n\t\t\t\".infobox, .sidebar, .toccolours\"\r\n\t\t);\r\n\t\tif (!infobox) return;\r\n\r\n\t\tclearInfoboxHighlights();\r\n\r\n\t\tconst rows = infobox.querySelectorAll(\"tr\");\r\n\t\tfor (const row of rows) {\r\n\t\t\tconst th = row.querySelector(\"th\");\r\n\t\t\tif (th && th.textContent.trim() === fieldKey) {\r\n\t\t\t\trow.classList.add(\"infobox-highlight\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUnhoverInfobox = () => {\r\n\t\tclearInfoboxHighlights();\r\n\t};\r\n\r\n\tconst clearInfoboxHighlights = () => {\r\n\t\tconst infobox = divRef.value.querySelector(\r\n\t\t\t\".infobox, .sidebar, .toccolours\"\r\n\t\t);\r\n\t\tif (infobox) {\r\n\t\t\tinfobox.querySelectorAll(\".infobox-highlight\").forEach(row => {\r\n\t\t\t\trow.classList.remove(\"infobox-highlight\");\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSelection = content => {\r\n\t\tconst isTable = /<table.*?>.*?<\\/table>/s.test(content);\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection || selection.rangeCount === 0) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst selectedNodes = range.cloneContents().childNodes;\r\n\r\n\t\tlet sourceId = undefined;\r\n\t\tfor (const node of selectedNodes) {\r\n\t\t\tif (\r\n\t\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(node.tagName)\r\n\t\t\t) {\r\n\t\t\t\tsourceId = node.id;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!sourceId) {\r\n\t\t\tlet startElement = range.startContainer;\r\n\t\t\twhile (startElement && !/^h[1-6]$/i.test(startElement.tagName)) {\r\n\t\t\t\tstartElement = startElement.parentElement;\r\n\t\t\t}\r\n\t\t\tsourceId = startElement ? startElement.id : undefined;\r\n\t\t}\r\n\r\n\t\tif (!sourceId) {\r\n\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\tbus.emit(`${props.divId}_Event`, { content });\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\thandleSelectionWithSourceId(content, sourceId, isTable);\r\n\t};\r\n\r\n\tconst handleSelectionWithSourceId = (content, sourceId, isTable) => {\r\n\t\tselectedText.value[props.divId] = content;\r\n\t\tbus.emit(`${props.divId}_Event`, { content });\r\n\t\tshowPopup.value[props.divId] = true;\r\n\r\n\t\tif (isTable) {\r\n\t\t\tconst { linkedItem, chapterContent } = extractLinkedChapterContent(\r\n\t\t\t\tsourceId,\r\n\t\t\t\tprops.divId\r\n\t\t\t);\r\n\r\n\t\t\tif (linkedItem && chapterContent) {\r\n\t\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\t\tconst targetId =\r\n\t\t\t\t\tprops.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\t\t\tconst targetElement = document.getElementById(targetId);\r\n\t\t\t\tif (targetElement) {\r\n\t\t\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbus.emit(`${otherContainerId}_Event`, { content: chapterContent });\r\n\t\t\t\tbus.emit(`${otherContainerId}Event`, {\r\n\t\t\t\t\tcontent: chapterContent,\r\n\t\t\t\t\tsourceId: sourceId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false;\r\n\t\tselectedText.value[props.divId] = \"\";\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\t\tif (popup && overlay) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\t\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\t\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\t\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst extractLinkedChapterContent = (sourceId, sourceContainerId) => {\r\n\t\tif (!props.linkedOutline) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst linkedItem = props.linkedOutline.find(\r\n\t\t\tlinked => linked.leftId === sourceId || linked.rightId === sourceId\r\n\t\t);\r\n\t\tif (!linkedItem) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst targetContainerId = sourceContainerId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\tconst targetId =\r\n\t\t\tsourceContainerId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\tconst targetContainer = document.getElementById(targetContainerId);\r\n\t\tif (!targetContainer) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst targetElement = targetContainer.querySelector(`#${targetId}`);\r\n\t\tif (!targetElement) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tlet chapterContent = \"\";\r\n\t\tlet currentNode = targetElement;\r\n\r\n\t\twhile (currentNode) {\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode !== targetElement &&\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(currentNode.tagName)\r\n\t\t\t) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE ||\r\n\t\t\t\tcurrentNode.nodeType === Node.TEXT_NODE\r\n\t\t\t) {\r\n\t\t\t\tchapterContent += currentNode.outerHTML || currentNode.textContent;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentNode = currentNode.nextSibling;\r\n\t\t}\r\n\r\n\t\treturn { linkedItem, chapterContent };\r\n\t};\r\n\r\n\t// 修改后的高亮方法\r\n\tconst highlightParagraphs = payload => {\r\n\t\tconst attributes = payload.attributes || [];\r\n\t\tclearHighlights();\r\n\r\n\t\tif (!divRef.value) return;\r\n\r\n\t\tattributes.forEach(attr => {\r\n\t\t\thighlightExactText(attr);\r\n\t\t});\r\n\t};\r\n\r\n\t// 精确高亮指定文本\r\n\tconst highlightExactText = textToHighlight => {\r\n\t\tif (!textToHighlight) return;\r\n\r\n\t\tconst contentElement = divRef.value.querySelector(\".wikipedia-content\");\r\n\t\tif (!contentElement) return;\r\n\r\n\t\t// 使用TreeWalker遍历文本节点\r\n\t\tconst walker = document.createTreeWalker(\r\n\t\t\tcontentElement,\r\n\t\t\tNodeFilter.SHOW_TEXT,\r\n\t\t\tnull,\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tlet node;\r\n\t\tconst matches = [];\r\n\r\n\t\t// 第一阶段：收集所有匹配位置\r\n\t\twhile ((node = walker.nextNode())) {\r\n\t\t\tconst nodeValue = node.nodeValue;\r\n\t\t\tlet pos = 0;\r\n\t\t\twhile ((pos = nodeValue.indexOf(textToHighlight, pos)) >= 0) {\r\n\t\t\t\tmatches.push({\r\n\t\t\t\t\tnode,\r\n\t\t\t\t\tstart: pos,\r\n\t\t\t\t\tend: pos + textToHighlight.length\r\n\t\t\t\t});\r\n\t\t\t\tpos += textToHighlight.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 第二阶段：从后往前处理（避免偏移问题）\r\n\t\tmatches.reverse().forEach(({ node, start, end }) => {\r\n\t\t\tconst parent = node.parentNode;\r\n\r\n\t\t\t// 分割文本节点\r\n\t\t\tconst before = node.splitText(start);\r\n\t\t\tconst highlighted = before.splitText(end - start);\r\n\r\n\t\t\t// 创建高亮span\r\n\t\t\tconst span = document.createElement(\"span\");\r\n\t\t\tspan.className = `highlight-exact highlight-${props.divId}`;\r\n\t\t\tspan.textContent = before.nodeValue;\r\n\r\n\t\t\t// 替换文本\r\n\t\t\tparent.replaceChild(span, before);\r\n\r\n\t\t\t// 保存高亮引用\r\n\t\t\tif (!highlightedParagraphs.value[props.divId]) {\r\n\t\t\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t\t\t}\r\n\t\t\thighlightedParagraphs.value[props.divId].push(span);\r\n\t\t});\r\n\r\n\t\t// 滚动到第一个高亮处\r\n\t\tif (highlightedParagraphs.value[props.divId]?.[0]) {\r\n\t\t\thighlightedParagraphs.value[props.divId][0].scrollIntoView({\r\n\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\tblock: \"center\"\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// 清除高亮\r\n\tconst clearHighlights = () => {\r\n\t\tif (!highlightedParagraphs.value[props.divId]) return;\r\n\r\n\t\thighlightedParagraphs.value[props.divId].forEach(highlight => {\r\n\t\t\tif (highlight.parentNode) {\r\n\t\t\t\tconst textNode = document.createTextNode(highlight.textContent);\r\n\t\t\t\thighlight.parentNode.replaceChild(textNode, highlight);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\r\n\t\tconst hoverEvent = `hover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\t\tconst unhoverEvent = `unhover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\r\n\t\tbus.on(hoverEvent, handleHoverInfobox);\r\n\t\tbus.on(unhoverEvent, handleUnhoverInfobox);\r\n\r\n\t\tbus.on(`${props.divId}Event`, ({ content, sourceId }) => {\r\n\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 修改事件监听\r\n\t\tbus.on(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\r\n\t\tbus.on(`clear-${props.divId}-highlights`, clearHighlights);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\r\n\t\tconst hoverEvent = `hover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\t\tconst unhoverEvent = `unhover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\r\n\t\tbus.off(hoverEvent, handleHoverInfobox);\r\n\t\tbus.off(unhoverEvent, handleUnhoverInfobox);\r\n\t\tbus.off(`${props.divId}Event`);\r\n\r\n\t\t// 移除事件监听\r\n\t\tbus.off(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\r\n\t\tbus.off(`clear-${props.divId}-highlights`, clearHighlights);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t::selection {\r\n\t\tbackground-color: rgba(255, 255, 0, 0.3);\r\n\t\tcolor: inherit;\r\n\t}\r\n</style>\r\n\r\n<style>\r\n\t.infobox tr.infobox-highlight th,\r\n\t.infobox tr.infobox-highlight td,\r\n\t.sidebar tr.infobox-highlight th,\r\n\t.sidebar tr.infobox-highlight td,\r\n\t.toccolours tr.infobox-highlight th,\r\n\t.toccolours tr.infobox-highlight td {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\tbox-shadow: 0 0 8px rgba(255, 235, 59, 0.8) !important;\r\n\t\ttransition: all 0.15s ease !important;\r\n\t}\r\n\r\n\t.highlight-exact.highlight-div1 {\r\n\t\tbackground-color: rgba(255, 235, 59, 0.6);\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 1px rgba(255, 235, 59, 0.3);\r\n\t}\r\n\r\n\t.highlight-exact.highlight-div3 {\r\n\t\tbackground-color: rgba(100, 221, 23, 0.6);\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 1px rgba(76, 175, 80, 0.3);\r\n\t}\r\n</style>\r\n"],"mappings":";AA2BC,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAK;AAC3D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,GAAG,MAAM,kBAAkB;AAClC,SAASC,yBAAyB,QAAQ,wBAAwB;AAClE,OAAOC,GAAG,MAAM,OAAO;;;;;;;;;;;;;;IAEvB,MAAMC,KAAK,GAAGC,OAKZ;;IAEF;IACA,MAAMC,QAAQ,GAAGf,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMgB,OAAO,GAAGhB,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMiB,KAAK,GAAGjB,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMkB,YAAY,GAAGlB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMmB,SAAS,GAAGnB,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,MAAMoB,MAAM,GAAGpB,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMqB,qBAAqB,GAAGrB,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMsB,eAAe,GAAGtB,GAAG,CAAC,EAAE,CAAC;;IAE/B;IACA,MAAMuB,mBAAmB,GAAG;MAC3BC,IAAI,EAAE;QACL;QACAC,GAAG,EAAE,CACJ,iIAAiI,EACjI,wIAAwI,CACxI;QACDC,UAAU,EAAE,CAAC,aAAa,EAAE,mBAAmB;MAChD,CAAC;MACDC,IAAI,EAAE;QACL;QACAF,GAAG,EAAE,CACJ,2LAA2L,CAC3L;QACDC,UAAU,EAAE,CAAC,aAAa,EAAE,oBAAoB;MACjD;IACD,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH,MAAMC,MAAM,GAAG,mIAAmIC,kBAAkB,CACnKjB,KAAK,CAACkB,SACP,CAAC,EAAE;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMf,eAAe,GAAGgB,qBAAqB,CAACF,IAAI,CAAC,CAAC,CAAC;QACrDG,OAAO,CAACC,GAAG,CAAClB,eAAe,CAAC;QAC5B,MAAMmB,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACR,IAAI,EAAE,WAAW,CAAC;QAErD,MAAMS,OAAO,GAAGF,GAAG,CAACG,aAAa,CAAC,iCAAiC,CAAC;QACpE,MAAMC,cAAc,GAAGpC,yBAAyB,CAACkC,OAAO,CAAC;;QAEzD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAMG,OAAO,GAAGL,GAAG,CAACG,aAAa,CAAC,UAAU,CAAC;QAC7C,IAAIE,OAAO,EAAEA,OAAO,CAACC,MAAM,CAAC,CAAC;QAE7BvC,GAAG,CAACwC,IAAI,CAAC,GAAGrC,KAAK,CAACsC,KAAK,cAAc,EAAEJ,cAAc,CAAC;QAEtD,MAAMK,QAAQ,GAAGT,GAAG,CAACU,gBAAgB,CAAC,wBAAwB,CAAC;QAC/DD,QAAQ,CAACE,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;UACpC,MAAMC,QAAQ,GAAG,WAAWD,KAAK,IAAI3C,KAAK,CAACsC,KAAK,EAAE;UAClDI,OAAO,CAACG,EAAE,GAAGD,QAAQ;QACtB,CAAC,CAAC;QAEF,MAAME,MAAM,GAAGhB,GAAG,CAACU,gBAAgB,CAAC,OAAO,CAAC;QAC5CM,MAAM,CAACL,OAAO,CAACM,KAAK,IAAI;UACvBA,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;QACpC,CAAC,CAAC;QAEF,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACtB,GAAG,CAACU,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;QACzEU,MAAM,CAACT,OAAO,CAACY,IAAI,IAAI;UACtB,IAAI,CAACC,QAAQ,CAACrB,aAAa,CAAC,cAAcoB,IAAI,CAACE,IAAI,IAAI,CAAC,EAAE;YACzD,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;YAC/CD,QAAQ,CAACE,GAAG,GAAG,YAAY;YAC3BF,QAAQ,CAACD,IAAI,GAAGF,IAAI,CAACE,IAAI;YACzBD,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;UACpC;QACD,CAAC,CAAC;QAEF,MAAMK,cAAc,GAAG/B,GAAG,CAACG,aAAa,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC4B,cAAc,EAAE,MAAM,IAAIvC,KAAK,CAAC,mBAAmB,CAAC;QAEzDpB,QAAQ,CAAC4D,KAAK,GAAGD,cAAc,CAACE,SAAS;QACzCC,qBAAqB,CAAC,CAAC;QAEvBnE,GAAG,CAACwC,IAAI,CAAC,GAAGrC,KAAK,CAACsC,KAAK,cAAc,EAAE;UACtC2B,OAAO,EAAE/D,QAAQ,CAAC4D,KAAK;UACvBI,KAAK,EAAElE,KAAK,CAACkB;QACd,CAAC,CAAC;MACH,CAAC,CAAC,OAAOiD,GAAG,EAAE;QACb/D,KAAK,CAAC0D,KAAK,GAAG,oCAAoC,GAAGK,GAAG,CAACC,OAAO;QAChE1C,OAAO,CAACtB,KAAK,CAAC,aAAa,EAAE+D,GAAG,CAAC;MAClC,CAAC,SAAS;QACThE,OAAO,CAAC2D,KAAK,GAAG,KAAK;MACtB;IACD,CAAC;IAED,MAAMrC,qBAAqB,GAAGF,IAAI,IAAI;MACrC,MAAMK,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACR,IAAI,EAAE,WAAW,CAAC;;MAErD;MACA,MAAM8C,iBAAiB,GAAG,CACzB,UAAU,EACV,UAAU,EACV,MAAM,EACN,UAAU,EACV,UAAU,EACV,SAAS,EACT,iBAAiB,EACjB,KAAK,EACL,QAAQ,CACR;MAEDA,iBAAiB,CAAC5B,OAAO,CAAC6B,QAAQ,IAAI;QACrCxC,GAAG,CAACU,gBAAgB,CAAC8B,QAAQ,CAAC,CAAC7B,OAAO,CAAC8B,EAAE,IAAIA,EAAE,CAACnC,MAAM,CAAC,CAAC,CAAC;MAC1D,CAAC,CAAC;;MAEF;MACA,MAAMoC,WAAW,GAChB1C,GAAG,CAACG,aAAa,CAAC,gCAAgC,CAAC,IAAIH,GAAG,CAAC2C,IAAI;;MAEhE;MACA,IAAIC,SAAS,GAAGF,WAAW,CAACG,WAAW,IAAIH,WAAW,CAACI,SAAS;;MAEhE;MACAF,SAAS,GAAGA,SAAS,CACnBG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAAA,CACrBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;MAAA,CACxBC,IAAI,CAAC,CAAC;MAER,OAAOJ,SAAS;IACjB,CAAC;IACD,MAAMV,qBAAqB,GAAGA,CAAA,KAAM;MACnC,MAAMe,eAAe,GAAG,CACvB,0DAA0D,EAC1D,8DAA8D,EAC9D,mEAAmE,EACnE,kEAAkE,CAClE;MAEDA,eAAe,CAACtC,OAAO,CAACuC,GAAG,IAAI;QAC9B,IAAI,CAAC1B,QAAQ,CAACrB,aAAa,CAAC,cAAc+C,GAAG,IAAI,CAAC,EAAE;UACnD,MAAMxB,QAAQ,GAAGF,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;UAC/CD,QAAQ,CAACE,GAAG,GAAG,YAAY;UAC3BF,QAAQ,CAACD,IAAI,GAAGyB,GAAG;UACnB1B,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;QACpC;MACD,CAAC,CAAC;IACH,CAAC;IAED,MAAMyB,kBAAkB,GAAGC,KAAA,IAAgC;MAAA,IAA/B;QAAEC,QAAQ;QAAEC;MAAa,CAAC,GAAAF,KAAA;MACrD,IAAIlF,KAAK,CAACkB,SAAS,KAAKkE,YAAY,EAAE;MAEtC,MAAMpD,OAAO,GAAGzB,MAAM,CAACuD,KAAK,CAAC7B,aAAa,CACzC,iCACD,CAAC;MACD,IAAI,CAACD,OAAO,EAAE;MAEdqD,sBAAsB,CAAC,CAAC;MAExB,MAAMC,IAAI,GAAGtD,OAAO,CAACQ,gBAAgB,CAAC,IAAI,CAAC;MAC3C,KAAK,MAAM+C,GAAG,IAAID,IAAI,EAAE;QACvB,MAAME,EAAE,GAAGD,GAAG,CAACtD,aAAa,CAAC,IAAI,CAAC;QAClC,IAAIuD,EAAE,IAAIA,EAAE,CAACb,WAAW,CAACG,IAAI,CAAC,CAAC,KAAKK,QAAQ,EAAE;UAC7CI,GAAG,CAACvC,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UACtC;QACD;MACD;IACD,CAAC;IAED,MAAMwC,oBAAoB,GAAGA,CAAA,KAAM;MAClCJ,sBAAsB,CAAC,CAAC;IACzB,CAAC;IAED,MAAMA,sBAAsB,GAAGA,CAAA,KAAM;MACpC,MAAMrD,OAAO,GAAGzB,MAAM,CAACuD,KAAK,CAAC7B,aAAa,CACzC,iCACD,CAAC;MACD,IAAID,OAAO,EAAE;QACZA,OAAO,CAACQ,gBAAgB,CAAC,oBAAoB,CAAC,CAACC,OAAO,CAAC8C,GAAG,IAAI;UAC7DA,GAAG,CAACvC,SAAS,CAACZ,MAAM,CAAC,mBAAmB,CAAC;QAC1C,CAAC,CAAC;MACH;IACD,CAAC;IAED,MAAMsD,eAAe,GAAGzB,OAAO,IAAI;MAClC,MAAM0B,OAAO,GAAG,yBAAyB,CAACC,IAAI,CAAC3B,OAAO,CAAC;MACvD,MAAM4B,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;MACvC,IAAI,CAACF,SAAS,IAAIA,SAAS,CAACG,UAAU,KAAK,CAAC,EAAE;MAE9C,MAAMC,KAAK,GAAGJ,SAAS,CAACK,UAAU,CAAC,CAAC,CAAC;MACrC,MAAMC,aAAa,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC,CAACC,UAAU;MAEtD,IAAIC,QAAQ,GAAGC,SAAS;MACxB,KAAK,MAAMC,IAAI,IAAIL,aAAa,EAAE;QACjC,IACCK,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,IACnC,WAAW,CAACf,IAAI,CAACY,IAAI,CAACI,OAAO,CAAC,EAC7B;UACDN,QAAQ,GAAGE,IAAI,CAAC3D,EAAE;UAClB;QACD;MACD;MAEA,IAAI,CAACyD,QAAQ,EAAE;QACd,IAAIO,YAAY,GAAGZ,KAAK,CAACa,cAAc;QACvC,OAAOD,YAAY,IAAI,CAAC,WAAW,CAACjB,IAAI,CAACiB,YAAY,CAACD,OAAO,CAAC,EAAE;UAC/DC,YAAY,GAAGA,YAAY,CAACE,aAAa;QAC1C;QACAT,QAAQ,GAAGO,YAAY,GAAGA,YAAY,CAAChE,EAAE,GAAG0D,SAAS;MACtD;MAEA,IAAI,CAACD,QAAQ,EAAE;QACdjG,YAAY,CAACyD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG2B,OAAO;QACzCpE,GAAG,CAACwC,IAAI,CAAC,GAAGrC,KAAK,CAACsC,KAAK,QAAQ,EAAE;UAAE2B;QAAQ,CAAC,CAAC;QAC7C3D,SAAS,CAACwD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,IAAI;QACnChD,QAAQ,CAAC,MAAM;UACd0H,mBAAmB,CAAC,CAAC;QACtB,CAAC,CAAC;QACF;MACD;MAEAC,2BAA2B,CAAChD,OAAO,EAAEqC,QAAQ,EAAEX,OAAO,CAAC;IACxD,CAAC;IAED,MAAMsB,2BAA2B,GAAGA,CAAChD,OAAO,EAAEqC,QAAQ,EAAEX,OAAO,KAAK;MACnEtF,YAAY,CAACyD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG2B,OAAO;MACzCpE,GAAG,CAACwC,IAAI,CAAC,GAAGrC,KAAK,CAACsC,KAAK,QAAQ,EAAE;QAAE2B;MAAQ,CAAC,CAAC;MAC7C3D,SAAS,CAACwD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,IAAI;MAEnC,IAAIqD,OAAO,EAAE;QACZ,MAAM;UAAEuB,UAAU;UAAEC;QAAe,CAAC,GAAGC,2BAA2B,CACjEd,QAAQ,EACRtG,KAAK,CAACsC,KACP,CAAC;QAED,IAAI4E,UAAU,IAAIC,cAAc,EAAE;UACjC,MAAME,gBAAgB,GAAGrH,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;UACjE,MAAMgF,QAAQ,GACbtH,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG4E,UAAU,CAACK,OAAO,GAAGL,UAAU,CAACM,MAAM;UAEhE,MAAMC,aAAa,GAAGnE,QAAQ,CAACoE,cAAc,CAACJ,QAAQ,CAAC;UACvD,IAAIG,aAAa,EAAE;YAClBA,aAAa,CAACE,cAAc,CAAC;cAAEC,QAAQ,EAAE;YAAS,CAAC,CAAC;UACrD;UAEA/H,GAAG,CAACwC,IAAI,CAAC,GAAGgF,gBAAgB,QAAQ,EAAE;YAAEpD,OAAO,EAAEkD;UAAe,CAAC,CAAC;UAClEtH,GAAG,CAACwC,IAAI,CAAC,GAAGgF,gBAAgB,OAAO,EAAE;YACpCpD,OAAO,EAAEkD,cAAc;YACvBb,QAAQ,EAAEA;UACX,CAAC,CAAC;QACH;MACD;MAEAhH,QAAQ,CAAC,MAAM;QACd0H,mBAAmB,CAAC,CAAC;MACtB,CAAC,CAAC;IACH,CAAC;IAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;MACxBvH,SAAS,CAACwD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,KAAK;MACpCjC,YAAY,CAACyD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,EAAE;MACpC,MAAMwF,SAAS,GACd9H,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,mBAAmB,GAAG,mBAAmB;MACnE1C,EAAE,CAACmI,MAAM,CAACD,SAAS,CAAC,CAACvG,IAAI,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,MAAMyF,mBAAmB,GAAGA,CAAA,KAAM;MACjC,IAAI1G,SAAS,CAACwD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,IAAI/B,MAAM,CAACuD,KAAK,EAAE;QACjD,MAAMkE,KAAK,GAAGzH,MAAM,CAACuD,KAAK,CAAC7B,aAAa,CAAC,aAAa,CAAC;QACvD,MAAMgG,OAAO,GAAG1H,MAAM,CAACuD,KAAK,CAAC7B,aAAa,CAAC,UAAU,CAAC;QACtD,IAAI+F,KAAK,IAAIC,OAAO,EAAE;UACrB,MAAMC,IAAI,GAAG3H,MAAM,CAACuD,KAAK,CAACqE,qBAAqB,CAAC,CAAC;UACjD,MAAMC,SAAS,GAAG7H,MAAM,CAACuD,KAAK,CAACsE,SAAS;UACxC,MAAMC,UAAU,GAAG9H,MAAM,CAACuD,KAAK,CAACuE,UAAU;UAE1CJ,OAAO,CAACK,KAAK,CAACC,GAAG,GAAG,GAAGH,SAAS,IAAI;UACpCH,OAAO,CAACK,KAAK,CAACE,IAAI,GAAG,GAAGH,UAAU,IAAI;UACtCJ,OAAO,CAACK,KAAK,CAACG,KAAK,GAAG,GAAGlI,MAAM,CAACuD,KAAK,CAAC4E,WAAW,IAAI;UACrDT,OAAO,CAACK,KAAK,CAACK,MAAM,GAAG,GAAGpI,MAAM,CAACuD,KAAK,CAAC8E,YAAY,IAAI;UAEvDZ,KAAK,CAACM,KAAK,CAACC,GAAG,GAAG,GAAGL,IAAI,CAACS,MAAM,GAAG,CAAC,GAAGP,SAAS,IAAI;UACpDJ,KAAK,CAACM,KAAK,CAACE,IAAI,GAAG,GAAGN,IAAI,CAACO,KAAK,GAAG,CAAC,GAAGJ,UAAU,IAAI;QACtD;MACD;IACD,CAAC;IAED,MAAMjB,2BAA2B,GAAGA,CAACd,QAAQ,EAAEuC,iBAAiB,KAAK;MACpE,IAAI,CAAC7I,KAAK,CAAC8I,aAAa,EAAE;QACzB,OAAO;UAAE5B,UAAU,EAAE,IAAI;UAAEC,cAAc,EAAE;QAAG,CAAC;MAChD;MAEA,MAAMD,UAAU,GAAGlH,KAAK,CAAC8I,aAAa,CAACC,IAAI,CAC1CC,MAAM,IAAIA,MAAM,CAACxB,MAAM,KAAKlB,QAAQ,IAAI0C,MAAM,CAACzB,OAAO,KAAKjB,QAC5D,CAAC;MACD,IAAI,CAACY,UAAU,EAAE;QAChB,OAAO;UAAEA,UAAU,EAAE,IAAI;UAAEC,cAAc,EAAE;QAAG,CAAC;MAChD;MAEA,MAAM8B,iBAAiB,GAAGJ,iBAAiB,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;MACxE,MAAMvB,QAAQ,GACbuB,iBAAiB,KAAK,MAAM,GAAG3B,UAAU,CAACK,OAAO,GAAGL,UAAU,CAACM,MAAM;MAEtE,MAAM0B,eAAe,GAAG5F,QAAQ,CAACoE,cAAc,CAACuB,iBAAiB,CAAC;MAClE,IAAI,CAACC,eAAe,EAAE;QACrB,OAAO;UAAEhC,UAAU,EAAE,IAAI;UAAEC,cAAc,EAAE;QAAG,CAAC;MAChD;MAEA,MAAMM,aAAa,GAAGyB,eAAe,CAACjH,aAAa,CAAC,IAAIqF,QAAQ,EAAE,CAAC;MACnE,IAAI,CAACG,aAAa,EAAE;QACnB,OAAO;UAAEP,UAAU,EAAE,IAAI;UAAEC,cAAc,EAAE;QAAG,CAAC;MAChD;MAEA,IAAIA,cAAc,GAAG,EAAE;MACvB,IAAIgC,WAAW,GAAG1B,aAAa;MAE/B,OAAO0B,WAAW,EAAE;QACnB,IACCA,WAAW,KAAK1B,aAAa,IAC7B0B,WAAW,CAAC1C,QAAQ,KAAKC,IAAI,CAACC,YAAY,IAC1C,WAAW,CAACf,IAAI,CAACuD,WAAW,CAACvC,OAAO,CAAC,EACpC;UACD;QACD;QAEA,IACCuC,WAAW,CAAC1C,QAAQ,KAAKC,IAAI,CAACC,YAAY,IAC1CwC,WAAW,CAAC1C,QAAQ,KAAKC,IAAI,CAAC0C,SAAS,EACtC;UACDjC,cAAc,IAAIgC,WAAW,CAACE,SAAS,IAAIF,WAAW,CAACxE,WAAW;QACnE;QAEAwE,WAAW,GAAGA,WAAW,CAACG,WAAW;MACtC;MAEA,OAAO;QAAEpC,UAAU;QAAEC;MAAe,CAAC;IACtC,CAAC;;IAED;IACA,MAAMoC,mBAAmB,GAAGC,OAAO,IAAI;MACtC,MAAMC,UAAU,GAAGD,OAAO,CAACC,UAAU,IAAI,EAAE;MAC3CC,eAAe,CAAC,CAAC;MAEjB,IAAI,CAACnJ,MAAM,CAACuD,KAAK,EAAE;MAEnB2F,UAAU,CAAChH,OAAO,CAACkH,IAAI,IAAI;QAC1BC,kBAAkB,CAACD,IAAI,CAAC;MACzB,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAGC,eAAe,IAAI;MAC7C,IAAI,CAACA,eAAe,EAAE;MAEtB,MAAMhG,cAAc,GAAGtD,MAAM,CAACuD,KAAK,CAAC7B,aAAa,CAAC,oBAAoB,CAAC;MACvE,IAAI,CAAC4B,cAAc,EAAE;;MAErB;MACA,MAAMiG,MAAM,GAAGxG,QAAQ,CAACyG,gBAAgB,CACvClG,cAAc,EACdmG,UAAU,CAACC,SAAS,EACpB,IAAI,EACJ,KACD,CAAC;MAED,IAAIzD,IAAI;MACR,MAAM0D,OAAO,GAAG,EAAE;;MAElB;MACA,OAAQ1D,IAAI,GAAGsD,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAG;QAClC,MAAMC,SAAS,GAAG5D,IAAI,CAAC4D,SAAS;QAChC,IAAIC,GAAG,GAAG,CAAC;QACX,OAAO,CAACA,GAAG,GAAGD,SAAS,CAACE,OAAO,CAACT,eAAe,EAAEQ,GAAG,CAAC,KAAK,CAAC,EAAE;UAC5DH,OAAO,CAACK,IAAI,CAAC;YACZ/D,IAAI;YACJgE,KAAK,EAAEH,GAAG;YACVI,GAAG,EAAEJ,GAAG,GAAGR,eAAe,CAACa;UAC5B,CAAC,CAAC;UACFL,GAAG,IAAIR,eAAe,CAACa,MAAM;QAC9B;MACD;;MAEA;MACAR,OAAO,CAACS,OAAO,CAAC,CAAC,CAAClI,OAAO,CAACmI,KAAA,IAA0B;QAAA,IAAzB;UAAEpE,IAAI;UAAEgE,KAAK;UAAEC;QAAI,CAAC,GAAAG,KAAA;QAC9C,MAAMC,MAAM,GAAGrE,IAAI,CAACsE,UAAU;;QAE9B;QACA,MAAMC,MAAM,GAAGvE,IAAI,CAACwE,SAAS,CAACR,KAAK,CAAC;QACpC,MAAMS,WAAW,GAAGF,MAAM,CAACC,SAAS,CAACP,GAAG,GAAGD,KAAK,CAAC;;QAEjD;QACA,MAAMU,IAAI,GAAG5H,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;QAC3CyH,IAAI,CAACC,SAAS,GAAG,6BAA6BnL,KAAK,CAACsC,KAAK,EAAE;QAC3D4I,IAAI,CAACvG,WAAW,GAAGoG,MAAM,CAACX,SAAS;;QAEnC;QACAS,MAAM,CAACO,YAAY,CAACF,IAAI,EAAEH,MAAM,CAAC;;QAEjC;QACA,IAAI,CAACvK,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,EAAE;UAC9C9B,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,EAAE;QAC9C;QACA9B,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,CAACiI,IAAI,CAACW,IAAI,CAAC;MACpD,CAAC,CAAC;;MAEF;MACA,IAAI1K,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QAClD9B,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACqF,cAAc,CAAC;UAC1DC,QAAQ,EAAE,QAAQ;UAClByD,KAAK,EAAE;QACR,CAAC,CAAC;MACH;IACD,CAAC;;IAED;IACA,MAAM3B,eAAe,GAAGA,CAAA,KAAM;MAC7B,IAAI,CAAClJ,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,EAAE;MAE/C9B,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,CAACG,OAAO,CAAC6I,SAAS,IAAI;QAC7D,IAAIA,SAAS,CAACR,UAAU,EAAE;UACzB,MAAMS,QAAQ,GAAGjI,QAAQ,CAACkI,cAAc,CAACF,SAAS,CAAC3G,WAAW,CAAC;UAC/D2G,SAAS,CAACR,UAAU,CAACM,YAAY,CAACG,QAAQ,EAAED,SAAS,CAAC;QACvD;MACD,CAAC,CAAC;MAEF9K,qBAAqB,CAACsD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,EAAE;IAC9C,CAAC;IAEDlD,SAAS,CAAC,MAAM;MACf2B,qBAAqB,CAAC,CAAC;MAEvB,IAAIR,MAAM,CAACuD,KAAK,EAAE;QACjBvD,MAAM,CAACuD,KAAK,CAAC2H,gBAAgB,CAAC,QAAQ,EAAEzE,mBAAmB,CAAC;MAC7D;MAEA,MAAM0E,UAAU,GAAG,SAClB1L,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,UAChC;MACV,MAAMqJ,YAAY,GAAG,WACpB3L,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,UAChC;MAEVzC,GAAG,CAAC+L,EAAE,CAACF,UAAU,EAAEzG,kBAAkB,CAAC;MACtCpF,GAAG,CAAC+L,EAAE,CAACD,YAAY,EAAElG,oBAAoB,CAAC;MAE1C5F,GAAG,CAAC+L,EAAE,CAAC,GAAG5L,KAAK,CAACsC,KAAK,OAAO,EAAEuJ,KAAA,IAA2B;QAAA,IAA1B;UAAE5H,OAAO;UAAEqC;QAAS,CAAC,GAAAuF,KAAA;QACnDxL,YAAY,CAACyD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG2B,OAAO;QACzC3D,SAAS,CAACwD,KAAK,CAAC9D,KAAK,CAACsC,KAAK,CAAC,GAAG,IAAI;QACnChD,QAAQ,CAAC,MAAM;UACd0H,mBAAmB,CAAC,CAAC;QACtB,CAAC,CAAC;MACH,CAAC,CAAC;;MAEF;MACAnH,GAAG,CAAC+L,EAAE,CAAC,aAAa5L,KAAK,CAACsC,KAAK,aAAa,EAAEiH,mBAAmB,CAAC;MAClE1J,GAAG,CAAC+L,EAAE,CAAC,SAAS5L,KAAK,CAACsC,KAAK,aAAa,EAAEoH,eAAe,CAAC;IAC3D,CAAC,CAAC;IAEFrK,WAAW,CAAC,MAAM;MACjB,IAAIkB,MAAM,CAACuD,KAAK,EAAE;QACjBvD,MAAM,CAACuD,KAAK,CAACgI,mBAAmB,CAAC,QAAQ,EAAE9E,mBAAmB,CAAC;MAChE;MAEA,MAAM0E,UAAU,GAAG,SAClB1L,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,UAChC;MACV,MAAMqJ,YAAY,GAAG,WACpB3L,KAAK,CAACsC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,UAChC;MAEVzC,GAAG,CAACkM,GAAG,CAACL,UAAU,EAAEzG,kBAAkB,CAAC;MACvCpF,GAAG,CAACkM,GAAG,CAACJ,YAAY,EAAElG,oBAAoB,CAAC;MAC3C5F,GAAG,CAACkM,GAAG,CAAC,GAAG/L,KAAK,CAACsC,KAAK,OAAO,CAAC;;MAE9B;MACAzC,GAAG,CAACkM,GAAG,CAAC,aAAa/L,KAAK,CAACsC,KAAK,aAAa,EAAEiH,mBAAmB,CAAC;MACnE1J,GAAG,CAACkM,GAAG,CAAC,SAAS/L,KAAK,CAACsC,KAAK,aAAa,EAAEoH,eAAe,CAAC;IAC5D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}