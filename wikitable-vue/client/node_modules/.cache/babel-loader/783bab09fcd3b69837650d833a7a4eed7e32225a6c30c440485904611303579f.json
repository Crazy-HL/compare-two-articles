{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5133bbe4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"visualization-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-state\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"loading-text\"\n};\nconst _hoisted_5 = {\n  class: \"time-series-comparison\"\n};\nconst _hoisted_6 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_7 = {\n  class: \"time-range\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"empty-state\"\n}, \"暂无数据可供可视化\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 加载状态 \"), $props.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.message), 1 /* TEXT */)])) : $setup.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 可视化展示 \"), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: attr,\n      class: \"chart-card\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString($setup.getAttributeName(attr)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(), _createElementBlock(\"svg\", {\n      ref_for: true,\n      ref: el => $setup.initChart(el, attr),\n      class: \"time-series-chart\"\n    }, null, 512 /* NEED_PATCH */))]), _createElementVNode(\"div\", _hoisted_7, \"年份范围: \" + _toDisplayString($setup.minYear) + \" - \" + _toDisplayString($setup.maxYear), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 空状态 \"), _hoisted_8], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$props","isLoading","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","message","$setup","hasData","_Fragment","_hoisted_5","_renderList","commonAttributes","attr","getAttributeName","_hoisted_6","ref_for","ref","el","initChart","_hoisted_7","minYear","maxYear","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\LoadingSpinner.vue"],"sourcesContent":["<template>\r\n\t<div class=\"visualization-container\">\r\n\t\t<!-- 加载状态 -->\r\n\t\t<div v-if=\"isLoading\" class=\"loading-state\">\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">{{ message }}</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化展示 -->\r\n\t\t<div v-else-if=\"hasData\" class=\"time-series-comparison\">\r\n\t\t\t<div v-for=\"attr in commonAttributes\" :key=\"attr\" class=\"chart-card\">\r\n\t\t\t\t<h3>{{ getAttributeName(attr) }}</h3>\r\n\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t<svg :ref=\"el => initChart(el, attr)\" class=\"time-series-chart\"></svg>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"time-range\">年份范围: {{ minYear }} - {{ maxYear }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 空状态 -->\r\n\t\t<div v-else class=\"empty-state\">暂无数据可供可视化</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tmessage: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"正在处理数据...\"\r\n\t\t},\r\n\t\tisLoading: Boolean,\r\n\t\ttable1: Object,\r\n\t\ttable2: Object\r\n\t});\r\n\r\n\t// 计算公共属性\r\n\tconst commonAttributes = computed(() => {\r\n\t\tif (!props.table1?.rows || !props.table2?.rows) return [];\r\n\t\treturn props.table1.rows.filter(\r\n\t\t\tattr =>\r\n\t\t\t\tprops.table2.rows.includes(attr) && ![\"Year\", \"Team\"].includes(attr)\r\n\t\t);\r\n\t});\r\n\r\n\t// 计算年份范围\r\n\tconst minYear = computed(() => {\r\n\t\tconst years = [\r\n\t\t\t...getAllYears(props.table1),\r\n\t\t\t...getAllYears(props.table2)\r\n\t\t].filter(y => !isNaN(y));\r\n\t\treturn years.length ? Math.min(...years) : null;\r\n\t});\r\n\r\n\tconst maxYear = computed(() => {\r\n\t\tconst years = [\r\n\t\t\t...getAllYears(props.table1),\r\n\t\t\t...getAllYears(props.table2)\r\n\t\t].filter(y => !isNaN(y));\r\n\t\treturn years.length ? Math.max(...years) : null;\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn commonAttributes.value.length > 0;\r\n\t});\r\n\r\n\t// 初始化图表\r\n\tfunction initChart(el, attr) {\r\n\t\tif (!el || !props.table1 || !props.table2) return;\r\n\r\n\t\trenderComparisonChart(el, {\r\n\t\t\tattr,\r\n\t\t\ttable1: props.table1,\r\n\t\t\ttable2: props.table2\r\n\t\t});\r\n\t}\r\n\r\n\t// 渲染对比图表\r\n\tfunction renderComparisonChart(container, { attr, table1, table2 }) {\r\n\t\t// 清空容器\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = 400;\r\n\t\tconst height = 200;\r\n\t\tconst padding = 30;\r\n\r\n\t\t// 创建SVG元素\r\n\t\tconst svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\tsvg.setAttribute(\"width\", \"100%\");\r\n\t\tsvg.setAttribute(\"height\", \"100%\");\r\n\t\tsvg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\r\n\r\n\t\t// 获取所有年份\r\n\t\tconst allYears = [...getAllYears(table1), ...getAllYears(table2)]\r\n\t\t\t.filter((v, i, a) => a.indexOf(v) === i)\r\n\t\t\t.sort((a, b) => a - b);\r\n\r\n\t\t// 准备数据\r\n\t\tconst dataset = {\r\n\t\t\ttable1: prepareSeriesData(table1, attr, allYears),\r\n\t\t\ttable2: prepareSeriesData(table2, attr, allYears)\r\n\t\t};\r\n\r\n\t\t// 计算比例尺\r\n\t\tconst xScale = year => {\r\n\t\t\tconst index = allYears.indexOf(year);\r\n\t\t\treturn padding + (index * (width - 2 * padding)) / (allYears.length - 1);\r\n\t\t};\r\n\r\n\t\tconst yScale = value => {\r\n\t\t\tconst allValues = [...dataset.table1, ...dataset.table2].filter(\r\n\t\t\t\tv => v !== null\r\n\t\t\t);\r\n\t\t\tconst max = Math.max(...allValues);\r\n\t\t\treturn height - padding - (value / max) * 0.8 * (height - 2 * padding);\r\n\t\t};\r\n\r\n\t\t// 绘制折线\r\n\t\tconst drawLine = (data, color) => {\r\n\t\t\tlet pathData = \"\";\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tif (item.value === null) return;\r\n\r\n\t\t\t\tconst x = xScale(item.year);\r\n\t\t\t\tconst y = yScale(item.value);\r\n\r\n\t\t\t\tif (i === 0 || pathData === \"\") {\r\n\t\t\t\t\tpathData = `M ${x} ${y}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpathData += ` L ${x} ${y}`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst path = document.createElementNS(\r\n\t\t\t\t\"http://www.w3.org/2000/svg\",\r\n\t\t\t\t\"path\"\r\n\t\t\t);\r\n\t\t\tpath.setAttribute(\"d\", pathData);\r\n\t\t\tpath.setAttribute(\"stroke\", color);\r\n\t\t\tpath.setAttribute(\"stroke-width\", \"2\");\r\n\t\t\tpath.setAttribute(\"fill\", \"none\");\r\n\t\t\tsvg.appendChild(path);\r\n\t\t};\r\n\r\n\t\t// 绘制数据点\r\n\t\tconst drawPoints = (data, color) => {\r\n\t\t\tdata.forEach(item => {\r\n\t\t\t\tif (item.value === null) return;\r\n\r\n\t\t\t\tconst circle = document.createElementNS(\r\n\t\t\t\t\t\"http://www.w3.org/2000/svg\",\r\n\t\t\t\t\t\"circle\"\r\n\t\t\t\t);\r\n\t\t\t\tcircle.setAttribute(\"cx\", xScale(item.year));\r\n\t\t\t\tcircle.setAttribute(\"cy\", yScale(item.value));\r\n\t\t\t\tcircle.setAttribute(\"r\", \"4\");\r\n\t\t\t\tcircle.setAttribute(\"fill\", color);\r\n\t\t\t\tcircle.setAttribute(\"data-year\", item.year);\r\n\t\t\t\tcircle.setAttribute(\"data-value\", item.value);\r\n\t\t\t\tsvg.appendChild(circle);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// 执行绘制\r\n\t\tdrawLine(dataset.table1, \"#5470c6\");\r\n\t\tdrawLine(dataset.table2, \"#ee6666\");\r\n\t\tdrawPoints(dataset.table1, \"#5470c6\");\r\n\t\tdrawPoints(dataset.table2, \"#ee6666\");\r\n\r\n\t\tcontainer.appendChild(svg);\r\n\t}\r\n\r\n\t// 辅助函数\r\n\tfunction getAllYears(table) {\r\n\t\treturn table?.columns?.map(col => col.data.Year) || [];\r\n\t}\r\n\r\n\tfunction prepareSeriesData(table, attr, allYears) {\r\n\t\treturn allYears.map(year => ({\r\n\t\t\tyear,\r\n\t\t\tvalue: getValueByYear(table, year, attr)\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction getValueByYear(table, year, attr) {\r\n\t\tconst record = table?.columns?.find(col => col.data.Year == year);\r\n\t\treturn record ? parseFloat(record.data[attr]) || null : null;\r\n\t}\r\n\r\n\tfunction getAttributeName(attr) {\r\n\t\tconst map = {\r\n\t\t\tGP: \"出场次数\",\r\n\t\t\tGS: \"首发次数\",\r\n\t\t\tMPG: \"场均时间\",\r\n\t\t\tPPG: \"场均得分\",\r\n\t\t\tAPG: \"场均助攻\",\r\n\t\t\tRPG: \"场均篮板\",\r\n\t\t\tSPG: \"场均抢断\",\r\n\t\t\tBPG: \"场均盖帽\",\r\n\t\t\t\"FG%\": \"投篮命中率\",\r\n\t\t\t\"3P%\": \"三分命中率\",\r\n\t\t\t\"FT%\": \"罚球命中率\"\r\n\t\t};\r\n\t\treturn map[attr] || attr;\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.loading-state {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.time-series-comparison {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-card {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 15px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\theight: 200px;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t.time-series-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.time-range {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.empty-state {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #888;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAyB;;EADrCC,GAAA;EAGwBD,KAAK,EAAC;;gEAC3BE,mBAAA,CAA2B;EAAtBF,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAc;;EAIDA,KAAK,EAAC;AAAwB;;EAGhDA,KAAK,EAAC;AAAe;;EAGrBA,KAAK,EAAC;AAAY;gEAKzBE,mBAAA,CAA+C;EAAnCF,KAAK,EAAC;AAAa,GAAC,WAAS;;uBAnB1CG,mBAAA,CAoBM,OApBNC,UAoBM,GAnBLC,mBAAA,UAAa,EACFC,MAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAGM,OAHNK,UAGM,GAFLC,UAA2B,EAC3BP,mBAAA,CAA6C,OAA7CQ,UAA6C,EAAAC,gBAAA,CAAhBL,MAAA,CAAAM,OAAO,iB,KAIrBC,MAAA,CAAAC,OAAO,I,cAAvBX,mBAAA,CAQMY,SAAA;IAjBRd,GAAA;EAAA,IAQEI,mBAAA,WAAc,EACdH,mBAAA,CAQM,OARNc,UAQM,I,kBAPLb,mBAAA,CAMMY,SAAA,QAhBTE,WAAA,CAUuBJ,MAAA,CAAAK,gBAAgB,EAAxBC,IAAI;yBAAhBhB,mBAAA,CAMM;MANiCF,GAAG,EAAEkB,IAAI;MAAEnB,KAAK,EAAC;QACvDE,mBAAA,CAAqC,YAAAS,gBAAA,CAA9BE,MAAA,CAAAO,gBAAgB,CAACD,IAAI,mBAC5BjB,mBAAA,CAEM,OAFNmB,UAEM,I,cADLlB,mBAAA,CAAsE;MAb3EmB,OAAA;MAaWC,GAAG,EAAEC,EAAE,IAAIX,MAAA,CAAAY,SAAS,CAACD,EAAE,EAAEL,IAAI;MAAGnB,KAAK,EAAC;uCAE7CE,mBAAA,CAAiE,OAAjEwB,UAAiE,EAAzC,QAAM,GAAAf,gBAAA,CAAGE,MAAA,CAAAc,OAAO,IAAG,KAAG,GAAAhB,gBAAA,CAAGE,MAAA,CAAAe,OAAO,iB;sGAK1DzB,mBAAA,CAA+CY,SAAA;IApBjDd,GAAA;EAAA,IAmBEI,mBAAA,SAAY,EACZwB,UAA+C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}