{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9d3193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"icon\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"icon close\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M6 18L18 6M6 6l12 12\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  class: \"outline\"\n};\nconst _hoisted_8 = [\"href\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 大纲切换按钮 \"), _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"toggle-btn\",\n    style: _normalizeStyle($setup.buttonStyle)\n  }, [!$setup.isVisible ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, [..._hoisted_3])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_4, [..._hoisted_6]))], 4 /* STYLE */), _createCommentVNode(\" 大纲内容 \"), $setup.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"outline-container\",\n    style: _normalizeStyle($setup.outlineStyle)\n  }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: _normalizeClass({\n        linked: $setup.isLinked(item)\n      }),\n      style: _normalizeStyle({\n        paddingLeft: `${(item.level - 1) * 15}px`,\n        borderLeft: $setup.isLinked(item) ? `4px solid ${$setup.getBorderColor(item.id)}` : 'none'\n      })\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id,\n      onClick: _withModifiers($event => $setup.scrollToChapter(item.id), [\"prevent\"])\n    }, _toDisplayString(item.text), 9 /* TEXT, PROPS */, _hoisted_8)], 6 /* CLASS, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","viewBox","_createElementVNode","fill","d","_hoisted_2","_hoisted_5","_createElementBlock","_Fragment","_createCommentVNode","onClick","$setup","toggleOutline","style","_normalizeStyle","buttonStyle","isVisible","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_6","outlineStyle","_hoisted_7","_renderList","outline","item","index","id","_normalizeClass","linked","isLinked","level","getBorderColor","href","_withModifiers","$event","scrollToChapter","text","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\tpaddingLeft: `${(item.level - 1) * 15}px`,\r\n\t\t\t\t\t\tborderLeft: isLinked(item)\r\n\t\t\t\t\t\t\t? `4px solid ${getBorderColor(item.id)}`\r\n\t\t\t\t\t\t\t: 'none'\r\n\t\t\t\t\t}\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted } from \"vue\";\r\n\timport eventBus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String // \"div1\" 或 \"div3\"\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\r\n\t// **自定义关联数组**\r\n\tconst linkedOutline = ref([\r\n\t\t{ leftId: \"heading-0-div1\", rightId: \"heading-0-div3\" },\r\n\t\t{ leftId: \"heading-1-div1\", rightId: \"heading-1-div3\" },\r\n\t\t{ leftId: \"heading-2-div1\", rightId: \"heading-2-div3\" },\r\n\t\t{ leftId: \"heading-3-div1\", rightId: \"heading-3-div3\" },\r\n\t\t{ leftId: \"heading-7-div1\", rightId: \"heading-5-div3\" },\r\n\t\t{ leftId: \"heading-8-div1\", rightId: \"heading-6-div3\" },\r\n\t\t{ leftId: \"heading-11-div1\", rightId: \"heading-8-div3\" },\r\n\t\t{ leftId: \"heading-12-div1\", rightId: \"heading-9-div3\" },\r\n\t\t{ leftId: \"heading-26-div1\", rightId: \"heading-15-div3\" },\r\n\t\t{ leftId: \"heading-28-div1\", rightId: \"heading-16-div3\" },\r\n\t\t{ leftId: \"heading-30-div1\", rightId: \"heading-17-div3\" },\r\n\t\t{ leftId: \"heading-32-div1\", rightId: \"heading-32-div3\" },\r\n\t\t{ leftId: \"heading-33-div1\", rightId: \"heading-33-div3\" },\r\n\t\t{ leftId: \"heading-34-div1\", rightId: \"heading-35-div3\" },\r\n\t\t{ leftId: \"heading-35-div1\", rightId: \"heading-37-div3\" }\r\n\t]);\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = (content, containerId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${containerId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent, props.divId);\r\n\r\n\t\t\t// 提取另一个容器的大纲数据\r\n\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\tconst otherContainer = document.getElementById(otherContainerId);\r\n\t\t\tif (otherContainer) {\r\n\t\t\t\t// 通过 eventBus 通知另一个大纲组件\r\n\t\t\t\teventBus.emit(\"update-linked-outline\", linkedOutline.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **监听 eventBus，确保两边大纲同步**\r\n\teventBus.on(\"update-linked-outline\", newLinkedOutline => {\r\n\t\tlinkedOutline.value = newLinkedOutline;\r\n\t});\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item =>\r\n\t\tlinkedOutline.value.some(\r\n\t\t\tlinked => linked.leftId === item.id || linked.rightId === item.id\r\n\t\t);\r\n\r\n\t// **生成不同关联章节的边框颜色**\r\n\tconst getBorderColor = id => {\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\t// 根据关联章节的索引生成不同的颜色\r\n\t\t\tconst index = linkedOutline.value.indexOf(linkedItem);\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#FF6B6B\",\r\n\t\t\t\t\"#4ECDC4\",\r\n\t\t\t\t\"#FFD166\",\r\n\t\t\t\t\"#06D6A0\",\r\n\t\t\t\t\"#118AB2\",\r\n\t\t\t\t\"#073B4C\"\r\n\t\t\t];\r\n\t\t\treturn colors[index % colors.length];\r\n\t\t}\r\n\t\treturn \"transparent\";\r\n\t};\r\n\r\n\t// **滚动到章节**\r\n\tconst scrollToChapter = id => {\r\n\t\t// 跳转到当前文章的章节\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t// 找到关联章节并跳转\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\tconst targetId =\r\n\t\t\t\tlinkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\r\n\t\t\teventBus.emit(\"scroll-to-chapter\", targetId);\r\n\t\t}\r\n\t};\r\n\r\n\t// **监听 eventBus，确保两个组件同步跳转**\r\n\teventBus.on(\"scroll-to-chapter\", targetId => {\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\tif (targetElement) targetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t});\r\n\r\n\t// **更新按钮和大纲的相对位置**\r\n\tconst updatePosition = () => {\r\n\t\tconst isDiv1 = props.divId === \"div1\";\r\n\t\tbuttonStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"10px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\"\r\n\t\t};\r\n\t\toutlineStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"50px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\",\r\n\t\t\twidth: \"260px\",\r\n\t\t\tmaxHeight: \"80vh\",\r\n\t\t\toverflowY: \"auto\",\r\n\t\t\tzIndex: \"1000\",\r\n\t\t\tbackground: \"white\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t\tboxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n\t\t\tpadding: \"15px\"\r\n\t\t};\r\n\t};\r\n\r\n\t// **窗口滚动时更新大纲位置**\r\n\tconst handleScroll = () => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (!referenceElement) return;\r\n\r\n\t\tconst scrollY = referenceElement.scrollTop;\r\n\t\tbuttonStyle.value.top = `${scrollY + 10}px`;\r\n\t\toutlineStyle.value.top = `${scrollY + 50}px`;\r\n\t};\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content, props.divId);\r\n\t\tupdatePosition();\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.addEventListener(\"scroll\", handleScroll);\r\n\t});\r\n\r\n\t// **组件销毁时移除事件**\r\n\tonUnmounted(() => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.removeEventListener(\"scroll\", handleScroll);\r\n\t\teventBus.off(\"update-linked-outline\");\r\n\t\teventBus.off(\"scroll-to-chapter\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* **大纲样式** */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **关联章节样式** */\r\n\t.outline li.linked {\r\n\t\tborder-left: 4px solid;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EAGyBC,KAAK,EAAC,MAAM;EAACC,OAAO,EAAC;;gEAC3CC,mBAAA,CAEyD;EADxDC,IAAI,EAAC,cAAc;EACnBC,CAAC,EAAC;;oBAFHC,UAEyD,C;;EAN5DN,GAAA;EAQcC,KAAK,EAAC,YAAY;EAACC,OAAO,EAAC;;gEACtCC,mBAAA,CAA0D;EAApDC,IAAI,EAAC,cAAc;EAACC,CAAC,EAAC;;oBAA5BE,UAA0D,C;;EAMtDN,KAAK,EAAC;AAAS;mBAftB;;uBAAAO,mBAAA,CAAAC,SAAA,SACCC,mBAAA,YAAe,EACfP,mBAAA,CASS;IATAQ,OAAK,EAAEC,MAAA,CAAAC,aAAa;IAAEZ,KAAK,EAAC,YAAY;IAAEa,KAAK,EAFzDC,eAAA,CAE2DH,MAAA,CAAAI,WAAW;OACxDJ,MAAA,CAAAK,SAAS,I,cAArBT,mBAAA,CAIM,OAJNU,UAIM,EAPR,IAAAC,UAAA,O,cAQEX,mBAAA,CAEM,OAFNY,UAEM,EAVR,IAAAC,UAAA,I,kBAaCX,mBAAA,UAAa,EACFE,MAAA,CAAAK,SAAS,I,cAApBT,mBAAA,CAmBM;IAjCPR,GAAA;IAcuBC,KAAK,EAAC,mBAAmB;IAAEa,KAAK,EAdvDC,eAAA,CAcyDH,MAAA,CAAAU,YAAY;MACnEnB,mBAAA,CAiBM,OAjBNoB,UAiBM,GAhBLpB,mBAAA,CAeK,c,kBAdJK,mBAAA,CAaKC,SAAA,QA9BTe,WAAA,CAkB6BZ,MAAA,CAAAa,OAAO,EAlBpC,CAkBaC,IAAI,EAAEC,KAAK;yBADpBnB,mBAAA,CAaK;MAXHR,GAAG,EAAE0B,IAAI,CAACE,EAAE;MACZ3B,KAAK,EApBX4B,eAAA;QAAAC,MAAA,EAoBuBlB,MAAA,CAAAmB,QAAQ,CAACL,IAAI;MAAA;MAC9BZ,KAAK,EArBXC,eAAA;yBAqBuCW,IAAI,CAACM,KAAK;oBAAmCpB,MAAA,CAAAmB,QAAQ,CAACL,IAAI,I,aAAyBd,MAAA,CAAAqB,cAAc,CAACP,IAAI,CAACE,EAAE,M;;QAM3IzB,mBAAA,CAEM;MAFF+B,IAAI,QAAQR,IAAI,CAACE,EAAE;MAAGjB,OAAK,EA3BpCwB,cAAA,CAAAC,MAAA,IA2B8CxB,MAAA,CAAAyB,eAAe,CAACX,IAAI,CAACE,EAAE;wBAC/DF,IAAI,CAACY,IAAI,wBA5BfC,UAAA,E;yDAAA7B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}