{"ast":null,"code":"import * as d3 from \"d3\";\nimport { toRaw } from \"vue\";\nexport default {\n  data() {\n    return {\n      text: \"\",\n      // 用户输入的文章内容\n      jsonData: null // 后端返回的 JSON 数据\n    };\n  },\n  methods: {\n    // 提交文章内容并获取处理结果\n    async processText() {\n      try {\n        const response = await fetch(\"http://localhost:8888/process_text\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: this.text\n          })\n        });\n        const result = await response.json();\n\n        // 检查是否有错误信息\n        if (result.error) {\n          console.error(\"后端返回的错误:\", result.error);\n          alert(`处理文章内容时出错: ${result.message}`);\n          return;\n        }\n\n        // 赋值时确保 jsonData 是对象\n        this.jsonData = result.json_data;\n        console.log(\"后端返回的数据:\", result.json_data);\n        console.log(\"赋值后的 jsonData:\", this.jsonData);\n        this.renderChart();\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    },\n    // 渲染图表\n    renderChart() {\n      // 将响应式对象转换为普通对象\n      const rawJsonData = toRaw(this.jsonData);\n      if (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n      const chartType = rawJsonData.type;\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      if (chartType === \"line\") {\n        this.renderLineChart(data, options);\n      } else if (chartType === \"bar\") {\n        this.renderBarChart(data, options);\n      } else if (chartType === \"pie\") {\n        this.renderPieChart(data, options);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    },\n    // 渲染折线图（line）\n    renderLineChart(data, options) {\n      if (!this.$refs.chart) {\n        console.error(\"图表容器未找到\");\n        return;\n      }\n      console.log(\"渲染折线图数据:\", data);\n      const margin = {\n        top: 20,\n        right: 100,\n        bottom: 50,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n\n      // 创建 SVG 容器\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const labels = data.labels;\n      const datasets = data.datasets;\n\n      // 清理数据\n      const cleanedLabels = labels.map(label => label === undefined || label === null || label === \"Not Available\" ? \"\" : label);\n      const cleanedDatasets = datasets.map(dataset => ({\n        ...dataset,\n        data: dataset.data.map(d => d === undefined || d === null || d === \"Not Available\" ? 0 : d)\n      }));\n      console.log(\"清理后的 labels:\", cleanedLabels);\n      console.log(\"清理后的 datasets:\", cleanedDatasets);\n\n      // 设置 X 轴比例尺\n      const x = d3.scaleBand().domain(cleanedLabels).range([0, width]).padding(0.1);\n\n      // 设置 Y 轴比例尺\n      const y = d3.scaleLinear().domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))]).range([height, 0]);\n      console.log(\"X 比例尺 domain:\", x.domain());\n      console.log(\"X 比例尺 range:\", x.range());\n      console.log(\"Y 比例尺 domain:\", y.domain());\n      console.log(\"Y 比例尺 range:\", y.range());\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // 添加 X 轴标题\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height + margin.bottom - 10).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n\n      // 添加 Y 轴标题\n      svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", -margin.left + 20).style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n\n      // 绘制折线\n      cleanedDatasets.forEach(dataset => {\n        const line = d3.line().x((d, i) => x(cleanedLabels[i]) + x.bandwidth() / 2).y(d => y(d));\n        svg.append(\"path\").datum(dataset.data).attr(\"fill\", \"none\").attr(\"stroke\", dataset.borderColor).attr(\"stroke-width\", 2).attr(\"d\", line);\n\n        // 添加数据点\n        svg.selectAll(`.dot-${CSS.escape(dataset.label)}`).data(dataset.data).enter().append(\"circle\").attr(\"cx\", (d, i) => x(cleanedLabels[i]) + x.bandwidth() / 2).attr(\"cy\", d => y(d)).attr(\"r\", 4).attr(\"fill\", dataset.borderColor);\n      });\n\n      // 添加图例\n      const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\n      cleanedDatasets.forEach((dataset, index) => {\n        const legendItem = legend.append(\"g\").attr(\"transform\", `translate(0, ${index * 20})`);\n\n        // 添加颜色方块\n        legendItem.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", dataset.borderColor);\n\n        // 添加标签\n        legendItem.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \"0.35em\").text(dataset.label);\n      });\n    },\n    // 渲染柱状图（bar）\n    renderBarChart(data, options) {\n      if (!this.$refs.chart) {\n        console.error(\"图表容器未找到\");\n        return;\n      }\n      console.log(\"渲染柱状图数据:\", data);\n      const margin = {\n        top: 20,\n        right: 100,\n        bottom: 50,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n\n      // 创建 SVG 容器\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const labels = data.labels;\n      const datasets = data.datasets;\n\n      // 清理数据\n      const cleanedLabels = labels.map(label => label === undefined || label === null ? \"\" : label);\n      const cleanedDatasets = datasets.map(dataset => ({\n        ...dataset,\n        data: dataset.data.map(d => d === undefined || d === null ? 0 : d)\n      }));\n      console.log(\"清理后的 labels:\", cleanedLabels);\n      console.log(\"清理后的 datasets:\", cleanedDatasets);\n\n      // 设置 X 轴比例尺\n      const x = d3.scaleBand().domain(cleanedLabels).range([0, width]).padding(0.1);\n\n      // 设置 Y 轴比例尺\n      const y = d3.scaleLinear().domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))]).range([height, 0]);\n      console.log(\"X 比例尺 domain:\", x.domain());\n      console.log(\"X 比例尺 range:\", x.range());\n      console.log(\"Y 比例尺 domain:\", y.domain());\n      console.log(\"Y 比例尺 range:\", y.range());\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // 添加 X 轴标题\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height + margin.bottom - 10).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n\n      // 添加 Y 轴标题\n      svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", -margin.left + 20).style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n\n      // 绘制柱状图\n      cleanedDatasets.forEach(dataset => {\n        svg.selectAll(\".bar\").data(dataset.data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (d, i) => x(cleanedLabels[i])).attr(\"y\", d => y(d)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - y(d)).attr(\"fill\", dataset.backgroundColor);\n      });\n\n      // 添加图例\n      const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\n      cleanedDatasets.forEach((dataset, index) => {\n        const legendItem = legend.append(\"g\").attr(\"transform\", `translate(0, ${index * 20})`);\n\n        // 添加颜色方块\n        legendItem.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", dataset.backgroundColor);\n\n        // 添加标签\n        legendItem.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \"0.35em\").text(dataset.label);\n      });\n    },\n    // 渲染饼图（pie）\n    renderPieChart(data, options) {\n      console.log(\"渲染饼图数据:\", data);\n    }\n  }\n};","map":{"version":3,"names":["d3","toRaw","data","text","jsonData","methods","processText","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","alert","message","json_data","log","renderChart","rawJsonData","select","$refs","chart","html","chartType","type","options","renderLineChart","renderBarChart","renderPieChart","margin","top","right","bottom","left","width","height","svg","append","attr","labels","datasets","cleanedLabels","map","label","undefined","cleanedDatasets","dataset","d","x","scaleBand","domain","range","padding","y","scaleLinear","max","flatMap","call","axisBottom","selectAll","style","axisLeft","scales","title","forEach","line","i","bandwidth","datum","borderColor","CSS","escape","enter","legend","index","legendItem","backgroundColor"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis2.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<h1>文章内容可视化工具</h1>\r\n\t\t<div class=\"upload-section\">\r\n\t\t\t<textarea v-model=\"text\" placeholder=\"请输入文章内容\"></textarea>\r\n\t\t\t<button @click=\"processText\">提交并可视化</button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"visualization-section\">\r\n\t\t\t<h2>可视化结果</h2>\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\timport { toRaw } from \"vue\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttext: \"\", // 用户输入的文章内容\r\n\t\t\t\tjsonData: null // 后端返回的 JSON 数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交文章内容并获取处理结果\r\n\t\t\tasync processText() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({ text: this.text })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst result = await response.json();\r\n\r\n\t\t\t\t\t// 检查是否有错误信息\r\n\t\t\t\t\tif (result.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 赋值时确保 jsonData 是对象\r\n\t\t\t\t\tthis.jsonData = result.json_data;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", result.json_data);\r\n\t\t\t\t\tconsole.log(\"赋值后的 jsonData:\", this.jsonData);\r\n\t\t\t\t\tthis.renderChart();\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\t// 将响应式对象转换为普通对象\r\n\t\t\t\tconst rawJsonData = toRaw(this.jsonData);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!rawJsonData ||\r\n\t\t\t\t\ttypeof rawJsonData !== \"object\" ||\r\n\t\t\t\t\t!rawJsonData.data\r\n\t\t\t\t) {\r\n\t\t\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\tconst chartType = rawJsonData.type;\r\n\t\t\t\tconst data = rawJsonData.data;\r\n\t\t\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\t\t\tif (chartType === \"line\") {\r\n\t\t\t\t\tthis.renderLineChart(data, options);\r\n\t\t\t\t} else if (chartType === \"bar\") {\r\n\t\t\t\t\tthis.renderBarChart(data, options);\r\n\t\t\t\t} else if (chartType === \"pie\") {\r\n\t\t\t\t\tthis.renderPieChart(data, options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染折线图（line）\r\n\t\t\trenderLineChart(data, options) {\r\n\t\t\t\tif (!this.$refs.chart) {\r\n\t\t\t\t\tconsole.error(\"图表容器未找到\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"渲染折线图数据:\", data);\r\n\r\n\t\t\t\tconst margin = { top: 20, right: 100, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\t// 创建 SVG 容器\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst labels = data.labels;\r\n\t\t\t\tconst datasets = data.datasets;\r\n\r\n\t\t\t\t// 清理数据\r\n\t\t\t\tconst cleanedLabels = labels.map(label =>\r\n\t\t\t\t\tlabel === undefined || label === null || label === \"Not Available\"\r\n\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t: label\r\n\t\t\t\t);\r\n\t\t\t\tconst cleanedDatasets = datasets.map(dataset => ({\r\n\t\t\t\t\t...dataset,\r\n\t\t\t\t\tdata: dataset.data.map(d =>\r\n\t\t\t\t\t\td === undefined || d === null || d === \"Not Available\" ? 0 : d\r\n\t\t\t\t\t)\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tconsole.log(\"清理后的 labels:\", cleanedLabels);\r\n\t\t\t\tconsole.log(\"清理后的 datasets:\", cleanedDatasets);\r\n\r\n\t\t\t\t// 设置 X 轴比例尺\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(cleanedLabels)\r\n\t\t\t\t\t.range([0, width])\r\n\t\t\t\t\t.padding(0.1);\r\n\r\n\t\t\t\t// 设置 Y 轴比例尺\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\tconsole.log(\"X 比例尺 domain:\", x.domain());\r\n\t\t\t\tconsole.log(\"X 比例尺 range:\", x.range());\r\n\t\t\t\tconsole.log(\"Y 比例尺 domain:\", y.domain());\r\n\t\t\t\tconsole.log(\"Y 比例尺 range:\", y.range());\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\");\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\t// 添加 X 轴标题\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", width / 2)\r\n\t\t\t\t\t.attr(\"y\", height + margin.bottom - 10)\r\n\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(options.scales.x.title.text);\r\n\r\n\t\t\t\t// 添加 Y 轴标题\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t\t.attr(\"x\", -height / 2)\r\n\t\t\t\t\t.attr(\"y\", -margin.left + 20)\r\n\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(options.scales.y.title.text);\r\n\r\n\t\t\t\t// 绘制折线\r\n\t\t\t\tcleanedDatasets.forEach(dataset => {\r\n\t\t\t\t\tconst line = d3\r\n\t\t\t\t\t\t.line()\r\n\t\t\t\t\t\t.x((d, i) => x(cleanedLabels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.y(d => y(d));\r\n\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t\t.datum(dataset.data)\r\n\t\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t\t.attr(\"stroke\", dataset.borderColor)\r\n\t\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t\t.attr(\"d\", line);\r\n\r\n\t\t\t\t\t// 添加数据点\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.selectAll(`.dot-${CSS.escape(dataset.label)}`)\r\n\t\t\t\t\t\t.data(dataset.data)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t.attr(\"cx\", (d, i) => x(cleanedLabels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.attr(\"cy\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"r\", 4)\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.borderColor);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加图例\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\r\n\r\n\t\t\t\tcleanedDatasets.forEach((dataset, index) => {\r\n\t\t\t\t\tconst legendItem = legend\r\n\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"transform\", `translate(0, ${index * 20})`);\r\n\r\n\t\t\t\t\t// 添加颜色方块\r\n\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"width\", 18)\r\n\t\t\t\t\t\t.attr(\"height\", 18)\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.borderColor);\r\n\r\n\t\t\t\t\t// 添加标签\r\n\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"x\", 24)\r\n\t\t\t\t\t\t.attr(\"y\", 9)\r\n\t\t\t\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t\t\t\t.text(dataset.label);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染柱状图（bar）\r\n\t\t\trenderBarChart(data, options) {\r\n\t\t\t\tif (!this.$refs.chart) {\r\n\t\t\t\t\tconsole.error(\"图表容器未找到\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"渲染柱状图数据:\", data);\r\n\r\n\t\t\t\tconst margin = { top: 20, right: 100, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\t// 创建 SVG 容器\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst labels = data.labels;\r\n\t\t\t\tconst datasets = data.datasets;\r\n\r\n\t\t\t\t// 清理数据\r\n\t\t\t\tconst cleanedLabels = labels.map(label =>\r\n\t\t\t\t\tlabel === undefined || label === null ? \"\" : label\r\n\t\t\t\t);\r\n\t\t\t\tconst cleanedDatasets = datasets.map(dataset => ({\r\n\t\t\t\t\t...dataset,\r\n\t\t\t\t\tdata: dataset.data.map(d => (d === undefined || d === null ? 0 : d))\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tconsole.log(\"清理后的 labels:\", cleanedLabels);\r\n\t\t\t\tconsole.log(\"清理后的 datasets:\", cleanedDatasets);\r\n\r\n\t\t\t\t// 设置 X 轴比例尺\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(cleanedLabels)\r\n\t\t\t\t\t.range([0, width])\r\n\t\t\t\t\t.padding(0.1);\r\n\r\n\t\t\t\t// 设置 Y 轴比例尺\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\tconsole.log(\"X 比例尺 domain:\", x.domain());\r\n\t\t\t\tconsole.log(\"X 比例尺 range:\", x.range());\r\n\t\t\t\tconsole.log(\"Y 比例尺 domain:\", y.domain());\r\n\t\t\t\tconsole.log(\"Y 比例尺 range:\", y.range());\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\");\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\t// 添加 X 轴标题\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", width / 2)\r\n\t\t\t\t\t.attr(\"y\", height + margin.bottom - 10)\r\n\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(options.scales.x.title.text);\r\n\r\n\t\t\t\t// 添加 Y 轴标题\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t\t.attr(\"x\", -height / 2)\r\n\t\t\t\t\t.attr(\"y\", -margin.left + 20)\r\n\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(options.scales.y.title.text);\r\n\r\n\t\t\t\t// 绘制柱状图\r\n\t\t\t\tcleanedDatasets.forEach(dataset => {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t\t\t.data(dataset.data)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t\t\t.attr(\"x\", (d, i) => x(cleanedLabels[i]))\r\n\t\t\t\t\t\t.attr(\"y\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t\t.attr(\"height\", d => height - y(d))\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.backgroundColor);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加图例\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\r\n\r\n\t\t\t\tcleanedDatasets.forEach((dataset, index) => {\r\n\t\t\t\t\tconst legendItem = legend\r\n\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"transform\", `translate(0, ${index * 20})`);\r\n\r\n\t\t\t\t\t// 添加颜色方块\r\n\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"width\", 18)\r\n\t\t\t\t\t\t.attr(\"height\", 18)\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.backgroundColor);\r\n\r\n\t\t\t\t\t// 添加标签\r\n\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"x\", 24)\r\n\t\t\t\t\t\t.attr(\"y\", 9)\r\n\t\t\t\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t\t\t\t.text(dataset.label);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染饼图（pie）\r\n\t\t\trenderPieChart(data, options) {\r\n\t\t\t\tconsole.log(\"渲染饼图数据:\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t#app {\r\n\t\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 60px;\r\n\t}\r\n\r\n\t.upload-section {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 80%;\r\n\t\theight: 150px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 800px;\r\n\t\theight: 400px;\r\n\t\tmargin-top: 20px;\r\n\t\tborder: 1px solid #ccc; /* 添加边框以便查看容器 */\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}