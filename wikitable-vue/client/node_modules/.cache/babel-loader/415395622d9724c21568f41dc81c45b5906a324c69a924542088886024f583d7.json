{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-52b8641a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"line-chart-container\",\n  ref: \"chartContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\LineChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"line-chart-container\" ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tdata: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => ({})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetup(props) {\r\n\t\t\tconst chartContainer = ref(null);\r\n\t\t\tlet chartInstance = null;\r\n\r\n\t\t\tconst initChart = () => {\r\n\t\t\t\tif (!chartContainer.value) return;\r\n\r\n\t\t\t\tchartInstance = echarts.init(chartContainer.value);\r\n\t\t\t\tupdateChart();\r\n\t\t\t};\r\n\r\n\t\t\tconst updateChart = () => {\r\n\t\t\t\tif (!chartInstance) return;\r\n\r\n\t\t\t\tconst baseOptions = {\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\ttrigger: \"axis\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\t\tdata: props.data.xAxis || []\r\n\t\t\t\t\t},\r\n\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\ttype: \"value\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseries: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: props.data.series || [],\r\n\t\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\t\t\tareaStyle: {\r\n\t\t\t\t\t\t\t\topacity: 0.3\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tcontainLabel: true,\r\n\t\t\t\t\t\tleft: \"3%\",\r\n\t\t\t\t\t\tright: \"3%\",\r\n\t\t\t\t\t\tbottom: \"3%\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tchartInstance.setOption({ ...baseOptions, ...props.options });\r\n\t\t\t\tchartInstance.resize();\r\n\t\t\t};\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tinitChart();\r\n\t\t\t\twindow.addEventListener(\"resize\", () => {\r\n\t\t\t\t\tif (chartInstance) chartInstance.resize();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\twatch(() => props.data, updateChart, { deep: true });\r\n\r\n\t\t\treturn { chartContainer };\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 200px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,sBAAsB;EAACC,GAAG,EAAC;;;uBAAtCC,mBAAA,CAA6D,OAA7DC,UAA6D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}