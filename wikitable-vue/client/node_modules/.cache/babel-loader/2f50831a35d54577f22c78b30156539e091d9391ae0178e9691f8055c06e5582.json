{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a89cbc96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"simple-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"pieContainer\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"barContainer\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"lineContainer\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"stackedContainer\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.handleTextClick && $setup.handleTextClick(...arguments);\n    }),\n    onMouseenter: _cache[1] || (_cache[1] = function () {\n      return $setup.handleTextHover && $setup.handleTextHover(...arguments);\n    }),\n    onMouseleave: _cache[2] || (_cache[2] = function () {\n      return $setup.resetHover && $setup.resetHover(...arguments);\n    })\n  }, _toDisplayString($setup.formatSimpleText(_ctx.processedField)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 饼图 (D3实现) \"), $setup.hasData && $setup.isValidPieData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"- (Pie Data Not Ready/Valid)\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 柱状图 (D3实现) \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"- (Bar Data Not Ready)\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 折线图 (D3实现) \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"- (Line Data Not Ready)\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'stacked-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 堆叠图 \"), true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <div v-else class=\\\"no-data\\\">-</div> \")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 5\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $setup.handleTextClick && $setup.handleTextClick(...arguments);\n    }),\n    onMouseenter: _cache[4] || (_cache[4] = function () {\n      return $setup.handleTextHover && $setup.handleTextHover(...arguments);\n    }),\n    onMouseleave: _cache[5] || (_cache[5] = function () {\n      return $setup.resetHover && $setup.resetHover(...arguments);\n    })\n  }, _toDisplayString($setup.formatSimpleText(_ctx.processedField)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","$props","visualization","_Fragment","_createElementVNode","onClick","_cache","$setup","handleTextClick","arguments","onMouseenter","handleTextHover","onMouseleave","resetHover","formatSimpleText","_ctx","processedField","isTextHovered","_hoisted_2","hasData","isValidPieData","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData && isValidPieData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"pieContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Pie Data Not Ready/Valid)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"barContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Bar Data Not Ready)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"lineContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Line Data Not Ready)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 堆叠图 -->\r\n\t\t<template v-else-if=\"visualization === 'stacked-chart'\">\r\n\t\t\t<div v-if=\"true\" class=\"d3-chart-container\" ref=\"stackedContainer\"></div>\r\n\t\t\t<!-- <div v-else class=\"no-data\">-</div> -->\r\n\t\t</template>\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { computed, ref, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tfield: {\r\n\t\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tvisualization: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tfieldKey: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunifiedMax: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"chartClick\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst hoveredIndex = ref(null);\r\n\t\t\tconst activeIndex = ref(null);\r\n\t\t\tconst isTextHovered = ref(false);\r\n\r\n\t\t\t// 容器引用\r\n\t\t\tconst pieContainer = ref(null);\r\n\t\t\tconst barContainer = ref(null);\r\n\t\t\tconst lineContainer = ref(null);\r\n\t\t\tconst stackedContainer = ref(null); // 确保这个 ref 被定义\r\n\r\n\t\t\t// 颜色定义\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#3498db\",\r\n\t\t\t\t\"#e74c3c\",\r\n\t\t\t\t\"#2ecc71\",\r\n\t\t\t\t\"#f39c12\",\r\n\t\t\t\t\"#9b59b6\",\r\n\t\t\t\t\"#1abc9c\",\r\n\t\t\t\t\"#d35400\",\r\n\t\t\t\t\"#8e44ad\",\r\n\t\t\t\t\"#c0392b\",\r\n\t\t\t\t\"#7f8c8d\"\r\n\t\t\t];\r\n\t\t\tconst remainderColor = \"#f0f0f0\";\r\n\r\n\t\t\t// --- START: 为堆叠图定义的固定真实数据 (来自你提供的 div1_InfoboxData for South Korea \"Export goods\") ---\r\n\t\t\tconst fixedStackedChartData = [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 15.35,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Integrated Circuits 15.35%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 12.81,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Machinery 12.81%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 11.34,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Vehicles and their parts 11.34%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 7.01,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Mineral Fuels 7.01%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 5.86,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Plastics 5.86%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 4.23,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Iron and Steel 4.23%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 4.16,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Instruments and Apparatus 4.16%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 3.85,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Organic Chemicals 3.85%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 35.39,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Others 35.39%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\t// --- END: 为堆叠图定义的固定真实数据 ---\r\n\r\n\t\t\tconst processedField = computed(() => {\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\tconst nameValueRegex =\r\n\t\t\t\t\t\t/^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/; // 更通用的名称匹配\r\n\t\t\t\t\treturn fixedStackedChartData\r\n\t\t\t\t\t\t.map(item => {\r\n\t\t\t\t\t\t\tlet name = \"Unknown\";\r\n\t\t\t\t\t\t\tlet value = 0;\r\n\t\t\t\t\t\t\tif (item.raw) {\r\n\t\t\t\t\t\t\t\tconst match = String(item.raw).match(nameValueRegex);\r\n\t\t\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\t\t\tname = match[1].trim();\r\n\t\t\t\t\t\t\t\t\tvalue = parseFloat(match[2]);\r\n\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\titem.value &&\r\n\t\t\t\t\t\t\t\t\ttypeof item.value === \"number\" &&\r\n\t\t\t\t\t\t\t\t\titem.type === \"percentage\"\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tname =\r\n\t\t\t\t\t\t\t\t\t\tString(item.raw)\r\n\t\t\t\t\t\t\t\t\t\t\t.split(String(item.value))[0]\r\n\t\t\t\t\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/:$/, \"\")\r\n\t\t\t\t\t\t\t\t\t\t\t.trim() || \"Category\";\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tname.toLowerCase() === \"others\" &&\r\n\t\t\t\t\t\t\t\t\t\titem.raw.toLowerCase().includes(\"others\")\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\tname = \"Others\"; // 修正Others提取\r\n\t\t\t\t\t\t\t\t\tvalue = item.value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit || \"%\",\r\n\t\t\t\t\t\t\t\ttype: item.type || \"percentage\"\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\titem =>\r\n\t\t\t\t\t\t\t\titem.name !== \"Unknown\" &&\r\n\t\t\t\t\t\t\t\titem.name !== \"Category\" &&\r\n\t\t\t\t\t\t\t\t!/^\\(\\d{4}\\)$/.test(item.raw)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!props.field) return null;\r\n\t\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\t\treturn props.field.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname:\r\n\t\t\t\t\t\t\t\t\titem.name ||\r\n\t\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t\t? item.raw.split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t\t\t: \"Item\"),\r\n\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\titem.value ??\r\n\t\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t\t? parseFloat(String(item.raw).match(/([\\d.]+)/)?.[0])\r\n\t\t\t\t\t\t\t\t\t\t: 0),\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\t\t\t\ttype: item.type,\r\n\t\t\t\t\t\t\t\tyear: item.year,\r\n\t\t\t\t\t\t\t\tcurrency: item.currency\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn { name: String(item), value: 0, raw: String(item) };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof props.field === \"object\" && props.field !== null) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname:\r\n\t\t\t\t\t\t\tprops.field.name ||\r\n\t\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t\t? props.field.raw.split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t: \"Item\"),\r\n\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\tprops.field.value ??\r\n\t\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t\t? parseFloat(String(props.field.raw).match(/([\\d.]+)/)?.[0])\r\n\t\t\t\t\t\t\t\t: 0),\r\n\t\t\t\t\t\traw: props.field.raw,\r\n\t\t\t\t\t\tunit: props.field.unit,\r\n\t\t\t\t\t\ttype: props.field.type,\r\n\t\t\t\t\t\tyear: props.field.year,\r\n\t\t\t\t\t\tcurrency: props.field.currency\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: String(props.field),\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\traw: String(props.field)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconst hasData = computed(() => {\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t// console.log(\"hasData check for stacked-chart, processedField.value:\", processedField.value);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value &&\r\n\t\t\t\t\t\tArray.isArray(processedField.value) &&\r\n\t\t\t\t\t\tprocessedField.value.length > 0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (!processedField.value) return false;\r\n\t\t\t\tif (Array.isArray(processedField.value))\r\n\t\t\t\t\treturn processedField.value.length > 0;\r\n\t\t\t\tif (typeof processedField.value === \"object\") {\r\n\t\t\t\t\tif (Object.keys(processedField.value).length === 0) return false; // 处理空对象 {}\r\n\t\t\t\t\t// 检查对象是否真的有数据，而不是只有 raw:\"-\" 等情况\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value.value !== undefined ||\r\n\t\t\t\t\t\t(typeof processedField.value.raw === \"string\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"-\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\tString(processedField.value).trim().length > 0 &&\r\n\t\t\t\t\tString(processedField.value).trim() !== \"-\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`\r\n\t\t\t\t);\r\n\t\t\t\twatch(\r\n\t\t\t\t\t() => [props.visualization, props.fieldKey, props.field],\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"SimpleChart WATCH - Processed field for STACKED chart:\",\r\n\t\t\t\t\t\t\t\tJSON.parse(JSON.stringify(processedField.value))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value // && isValidPieData.value // isValidPieData 需要定义或简化\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderPieChart.\");\r\n\t\t\t\t\t\t\t\t// renderPieChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"bar-chart\" && hasData.value) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderBarChart.\");\r\n\t\t\t\t\t\t\t\t// renderBarChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"line-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderLineChart.\");\r\n\t\t\t\t\t\t\t\t// renderLineChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"stacked-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\trenderStackedChart();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst isYearEntry = value => {\r\n\t\t\t\t// 保留，因为 pieData 可能用到\r\n\t\t\t\tif (typeof value !== \"string\") return false;\r\n\t\t\t\tconst trimmedValue = value.trim();\r\n\t\t\t\treturn (\r\n\t\t\t\t\t/^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) ||\r\n\t\t\t\t\t/^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst safeToNumber = (value, fieldKeyIgnored) => {\r\n\t\t\t\t// fieldKey 现在在内部固定数据时不太重要\r\n\t\t\t\tif (value === null || value === undefined) return 0;\r\n\t\t\t\tif (typeof value === \"number\") return value;\r\n\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\tconst yiMatch = value.match(/(-?[\\d.]+)亿/);\r\n\t\t\t\t\tif (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\r\n\t\t\t\t\tconst wanMatch = value.match(/(-?[\\d.]+)万/);\r\n\t\t\t\t\tif (wanMatch) return parseFloat(wanMatch[1]) * 10000;\r\n\t\t\t\t\tconst qianMatch = value.match(/(-?[\\d.]+)千/);\r\n\t\t\t\t\tif (qianMatch) return parseFloat(qianMatch[1]) * 1000;\r\n\t\t\t\t\tconst percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\r\n\t\t\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\t\t\tconst num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\r\n\t\t\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\") {\r\n\t\t\t\t\treturn safeToNumber(value.value || value.raw);\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\r\n\t\t\tconst renderPieChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderPieChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!pieContainer.value) return;\r\n\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(pieContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Pie chart disabled)\");\r\n\t\t\t\t// ... (原有饼图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderBarChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderBarChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!barContainer.value) return;\r\n\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(barContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Bar chart disabled)\");\r\n\t\t\t\t// ... (原有柱状图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderLineChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderLineChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!lineContainer.value) return;\r\n\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(lineContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Line chart disabled)\");\r\n\t\t\t\t// ... (原有折线图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderStackedChart = () => {\r\n\t\t\t\tif (!stackedContainer.value) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"renderStackedChart: stackedContainer ref is not available.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst dataForChart = processedField.value;\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart CALLED. Data for chart (from processedField):\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(dataForChart))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!Array.isArray(dataForChart) || dataForChart.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No valid data (dataForChart is empty or not an array). Clearing container.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No data for chart)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\t\t\tconst container = d3.select(stackedContainer.value);\r\n\t\t\t\t// 确保容器有有效尺寸\r\n\t\t\t\tlet width = stackedContainer.value.clientWidth;\r\n\t\t\t\tlet height = stackedContainer.value.clientHeight;\r\n\r\n\t\t\t\tif (width === 0 || height === 0) {\r\n\t\t\t\t\t// 尝试从父级获取尺寸或设置一个默认值，但这通常表明CSS布局问题\r\n\t\t\t\t\tconst parentBounds =\r\n\t\t\t\t\t\tstackedContainer.value.parentElement.getBoundingClientRect();\r\n\t\t\t\t\twidth = parentBounds.width > 0 ? parentBounds.width : 300; // 默认宽度\r\n\t\t\t\t\theight = parentBounds.height > 0 ? parentBounds.height : 150; // 默认高度\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// 可能需要强制设置容器尺寸，但这只是权宜之计\r\n\t\t\t\t\t// d3.select(stackedContainer.value).style(\"width\", `${width}px`).style(\"height\", `${height}px`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst margin = { top: 20, right: 150, bottom: 70, left: 50 };\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: Chart dimensions are invalid after applying margins.\",\r\n\t\t\t\t\t\t{ width, height, chartWidth, chartHeight }\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (Chart area too small)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst stackData = dataForChart\r\n\t\t\t\t\t.map(item => ({\r\n\t\t\t\t\t\tname: String(item.name || \"N/A\"),\r\n\t\t\t\t\t\tvalue: safeToNumber(item.value) // safeToNumber 现在不需要第二个参数\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.filter(d => d.value > 0);\r\n\r\n\t\t\t\tif (stackData.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No data with value > 0 to render after filtering.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No positive values)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart - Final stackData for D3:\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(stackData))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(stackData.map(d => d.name))\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.2);\r\n\r\n\t\t\t\tconst yMax = d3.max(stackData, d => d.value);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, yMax > 0 ? yMax : 100])\r\n\t\t\t\t\t.nice()\r\n\t\t\t\t\t.range([chartHeight, 0]);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${chartHeight})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\");\r\n\r\n\t\t\t\tsvg.append(\"g\").call(\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.axisLeft(y)\r\n\t\t\t\t\t\t.ticks(Math.min(5, Math.ceil(yMax / 5) || 1))\r\n\t\t\t\t\t\t.tickFormat(\r\n\t\t\t\t\t\t\td =>\r\n\t\t\t\t\t\t\t\t`${d.toFixed(props.type === \"percentage\" ? 1 : 0)}${\r\n\t\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".stack-bar\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"stack-bar\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name))\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"height\", d => chartHeight - y(d.value))\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.style(\"opacity\", 0.8)\r\n\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t.text(d => `${d.name}: ${d.value.toFixed(1)}%`);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".stack-value-label\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"stack-value-label\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name) + x.bandwidth() / 2)\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t.style(\"fill\", \"#333\")\r\n\t\t\t\t\t.text(d => `${d.value.toFixed(1)}%`);\r\n\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\r\n\t\t\t\t\t.attr(\"font-size\", 10)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t(d, i) => `translate(${chartWidth + 10},${i * 20})`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", 0)\r\n\t\t\t\t\t.attr(\"width\", 15)\r\n\t\t\t\t\t.attr(\"height\", 15)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length]);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t\t.attr(\"y\", 9.5)\r\n\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t.text(d =>\r\n\t\t\t\t\t\td.name.length > 15 ? d.name.substring(0, 13) + \"...\" : d.name\r\n\t\t\t\t\t); // 截断长文本\r\n\r\n\t\t\t\tconsole.log(\"renderStackedChart FINISHED drawing.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst formatSimpleText = value => {\r\n\t\t\t\tif (!value) return \"-\";\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tconst items = value.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tlet text = item.raw || item.value || JSON.stringify(item);\r\n\t\t\t\t\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\t\t\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn items.length > 2\r\n\t\t\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t\t\t: items.join(\"; \");\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\tlet text = value.raw || value.value || \"-\";\r\n\t\t\t\t\tif (value.unit) text += ` ${value.unit}`;\r\n\t\t\t\t\tif (value.year) text += ` (${value.year})`;\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\treturn value.toString().length > 50\r\n\t\t\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t\t\t: value.toString();\r\n\t\t\t};\r\n\r\n\t\t\tconst handleTextClick = () => {\r\n\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tdata: processedField.value,\r\n\t\t\t\t\tvalue: processedField.value\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tconst handleTextHover = () => {\r\n\t\t\t\tisTextHovered.value = true;\r\n\t\t\t};\r\n\t\t\tconst resetHover = () => {\r\n\t\t\t\tisTextHovered.value = false;\r\n\t\t\t};\r\n\r\n\t\t\t// isValidPieData 和 pieData 如果不渲染饼图，可以简化或移除\r\n\t\t\tconst isValidPieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return false; // 仅当是饼图时才计算\r\n\t\t\t\t// return pieData.value && pieData.value.length > 0 && pieData.value.every(item => typeof item.name === 'string' && typeof item.value === 'number');\r\n\t\t\t\treturn false; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\tconst pieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return []; // 仅当是饼图时才计算\r\n\t\t\t\t// ... (原有 pieData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\t// simpleBarData 和 lineData 也是如此\r\n\t\t\tconst simpleBarData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"bar-chart\") return [];\r\n\t\t\t\t// ... (原有 simpleBarData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\t\t\tconst lineData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"line-chart\") return [];\r\n\t\t\t\t// ... (原有 lineData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// Refs for containers\r\n\t\t\t\tpieContainer,\r\n\t\t\t\tbarContainer,\r\n\t\t\t\tlineContainer,\r\n\t\t\t\tstackedContainer,\r\n\r\n\t\t\t\t// Methods for text display (if used as fallback)\r\n\t\t\t\tformatSimpleText,\r\n\t\t\t\thandleTextClick,\r\n\t\t\t\thandleTextHover,\r\n\t\t\t\tresetHover,\r\n\t\t\t\tisTextHovered,\r\n\r\n\t\t\t\t// Computed properties needed for v-if or other logic\r\n\t\t\t\thasData, // hasData is now important\r\n\t\t\t\tisValidPieData // if pie chart is re-enabled\r\n\r\n\t\t\t\t// No need to return processedField, pieData, etc. if they are only used internally by render functions\r\n\t\t\t\t// and those render functions are called from watch/onMounted.\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -25px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.d3-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%; /* 确保容器占满父组件分配的空间 */\r\n\t\t/* min-height: 120px; */ /* 如果父组件高度不确定，可以设置最小高度 */\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden; /* 防止图例等溢出时影响布局 */\r\n\t}\r\n\r\n\t/* D3 tooltip样式 (如果你的D3 tooltip是动态添加到这个容器内的) */\r\n\t:deep(.d3-tooltip) {\r\n\t\t/* 使用 :deep() 如果 tooltip 是 D3 动态添加的子元素 */\r\n\t\tposition: absolute; /* 确保 tooltip 相对于容器定位 */\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tpointer-events: none;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tbackground: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%; /* 确保 no-data 提示能居中 */\r\n\t}\r\n\r\n\t/* Y轴和X轴的样式 (D3 通常会给轴线和文本添加 g, line, path, text 元素) */\r\n\t:deep(.tick text) {\r\n\t\t/* 使用 :deep() 影响 D3 生成的 SVG 元素 */\r\n\t\tfont-size: 9px; /* 调小刻度文字大小 */\r\n\t\tfill: #555;\r\n\t}\r\n\t:deep(.tick line) {\r\n\t\tstroke: #e0e0e0;\r\n\t}\r\n\t:deep(path.domain) {\r\n\t\t/* 轴线 */\r\n\t\tstroke: #aaa;\r\n\t}\r\n\r\n\t/* 条形图和标签的特定样式 (如果需要) */\r\n\t:deep(.stack-bar:hover) {\r\n\t\topacity: 1 !important; /* 鼠标悬停时更明显 */\r\n\t}\r\n\t:deep(.stack-value-label) {\r\n\t\tpointer-events: none; /* 防止标签干扰鼠标事件 */\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-text {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\t\t.d3-chart-container {\r\n\t\t\t/* min-height: 100px; */ /* 响应式调整 */\r\n\t\t}\r\n\t\t:deep(.tick text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t\t:deep(.legend text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}