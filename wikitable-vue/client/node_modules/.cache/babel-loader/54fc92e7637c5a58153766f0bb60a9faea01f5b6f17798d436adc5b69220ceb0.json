{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"table-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_9 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_10 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div>\", 9);\nconst _hoisted_23 = {\n  class: \"modal-content\"\n};\nconst _hoisted_24 = {\n  class: \"modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 表头 \"), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.processedTable1.title || \"表格1\"), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.processedTable2.title || \"表格2\"), 1 /* TEXT */), _createCommentVNode(\" 数据行 \"), $setup.hasData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: attr\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.showFullChart(attr, 'left')\n    }, [$setup.hasDataForAttribute($setup.processedTable1, attr) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createVNode($setup[\"SparklineChart\"], {\n      ref_for: true,\n      ref: \"leftCharts\",\n      data: $setup.processedTable1.timeSeriesData[attr],\n      \"compare-data\": $setup.processedTable2.timeSeriesData[attr],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.leftChartColor,\n      onChartMounted: chart => $setup.chartRefs1[attr] = chart\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\", \"onChartMounted\"])]), _createCommentVNode(\" <div class=\\\"stats-summary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t平均: {{ getAverage(processedTable1, attr) }} | 最大:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ getMax(processedTable1, attr) }}\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"无数据\"))], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(attr), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.showFullChart(attr, 'right')\n    }, [$setup.hasDataForAttribute($setup.processedTable2, attr) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"SparklineChart\"], {\n      ref_for: true,\n      ref: \"rightCharts\",\n      data: $setup.processedTable2.timeSeriesData[attr],\n      \"compare-data\": $setup.processedTable1.timeSeriesData[attr],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.rightChartColor,\n      onChartMounted: chart => $setup.chartRefs2[attr] = chart\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\", \"onChartMounted\"])]), _createCommentVNode(\" <div class=\\\"stats-summary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t平均: {{ getAverage(processedTable2, attr) }} | 最大:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ getMax(processedTable2, attr) }}\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"无数据\"))], 8 /* PROPS */, _hoisted_11)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 空状态下的行 \"), _hoisted_14], 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 完整图表弹窗 \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.hideFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"h3\", null, _toDisplayString($setup.currentAttribute), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.hideFullChart,\n    class: \"close-button\"\n  }, \"×\")]), _createVNode($setup[\"FullChart\"], {\n    data: $setup.currentChartData,\n    title: $setup.currentAttribute,\n    side: $setup.currentSide\n  }, null, 8 /* PROPS */, [\"data\", \"title\", \"side\"])])])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","key","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","$setup","processedTable1","title","_hoisted_4","_hoisted_5","processedTable2","hasData","_Fragment","_renderList","commonAttributes","attr","onClick","$event","showFullChart","hasDataForAttribute","_hoisted_7","_createVNode","ref_for","data","timeSeriesData","chartMaxWidth","chartMaxHeight","leftChartColor","onChartMounted","chart","chartRefs1","_hoisted_8","_hoisted_6","_hoisted_9","_hoisted_10","_hoisted_12","rightChartColor","chartRefs2","_hoisted_13","_hoisted_11","_hoisted_14","showFullChartModal","_withModifiers","hideFullChart","_hoisted_23","_hoisted_24","currentAttribute","currentChartData","side","currentSide"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\tref=\"leftCharts\"\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\"\r\n\t\t\t\t\t\t\t\t\t@chart-mounted=\"chart => (chartRefs1[attr] = chart)\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<!-- <div class=\"stats-summary\">\r\n\t\t\t\t\t\t\t\t平均: {{ getAverage(processedTable1, attr) }} | 最大:\r\n\t\t\t\t\t\t\t\t{{ getMax(processedTable1, attr) }}\r\n\t\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\tref=\"rightCharts\"\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\"\r\n\t\t\t\t\t\t\t\t\t@chart-mounted=\"chart => (chartRefs2[attr] = chart)\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<!-- <div class=\"stats-summary\">\r\n\t\t\t\t\t\t\t\t平均: {{ getAverage(processedTable2, attr) }} | 最大:\r\n\t\t\t\t\t\t\t\t{{ getMax(processedTable2, attr) }}\r\n\t\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:side=\"currentSide\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\tcomputed,\r\n\t\twatch,\r\n\t\tonMounted,\r\n\t\tonBeforeUnmount,\r\n\t\tdefineEmits,\r\n\t\tdefineExpose\r\n\t} from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 表格数据处理\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"表格1\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"表格2\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\r\n\t// 图表引用\r\n\tconst chartRefs1 = ref({});\r\n\tconst chartRefs2 = ref({});\r\n\r\n\t// 完整图表弹窗相关状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentChartData = ref({ type: \"line\", data: [] });\r\n\tconst currentSide = ref(\"left\");\r\n\r\n\t// 更新图表尺寸\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tconst containerWidth = containerRef.value.clientWidth;\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerWidth * 0.3);\r\n\t\t\t// 可以根据需要动态计算高度\r\n\t\t\tchartMaxHeight.value = 80;\r\n\t\t}\r\n\t}, 100);\r\n\r\n\tconst emit = defineEmits([\"tables-ready\", \"processing-error\"]);\r\n\r\n\t// 新增处理状态\r\n\tconst processingStatus = ref({\r\n\t\tisProcessing: false,\r\n\t\terror: null,\r\n\t\tlastUpdated: null\r\n\t});\r\n\r\n\t// 初始化尺寸和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t});\r\n\r\n\t// 修改后的处理函数\r\n\tconst processTables = async () => {\r\n\t\tprocessingStatus.value = {\r\n\t\t\tisProcessing: true,\r\n\t\t\terror: null,\r\n\t\t\tlastUpdated: null\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// 处理表格数据\r\n\t\t\tprocessedTable1.value = await parseTableToStandardJSON(\r\n\t\t\t\tprops.div1RawData,\r\n\t\t\t\t\"表格1\"\r\n\t\t\t);\r\n\t\t\tprocessedTable2.value = await parseTableToStandardJSON(\r\n\t\t\t\tprops.div3RawData,\r\n\t\t\t\t\"表格2\"\r\n\t\t\t);\r\n\r\n\t\t\t// 验证数据\r\n\t\t\tif (\r\n\t\t\t\t!processedTable1.value.timeSeriesData ||\r\n\t\t\t\t!processedTable2.value.timeSeriesData\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error(\"表格数据不完整\");\r\n\t\t\t}\r\n\r\n\t\t\t// 准备公共属性\r\n\t\t\tconst commonAttrs = computedCommonAttributes.value;\r\n\r\n\t\t\t// 发射事件\r\n\t\t\temit(\"tables-ready\", {\r\n\t\t\t\ttable1: { ...processedTable1.value },\r\n\t\t\t\ttable2: { ...processedTable2.value },\r\n\t\t\t\tcommonAttributes: commonAttrs\r\n\t\t\t});\r\n\r\n\t\t\tprocessingStatus.value = {\r\n\t\t\t\tisProcessing: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\tlastUpdated: new Date()\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tprocessingStatus.value = {\r\n\t\t\t\tisProcessing: false,\r\n\t\t\t\terror: error.message,\r\n\t\t\t\tlastUpdated: null\r\n\t\t\t};\r\n\t\t\temit(\"processing-error\", error.message);\r\n\t\t\tconsole.error(\"表格处理错误:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\t// 计算公共属性\r\n\tconst computedCommonAttributes = computed(() => {\r\n\t\tconst attrs1 = Object.keys(processedTable1.value.timeSeriesData || {});\r\n\t\tconst attrs2 = Object.keys(processedTable2.value.timeSeriesData || {});\r\n\t\treturn attrs1.filter(attr => attrs2.includes(attr));\r\n\t});\r\n\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tconst chartRef =\r\n\t\t\tside === \"left\" ? chartRefs1.value[attr] : chartRefs2.value[attr];\r\n\t\tconst chartType = chartRef?.chartType || \"line\";\r\n\r\n\t\tif (side === \"left\") {\r\n\t\t\tcurrentChartData.value = {\r\n\t\t\t\ttype: chartType,\r\n\t\t\t\tdata: processedTable1.value.timeSeriesData[attr] || []\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tcurrentChartData.value = {\r\n\t\t\t\ttype: chartType,\r\n\t\t\t\tdata: processedTable2.value.timeSeriesData[attr] || []\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.div1RawData &&\r\n\t\t\tprops.div3RawData &&\r\n\t\t\tprocessedTable1.value.columns.length > 0 &&\r\n\t\t\tprocessedTable2.value.columns.length > 0\r\n\t\t);\r\n\t});\r\n\r\n\tconst commonAttributes = computed(() => {\r\n\t\tconst attrs1 = processedTable1.value.rows || [];\r\n\t\tconst attrs2 = processedTable2.value.rows || [];\r\n\t\treturn attrs1.filter(\r\n\t\t\tattr =>\r\n\t\t\t\tattrs2.includes(attr) &&\r\n\t\t\t\t(hasDataForAttribute(processedTable1.value, attr) ||\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr))\r\n\t\t);\r\n\t});\r\n\r\n\tfunction parseTableToStandardJSON(html, defaultTitle = \"未命名表格\") {\r\n\t\tconst result = {\r\n\t\t\ttitle: extractTitleFromHTML(html) || defaultTitle,\r\n\t\t\trows: [],\r\n\t\t\tcolumns: [],\r\n\t\t\ttimeSeriesData: {}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headerCells = table.querySelector(\"tr\")?.children || [];\r\n\t\t\tresult.rows = Array.from(headerCells).map(cell => {\r\n\t\t\t\treturn cell.textContent\r\n\t\t\t\t\t.replace(/[\\n†*]/g, \"\")\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.replace(/\\s+/g, \" \");\r\n\t\t\t});\r\n\r\n\t\t\t// 检查是否有Year列\r\n\t\t\tconst yearColumnIndex = result.rows.findIndex(header =>\r\n\t\t\t\theader.toLowerCase().includes(\"year\")\r\n\t\t\t);\r\n\t\t\tconst hasYearColumn = yearColumnIndex !== -1;\r\n\r\n\t\t\t// 辅助函数：清理年份格式\r\n\t\t\tconst cleanYear = yearStr => {\r\n\t\t\t\tif (!yearStr) return null;\r\n\t\t\t\tlet cleaned = yearStr.toString().replace(/[†*]/g, \"\").trim();\r\n\t\t\t\tif (/^\\d{4}[\\u2013\\u2014-]\\d{2}$/.test(cleaned)) {\r\n\t\t\t\t\tconst startYear = cleaned.substring(0, 4);\r\n\t\t\t\t\treturn parseInt(startYear);\r\n\t\t\t\t}\r\n\t\t\t\tconst yearMatch = cleaned.match(/\\d{4}/);\r\n\t\t\t\treturn yearMatch ? parseInt(yearMatch[0]) : null;\r\n\t\t\t};\r\n\r\n\t\t\t// 提取数据行\r\n\t\t\tconst dataRows = Array.from(\r\n\t\t\t\ttable.querySelectorAll(\"tr:not(:first-child)\")\r\n\t\t\t);\r\n\r\n\t\t\tdataRows.forEach(row => {\r\n\t\t\t\tconst cells = Array.from(row.children);\r\n\t\t\t\tif (cells.length === 0) return;\r\n\r\n\t\t\t\tconst recordName = cells[0].textContent.trim();\r\n\t\t\t\tconst recordData = {};\r\n\r\n\t\t\t\tresult.rows.forEach((header, index) => {\r\n\t\t\t\t\tif (index < cells.length) {\r\n\t\t\t\t\t\tlet value = cells[index].textContent.trim();\r\n\t\t\t\t\t\tif (index === yearColumnIndex) {\r\n\t\t\t\t\t\t\tvalue = cleanYear(value);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvalue = smartValueConversion(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trecordData[header] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!hasYearColumn || (hasYearColumn && recordData.Year)) {\r\n\t\t\t\t\tresult.columns.push({\r\n\t\t\t\t\t\tname: recordName,\r\n\t\t\t\t\t\tdata: recordData\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (hasYearColumn && recordData.Year) {\r\n\t\t\t\t\t\tconst year = recordData.Year;\r\n\t\t\t\t\t\tresult.rows.forEach(header => {\r\n\t\t\t\t\t\t\tif (header === \"Year\" || typeof recordData[header] !== \"number\")\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\tif (!result.timeSeriesData[header]) {\r\n\t\t\t\t\t\t\t\tresult.timeSeriesData[header] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult.timeSeriesData[header].push({\r\n\t\t\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\t\t\tvalue: recordData[header],\r\n\t\t\t\t\t\t\t\trecordName: recordName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 对每个属性的时间序列数据按年份排序\r\n\t\t\tif (hasYearColumn) {\r\n\t\t\t\tObject.keys(result.timeSeriesData).forEach(attr => {\r\n\t\t\t\t\tresult.timeSeriesData[attr].sort((a, b) => a.year - b.year);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"解析后的表格数据:\", result);\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction smartValueConversion(rawValue) {\r\n\t\tif (!rawValue || [\"-\", \"—\", \"N/A\"].includes(rawValue)) return null;\r\n\t\tif (/^\\.\\d+$/.test(rawValue)) return parseFloat(rawValue);\r\n\t\tconst numericValue = parseFloat(rawValue.replace(/[^\\d.-]/g, \"\"));\r\n\t\tif (!isNaN(numericValue)) return numericValue;\r\n\t\tif (/(\\d{4}-\\d{2}-\\d{2})|(\\d{2}\\/\\d{2}\\/\\d{4})/.test(rawValue))\r\n\t\t\treturn rawValue;\r\n\t\tif ([\"true\", \"false\"].includes(rawValue.toLowerCase())) {\r\n\t\t\treturn rawValue.toLowerCase() === \"true\";\r\n\t\t}\r\n\t\treturn rawValue;\r\n\t}\r\n\r\n\tfunction extractTitleFromHTML(html) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn (\r\n\t\t\tdoc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null\r\n\t\t);\r\n\t}\r\n\r\n\tfunction hasDataForAttribute(table, attr) {\r\n\t\treturn table.timeSeriesData[attr]?.length > 0;\r\n\t}\r\n\r\n\tfunction getAverage(table, attr) {\r\n\t\tconst values = table.timeSeriesData[attr]?.map(item => item.value) || [];\r\n\t\treturn values.length\r\n\t\t\t? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(2)\r\n\t\t\t: \"N/A\";\r\n\t}\r\n\r\n\tfunction getMax(table, attr) {\r\n\t\tconst values = table.timeSeriesData[attr]?.map(item => item.value) || [];\r\n\t\treturn values.length ? Math.max(...values).toFixed(2) : \"N/A\";\r\n\t}\r\n\r\n\t// async function sendToBackend() {\r\n\t// \ttry {\r\n\t// \t\tconst response = await api.post(\"table_compare\", {\r\n\t// \t\t\ttable1: processedTable1.value,\r\n\t// \t\t\ttable2: processedTable2.value\r\n\t// \t\t});\r\n\t// \t\tconsole.log(\"分析结果:\", response);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.error(\"API请求失败:\", error);\r\n\t// \t}\r\n\t// }\r\n\t// 修改watch监听\r\n\twatch(\r\n\t\t[() => props.div1RawData, () => props.div3RawData],\r\n\t\t([newDiv1, newDiv3]) => {\r\n\t\t\tif (newDiv1 && newDiv3) {\r\n\t\t\t\tprocessTables();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// 暴露给父组件的方法\r\n\tdefineExpose({\r\n\t\tgetTableData: () => ({\r\n\t\t\ttable1: { ...processedTable1.value },\r\n\t\t\ttable2: { ...processedTable2.value },\r\n\t\t\tcommonAttributes: computedCommonAttributes.value,\r\n\t\t\tstatus: { ...processingStatus.value }\r\n\t\t}),\r\n\t\treprocessTables: processTables\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.stats-summary {\r\n\t\tmargin-top: 5px;\r\n\t\tfont-size: clamp(0.7rem, 1.5vw, 0.85rem);\r\n\t\tcolor: #34495e;\r\n\t\ttext-align: center;\r\n\t\tline-height: 1.3;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 5px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\twhite-space: normal;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.stats-summary {\r\n\t\t\tfont-size: 0.7rem;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.stats-summary {\r\n\t\t\tfont-size: 0.65rem;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}