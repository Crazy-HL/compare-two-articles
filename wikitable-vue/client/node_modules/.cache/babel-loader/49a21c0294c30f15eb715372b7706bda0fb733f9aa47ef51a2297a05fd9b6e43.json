{"ast":null,"code":"// chartUtils.js\nimport * as d3 from \"d3\";\n\n// 渲染折线图（line）\nexport function renderLineChart(chartRef, data, options) {\n  if (!chartRef) {\n    console.error(\"图表容器未找到\");\n    return;\n  }\n  console.log(\"渲染折线图数据:\", data);\n  const margin = {\n    top: 20,\n    right: 100,\n    bottom: 50,\n    left: 50\n  };\n  const width = 800 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  // 清空之前的图表\n  d3.select(chartRef).html(\"\");\n\n  // 创建 SVG 容器\n  const svg = d3.select(chartRef).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  const labels = data.labels;\n  const datasets = data.datasets;\n\n  // 清理数据\n  const cleanedLabels = labels.map(label => label === undefined || label === null ? \"\" : label);\n  const cleanedDatasets = datasets.map(dataset => ({\n    ...dataset,\n    data: dataset.data.map(d => d === undefined || d === null ? 0 : d)\n  }));\n  console.log(\"清理后的 labels:\", cleanedLabels);\n  console.log(\"清理后的 datasets:\", cleanedDatasets);\n\n  // 设置 X 轴比例尺\n  const x = d3.scaleBand().domain(cleanedLabels).range([0, width]).padding(0.1);\n\n  // 设置 Y 轴比例尺\n  const y = d3.scaleLinear().domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))]).range([height, 0]);\n  console.log(\"X 比例尺 domain:\", x.domain());\n  console.log(\"X 比例尺 range:\", x.range());\n  console.log(\"Y 比例尺 domain:\", y.domain());\n  console.log(\"Y 比例尺 range:\", y.range());\n\n  // 添加 X 轴\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n  // 添加 Y 轴\n  svg.append(\"g\").call(d3.axisLeft(y));\n\n  // 添加 X 轴标题\n  svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height + margin.bottom - 10).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n\n  // 添加 Y 轴标题\n  svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", -margin.left + 20).style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n\n  // 绘制折线\n  cleanedDatasets.forEach(dataset => {\n    const line = d3.line().x((d, i) => {\n      const xValue = x(cleanedLabels[i]) + x.bandwidth() / 2;\n      if (isNaN(xValue)) {\n        console.error(\"无效的 x 值:\", xValue, \"labels[i]:\", cleanedLabels[i]);\n      }\n      return xValue;\n    }).y(d => {\n      const yValue = y(d);\n      if (isNaN(yValue)) {\n        console.error(\"无效的 y 值:\", yValue, \"d:\", d);\n      }\n      return yValue;\n    });\n    svg.append(\"path\").datum(dataset.data).attr(\"fill\", \"none\").attr(\"stroke\", dataset.borderColor).attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // 添加数据点\n    svg.selectAll(`.dot-${CSS.escape(dataset.label)}`).data(dataset.data).enter().append(\"circle\").attr(\"cx\", (d, i) => {\n      const cxValue = x(cleanedLabels[i]) + x.bandwidth() / 2;\n      if (isNaN(cxValue)) {\n        console.error(\"无效的 cx 值:\", cxValue, \"labels[i]:\", cleanedLabels[i]);\n      }\n      return cxValue;\n    }).attr(\"cy\", d => {\n      const cyValue = y(d);\n      if (isNaN(cyValue)) {\n        console.error(\"无效的 cy 值:\", cyValue, \"d:\", d);\n      }\n      return cyValue;\n    }).attr(\"r\", 4).attr(\"fill\", dataset.borderColor);\n  });\n\n  // 添加图例\n  const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\n  cleanedDatasets.forEach((dataset, index) => {\n    const legendItem = legend.append(\"g\").attr(\"transform\", `translate(0, ${index * 20})`);\n\n    // 添加颜色方块\n    legendItem.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", dataset.borderColor);\n\n    // 添加标签\n    legendItem.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \"0.35em\").text(dataset.label);\n  });\n}\n\n// 渲染柱状图（bar）\nexport function renderBarChart(chartRef, data, options) {\n  if (!chartRef) {\n    console.error(\"图表容器未找到\");\n    return;\n  }\n  console.log(\"渲染柱状图数据:\", data);\n  const margin = {\n    top: 20,\n    right: 100,\n    bottom: 50,\n    left: 50\n  };\n  const width = 800 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  // 清空之前的图表\n  d3.select(chartRef).html(\"\");\n\n  // 创建 SVG 容器\n  const svg = d3.select(chartRef).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  const labels = data.labels;\n  const datasets = data.datasets;\n\n  // 清理数据\n  const cleanedLabels = labels.map(label => label === undefined || label === null ? \"\" : label);\n  const cleanedDatasets = datasets.map(dataset => ({\n    ...dataset,\n    data: dataset.data.map(d => d === undefined || d === null ? 0 : d)\n  }));\n  console.log(\"清理后的 labels:\", cleanedLabels);\n  console.log(\"清理后的 datasets:\", cleanedDatasets);\n\n  // 设置 X 轴比例尺\n  const x = d3.scaleBand().domain(cleanedLabels).range([0, width]).padding(0.1);\n\n  // 设置 Y 轴比例尺\n  const y = d3.scaleLinear().domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))]).range([height, 0]);\n  console.log(\"X 比例尺 domain:\", x.domain());\n  console.log(\"X 比例尺 range:\", x.range());\n  console.log(\"Y 比例尺 domain:\", y.domain());\n  console.log(\"Y 比例尺 range:\", y.range());\n\n  // 添加 X 轴\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n  // 添加 Y 轴\n  svg.append(\"g\").call(d3.axisLeft(y));\n\n  // 添加 X 轴标题\n  svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height + margin.bottom - 10).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n\n  // 添加 Y 轴标题\n  svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", -margin.left + 20).style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n\n  // 绘制柱状图\n  cleanedDatasets.forEach(dataset => {\n    svg.selectAll(\".bar\").data(dataset.data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (d, i) => x(cleanedLabels[i])).attr(\"y\", d => y(d)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - y(d)).attr(\"fill\", dataset.backgroundColor);\n  });\n\n  // 添加图例\n  const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\n  cleanedDatasets.forEach((dataset, index) => {\n    const legendItem = legend.append(\"g\").attr(\"transform\", `translate(0, ${index * 20})`);\n\n    // 添加颜色方块\n    legendItem.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", dataset.backgroundColor);\n\n    // 添加标签\n    legendItem.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \"0.35em\").text(dataset.label);\n  });\n}\n\n// 渲染饼图（pie）\nexport function renderPieChart(chartRef, data, options) {\n  console.log(\"渲染饼图数据:\", data);\n}\n\n// 渲染非可视化数据的默认占位图表\nexport function renderNonVisualChart(chartRef, data, options) {\n  if (!chartRef) {\n    console.error(\"图表容器未找到\");\n    return;\n  }\n  console.log(\"渲染非可视化数据图表:\", data);\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  };\n  const width = 300 - margin.left - margin.right; // 图表宽度\n  const height = 200 - margin.top - margin.bottom; // 图表高度\n\n  // 清空容器，确保重新渲染\n  d3.select(chartRef).html(\"\");\n\n  // 创建 SVG 容器\n  const svg = d3.select(chartRef).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n  // 添加背景矩形\n  svg.append(\"rect\").attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"#f8f9fa\") // 轻灰色背景\n  .attr(\"rx\", 12) // 圆角边框\n  .attr(\"ry\", 12).style(\"stroke\", \"#ccc\") // 边框颜色\n  .style(\"stroke-width\", 1);\n\n  // 添加占位文本\n  svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2 - 10).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"16px\").attr(\"fill\", \"#555\").style(\"font-weight\", \"bold\").text(\"数据不可视化\");\n\n  // 添加可选的提示信息\n  if (options?.message) {\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2 + 20).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"14px\").attr(\"fill\", \"#777\").text(options.message);\n  }\n}","map":{"version":3,"names":["d3","renderLineChart","chartRef","data","options","console","error","log","margin","top","right","bottom","left","width","height","select","html","svg","append","attr","labels","datasets","cleanedLabels","map","label","undefined","cleanedDatasets","dataset","d","x","scaleBand","domain","range","padding","y","scaleLinear","max","flatMap","call","axisBottom","selectAll","style","axisLeft","text","scales","title","forEach","line","i","xValue","bandwidth","isNaN","yValue","datum","borderColor","CSS","escape","enter","cxValue","cyValue","legend","index","legendItem","renderBarChart","backgroundColor","renderPieChart","renderNonVisualChart","message"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/chartUtils.js"],"sourcesContent":["// chartUtils.js\r\nimport * as d3 from \"d3\";\r\n\r\n// 渲染折线图（line）\r\nexport function renderLineChart(chartRef, data, options) {\r\n    if (!chartRef) {\r\n        console.error(\"图表容器未找到\");\r\n        return;\r\n    }\r\n\r\n    console.log(\"渲染折线图数据:\", data);\r\n\r\n    const margin = { top: 20, right: 100, bottom: 50, left: 50 };\r\n    const width = 800 - margin.left - margin.right;\r\n    const height = 400 - margin.top - margin.bottom;\r\n\r\n    // 清空之前的图表\r\n    d3.select(chartRef).html(\"\");\r\n\r\n    // 创建 SVG 容器\r\n    const svg = d3\r\n        .select(chartRef)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const labels = data.labels;\r\n    const datasets = data.datasets;\r\n\r\n    // 清理数据\r\n    const cleanedLabels = labels.map(label =>\r\n        label === undefined || label === null ? \"\" : label\r\n    );\r\n    const cleanedDatasets = datasets.map(dataset => ({\r\n        ...dataset,\r\n        data: dataset.data.map(d => (d === undefined || d === null ? 0 : d))\r\n    }));\r\n\r\n    console.log(\"清理后的 labels:\", cleanedLabels);\r\n    console.log(\"清理后的 datasets:\", cleanedDatasets);\r\n\r\n    // 设置 X 轴比例尺\r\n    const x = d3\r\n        .scaleBand()\r\n        .domain(cleanedLabels)\r\n        .range([0, width])\r\n        .padding(0.1);\r\n\r\n    // 设置 Y 轴比例尺\r\n    const y = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))])\r\n        .range([height, 0]);\r\n\r\n    console.log(\"X 比例尺 domain:\", x.domain());\r\n    console.log(\"X 比例尺 range:\", x.range());\r\n    console.log(\"Y 比例尺 domain:\", y.domain());\r\n    console.log(\"Y 比例尺 range:\", y.range());\r\n\r\n    // 添加 X 轴\r\n    svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(0,${height})`)\r\n        .call(d3.axisBottom(x))\r\n        .selectAll(\"text\")\r\n        .attr(\"transform\", \"rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n    // 添加 Y 轴\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    // 添加 X 轴标题\r\n    svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width / 2)\r\n        .attr(\"y\", height + margin.bottom - 10)\r\n        .style(\"text-anchor\", \"middle\")\r\n        .text(options.scales.x.title.text);\r\n\r\n    // 添加 Y 轴标题\r\n    svg\r\n        .append(\"text\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .attr(\"x\", -height / 2)\r\n        .attr(\"y\", -margin.left + 20)\r\n        .style(\"text-anchor\", \"middle\")\r\n        .text(options.scales.y.title.text);\r\n\r\n    // 绘制折线\r\n    cleanedDatasets.forEach(dataset => {\r\n        const line = d3\r\n            .line()\r\n            .x((d, i) => {\r\n                const xValue = x(cleanedLabels[i]) + x.bandwidth() / 2;\r\n                if (isNaN(xValue)) {\r\n                    console.error(\r\n                        \"无效的 x 值:\",\r\n                        xValue,\r\n                        \"labels[i]:\",\r\n                        cleanedLabels[i]\r\n                    );\r\n                }\r\n                return xValue;\r\n            })\r\n            .y(d => {\r\n                const yValue = y(d);\r\n                if (isNaN(yValue)) {\r\n                    console.error(\"无效的 y 值:\", yValue, \"d:\", d);\r\n                }\r\n                return yValue;\r\n            });\r\n\r\n        svg\r\n            .append(\"path\")\r\n            .datum(dataset.data)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", dataset.borderColor)\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"d\", line);\r\n\r\n        // 添加数据点\r\n        svg\r\n            .selectAll(`.dot-${CSS.escape(dataset.label)}`)\r\n            .data(dataset.data)\r\n            .enter()\r\n            .append(\"circle\")\r\n            .attr(\"cx\", (d, i) => {\r\n                const cxValue = x(cleanedLabels[i]) + x.bandwidth() / 2;\r\n                if (isNaN(cxValue)) {\r\n                    console.error(\r\n                        \"无效的 cx 值:\",\r\n                        cxValue,\r\n                        \"labels[i]:\",\r\n                        cleanedLabels[i]\r\n                    );\r\n                }\r\n                return cxValue;\r\n            })\r\n            .attr(\"cy\", d => {\r\n                const cyValue = y(d);\r\n                if (isNaN(cyValue)) {\r\n                    console.error(\"无效的 cy 值:\", cyValue, \"d:\", d);\r\n                }\r\n                return cyValue;\r\n            })\r\n            .attr(\"r\", 4)\r\n            .attr(\"fill\", dataset.borderColor);\r\n    });\r\n\r\n    // 添加图例\r\n    const legend = svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"legend\")\r\n        .attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\r\n\r\n    cleanedDatasets.forEach((dataset, index) => {\r\n        const legendItem = legend\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${index * 20})`);\r\n\r\n        // 添加颜色方块\r\n        legendItem\r\n            .append(\"rect\")\r\n            .attr(\"width\", 18)\r\n            .attr(\"height\", 18)\r\n            .attr(\"fill\", dataset.borderColor);\r\n\r\n        // 添加标签\r\n        legendItem\r\n            .append(\"text\")\r\n            .attr(\"x\", 24)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(dataset.label);\r\n    });\r\n}\r\n\r\n// 渲染柱状图（bar）\r\nexport function renderBarChart(chartRef, data, options) {\r\n    if (!chartRef) {\r\n        console.error(\"图表容器未找到\");\r\n        return;\r\n    }\r\n\r\n    console.log(\"渲染柱状图数据:\", data);\r\n\r\n    const margin = { top: 20, right: 100, bottom: 50, left: 50 };\r\n    const width = 800 - margin.left - margin.right;\r\n    const height = 400 - margin.top - margin.bottom;\r\n\r\n    // 清空之前的图表\r\n    d3.select(chartRef).html(\"\");\r\n\r\n    // 创建 SVG 容器\r\n    const svg = d3\r\n        .select(chartRef)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const labels = data.labels;\r\n    const datasets = data.datasets;\r\n\r\n    // 清理数据\r\n    const cleanedLabels = labels.map(label =>\r\n        label === undefined || label === null ? \"\" : label\r\n    );\r\n    const cleanedDatasets = datasets.map(dataset => ({\r\n        ...dataset,\r\n        data: dataset.data.map(d => (d === undefined || d === null ? 0 : d))\r\n    }));\r\n\r\n    console.log(\"清理后的 labels:\", cleanedLabels);\r\n    console.log(\"清理后的 datasets:\", cleanedDatasets);\r\n\r\n    // 设置 X 轴比例尺\r\n    const x = d3\r\n        .scaleBand()\r\n        .domain(cleanedLabels)\r\n        .range([0, width])\r\n        .padding(0.1);\r\n\r\n    // 设置 Y 轴比例尺\r\n    const y = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(cleanedDatasets.flatMap(d => d.data))])\r\n        .range([height, 0]);\r\n\r\n    console.log(\"X 比例尺 domain:\", x.domain());\r\n    console.log(\"X 比例尺 range:\", x.range());\r\n    console.log(\"Y 比例尺 domain:\", y.domain());\r\n    console.log(\"Y 比例尺 range:\", y.range());\r\n\r\n    // 添加 X 轴\r\n    svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(0,${height})`)\r\n        .call(d3.axisBottom(x))\r\n        .selectAll(\"text\")\r\n        .attr(\"transform\", \"rotate(-45)\")\r\n        .style(\"text-anchor\", \"end\");\r\n\r\n    // 添加 Y 轴\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    // 添加 X 轴标题\r\n    svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width / 2)\r\n        .attr(\"y\", height + margin.bottom - 10)\r\n        .style(\"text-anchor\", \"middle\")\r\n        .text(options.scales.x.title.text);\r\n\r\n    // 添加 Y 轴标题\r\n    svg\r\n        .append(\"text\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .attr(\"x\", -height / 2)\r\n        .attr(\"y\", -margin.left + 20)\r\n        .style(\"text-anchor\", \"middle\")\r\n        .text(options.scales.y.title.text);\r\n\r\n    // 绘制柱状图\r\n    cleanedDatasets.forEach(dataset => {\r\n        svg\r\n            .selectAll(\".bar\")\r\n            .data(dataset.data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\")\r\n            .attr(\"x\", (d, i) => x(cleanedLabels[i]))\r\n            .attr(\"y\", d => y(d))\r\n            .attr(\"width\", x.bandwidth())\r\n            .attr(\"height\", d => height - y(d))\r\n            .attr(\"fill\", dataset.backgroundColor);\r\n    });\r\n\r\n    // 添加图例\r\n    const legend = svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"legend\")\r\n        .attr(\"transform\", `translate(${width + margin.right - 100}, 20)`);\r\n\r\n    cleanedDatasets.forEach((dataset, index) => {\r\n        const legendItem = legend\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${index * 20})`);\r\n\r\n        // 添加颜色方块\r\n        legendItem\r\n            .append(\"rect\")\r\n            .attr(\"width\", 18)\r\n            .attr(\"height\", 18)\r\n            .attr(\"fill\", dataset.backgroundColor);\r\n\r\n        // 添加标签\r\n        legendItem\r\n            .append(\"text\")\r\n            .attr(\"x\", 24)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(dataset.label);\r\n    });\r\n}\r\n\r\n// 渲染饼图（pie）\r\nexport function renderPieChart(chartRef, data, options) {\r\n    console.log(\"渲染饼图数据:\", data);\r\n}\r\n\r\n// 渲染非可视化数据的默认占位图表\r\nexport function renderNonVisualChart(chartRef, data, options) {\r\n    if (!chartRef) {\r\n        console.error(\"图表容器未找到\");\r\n        return;\r\n    }\r\n\r\n    console.log(\"渲染非可视化数据图表:\", data);\r\n\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n    const width = 300 - margin.left - margin.right; // 图表宽度\r\n    const height = 200 - margin.top - margin.bottom; // 图表高度\r\n\r\n    // 清空容器，确保重新渲染\r\n    d3.select(chartRef).html(\"\");\r\n\r\n    // 创建 SVG 容器\r\n    const svg = d3\r\n        .select(chartRef)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    // 添加背景矩形\r\n    svg.append(\"rect\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"fill\", \"#f8f9fa\") // 轻灰色背景\r\n        .attr(\"rx\", 12) // 圆角边框\r\n        .attr(\"ry\", 12)\r\n        .style(\"stroke\", \"#ccc\") // 边框颜色\r\n        .style(\"stroke-width\", 1);\r\n\r\n    // 添加占位文本\r\n    svg.append(\"text\")\r\n        .attr(\"x\", width / 2)\r\n        .attr(\"y\", height / 2 - 10)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"font-size\", \"16px\")\r\n        .attr(\"fill\", \"#555\")\r\n        .style(\"font-weight\", \"bold\")\r\n        .text(\"数据不可视化\");\r\n\r\n    // 添加可选的提示信息\r\n    if (options?.message) {\r\n        svg.append(\"text\")\r\n            .attr(\"x\", width / 2)\r\n            .attr(\"y\", height / 2 + 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"14px\")\r\n            .attr(\"fill\", \"#777\")\r\n            .text(options.message);\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}