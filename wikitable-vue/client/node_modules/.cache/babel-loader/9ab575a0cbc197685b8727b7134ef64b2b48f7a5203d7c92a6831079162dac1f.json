{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'BarChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n      validator: data => {\n        // 验证数据格式：[{name, value}]\n        return data.every(item => item.name && !isNaN(item.value));\n      }\n    },\n    title: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n    const initChart = () => {\n      if (!chartEl.value || props.data.length === 0) return;\n      chartInstance = echarts.init(chartEl.value);\n      const option = {\n        title: {\n          text: props.title,\n          left: \"center\",\n          top: 10,\n          textStyle: {\n            fontSize: 14\n          }\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        xAxis: {\n          type: \"category\",\n          data: props.data.map(item => item.name),\n          axisLabel: {\n            rotate: 45,\n            interval: 0\n          }\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          name: \"值\",\n          type: \"bar\",\n          data: props.data.map(item => item.value),\n          itemStyle: {\n            color: \"#5470c6\"\n          }\n        }]\n      };\n      chartInstance.setOption(option);\n    };\n    onMounted(() => {\n      initChart();\n      window.addEventListener(\"resize\", () => chartInstance?.resize());\n    });\n    watch(() => [props.data, props.title], initChart, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart,\n      ref,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","echarts","props","__props","chartEl","chartInstance","initChart","value","data","length","init","option","title","text","left","top","textStyle","fontSize","tooltip","trigger","axisPointer","type","xAxis","map","item","name","axisLabel","rotate","interval","yAxis","series","itemStyle","color","setOption","window","addEventListener","resize","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/BarChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"bar-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: data => {\r\n\t\t\t\t// 验证数据格式：[{name, value}]\r\n\t\t\t\treturn data.every(item => item.name && !isNaN(item.value));\r\n\t\t\t}\r\n\t\t},\r\n\t\ttitle: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value || props.data.length === 0) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: props.title,\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttop: 10,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 14\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\taxisPointer: {\r\n\t\t\t\t\ttype: \"shadow\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: props.data.map(item => item.name),\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\trotate: 45,\r\n\t\t\t\t\tinterval: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\"\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"值\",\r\n\t\t\t\t\ttype: \"bar\",\r\n\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: \"#5470c6\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(() => [props.data, props.title], initChart, { deep: true });\r\n</script>\r\n\r\n<style scoped>\r\n\t.bar-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAKC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAUZ;IAEF,MAAMC,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,IAAIO,aAAa,GAAG,IAAI;IAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACF,OAAO,CAACG,KAAK,IAAIL,KAAK,CAACM,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAE/CJ,aAAa,GAAGJ,OAAO,CAACS,IAAI,CAACN,OAAO,CAACG,KAAK,CAAC;MAE3C,MAAMI,MAAM,GAAG;QACdC,KAAK,EAAE;UACNC,IAAI,EAAEX,KAAK,CAACU,KAAK;UACjBE,IAAI,EAAE,QAAQ;UACdC,GAAG,EAAE,EAAE;UACPC,SAAS,EAAE;YACVC,QAAQ,EAAE;UACX;QACD,CAAC;QACDC,OAAO,EAAE;UACRC,OAAO,EAAE,MAAM;UACfC,WAAW,EAAE;YACZC,IAAI,EAAE;UACP;QACD,CAAC;QACDC,KAAK,EAAE;UACND,IAAI,EAAE,UAAU;UAChBb,IAAI,EAAEN,KAAK,CAACM,IAAI,CAACe,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;UACvCC,SAAS,EAAE;YACVC,MAAM,EAAE,EAAE;YACVC,QAAQ,EAAE;UACX;QACD,CAAC;QACDC,KAAK,EAAE;UACNR,IAAI,EAAE;QACP,CAAC;QACDS,MAAM,EAAE,CACP;UACCL,IAAI,EAAE,GAAG;UACTJ,IAAI,EAAE,KAAK;UACXb,IAAI,EAAEN,KAAK,CAACM,IAAI,CAACe,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACjB,KAAK,CAAC;UACxCwB,SAAS,EAAE;YACVC,KAAK,EAAE;UACR;QACD,CAAC;MAEH,CAAC;MAED3B,aAAa,CAAC4B,SAAS,CAACtB,MAAM,CAAC;IAChC,CAAC;IAEDZ,SAAS,CAAC,MAAM;MACfO,SAAS,CAAC,CAAC;MACX4B,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM9B,aAAa,EAAE+B,MAAM,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC;IAEFpC,KAAK,CAAC,MAAM,CAACE,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACU,KAAK,CAAC,EAAEN,SAAS,EAAE;MAAE+B,IAAI,EAAE;IAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}