{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\n\n// 原有状态\n\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n\n    // 新增状态\n    const comparisonResult = ref(null);\n    const isComparing = ref(false);\n\n    // 计算属性\n    const canCompare = computed(() => {\n      return div1RawData.value && div3RawData.value && div1RawData.value.trim() && div3RawData.value.trim();\n    });\n    const statusMessage = computed(() => {\n      if (!div1RawData.value && !div3RawData.value) return \"⏳ 请先加载左右两篇文章\";\n      if (!div1RawData.value) return \"⏳ 请加载左侧文章\";\n      if (!div3RawData.value) return \"⏳ 请加载右侧文章\";\n      return \"✓ 已准备好对比\";\n    });\n    const statusClass = computed(() => ({\n      \"status-ready\": canCompare.value,\n      \"status-waiting\": !canCompare.value\n    }));\n\n    // 原有事件处理\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n\n    // 生命周期\n    onMounted(() => {\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n    });\n\n    // 核心方法 - 智能对比\n    const autoCompareArticles = async () => {\n      if (!canCompare.value || isComparing.value) return;\n      isComparing.value = true;\n      addChatMessage(\"system\", \"开始智能对比两篇文章内容...\");\n      try {\n        api.post(\"wiki_compare\", {\n          left_html: div1RawData.value,\n          right_html: div3RawData.value\n        }, response => {\n          if (response?.success) {\n            comparisonResult.value = processComparisonResult(response.result);\n            addChatMessage(\"system\", `对比完成！发现 ${response.result.key_differences?.length || 0} 个关键差异`);\n          } else {\n            throw new Error(response?.error || \"对比服务返回异常\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比失败:\", error);\n        addChatMessage(\"system\", `对比失败: ${error.message}`);\n      } finally {\n        isComparing.value = false;\n      }\n    };\n\n    // 辅助方法\n    function processComparisonResult(result) {\n      // 确保结构符合前端预期\n      if (!result.structure) {\n        result.structure = [];\n      }\n\n      // 添加关键差异点作为单独部分\n      if (result.key_differences?.length) {\n        result.structure.push({\n          type: \"key_differences\",\n          title: \"关键差异\",\n          items: result.key_differences\n        });\n      }\n      return result;\n    }\n    function addChatMessage(role, content) {\n      chatHistory.value.push({\n        role,\n        content: formatMessageContent(content)\n      });\n    }\n    function formatMessageContent(text) {\n      return text.replace(/### (.*)/g, \"<h3>$1</h3>\").replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\n/g, \"<br>\").replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\").replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n    }\n\n    // 保留原有所有方法不变\n    function handleSelection(data, source) {\n      if (!data?.content) return;\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n\n      // 自动触发对比（当两侧都有数据时）\n      if (div1RawData.value && div3RawData.value) {\n        autoCompareArticles();\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const handleDragStart = event => {\n      event.dataTransfer.setData(\"application/json\", JSON.stringify({\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }));\n    };\n    const handleDrop = event => {\n      event.preventDefault();\n      const data = event.dataTransfer.getData(\"application/json\");\n      if (data) {\n        try {\n          const {\n            chartData,\n            chartType\n          } = JSON.parse(data);\n          currentChartData.value = chartData;\n          currentChartType.value = chartType;\n          analyzeChart(chartData, chartType);\n        } catch (error) {\n          console.error(\"解析拖拽数据失败:\", error);\n        }\n      }\n    };\n    const analyzeChart = (chartData, chartType) => {\n      api.post(\"analyze_chart\", {\n        chartData,\n        chartType\n      }, response => {\n        if (response?.analysis) {\n          addChatMessage(\"assistant\", response.analysis);\n        } else {\n          addChatMessage(\"assistant\", \"图表分析失败，数据格式不正确\");\n        }\n      }, error => {\n        console.error(\"图表分析失败:\", error);\n        addChatMessage(\"assistant\", \"图表分析失败，请稍后重试\");\n      });\n    };\n    const askQuestion = () => {\n      if (!userQuestion.value.trim()) {\n        alert(\"请输入问题内容！\");\n        return;\n      }\n      addChatMessage(\"user\", userQuestion.value);\n      userQuestion.value = \"\";\n      api.post(\"gpt_ask_chart\", {\n        question: userQuestion.value,\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }, response => {\n        addChatMessage(\"assistant\", response.answer);\n      }, error => {\n        console.error(\"请求失败:\", error);\n        addChatMessage(\"assistant\", \"请求失败，请稍后重试\");\n      });\n    };\n    async function compareTexts() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先在左右文章中选择要对比的文本！\");\n        return;\n      }\n      addChatMessage(\"system\", \"开始对比选中文本...\");\n      try {\n        api.post(\"gpt_compare\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data?.result) {\n            addChatMessage(\"assistant\", data.result);\n          } else {\n            addChatMessage(\"assistant\", \"文本对比失败\");\n          }\n        });\n      } catch (error) {\n        console.error(\"对比失败:\", error);\n        addChatMessage(\"assistant\", \"文本对比失败\");\n      }\n    }\n    async function mergedJson() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先在左右文章中选择要合并的内容！\");\n        return;\n      }\n      addChatMessage(\"system\", \"开始合并数据...\");\n      try {\n        api.post(\"merged_json\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data.error) {\n            addChatMessage(\"assistant\", `合并失败: ${data.message}`);\n            return;\n          }\n          currentChartData.value = data.json_data;\n          currentChartType.value = data.chart_classification;\n          if (data.yes_no === \"no\" || !data.json_data) {\n            renderNonVisualChart(\".chart-container\", data, {\n              message: \"数据无法合并\"\n            });\n            return;\n          }\n          renderChart(data.json_data, data.chart_classification);\n          bus.emit(\"updateChart1\", {\n            divId: \"div1\",\n            jsonData: data.div1_json,\n            chartType: data.chart_classification\n          });\n          bus.emit(\"updateChart3\", {\n            divId: \"div3\",\n            jsonData: data.div3_json,\n            chartType: data.chart_classification\n          });\n          addChatMessage(\"assistant\", \"数据合并完成，已生成可视化图表\");\n        });\n      } catch (error) {\n        console.error(\"合并失败:\", error);\n        addChatMessage(\"assistant\", \"数据合并失败\");\n      }\n    }\n    function renderChart(rawJsonData, chartType) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\") {\n        renderNonVisualChart(\".chart-container\", {\n          message: \"JSON数据无效\"\n        });\n        return;\n      }\n      const chartContainer = document.querySelector(\".chart-container\");\n      if (!chartContainer) return;\n      switch (chartType) {\n        case \"Line Chart\":\n          renderLineChart(chartContainer, rawJsonData.data, rawJsonData.options);\n          break;\n        case \"Bar Chart\":\n          renderBarChart(chartContainer, rawJsonData);\n          break;\n        case \"Pie Chart\":\n          renderPieChart(chartContainer, rawJsonData.data, rawJsonData.options);\n          break;\n        case \"Stacked Bar Chart\":\n          renderStackedBarChart(chartContainer, rawJsonData.data, rawJsonData.options);\n          break;\n        case \"Radar Chart\":\n          renderRadarChart(chartContainer, rawJsonData);\n          break;\n        case \"Scatter Chart\":\n          renderScatterChart(chartContainer, rawJsonData);\n          break;\n        default:\n          console.error(\"未知图表类型:\", chartType);\n          renderNonVisualChart(chartContainer, {\n            message: `不支持 ${chartType} 图表类型`\n          });\n      }\n    }\n    const handleAttributeComparison = async _ref2 => {\n      let {\n        fieldKey,\n        leftData,\n        rightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref2;\n      addChatMessage(\"system\", `正在对比属性: <strong>${fieldKey}</strong> (${fieldLabel})`);\n      try {\n        api.post(\"analyze_chart\", {\n          chartData: {\n            leftData,\n            rightData,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType\n          },\n          chartType: \"comparison\"\n        }, response => {\n          if (response?.analysis) {\n            addChatMessage(\"assistant\", response.analysis);\n          } else {\n            throw new Error(\"无效的响应格式\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"属性对比失败:\", error);\n        addChatMessage(\"assistant\", `属性对比失败: ${error.message || \"未知错误\"}`);\n      }\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      currentChartData,\n      currentChartType,\n      div1RawData,\n      div3RawData,\n      comparisonResult,\n      isComparing,\n      canCompare,\n      statusMessage,\n      statusClass,\n      handleDiv1Event,\n      handleDiv3Event,\n      autoCompareArticles,\n      processComparisonResult,\n      addChatMessage,\n      formatMessageContent,\n      handleSelection,\n      getPlainTextFromSelection,\n      handleDragStart,\n      handleDrop,\n      analyzeChart,\n      askQuestion,\n      compareTexts,\n      mergedJson,\n      renderChart,\n      handleAttributeComparison,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      CompareTable,\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","bus","CompareTable","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","userQuestion","chatHistory","selectText2","selectText3","currentChartData","currentChartType","div1RawData","div3RawData","comparisonResult","isComparing","canCompare","value","trim","statusMessage","statusClass","handleDiv1Event","data","handleSelection","handleDiv3Event","on","off","autoCompareArticles","addChatMessage","api","post","left_html","right_html","response","success","processComparisonResult","result","key_differences","length","Error","error","console","message","structure","push","type","title","items","role","content","formatMessageContent","text","replace","source","plainText","getPlainTextFromSelection","htmlContent","container","document","createElement","innerHTML","innerText","textContent","handleDragStart","event","dataTransfer","setData","JSON","stringify","chartData","chartType","handleDrop","preventDefault","getData","parse","analyzeChart","analysis","askQuestion","alert","question","answer","compareTexts","text1","text2","mergedJson","json_data","chart_classification","yes_no","renderChart","emit","divId","jsonData","div1_json","div3_json","rawJsonData","chartContainer","querySelector","options","handleAttributeComparison","_ref2","fieldKey","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 智能对比状态栏 -->\r\n\t\t<div class=\"auto-comparison-status\">\r\n\t\t\t<span :class=\"statusClass\">\r\n\t\t\t\t{{ statusMessage }}\r\n\t\t\t</span>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"autoCompareArticles\"\r\n\t\t\t\t:disabled=\"!canCompare || isComparing\"\r\n\t\t\t\tclass=\"smart-compare-btn\"\r\n\t\t\t\t:class=\"{ disabled: !canCompare || isComparing }\">\r\n\t\t\t\t<span v-if=\"isComparing\"> <i class=\"loading-icon\"></i> 对比中... </span>\r\n\t\t\t\t<span v-else-if=\"!canCompare\">\r\n\t\t\t\t\t<i class=\"icon-lock\"></i> 智能对比\r\n\t\t\t\t</span>\r\n\t\t\t\t<span v-else> <i class=\"compare-icon\"></i> 智能对比 </span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"系统\" }}:</strong>\r\n\t\t\t\t\t\t<div v-html=\"message.content\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 对比结果可视化区域 -->\r\n\t\t<div class=\"comparison-vis-container\" v-if=\"comparisonResult\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"comparison-section\"\r\n\t\t\t\tv-for=\"(section, index) in comparisonResult.structure\"\r\n\t\t\t\t:key=\"index\">\r\n\t\t\t\t<h3>{{ section.title }}</h3>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'metadata'\" class=\"metadata-comparison\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"item in section.items\"\r\n\t\t\t\t\t\t:key=\"item.name\"\r\n\t\t\t\t\t\tclass=\"metadata-item\">\r\n\t\t\t\t\t\t<span class=\"item-name\">{{ item.name }}:</span>\r\n\t\t\t\t\t\t<span class=\"item-value\">{{ item.value }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'infobox'\" class=\"infobox-comparison\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>属性</th>\r\n\t\t\t\t\t\t\t\t<th>左侧值</th>\r\n\t\t\t\t\t\t\t\t<th>右侧值</th>\r\n\t\t\t\t\t\t\t\t<th>状态</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr v-for=\"item in section.items\" :key=\"item.field\">\r\n\t\t\t\t\t\t\t\t<td>{{ item.field }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.left }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.right }}</td>\r\n\t\t\t\t\t\t\t\t<td :class=\"{ same: item.is_same, different: !item.is_same }\">\r\n\t\t\t\t\t\t\t\t\t{{ item.is_same ? \"✔ 相同\" : \"✖ 不同\" }}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'key_differences'\" class=\"key-differences\">\r\n\t\t\t\t\t<h4>关键差异点：</h4>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li v-for=\"(diff, idx) in section.items\" :key=\"idx\">\r\n\t\t\t\t\t\t\t{{ diff }}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化表格容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\r\n\t\t<!-- 输入区域 -->\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"输入关于对比结果的问题...\"\r\n\t\t\t\t\t@keydown.enter.prevent=\"askQuestion\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" class=\"btn-send\">\r\n\t\t\t\t\t\t<i class=\"icon-send\"></i> 发送\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"btn-merge\">\r\n\t\t\t\t\t\t<i class=\"icon-merge\"></i> 合并数据\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\" class=\"btn-compare\">\r\n\t\t\t\t\t\t<i class=\"icon-compare\"></i> 对比选中\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\t// 原有状态\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\r\n\t// 新增状态\r\n\tconst comparisonResult = ref(null);\r\n\tconst isComparing = ref(false);\r\n\r\n\t// 计算属性\r\n\tconst canCompare = computed(() => {\r\n\t\treturn (\r\n\t\t\tdiv1RawData.value &&\r\n\t\t\tdiv3RawData.value &&\r\n\t\t\tdiv1RawData.value.trim() &&\r\n\t\t\tdiv3RawData.value.trim()\r\n\t\t);\r\n\t});\r\n\r\n\tconst statusMessage = computed(() => {\r\n\t\tif (!div1RawData.value && !div3RawData.value)\r\n\t\t\treturn \"⏳ 请先加载左右两篇文章\";\r\n\t\tif (!div1RawData.value) return \"⏳ 请加载左侧文章\";\r\n\t\tif (!div3RawData.value) return \"⏳ 请加载右侧文章\";\r\n\t\treturn \"✓ 已准备好对比\";\r\n\t});\r\n\r\n\tconst statusClass = computed(() => ({\r\n\t\t\"status-ready\": canCompare.value,\r\n\t\t\"status-waiting\": !canCompare.value\r\n\t}));\r\n\r\n\t// 原有事件处理\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\t// 核心方法 - 智能对比\r\n\tconst autoCompareArticles = async () => {\r\n\t\tif (!canCompare.value || isComparing.value) return;\r\n\r\n\t\tisComparing.value = true;\r\n\t\taddChatMessage(\"system\", \"开始智能对比两篇文章内容...\");\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"wiki_compare\",\r\n\t\t\t\t{\r\n\t\t\t\t\tleft_html: div1RawData.value,\r\n\t\t\t\t\tright_html: div3RawData.value\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.success) {\r\n\t\t\t\t\t\tcomparisonResult.value = processComparisonResult(response.result);\r\n\t\t\t\t\t\taddChatMessage(\r\n\t\t\t\t\t\t\t\"system\",\r\n\t\t\t\t\t\t\t`对比完成！发现 ${\r\n\t\t\t\t\t\t\t\tresponse.result.key_differences?.length || 0\r\n\t\t\t\t\t\t\t} 个关键差异`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(response?.error || \"对比服务返回异常\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比失败:\", error);\r\n\t\t\taddChatMessage(\"system\", `对比失败: ${error.message}`);\r\n\t\t} finally {\r\n\t\t\tisComparing.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 辅助方法\r\n\tfunction processComparisonResult(result) {\r\n\t\t// 确保结构符合前端预期\r\n\t\tif (!result.structure) {\r\n\t\t\tresult.structure = [];\r\n\t\t}\r\n\r\n\t\t// 添加关键差异点作为单独部分\r\n\t\tif (result.key_differences?.length) {\r\n\t\t\tresult.structure.push({\r\n\t\t\t\ttype: \"key_differences\",\r\n\t\t\t\ttitle: \"关键差异\",\r\n\t\t\t\titems: result.key_differences\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction addChatMessage(role, content) {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole,\r\n\t\t\tcontent: formatMessageContent(content)\r\n\t\t});\r\n\t}\r\n\r\n\tfunction formatMessageContent(text) {\r\n\t\treturn text\r\n\t\t\t.replace(/### (.*)/g, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\")\r\n\t\t\t.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t}\r\n\r\n\t// 保留原有所有方法不变\r\n\tfunction handleSelection(data, source) {\r\n\t\tif (!data?.content) return;\r\n\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\r\n\t\t// 自动触发对比（当两侧都有数据时）\r\n\t\tif (div1RawData.value && div3RawData.value) {\r\n\t\t\tautoCompareArticles();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst handleDragStart = event => {\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst data = event.dataTransfer.getData(\"application/json\");\r\n\t\tif (data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { chartData, chartType } = JSON.parse(data);\r\n\t\t\t\tcurrentChartData.value = chartData;\r\n\t\t\t\tcurrentChartType.value = chartType;\r\n\t\t\t\tanalyzeChart(chartData, chartType);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"解析拖拽数据失败:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t\tapi.post(\r\n\t\t\t\"analyze_chart\",\r\n\t\t\t{ chartData, chartType },\r\n\t\t\tresponse => {\r\n\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\taddChatMessage(\"assistant\", response.analysis);\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddChatMessage(\"assistant\", \"图表分析失败，数据格式不正确\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"图表分析失败:\", error);\r\n\t\t\t\taddChatMessage(\"assistant\", \"图表分析失败，请稍后重试\");\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst askQuestion = () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\talert(\"请输入问题内容！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddChatMessage(\"user\", userQuestion.value);\r\n\t\tuserQuestion.value = \"\";\r\n\r\n\t\tapi.post(\r\n\t\t\t\"gpt_ask_chart\",\r\n\t\t\t{\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\taddChatMessage(\"assistant\", response.answer);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\t\taddChatMessage(\"assistant\", \"请求失败，请稍后重试\");\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tasync function compareTexts() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先在左右文章中选择要对比的文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddChatMessage(\"system\", \"开始对比选中文本...\");\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data?.result) {\r\n\t\t\t\t\t\taddChatMessage(\"assistant\", data.result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\taddChatMessage(\"assistant\", \"文本对比失败\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比失败:\", error);\r\n\t\t\taddChatMessage(\"assistant\", \"文本对比失败\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync function mergedJson() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先在左右文章中选择要合并的内容！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddChatMessage(\"system\", \"开始合并数据...\");\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\taddChatMessage(\"assistant\", `合并失败: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentChartData.value = data.json_data;\r\n\t\t\t\t\tcurrentChartType.value = data.chart_classification;\r\n\r\n\t\t\t\t\tif (data.yes_no === \"no\" || !data.json_data) {\r\n\t\t\t\t\t\trenderNonVisualChart(\".chart-container\", data, {\r\n\t\t\t\t\t\t\tmessage: \"数据无法合并\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trenderChart(data.json_data, data.chart_classification);\r\n\t\t\t\t\tbus.emit(\"updateChart1\", {\r\n\t\t\t\t\t\tdivId: \"div1\",\r\n\t\t\t\t\t\tjsonData: data.div1_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbus.emit(\"updateChart3\", {\r\n\t\t\t\t\t\tdivId: \"div3\",\r\n\t\t\t\t\t\tjsonData: data.div3_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\taddChatMessage(\"assistant\", \"数据合并完成，已生成可视化图表\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"合并失败:\", error);\r\n\t\t\taddChatMessage(\"assistant\", \"数据合并失败\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\trenderNonVisualChart(\".chart-container\", {\r\n\t\t\t\tmessage: \"JSON数据无效\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst chartContainer = document.querySelector(\".chart-container\");\r\n\t\tif (!chartContainer) return;\r\n\r\n\t\tswitch (chartType) {\r\n\t\t\tcase \"Line Chart\":\r\n\t\t\t\trenderLineChart(chartContainer, rawJsonData.data, rawJsonData.options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bar Chart\":\r\n\t\t\t\trenderBarChart(chartContainer, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Pie Chart\":\r\n\t\t\t\trenderPieChart(chartContainer, rawJsonData.data, rawJsonData.options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stacked Bar Chart\":\r\n\t\t\t\trenderStackedBarChart(\r\n\t\t\t\t\tchartContainer,\r\n\t\t\t\t\trawJsonData.data,\r\n\t\t\t\t\trawJsonData.options\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Radar Chart\":\r\n\t\t\t\trenderRadarChart(chartContainer, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Scatter Chart\":\r\n\t\t\t\trenderScatterChart(chartContainer, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(\"未知图表类型:\", chartType);\r\n\t\t\t\trenderNonVisualChart(chartContainer, {\r\n\t\t\t\t\tmessage: `不支持 ${chartType} 图表类型`\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\taddChatMessage(\r\n\t\t\t\"system\",\r\n\t\t\t`正在对比属性: <strong>${fieldKey}</strong> (${fieldLabel})`\r\n\t\t);\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"analyze_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\taddChatMessage(\"assistant\", response.analysis);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"属性对比失败:\", error);\r\n\t\t\taddChatMessage(\r\n\t\t\t\t\"assistant\",\r\n\t\t\t\t`属性对比失败: ${error.message || \"未知错误\"}`\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式全部保留 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.auto-comparison-status {\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.status-ready {\r\n\t\tcolor: #4caf50;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.status-waiting {\r\n\t\tcolor: #ff9800;\r\n\t}\r\n\r\n\t.smart-compare-btn {\r\n\t\tbackground: #2196f3;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 6px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.smart-compare-btn:hover:not(:disabled) {\r\n\t\tbackground: #1976d2;\r\n\t}\r\n\r\n\t.smart-compare-btn.disabled {\r\n\t\tbackground: #e0e0e0 !important;\r\n\t\tcolor: #9e9e9e !important;\r\n\t\tcursor: not-allowed !important;\r\n\t}\r\n\r\n\t.loading-icon {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 14px;\r\n\t\theight: 14px;\r\n\t\tborder: 2px solid rgba(255, 255, 255, 0.3);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top-color: white;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t.compare-icon::before {\r\n\t\tcontent: \"⇄\";\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.icon-lock::before {\r\n\t\tcontent: \"🔒\";\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 25%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t\tanimation: fadeIn 0.3s ease;\r\n\t}\r\n\r\n\t@keyframes fadeIn {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: translateY(5px);\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.6;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message-content > div {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tcolor: #333;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0 5px;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 8px 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.comparison-vis-container {\r\n\t\tflex: 1;\r\n\t\tpadding: 15px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\toverflow-y: auto;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.comparison-section {\r\n\t\tmargin-bottom: 20px;\r\n\t\tanimation: fadeIn 0.4s ease;\r\n\t}\r\n\r\n\t.comparison-section h3 {\r\n\t\tcolor: #2c3e50;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tpadding-bottom: 8px;\r\n\t\tmargin-bottom: 12px;\r\n\t\tfont-size: 1.1em;\r\n\t}\r\n\r\n\t.metadata-comparison {\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 6px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.metadata-item {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 8px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.item-name {\r\n\t\tfont-weight: bold;\r\n\t\tmin-width: 120px;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.item-value {\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\t.infobox-comparison {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tmargin-bottom: 15px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.infobox-comparison th,\r\n\t.infobox-comparison td {\r\n\t\tpadding: 10px 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.infobox-comparison th {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.same {\r\n\t\tcolor: #4caf50;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.different {\r\n\t\tcolor: #f44336;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.key-differences {\r\n\t\tbackground-color: #fff8e1;\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 6px;\r\n\t\tborder-left: 4px solid #ffc107;\r\n\t\tmargin-top: 15px;\r\n\t}\r\n\r\n\t.key-differences h4 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #ff8f00;\r\n\t}\r\n\r\n\t.key-differences ul {\r\n\t\tmargin: 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.key-differences li {\r\n\t\tmargin-bottom: 6px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.key-differences li::before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #ffa000;\r\n\t\tfont-weight: bold;\r\n\t\tposition: absolute;\r\n\t\tleft: -15px;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0 0 auto;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: all 0.3s;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t\tbox-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.2s;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 6px;\r\n\t}\r\n\r\n\t.btn-send {\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-send:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t.btn-merge {\r\n\t\tbackground-color: #2196f3;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-merge:hover {\r\n\t\tbackground-color: #1976d2;\r\n\t}\r\n\r\n\t.btn-compare {\r\n\t\tbackground-color: #ff9800;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-compare:hover {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n\r\n\t.icon-send::before {\r\n\t\tcontent: \"↑\";\r\n\t}\r\n\r\n\t.icon-merge::before {\r\n\t\tcontent: \"⇄\";\r\n\t}\r\n\r\n\t.icon-compare::before {\r\n\t\tcontent: \"≈\";\r\n\t}\r\n</style>\r\n"],"mappings":";AAyHC,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AAC3D,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,YAAY,MAAM,8CAA8C;AACvE,SACCC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,oBAAoB,EACpBC,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,QACZ,iBAAiB;;AAExB;;;;;;;;;IACA,MAAMC,YAAY,GAAGb,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMc,WAAW,GAAGd,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMe,WAAW,GAAGf,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMgB,WAAW,GAAGhB,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMiB,gBAAgB,GAAGjB,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMkB,gBAAgB,GAAGlB,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMmB,WAAW,GAAGnB,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMoB,WAAW,GAAGpB,GAAG,CAAC,IAAI,CAAC;;IAE7B;IACA,MAAMqB,gBAAgB,GAAGrB,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMsB,WAAW,GAAGtB,GAAG,CAAC,KAAK,CAAC;;IAE9B;IACA,MAAMuB,UAAU,GAAGtB,QAAQ,CAAC,MAAM;MACjC,OACCkB,WAAW,CAACK,KAAK,IACjBJ,WAAW,CAACI,KAAK,IACjBL,WAAW,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC,IACxBL,WAAW,CAACI,KAAK,CAACC,IAAI,CAAC,CAAC;IAE1B,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAGzB,QAAQ,CAAC,MAAM;MACpC,IAAI,CAACkB,WAAW,CAACK,KAAK,IAAI,CAACJ,WAAW,CAACI,KAAK,EAC3C,OAAO,cAAc;MACtB,IAAI,CAACL,WAAW,CAACK,KAAK,EAAE,OAAO,WAAW;MAC1C,IAAI,CAACJ,WAAW,CAACI,KAAK,EAAE,OAAO,WAAW;MAC1C,OAAO,UAAU;IAClB,CAAC,CAAC;IAEF,MAAMG,WAAW,GAAG1B,QAAQ,CAAC,OAAO;MACnC,cAAc,EAAEsB,UAAU,CAACC,KAAK;MAChC,gBAAgB,EAAE,CAACD,UAAU,CAACC;IAC/B,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMI,eAAe,GAAGC,IAAI,IAAIC,eAAe,CAACD,IAAI,EAAE,MAAM,CAAC;IAC7D,MAAME,eAAe,GAAGF,IAAI,IAAIC,eAAe,CAACD,IAAI,EAAE,MAAM,CAAC;;IAE7D;IACA3B,SAAS,CAAC,MAAM;MACfE,GAAG,CAAC4B,EAAE,CAAC,YAAY,EAAEJ,eAAe,CAAC;MACrCxB,GAAG,CAAC4B,EAAE,CAAC,YAAY,EAAED,eAAe,CAAC;IACtC,CAAC,CAAC;IAEF5B,WAAW,CAAC,MAAM;MACjBC,GAAG,CAAC6B,GAAG,CAAC,YAAY,EAAEL,eAAe,CAAC;MACtCxB,GAAG,CAAC6B,GAAG,CAAC,YAAY,EAAEF,eAAe,CAAC;IACvC,CAAC,CAAC;;IAEF;IACA,MAAMG,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI,CAACX,UAAU,CAACC,KAAK,IAAIF,WAAW,CAACE,KAAK,EAAE;MAE5CF,WAAW,CAACE,KAAK,GAAG,IAAI;MACxBW,cAAc,CAAC,QAAQ,EAAE,iBAAiB,CAAC;MAE3C,IAAI;QACHC,GAAG,CAACC,IAAI,CACP,cAAc,EACd;UACCC,SAAS,EAAEnB,WAAW,CAACK,KAAK;UAC5Be,UAAU,EAAEnB,WAAW,CAACI;QACzB,CAAC,EACDgB,QAAQ,IAAI;UACX,IAAIA,QAAQ,EAAEC,OAAO,EAAE;YACtBpB,gBAAgB,CAACG,KAAK,GAAGkB,uBAAuB,CAACF,QAAQ,CAACG,MAAM,CAAC;YACjER,cAAc,CACb,QAAQ,EACR,WACCK,QAAQ,CAACG,MAAM,CAACC,eAAe,EAAEC,MAAM,IAAI,CAAC,QAE9C,CAAC;UACF,CAAC,MAAM;YACN,MAAM,IAAIC,KAAK,CAACN,QAAQ,EAAEO,KAAK,IAAI,UAAU,CAAC;UAC/C;QACD,CAAC,EACDA,KAAK,IAAI;UACR,MAAMA,KAAK;QACZ,CACD,CAAC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BZ,cAAc,CAAC,QAAQ,EAAE,SAASY,KAAK,CAACE,OAAO,EAAE,CAAC;MACnD,CAAC,SAAS;QACT3B,WAAW,CAACE,KAAK,GAAG,KAAK;MAC1B;IACD,CAAC;;IAED;IACA,SAASkB,uBAAuBA,CAACC,MAAM,EAAE;MACxC;MACA,IAAI,CAACA,MAAM,CAACO,SAAS,EAAE;QACtBP,MAAM,CAACO,SAAS,GAAG,EAAE;MACtB;;MAEA;MACA,IAAIP,MAAM,CAACC,eAAe,EAAEC,MAAM,EAAE;QACnCF,MAAM,CAACO,SAAS,CAACC,IAAI,CAAC;UACrBC,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAEX,MAAM,CAACC;QACf,CAAC,CAAC;MACH;MAEA,OAAOD,MAAM;IACd;IAEA,SAASR,cAAcA,CAACoB,IAAI,EAAEC,OAAO,EAAE;MACtC1C,WAAW,CAACU,KAAK,CAAC2B,IAAI,CAAC;QACtBI,IAAI;QACJC,OAAO,EAAEC,oBAAoB,CAACD,OAAO;MACtC,CAAC,CAAC;IACH;IAEA,SAASC,oBAAoBA,CAACC,IAAI,EAAE;MACnC,OAAOA,IAAI,CACTC,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC,CACnCA,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAChDA,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CACtBA,OAAO,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAC/CA,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAC3CA,OAAO,CAAC,kBAAkB,EAAE,aAAa,CAAC;IAC7C;;IAEA;IACA,SAAS7B,eAAeA,CAACD,IAAI,EAAE+B,MAAM,EAAE;MACtC,IAAI,CAAC/B,IAAI,EAAE2B,OAAO,EAAE;MAEpB,MAAMK,SAAS,GAAGC,yBAAyB,CAACjC,IAAI,CAAC2B,OAAO,CAAC;MACzD,IAAII,MAAM,KAAK,MAAM,EAAE;QACtB7C,WAAW,CAACS,KAAK,GAAGqC,SAAS;QAC7B1C,WAAW,CAACK,KAAK,GAAGK,IAAI,CAAC2B,OAAO;MACjC,CAAC,MAAM,IAAII,MAAM,KAAK,MAAM,EAAE;QAC7B5C,WAAW,CAACQ,KAAK,GAAGqC,SAAS;QAC7BzC,WAAW,CAACI,KAAK,GAAGK,IAAI,CAAC2B,OAAO;MACjC;;MAEA;MACA,IAAIrC,WAAW,CAACK,KAAK,IAAIJ,WAAW,CAACI,KAAK,EAAE;QAC3CU,mBAAmB,CAAC,CAAC;MACtB;IACD;IAEA,SAAS4B,yBAAyBA,CAACC,WAAW,EAAE;MAC/C,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC/CF,SAAS,CAACG,SAAS,GAAGJ,WAAW;MACjC,OAAOC,SAAS,CAACI,SAAS,IAAIJ,SAAS,CAACK,WAAW,IAAI,EAAE;IAC1D;IAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;MAChCA,KAAK,CAACC,YAAY,CAACC,OAAO,CACzB,kBAAkB,EAClBC,IAAI,CAACC,SAAS,CAAC;QACdC,SAAS,EAAE3D,gBAAgB,CAACO,KAAK;QACjCqD,SAAS,EAAE3D,gBAAgB,CAACM;MAC7B,CAAC,CACF,CAAC;IACF,CAAC;IAED,MAAMsD,UAAU,GAAGP,KAAK,IAAI;MAC3BA,KAAK,CAACQ,cAAc,CAAC,CAAC;MACtB,MAAMlD,IAAI,GAAG0C,KAAK,CAACC,YAAY,CAACQ,OAAO,CAAC,kBAAkB,CAAC;MAC3D,IAAInD,IAAI,EAAE;QACT,IAAI;UACH,MAAM;YAAE+C,SAAS;YAAEC;UAAU,CAAC,GAAGH,IAAI,CAACO,KAAK,CAACpD,IAAI,CAAC;UACjDZ,gBAAgB,CAACO,KAAK,GAAGoD,SAAS;UAClC1D,gBAAgB,CAACM,KAAK,GAAGqD,SAAS;UAClCK,YAAY,CAACN,SAAS,EAAEC,SAAS,CAAC;QACnC,CAAC,CAAC,OAAO9B,KAAK,EAAE;UACfC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QAClC;MACD;IACD,CAAC;IAED,MAAMmC,YAAY,GAAGA,CAACN,SAAS,EAAEC,SAAS,KAAK;MAC9CzC,GAAG,CAACC,IAAI,CACP,eAAe,EACf;QAAEuC,SAAS;QAAEC;MAAU,CAAC,EACxBrC,QAAQ,IAAI;QACX,IAAIA,QAAQ,EAAE2C,QAAQ,EAAE;UACvBhD,cAAc,CAAC,WAAW,EAAEK,QAAQ,CAAC2C,QAAQ,CAAC;QAC/C,CAAC,MAAM;UACNhD,cAAc,CAAC,WAAW,EAAE,gBAAgB,CAAC;QAC9C;MACD,CAAC,EACDY,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BZ,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC;MAC5C,CACD,CAAC;IACF,CAAC;IAED,MAAMiD,WAAW,GAAGA,CAAA,KAAM;MACzB,IAAI,CAACvE,YAAY,CAACW,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;QAC/B4D,KAAK,CAAC,UAAU,CAAC;QACjB;MACD;MAEAlD,cAAc,CAAC,MAAM,EAAEtB,YAAY,CAACW,KAAK,CAAC;MAC1CX,YAAY,CAACW,KAAK,GAAG,EAAE;MAEvBY,GAAG,CAACC,IAAI,CACP,eAAe,EACf;QACCiD,QAAQ,EAAEzE,YAAY,CAACW,KAAK;QAC5BoD,SAAS,EAAE3D,gBAAgB,CAACO,KAAK;QACjCqD,SAAS,EAAE3D,gBAAgB,CAACM;MAC7B,CAAC,EACDgB,QAAQ,IAAI;QACXL,cAAc,CAAC,WAAW,EAAEK,QAAQ,CAAC+C,MAAM,CAAC;MAC7C,CAAC,EACDxC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BZ,cAAc,CAAC,WAAW,EAAE,YAAY,CAAC;MAC1C,CACD,CAAC;IACF,CAAC;IAED,eAAeqD,YAAYA,CAAA,EAAG;MAC7B,IAAI,CAACzE,WAAW,CAACS,KAAK,IAAI,CAACR,WAAW,CAACQ,KAAK,EAAE;QAC7C6D,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACD;MAEAlD,cAAc,CAAC,QAAQ,EAAE,aAAa,CAAC;MAEvC,IAAI;QACHC,GAAG,CAACC,IAAI,CACP,aAAa,EACb;UAAEoD,KAAK,EAAE1E,WAAW,CAACS,KAAK;UAAEkE,KAAK,EAAE1E,WAAW,CAACQ;QAAM,CAAC,EACtDK,IAAI,IAAI;UACP,IAAIA,IAAI,EAAEc,MAAM,EAAE;YACjBR,cAAc,CAAC,WAAW,EAAEN,IAAI,CAACc,MAAM,CAAC;UACzC,CAAC,MAAM;YACNR,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC;UACtC;QACD,CACD,CAAC;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BZ,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC;MACtC;IACD;IAEA,eAAewD,UAAUA,CAAA,EAAG;MAC3B,IAAI,CAAC5E,WAAW,CAACS,KAAK,IAAI,CAACR,WAAW,CAACQ,KAAK,EAAE;QAC7C6D,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACD;MAEAlD,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC;MAErC,IAAI;QACHC,GAAG,CAACC,IAAI,CACP,aAAa,EACb;UAAEoD,KAAK,EAAE1E,WAAW,CAACS,KAAK;UAAEkE,KAAK,EAAE1E,WAAW,CAACQ;QAAM,CAAC,EACtDK,IAAI,IAAI;UACP,IAAIA,IAAI,CAACkB,KAAK,EAAE;YACfZ,cAAc,CAAC,WAAW,EAAE,SAASN,IAAI,CAACoB,OAAO,EAAE,CAAC;YACpD;UACD;UAEAhC,gBAAgB,CAACO,KAAK,GAAGK,IAAI,CAAC+D,SAAS;UACvC1E,gBAAgB,CAACM,KAAK,GAAGK,IAAI,CAACgE,oBAAoB;UAElD,IAAIhE,IAAI,CAACiE,MAAM,KAAK,IAAI,IAAI,CAACjE,IAAI,CAAC+D,SAAS,EAAE;YAC5CnF,oBAAoB,CAAC,kBAAkB,EAAEoB,IAAI,EAAE;cAC9CoB,OAAO,EAAE;YACV,CAAC,CAAC;YACF;UACD;UAEA8C,WAAW,CAAClE,IAAI,CAAC+D,SAAS,EAAE/D,IAAI,CAACgE,oBAAoB,CAAC;UACtDzF,GAAG,CAAC4F,IAAI,CAAC,cAAc,EAAE;YACxBC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAErE,IAAI,CAACsE,SAAS;YACxBtB,SAAS,EAAEhD,IAAI,CAACgE;UACjB,CAAC,CAAC;UACFzF,GAAG,CAAC4F,IAAI,CAAC,cAAc,EAAE;YACxBC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAErE,IAAI,CAACuE,SAAS;YACxBvB,SAAS,EAAEhD,IAAI,CAACgE;UACjB,CAAC,CAAC;UAEF1D,cAAc,CAAC,WAAW,EAAE,iBAAiB,CAAC;QAC/C,CACD,CAAC;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BZ,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC;MACtC;IACD;IAEA,SAAS4D,WAAWA,CAACM,WAAW,EAAExB,SAAS,EAAE;MAC5C,IAAI,CAACwB,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;QACpD5F,oBAAoB,CAAC,kBAAkB,EAAE;UACxCwC,OAAO,EAAE;QACV,CAAC,CAAC;QACF;MACD;MAEA,MAAMqD,cAAc,GAAGrC,QAAQ,CAACsC,aAAa,CAAC,kBAAkB,CAAC;MACjE,IAAI,CAACD,cAAc,EAAE;MAErB,QAAQzB,SAAS;QAChB,KAAK,YAAY;UAChBvE,eAAe,CAACgG,cAAc,EAAED,WAAW,CAACxE,IAAI,EAAEwE,WAAW,CAACG,OAAO,CAAC;UACtE;QACD,KAAK,WAAW;UACfjG,cAAc,CAAC+F,cAAc,EAAED,WAAW,CAAC;UAC3C;QACD,KAAK,WAAW;UACf7F,cAAc,CAAC8F,cAAc,EAAED,WAAW,CAACxE,IAAI,EAAEwE,WAAW,CAACG,OAAO,CAAC;UACrE;QACD,KAAK,mBAAmB;UACvB7F,qBAAqB,CACpB2F,cAAc,EACdD,WAAW,CAACxE,IAAI,EAChBwE,WAAW,CAACG,OACb,CAAC;UACD;QACD,KAAK,aAAa;UACjB9F,gBAAgB,CAAC4F,cAAc,EAAED,WAAW,CAAC;UAC7C;QACD,KAAK,eAAe;UACnBzF,kBAAkB,CAAC0F,cAAc,EAAED,WAAW,CAAC;UAC/C;QACD;UACCrD,OAAO,CAACD,KAAK,CAAC,SAAS,EAAE8B,SAAS,CAAC;UACnCpE,oBAAoB,CAAC6F,cAAc,EAAE;YACpCrD,OAAO,EAAE,OAAO4B,SAAS;UAC1B,CAAC,CAAC;MACJ;IACD;IAEA,MAAM4B,yBAAyB,GAAG,MAAAC,KAAA,IAQ5B;MAAA,IARmC;QACxCC,QAAQ;QACRC,QAAQ;QACRC,SAAS;QACTC,SAAS;QACTC,UAAU;QACVC,SAAS;QACTC;MACD,CAAC,GAAAP,KAAA;MACAvE,cAAc,CACb,QAAQ,EACR,mBAAmBwE,QAAQ,cAAcM,UAAU,GACpD,CAAC;MAED,IAAI;QACH7E,GAAG,CAACC,IAAI,CACP,eAAe,EACf;UACCuC,SAAS,EAAE;YACVgC,QAAQ;YACRC,SAAS;YACTC,SAAS;YACTC,UAAU;YACVJ,QAAQ;YACRK;UACD,CAAC;UACDnC,SAAS,EAAE;QACZ,CAAC,EACDrC,QAAQ,IAAI;UACX,IAAIA,QAAQ,EAAE2C,QAAQ,EAAE;YACvBhD,cAAc,CAAC,WAAW,EAAEK,QAAQ,CAAC2C,QAAQ,CAAC;UAC/C,CAAC,MAAM;YACN,MAAM,IAAIrC,KAAK,CAAC,SAAS,CAAC;UAC3B;QACD,CAAC,EACDC,KAAK,IAAI;UACR,MAAMA,KAAK;QACZ,CACD,CAAC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BZ,cAAc,CACb,WAAW,EACX,WAAWY,KAAK,CAACE,OAAO,IAAI,MAAM,EACnC,CAAC;MACF;IACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}