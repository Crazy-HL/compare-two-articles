{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-db33a0a4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartEl\",\n  class: \"single-value-pie\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\BarChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"single-value-pie\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcurrent: { type: Number, required: true }, // 当前值\r\n\t\ttotal: { type: Number, default: 100 }, // 总量（参考基准）\r\n\t\ttitle: { type: String, default: \"\" }, // 主标题\r\n\t\tsubtext: { type: String, default: \"\" }, // 副标题\r\n\t\tunit: { type: String, default: \"\" }, // 单位\r\n\t\tcolor: { type: String, default: \"#36a2eb\" } // 主色\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\t// 计算实际比例（防止超过100%）\r\n\t\tconst percentage = Math.min((props.current / props.total) * 100, 100);\r\n\t\tconst remaining = 100 - percentage;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: `{name|${props.title}}\\n{value|${props.current.toFixed(\r\n\t\t\t\t\t1\r\n\t\t\t\t)}} {unit|${props.unit}}`,\r\n\t\t\t\tsubtext: props.subtext,\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttop: \"45%\",\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\trich: {\r\n\t\t\t\t\t\tname: { fontSize: 14, color: \"#666\", padding: [5, 0] },\r\n\t\t\t\t\t\tvalue: { fontSize: 24, fontWeight: \"bold\", color: \"#333\" },\r\n\t\t\t\t\t\tunit: { fontSize: 14, color: \"#999\" }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn `${params.seriesName}<br/>\r\n                ${params.name}: ${params.value.toFixed(1)}%<br/>\r\n                数值: ${props.current}${props.unit}`;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"完成比例\",\r\n\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\tradius: [\"65%\", \"85%\"],\r\n\t\t\t\t\tsilent: true, // 禁用交互\r\n\t\t\t\t\tclockwise: true,\r\n\t\t\t\t\tstartAngle: 90,\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: percentage,\r\n\t\t\t\t\t\t\tname: \"已完成\",\r\n\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\tcolor: props.color,\r\n\t\t\t\t\t\t\t\tshadowBlur: 10,\r\n\t\t\t\t\t\t\t\tshadowColor: props.color\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: remaining,\r\n\t\t\t\t\t\t\tname: \"剩余\",\r\n\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\tcolor: \"#f0f0f0\",\r\n\t\t\t\t\t\t\t\tborderWidth: 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tlabel: { show: false },\r\n\t\t\t\t\temphasis: { scale: false }\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\t// 响应式处理\r\n\tonMounted(initChart);\r\n\twatch(() => [props.current, props.total], initChart);\r\n\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n</script>\r\n\r\n<style scoped>\r\n\t.single-value-pie {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 300px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC;;;uBAAzBC,mBAAA,CAAkD,OAAlDC,UAAkD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}