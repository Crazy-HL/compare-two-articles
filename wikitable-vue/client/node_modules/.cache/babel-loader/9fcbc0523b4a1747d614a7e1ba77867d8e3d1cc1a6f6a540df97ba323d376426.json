{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-de7d3a1c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","innerHTML","$setup","pageHtml","onMouseup","handleSelection","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\WikipediaContent.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\tclass=\"wikipedia-content\"\r\n\t\tv-html=\"pageHtml\"\r\n\t\t@mouseup=\"handleSelection\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\r\n\t// 获取 Wikipedia 页面\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 动态注入 Wikipedia 样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 手动引入 Wikipedia CSS\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 高亮并放大选中文字\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection.rangeCount) {\r\n\t\t\tconsole.log(\"没有选中内容\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst selectedHtml = range.cloneContents();\r\n\r\n\t\t// 创建临时容器\r\n\t\tconst tempDiv = document.createElement(\"div\");\r\n\t\ttempDiv.appendChild(selectedHtml);\r\n\r\n\t\t// 判断选中的内容是否包含表格等 HTML 元素\r\n\t\tconst table = tempDiv.querySelector(\"table\");\r\n\t\tif (table) {\r\n\t\t\tconsole.log(\"选中了表格内容\");\r\n\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\temit(\"select\", tempDiv.innerHTML); // 触发 select 事件\r\n\t\t} else {\r\n\t\t\tconst text = selection.toString().trim();\r\n\t\t\tif (!text) {\r\n\t\t\t\tconsole.log(\"选中的文字为空\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"选中的文字:\", text);\r\n\t\t\temit(\"select\", text); // 触发 select 事件\r\n\t\t}\r\n\t};\r\n\r\n\t// 触发事件\r\n\tconst emit = defineEmits([\"select\"]);\r\n\r\n\t// 组件挂载后加载 Wikipedia 内容\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tfont-size: 0.6vw;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;uBACCA,mBAAA,CAGkC;IAFjCC,KAAK,EAAC,mBAAmB;IACzBC,SAAiB,EAATC,MAAA,CAAAC,QAAQ;IACfC,SAAO,EAAEF,MAAA,CAAAG;2CAJZC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}