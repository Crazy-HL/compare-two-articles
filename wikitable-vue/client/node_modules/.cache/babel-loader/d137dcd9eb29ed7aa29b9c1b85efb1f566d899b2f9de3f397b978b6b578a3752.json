{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport WikiInfoboxViewer from \"@/components/compoents_base/WikiInfoboxViewer.vue\";\nimport WikiComparison from \"@/components/compoents_base/WikiComparison.vue\";\nimport { extractInfoboxData, classifyInfoboxData } from \"./utils/wikiInfoboxParser\";\nexport default {\n  __name: 'App',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftTitle = ref(\"中华人民共和国\");\n    const rightTitle = ref(\"美国\");\n    const leftInfobox = ref(null);\n    const rightInfobox = ref(null);\n    const leftData = ref(null);\n    const rightData = ref(null);\n\n    // 模拟从维基百科页面获取信息框元素\n    onMounted(async () => {\n      // 实际应用中，这里应该是从维基百科API获取页面后提取信息框\n      leftInfobox.value = document.querySelector(\"#left-article .infobox\");\n      rightInfobox.value = document.querySelector(\"#right-article .infobox\");\n\n      // 提取并分类数据\n      if (leftInfobox.value) {\n        const rawLeftData = extractInfoboxData(leftInfobox.value);\n        leftData.value = classifyInfoboxData(rawLeftData);\n      }\n      if (rightInfobox.value) {\n        const rawRightData = extractInfoboxData(rightInfobox.value);\n        rightData.value = classifyInfoboxData(rawRightData);\n      }\n    });\n    const __returned__ = {\n      leftTitle,\n      rightTitle,\n      leftInfobox,\n      rightInfobox,\n      leftData,\n      rightData,\n      ref,\n      onMounted,\n      WikiInfoboxViewer,\n      WikiComparison,\n      get extractInfoboxData() {\n        return extractInfoboxData;\n      },\n      get classifyInfoboxData() {\n        return classifyInfoboxData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","WikiInfoboxViewer","WikiComparison","extractInfoboxData","classifyInfoboxData","leftTitle","rightTitle","leftInfobox","rightInfobox","leftData","rightData","value","document","querySelector","rawLeftData","rawRightData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/App.vue"],"sourcesContent":["<template>\n\t<div class=\"app-container\">\n\t\t<!-- 文章1 -->\n\t\t<div class=\"article-container\">\n\t\t\t<h1>{{ leftTitle }}</h1>\n\t\t\t<WikiInfoboxViewer :infoboxElement=\"leftInfobox\" />\n\t\t</div>\n\n\t\t<!-- 对比结果 -->\n\t\t<WikiComparison\n\t\t\t:leftTitle=\"leftTitle\"\n\t\t\t:rightTitle=\"rightTitle\"\n\t\t\t:leftData=\"leftData\"\n\t\t\t:rightData=\"rightData\" />\n\n\t\t<!-- 文章2 -->\n\t\t<div class=\"article-container\">\n\t\t\t<h1>{{ rightTitle }}</h1>\n\t\t\t<WikiInfoboxViewer :infoboxElement=\"rightInfobox\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\timport { ref, onMounted } from \"vue\";\n\timport WikiInfoboxViewer from \"@/components/compoents_base/WikiInfoboxViewer.vue\";\n\timport WikiComparison from \"@/components/compoents_base/WikiComparison.vue\";\n\timport {\n\t\textractInfoboxData,\n\t\tclassifyInfoboxData\n\t} from \"./utils/wikiInfoboxParser\";\n\n\tconst leftTitle = ref(\"中华人民共和国\");\n\tconst rightTitle = ref(\"美国\");\n\tconst leftInfobox = ref(null);\n\tconst rightInfobox = ref(null);\n\tconst leftData = ref(null);\n\tconst rightData = ref(null);\n\n\t// 模拟从维基百科页面获取信息框元素\n\tonMounted(async () => {\n\t\t// 实际应用中，这里应该是从维基百科API获取页面后提取信息框\n\t\tleftInfobox.value = document.querySelector(\"#left-article .infobox\");\n\t\trightInfobox.value = document.querySelector(\"#right-article .infobox\");\n\n\t\t// 提取并分类数据\n\t\tif (leftInfobox.value) {\n\t\t\tconst rawLeftData = extractInfoboxData(leftInfobox.value);\n\t\t\tleftData.value = classifyInfoboxData(rawLeftData);\n\t\t}\n\n\t\tif (rightInfobox.value) {\n\t\t\tconst rawRightData = extractInfoboxData(rightInfobox.value);\n\t\t\trightData.value = classifyInfoboxData(rawRightData);\n\t\t}\n\t});\n</script>\n\n<style>\n\t.app-container {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 2fr 1fr;\n\t\tgap: 30px;\n\t\tmax-width: 1600px;\n\t\tmargin: 0 auto;\n\t\tpadding: 20px;\n\t}\n\n\t.article-container {\n\t\tborder: 1px solid #e1e4e8;\n\t\tborder-radius: 6px;\n\t\tpadding: 20px;\n\t\tbackground-color: #fff;\n\t}\n\n\th1 {\n\t\tmargin-top: 0;\n\t\tcolor: #24292e;\n\t\tborder-bottom: 1px solid #e1e4e8;\n\t\tpadding-bottom: 10px;\n\t}\n</style>\n"],"mappings":"AAwBC,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,iBAAiB,MAAM,mDAAmD;AACjF,OAAOC,cAAc,MAAM,gDAAgD;AAC3E,SACCC,kBAAkB,EAClBC,mBAAmB,QACb,2BAA2B;;;;;;;;IAElC,MAAMC,SAAS,GAAGN,GAAG,CAAC,SAAS,CAAC;IAChC,MAAMO,UAAU,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMQ,WAAW,GAAGR,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMS,YAAY,GAAGT,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMU,QAAQ,GAAGV,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMW,SAAS,GAAGX,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACAC,SAAS,CAAC,YAAY;MACrB;MACAO,WAAW,CAACI,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC;MACpEL,YAAY,CAACG,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC;;MAEtE;MACA,IAAIN,WAAW,CAACI,KAAK,EAAE;QACtB,MAAMG,WAAW,GAAGX,kBAAkB,CAACI,WAAW,CAACI,KAAK,CAAC;QACzDF,QAAQ,CAACE,KAAK,GAAGP,mBAAmB,CAACU,WAAW,CAAC;MAClD;MAEA,IAAIN,YAAY,CAACG,KAAK,EAAE;QACvB,MAAMI,YAAY,GAAGZ,kBAAkB,CAACK,YAAY,CAACG,KAAK,CAAC;QAC3DD,SAAS,CAACC,KAAK,GAAGP,mBAAmB,CAACW,YAAY,CAAC;MACpD;IACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}