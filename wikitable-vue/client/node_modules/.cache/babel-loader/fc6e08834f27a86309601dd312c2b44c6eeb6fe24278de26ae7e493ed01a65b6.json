{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-history\"\n};\nconst _hoisted_4 = {\n  class: \"message-content\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"message-meta\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"vis-container\"\n};\nconst _hoisted_10 = {\n  class: \"input\"\n};\nconst _hoisted_11 = {\n  class: \"input-container\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  class: \"button-container\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role, {\n        error: message.error\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_5), message.timestamp ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(message.timestamp), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createTextVNode(\" 正在处理中... \")])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode($setup[\"CompareTable\"], {\n    class: \"compare-table\",\n    \"div1-raw-data\": $setup.div1InfoboxData,\n    \"div3-raw-data\": $setup.div3InfoboxData,\n    onCompareAttribute: $setup.handleAttributeComparison\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\"])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\",\n    disabled: $setup.isLoading\n  }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion,\n    disabled: $setup.isLoading\n  }, _toDisplayString($setup.isLoading ? \"处理中...\" : \"发送\"), 9 /* TEXT, PROPS */, _hoisted_14), $setup.currentComparisonContext.fieldKey ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: $setup.quickFollowUpQuestion,\n    disabled: $setup.isLoading,\n    class: \"quick-btn\"\n  }, \" 深入分析 \", 8 /* PROPS */, _hoisted_15)) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","chatHistory","message","index","_normalizeClass","role","error","_hoisted_4","_toDisplayString","innerHTML","content","_hoisted_5","timestamp","_hoisted_6","_createCommentVNode","isLoading","_hoisted_7","_hoisted_8","_createTextVNode","_hoisted_9","_createVNode","div1InfoboxData","div3InfoboxData","onCompareAttribute","handleAttributeComparison","_hoisted_10","_hoisted_11","_cache","$event","userQuestion","rows","placeholder","disabled","_hoisted_12","_hoisted_13","onClick","askQuestion","_hoisted_14","currentComparisonContext","fieldKey","quickFollowUpQuestion","_hoisted_15"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1InfoboxData\"\r\n\t\t\t\t:div3-raw-data=\"div3InfoboxData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tv-if=\"currentComparisonContext.fieldKey\"\r\n\t\t\t\t\t\t@click=\"quickFollowUpQuestion\"\r\n\t\t\t\t\t\t:disabled=\"isLoading\"\r\n\t\t\t\t\t\tclass=\"quick-btn\">\r\n\t\t\t\t\t\t深入分析\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst isLoading = ref(false);\r\n\r\n\t// 使用infobox数据替代rawData\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\r\n\t// 对比上下文\r\n\tconst currentComparisonContext = ref({\r\n\t\tfieldKey: null,\r\n\t\tpreviousAnalysis: null,\r\n\t\tallAttributes: [],\r\n\t\tleftData: null,\r\n\t\trightData: null,\r\n\t\tleftTitle: \"\",\r\n\t\trightTitle: \"\"\r\n\t});\r\n\r\n\t// 追问关键词\r\n\tconst FOLLOW_UP_KEYWORDS = [\r\n\t\t\"结合其余\",\r\n\t\t\"其他属性\",\r\n\t\t\"为什么\",\r\n\t\t\"原因\",\r\n\t\t\"分析原因\",\r\n\t\t\"深入分析\",\r\n\t\t\"还有什么因素\"\r\n\t];\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) container.scrollTop = container.scrollHeight;\r\n\t\t});\r\n\t};\r\n\r\n\t// 监听infobox数据\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t\tconsole.log(\"Received div1 infobox:\", data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t\tconsole.log(\"Received div3 infobox:\", data);\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 判断是否为追问\r\n\tconst isFollowUpQuestion = question => {\r\n\t\treturn (\r\n\t\t\tFOLLOW_UP_KEYWORDS.some(keyword => question.includes(keyword)) &&\r\n\t\t\tcurrentComparisonContext.value.fieldKey &&\r\n\t\t\tcurrentComparisonContext.value.allAttributes.length > 0\r\n\t\t);\r\n\t};\r\n\r\n\t// 属性对比\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!leftData || !rightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在分析 <strong>${leftTitle}</strong> 和 <strong>${rightTitle}</strong> 的 <strong>${fieldKey}</strong> (${fieldLabel}) 数据对比...`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"analyze_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 提问方法\r\n\tconst askQuestion = async () => {\r\n\t\tconst question = userQuestion.value.trim();\r\n\t\tif (!question) {\r\n\t\t\tshowError(\"问题不能为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tconst isFollowUp = isFollowUpQuestion(question);\r\n\t\t\tconst endpoint = isFollowUp ? \"analyze_follow_up\" : \"gpt_ask_infobox\";\r\n\r\n\t\t\tif (!div1InfoboxData.value || !div3InfoboxData.value) {\r\n\t\t\t\tshowError(\"信息框数据未加载完成\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await api.post(endpoint, {\r\n\t\t\t\tquestion,\r\n\t\t\t\tleftData: div1InfoboxData.value,\r\n\t\t\t\trightData: div3InfoboxData.value,\r\n\t\t\t\t...(isFollowUp && {\r\n\t\t\t\t\tpreviousContext: currentComparisonContext.value,\r\n\t\t\t\t\tpreviousField: currentComparisonContext.value.fieldKey\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.answer) {\r\n\t\t\t\tconst formatted = formatAnalysisResult(response.answer);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatted,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`请求失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 快捷追问\r\n\tconst quickFollowUpQuestion = () => {\r\n\t\tuserQuestion.value = \"结合其余对比属性，分析其原因\";\r\n\t\taskQuestion();\r\n\t};\r\n\r\n\t// 显示错误\r\n\tconst showError = message => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: message,\r\n\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\terror: true\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.quick-btn {\r\n\t\tbackground-color: #2196f3;\r\n\t\tflex: 0.5;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\topacity: 0.9;\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBARjC;;EAAAC,GAAA;EAWWD,KAAK,EAAC;;;EAXjBC,GAAA;EAgB0BD,KAAK,EAAC;;gEAC3BE,mBAAA,CAAmC;EAA9BF,KAAK,EAAC;AAAiB;;EAM1BA,KAAK,EAAC;AAAe;;EAOrBA,KAAK,EAAC;AAAO;;EACZA,KAAK,EAAC;AAAiB;oBA/B/B;;EAqCSA,KAAK,EAAC;AAAkB;oBArCjC;oBAAA;;uBACCG,mBAAA,CAkDM,OAlDNC,UAkDM,GAjDLF,mBAAA,CAmBM,OAnBNG,UAmBM,GAlBLH,mBAAA,CAiBM,OAjBNI,UAiBM,I,kBAhBLH,mBAAA,CAWMI,SAAA,QAfVC,WAAA,CAKgCC,MAAA,CAAAC,WAAW,EAL3C,CAKaC,OAAO,EAAEC,KAAK;yBADvBT,mBAAA,CAWM;MATJF,GAAG,EAAEW,KAAK;MACVZ,KAAK,EAPXa,eAAA,aAOyBF,OAAO,CAACG,IAAI;QAAAC,KAAA,EAAWJ,OAAO,CAACI;MAAK;QACxDb,mBAAA,CAMM,OANNc,UAMM,GALLd,mBAAA,CAA8D,gBAAAe,gBAAA,CAAnDN,OAAO,CAACG,IAAI,8BAA6B,GAAC,iBACrDZ,mBAAA,CAAgC;MAA7BgB,SAAwB,EAAhBP,OAAO,CAACQ;4BAVzBC,UAAA,GAWsCT,OAAO,CAACU,SAAS,I,cAAjDlB,mBAAA,CAEM,OAFNmB,UAEM,EAAAL,gBAAA,CADFN,OAAO,CAACU,SAAS,oBAZ3BE,mBAAA,e;kCAgBed,MAAA,CAAAe,SAAS,I,cAApBrB,mBAAA,CAGM,OAHNsB,UAGM,GAFLC,UAAmC,EAjBxCC,gBAAA,CAiBwC,YAEpC,E,KAnBJJ,mBAAA,e,KAuBErB,mBAAA,CAMM,OANN0B,UAMM,GALLC,YAAA,CAIiDpB,MAAA;IAHhDT,KAAK,EAAC,eAAe;IACpB,eAAa,EAAES,MAAA,CAAAqB,eAAe;IAC9B,eAAa,EAAErB,MAAA,CAAAsB,eAAe;IAC9BC,kBAAgB,EAAEvB,MAAA,CAAAwB;iEAErB/B,mBAAA,CAoBM,OApBNgC,WAoBM,GAnBLhC,mBAAA,CAkBM,OAlBNiC,WAkBM,G,gBAjBLjC,mBAAA,CAIkC;IApCtC,uBAAAkC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiCc5B,MAAA,CAAA6B,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC,cAAc;IACzBC,QAAQ,EAAEhC,MAAA,CAAAe;0BApChBkB,WAAA,I,cAiCcjC,MAAA,CAAA6B,YAAY,E,GAItBpC,mBAAA,CAWM,OAXNyC,WAWM,GAVLzC,mBAAA,CAES;IAFA0C,OAAK,EAAEnC,MAAA,CAAAoC,WAAW;IAAGJ,QAAQ,EAAEhC,MAAA,CAAAe;sBACpCf,MAAA,CAAAe,SAAS,0CAvClBsB,WAAA,GA0CYrC,MAAA,CAAAsC,wBAAwB,CAACC,QAAQ,I,cADxC7C,mBAAA,CAMS;IA/CdF,GAAA;IA2CO2C,OAAK,EAAEnC,MAAA,CAAAwC,qBAAqB;IAC5BR,QAAQ,EAAEhC,MAAA,CAAAe,SAAS;IACpBxB,KAAK,EAAC;KAAY,QAEnB,iBA/CLkD,WAAA,KAAA3B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}