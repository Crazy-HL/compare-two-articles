{"ast":null,"code":"import { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nconst debugMode = true;\n\n// 数据清洗函数\n\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n\n    // 调试模式\n    const cleanValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n\n      // 处理特殊格式\n      if (typeof value === \"string\") {\n        // 处理 \"Value^19,532025\" 这种格式\n        if (value.includes(\"^\")) {\n          const numPart = value.split(\"^\")[1]?.split(\";\")[0];\n          if (numPart) {\n            const num = parseFloat(numPart.replace(/,/g, \"\"));\n            if (!isNaN(num)) return num;\n          }\n        }\n\n        // 处理常规字符串\n        const num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\n        return isNaN(num) ? value : num;\n      }\n      return value;\n    };\n\n    // 处理后的数据\n    const processedArray = computed(() => {\n      if (!props.field) return [];\n      const rawArray = Array.isArray(props.field) ? props.field : [props.field];\n      return rawArray.map(item => {\n        // 提取年份\n        let year;\n        if (item.year) {\n          year = parseInt(item.year);\n        } else if (item.raw) {\n          const yearMatch = String(item.raw).match(/(20\\d{2})/);\n          year = yearMatch ? parseInt(yearMatch[1]) : null;\n        }\n        return {\n          value: cleanValue(item.value ?? item.raw),\n          year: year,\n          raw: item.raw || item.value\n        };\n      }).filter(item => item.value !== null && !isNaN(item.value));\n    });\n\n    // 可视化类型判断\n    const visualizationType = computed(() => {\n      // 1. 使用props指定的类型\n      if (props.visualization) return props.visualization;\n\n      // 2. 自动判断逻辑\n      if (isTimeSeriesData.value) return \"line-chart\";\n      if (isComparisonData.value) return \"bar-chart\";\n      if (isSinglePercentage.value) return \"pie-chart\";\n\n      // 3. 默认文本显示\n      return \"text-only\";\n    });\n\n    // 数据类型判断\n    const isTimeSeriesData = computed(() => {\n      return processedArray.value.length >= 2 && processedArray.value.every(item => item.year && typeof item.value === \"number\");\n    });\n    const isComparisonData = computed(() => {\n      return processedArray.value.length >= 1 && processedArray.value.every(item => typeof item.value === \"number\");\n    });\n    const isSinglePercentage = computed(() => {\n      return props.type === \"percentage\" && !Array.isArray(props.field) && typeof cleanValue(props.field?.value) === \"number\";\n    });\n    const hasData = computed(() => {\n      if (props.field === null || props.field === undefined) return false;\n      if (Array.isArray(props.field)) return processedArray.value.length > 0;\n      return props.field.value !== undefined && props.field.value !== null;\n    });\n    const isArray = computed(() => Array.isArray(props.field));\n\n    // 格式化文本显示\n    const formatTextValue = item => {\n      const value = item.value ?? item;\n      if (value === null || value === undefined) return \"-\";\n      if (typeof value === \"number\") {\n        if (props.type === \"percentage\") return `${value}%`;\n        return value.toLocaleString();\n      }\n\n      // 特殊字段处理\n      if (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\n        return \"人民币 (CNY)\";\n      }\n      return value;\n    };\n\n    // 图表绘制方法\n    const drawPieChart = () => {\n      const container = pieChart.value;\n      if (!container) return;\n      container.innerHTML = \"\";\n\n      // 准备饼图数据\n      let pieData = [];\n      let total = 0;\n      let yearInfo = \"\";\n\n      // 处理数组形式的劳动力分布数据\n      if (Array.isArray(props.field)) {\n        pieData = props.field.filter(item => {\n          // 排除非数值数据和年份信息\n          const value = cleanValue(item.value);\n          return !isNaN(value) && !(item.raw && item.raw.match(/\\(.*\\d{4}.*\\)/));\n        }).map(item => {\n          const value = cleanValue(item.value);\n          total += value;\n\n          // 从raw字段提取行业名称\n          const rawText = item.raw || \"\";\n          const nameMatch = rawText.match(/^([^:]+):/);\n          const name = nameMatch ? nameMatch[1].trim() : \"其他\";\n          return {\n            name: name,\n            value: value,\n            unit: item.unit || \"%\",\n            raw: item.raw\n          };\n        });\n\n        // 提取年份信息\n        const yearItem = props.field.find(item => item.raw && item.raw.match(/\\(.*\\d{4}.*\\)/));\n        if (yearItem) yearInfo = yearItem.raw;\n      }\n      // 处理单值百分比数据\n      else if (props.field.value !== undefined) {\n        const value = cleanValue(props.field.value);\n        if (isNaN(value)) {\n          console.error(\"饼图数据无效:\", value);\n          return;\n        }\n        pieData = [{\n          name: props.fieldKey || \"占比\",\n          value: value,\n          unit: \"%\"\n        }, {\n          name: \"剩余\",\n          value: 100 - value,\n          unit: \"%\"\n        }];\n        total = 100;\n      }\n\n      // 如果没有有效数据\n      if (pieData.length === 0) {\n        container.innerHTML = \"<div class='no-data'>无有效数据</div>\";\n        return;\n      }\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const radius = Math.min(width, height) / 2;\n      const labelRadius = radius * 0.7;\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n      // 颜色方案\n      const color = d3.scaleOrdinal().domain(pieData.map(d => d.name)).range(d3.schemeCategory10);\n      const pie = d3.pie().value(d => d.value).sort(null);\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n      const labelArc = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n\n      // 绘制扇形\n      const arcs = svg.selectAll(\".arc\").data(pie(pieData)).enter().append(\"g\").attr(\"class\", \"arc\");\n      arcs.append(\"path\").attr(\"d\", arc).attr(\"fill\", d => color(d.data.name)).attr(\"stroke\", \"white\").attr(\"stroke-width\", 1).on(\"mouseover\", function (event, d) {\n        d3.select(this).attr(\"opacity\", 0.8);\n        // 显示tooltip\n        svg.append(\"text\").attr(\"class\", \"tooltip\").attr(\"x\", labelArc.centroid(d)[0]).attr(\"y\", labelArc.centroid(d)[1] - 20).attr(\"text-anchor\", \"middle\").text(`${d.data.name}: ${d.data.value}${d.data.unit}`);\n      }).on(\"mouseout\", function () {\n        d3.select(this).attr(\"opacity\", 1);\n        svg.selectAll(\".tooltip\").remove();\n      });\n\n      // 添加标签（只在扇形足够大时显示）\n      arcs.append(\"text\").attr(\"transform\", d => `translate(${labelArc.centroid(d)})`).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"12px\").style(\"pointer-events\", \"none\").style(\"fill\", d => d.data.value / total > 0.15 ? \"white\" : \"none\").style(\"text-shadow\", d => d.data.value / total > 0.15 ? \"1px 1px 2px rgba(0,0,0,0.7)\" : \"none\").text(d => `${d.data.value}${d.data.unit}`);\n\n      // 单值数据在中心显示百分比\n      if (!Array.isArray(props.field) && props.field.value !== undefined) {\n        svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.3em\").style(\"font-size\", \"16px\").style(\"font-weight\", \"bold\").text(`${pieData[0].value}%`);\n      }\n\n      // 添加图例（仅多数据时显示）\n      if (Array.isArray(props.field)) {\n        const legend = svg.selectAll(\".legend\").data(pieData).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (d, i) => `translate(${radius + 20},${i * 20 - radius + 20})`);\n        legend.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).style(\"fill\", d => color(d.name)).style(\"stroke\", \"#fff\");\n        legend.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \".35em\").style(\"font-size\", \"12px\").text(d => `${d.name}`);\n      }\n\n      // 添加年份信息（如果存在）\n      if (yearInfo) {\n        svg.append(\"text\").attr(\"y\", radius + 30).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"10px\").style(\"fill\", \"#666\").text(yearInfo);\n      }\n    };\n    const drawBarChart = () => {\n      const container = barChart.value;\n      if (!container || processedArray.value.length === 0) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleBand().domain(processedArray.value.map((_, i) => i)).range([margin.left, width - margin.right]).padding(0.5);\n      const y = d3.scaleLinear().domain([0, d3.max(processedArray.value, d => d.value)]).range([height - margin.bottom, margin.top]);\n      svg.selectAll(\"rect\").data(processedArray.value).enter().append(\"rect\").attr(\"x\", (_, i) => x(i)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - margin.bottom - y(d.value)).attr(\"fill\", \"#2196F3\");\n      svg.selectAll(\"text\").data(processedArray.value).enter().append(\"text\").attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => props.type === \"percentage\" ? `${d.value}%` : d.value);\n    };\n    const drawLineChart = () => {\n      const container = lineChart.value;\n      if (!container || processedArray.value.length < 2) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      };\n\n      // 按年份排序\n      const chartData = [...processedArray.value].filter(item => item.year && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width - 50).attr(\"height\", height);\n      const x = d3.scaleLinear().domain(d3.extent(chartData, d => d.year)).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain([0, d3.max(chartData, d => d.value) * 1.1]).range([height - margin.bottom, margin.top]);\n\n      // 绘制折线（去掉坐标轴）\n      const line = d3.line().x(d => x(d.year)).y(d => y(d.value)).curve(d3.curveCatmullRom.alpha(0.5)); // 更平滑的曲线\n\n      svg.append(\"path\").datum(chartData).attr(\"d\", line).attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 3) // 加粗线条\n      .attr(\"fill\", \"none\");\n\n      // 数据点（放大并添加白色边框）\n      svg.selectAll(\"circle\").data(chartData).enter().append(\"circle\").attr(\"cx\", d => x(d.year)).attr(\"cy\", d => y(d.value)).attr(\"r\", 5) // 增大半径\n      .attr(\"fill\", \"#2196F3\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 2);\n\n      // 数值标签（只显示最后一个点）\n      const lastPoint = chartData[chartData.length - 1];\n      svg.append(\"text\").attr(\"x\", x(lastPoint.year) + 12).attr(\"y\", y(lastPoint.value)).attr(\"dy\", \"0.35em\").style(\"font-size\", \"12px\").style(\"font-weight\", \"bold\").style(\"fill\", \"#2196F3\").text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\n    };\n\n    // 监听变化\n    watch(() => [props.field, visualizationType.value], () => {\n      nextTick(() => {\n        if (!hasData.value) return;\n        switch (visualizationType.value) {\n          case \"pie-chart\":\n            drawPieChart();\n            break;\n          case \"line-chart\":\n            drawLineChart();\n            break;\n          case \"bar-chart\":\n            drawBarChart();\n            break;\n        }\n      });\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      pieChart,\n      barChart,\n      lineChart,\n      debugMode,\n      cleanValue,\n      processedArray,\n      visualizationType,\n      isTimeSeriesData,\n      isComparisonData,\n      isSinglePercentage,\n      hasData,\n      isArray,\n      formatTextValue,\n      drawPieChart,\n      drawBarChart,\n      drawLineChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      nextTick,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","nextTick","d3","debugMode","props","__props","pieChart","barChart","lineChart","cleanValue","value","undefined","includes","numPart","split","num","parseFloat","replace","isNaN","processedArray","field","rawArray","Array","isArray","map","item","year","parseInt","raw","yearMatch","String","match","filter","visualizationType","visualization","isTimeSeriesData","isComparisonData","isSinglePercentage","length","every","type","hasData","formatTextValue","toLocaleString","fieldKey","drawPieChart","container","innerHTML","pieData","total","yearInfo","rawText","nameMatch","name","trim","unit","yearItem","find","console","error","width","clientWidth","height","clientHeight","radius","Math","min","labelRadius","svg","select","append","attr","color","scaleOrdinal","domain","d","range","schemeCategory10","pie","sort","arc","innerRadius","outerRadius","labelArc","arcs","selectAll","data","enter","on","event","centroid","text","remove","style","legend","i","drawBarChart","margin","top","right","bottom","left","x","scaleBand","_","padding","y","scaleLinear","max","bandwidth","drawLineChart","chartData","a","b","extent","line","curve","curveCatmullRom","alpha","datum","lastPoint","immediate","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<!-- 时间序列折线图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 比较柱状图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 文本显示 -->\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 调试模式\r\n\tconst debugMode = true;\r\n\r\n\t// 数据清洗函数\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 处理特殊格式\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\t// 处理 \"Value^19,532025\" 这种格式\r\n\t\t\tif (value.includes(\"^\")) {\r\n\t\t\t\tconst numPart = value.split(\"^\")[1]?.split(\";\")[0];\r\n\t\t\t\tif (numPart) {\r\n\t\t\t\t\tconst num = parseFloat(numPart.replace(/,/g, \"\"));\r\n\t\t\t\t\tif (!isNaN(num)) return num;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 处理常规字符串\r\n\t\t\tconst num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\r\n\t\t\treturn isNaN(num) ? value : num;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tconst rawArray = Array.isArray(props.field) ? props.field : [props.field];\r\n\r\n\t\treturn rawArray\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 提取年份\r\n\t\t\t\tlet year;\r\n\t\t\t\tif (item.year) {\r\n\t\t\t\t\tyear = parseInt(item.year);\r\n\t\t\t\t} else if (item.raw) {\r\n\t\t\t\t\tconst yearMatch = String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null && !isNaN(item.value));\r\n\t});\r\n\r\n\t// 可视化类型判断\r\n\tconst visualizationType = computed(() => {\r\n\t\t// 1. 使用props指定的类型\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 2. 自动判断逻辑\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\t// 3. 默认文本显示\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 数据类型判断\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(\r\n\t\t\t\titem => item.year && typeof item.value === \"number\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化文本显示\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString();\r\n\t\t}\r\n\r\n\t\t// 特殊字段处理\r\n\t\tif (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\r\n\t\t\treturn \"人民币 (CNY)\";\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 图表绘制方法\r\n\tconst drawPieChart = () => {\r\n\t\tconst container = pieChart.value;\r\n\t\tif (!container) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\t// 准备饼图数据\r\n\t\tlet pieData = [];\r\n\t\tlet total = 0;\r\n\t\tlet yearInfo = \"\";\r\n\r\n\t\t// 处理数组形式的劳动力分布数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\tpieData = props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\t// 排除非数值数据和年份信息\r\n\t\t\t\t\tconst value = cleanValue(item.value);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t!isNaN(value) && !(item.raw && item.raw.match(/\\(.*\\d{4}.*\\)/))\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => {\r\n\t\t\t\t\tconst value = cleanValue(item.value);\r\n\t\t\t\t\ttotal += value;\r\n\r\n\t\t\t\t\t// 从raw字段提取行业名称\r\n\t\t\t\t\tconst rawText = item.raw || \"\";\r\n\t\t\t\t\tconst nameMatch = rawText.match(/^([^:]+):/);\r\n\t\t\t\t\tconst name = nameMatch ? nameMatch[1].trim() : \"其他\";\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tunit: item.unit || \"%\",\r\n\t\t\t\t\t\traw: item.raw\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t// 提取年份信息\r\n\t\t\tconst yearItem = props.field.find(\r\n\t\t\t\titem => item.raw && item.raw.match(/\\(.*\\d{4}.*\\)/)\r\n\t\t\t);\r\n\t\t\tif (yearItem) yearInfo = yearItem.raw;\r\n\t\t}\r\n\t\t// 处理单值百分比数据\r\n\t\telse if (props.field.value !== undefined) {\r\n\t\t\tconst value = cleanValue(props.field.value);\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\tconsole.error(\"饼图数据无效:\", value);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tpieData = [\r\n\t\t\t\t{ name: props.fieldKey || \"占比\", value: value, unit: \"%\" },\r\n\t\t\t\t{ name: \"剩余\", value: 100 - value, unit: \"%\" }\r\n\t\t\t];\r\n\t\t\ttotal = 100;\r\n\t\t}\r\n\r\n\t\t// 如果没有有效数据\r\n\t\tif (pieData.length === 0) {\r\n\t\t\tcontainer.innerHTML = \"<div class='no-data'>无有效数据</div>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\t\tconst labelRadius = radius * 0.7;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\t// 颜色方案\r\n\t\tconst color = d3\r\n\t\t\t.scaleOrdinal()\r\n\t\t\t.domain(pieData.map(d => d.name))\r\n\t\t\t.range(d3.schemeCategory10);\r\n\r\n\t\tconst pie = d3\r\n\t\t\t.pie()\r\n\t\t\t.value(d => d.value)\r\n\t\t\t.sort(null);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tconst labelArc = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\r\n\r\n\t\t// 绘制扇形\r\n\t\tconst arcs = svg\r\n\t\t\t.selectAll(\".arc\")\r\n\t\t\t.data(pie(pieData))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"arc\");\r\n\r\n\t\tarcs\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", d => color(d.data.name))\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 1)\r\n\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 0.8);\r\n\t\t\t\t// 显示tooltip\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"tooltip\")\r\n\t\t\t\t\t.attr(\"x\", labelArc.centroid(d)[0])\r\n\t\t\t\t\t.attr(\"y\", labelArc.centroid(d)[1] - 20)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(`${d.data.name}: ${d.data.value}${d.data.unit}`);\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", function () {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 1);\r\n\t\t\t\tsvg.selectAll(\".tooltip\").remove();\r\n\t\t\t});\r\n\r\n\t\t// 添加标签（只在扇形足够大时显示）\r\n\t\tarcs\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"transform\", d => `translate(${labelArc.centroid(d)})`)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"pointer-events\", \"none\")\r\n\t\t\t.style(\"fill\", d => (d.data.value / total > 0.15 ? \"white\" : \"none\"))\r\n\t\t\t.style(\"text-shadow\", d =>\r\n\t\t\t\td.data.value / total > 0.15 ? \"1px 1px 2px rgba(0,0,0,0.7)\" : \"none\"\r\n\t\t\t)\r\n\t\t\t.text(d => `${d.data.value}${d.data.unit}`);\r\n\r\n\t\t// 单值数据在中心显示百分比\r\n\t\tif (!Array.isArray(props.field) && props.field.value !== undefined) {\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t\t.style(\"font-size\", \"16px\")\r\n\t\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t\t.text(`${pieData[0].value}%`);\r\n\t\t}\r\n\r\n\t\t// 添加图例（仅多数据时显示）\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\tconst legend = svg\r\n\t\t\t\t.selectAll(\".legend\")\r\n\t\t\t\t.data(pieData)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t\t.attr(\r\n\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t(d, i) => `translate(${radius + 20},${i * 20 - radius + 20})`\r\n\t\t\t\t);\r\n\r\n\t\t\tlegend\r\n\t\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"width\", 18)\r\n\t\t\t\t.attr(\"height\", 18)\r\n\t\t\t\t.style(\"fill\", d => color(d.name))\r\n\t\t\t\t.style(\"stroke\", \"#fff\");\r\n\r\n\t\t\tlegend\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"x\", 24)\r\n\t\t\t\t.attr(\"y\", 9)\r\n\t\t\t\t.attr(\"dy\", \".35em\")\r\n\t\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t\t.text(d => `${d.name}`);\r\n\t\t}\r\n\r\n\t\t// 添加年份信息（如果存在）\r\n\t\tif (yearInfo) {\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"y\", radius + 30)\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t.style(\"fill\", \"#666\")\r\n\t\t\t\t.text(yearInfo);\r\n\t\t}\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tconst container = barChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(processedArray.value.map((_, i) => i))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.5);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(processedArray.value, d => d.value)])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => (props.type === \"percentage\" ? `${d.value}%` : d.value));\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tconst container = lineChart.value;\r\n\t\tif (!container || processedArray.value.length < 2) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n\r\n\t\t// 按年份排序\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width - 50)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(chartData, d => d.value) * 1.1])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\t// 绘制折线（去掉坐标轴）\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5)); // 更平滑的曲线\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke-width\", 3) // 加粗线条\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\t// 数据点（放大并添加白色边框）\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 5) // 增大半径\r\n\t\t\t.attr(\"fill\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 2);\r\n\r\n\t\t// 数值标签（只显示最后一个点）\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 12)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.style(\"fill\", \"#2196F3\")\r\n\t\t\t.text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #eee; /* 调试边框 */\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}