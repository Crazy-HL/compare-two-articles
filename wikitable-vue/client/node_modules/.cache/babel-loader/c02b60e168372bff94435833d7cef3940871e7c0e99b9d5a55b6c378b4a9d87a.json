{"ast":null,"code":"import { ref, computed, onMounted, nextTick } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: [],\n      isCombined: false\n    });\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"劳动力分布比例\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n    const showFullChart = (infobox, field) => {\n      closeFullChart();\n      nextTick(() => {\n        currentChart.value = {\n          title: infobox.title,\n          field: field,\n          data: getField(infobox, field.key),\n          isCombined: false\n        };\n        showFullChartModal.value = true;\n      });\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n      currentChart.value = {\n        title: \"\",\n        field: {},\n        data: [],\n        isCombined: false\n      };\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n      return [];\n    };\n    const handleMiddleColumnClick = field => {\n      closeFullChart();\n      nextTick(() => {\n        emit(\"compareAttribute\", {\n          fieldKey: field.key,\n          leftData: getField(leftInfobox.value, field.key),\n          rightData: getField(rightInfobox.value, field.key),\n          leftTitle: leftInfobox.value.title,\n          rightTitle: rightInfobox.value.title,\n          fieldType: field.type,\n          fieldLabel: field.typeLabel\n        });\n      });\n    };\n    const handleRightClick = (event, field) => {\n      event.preventDefault();\n      closeFullChart();\n      nextTick(() => {\n        const leftData = getField(leftInfobox.value, field.key);\n        const rightData = getField(rightInfobox.value, field.key);\n        if (leftData.length === 0 && rightData.length === 0) {\n          console.warn(\"没有可合并的数据\");\n          return;\n        }\n        currentChart.value = {\n          title: `合并图表 - ${field.key}`,\n          field: field,\n          data: {\n            left: {\n              title: leftInfobox.value.title,\n              data: leftData\n            },\n            right: {\n              title: rightInfobox.value.title,\n              data: rightData\n            }\n          },\n          isCombined: true\n        };\n        showFullChartModal.value = true;\n      });\n    };\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"close-all-charts\", () => {\n        closeFullChart();\n      });\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      COMPARABLE_FIELDS,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      getField,\n      handleMiddleColumnClick,\n      handleRightClick,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      nextTick,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","isCombined","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","showFullChart","infobox","closeFullChart","value","getField","hoverInfobox","fieldKey","side","infoboxTitle","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","section","Object","values","undefined","Array","isArray","handleMiddleColumnClick","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","handleRightClick","event","preventDefault","length","console","warn","left","right","comparableFields","filter","leftVal","rightVal","processInfoboxData","sections","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover.stop=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout.stop=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click.stop=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover.stop=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout.stop=\"unhoverBothInfoboxes()\"\r\n\t\t\t\t\t@click.stop=\"handleMiddleColumnClick(field)\"\r\n\t\t\t\t\t@contextmenu.prevent=\"handleRightClick($event, field)\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"action-hint\">左键对比分析 | 右键合并图表</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover.stop=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout.stop=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click.stop=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\"\r\n\t\t\t\t\t\t:is-combined=\"currentChart.isCombined\"\r\n\t\t\t\t\t\t:left-title=\"leftInfobox.title\"\r\n\t\t\t\t\t\t:right-title=\"rightInfobox.title\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, defineEmits, nextTick } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: [],\r\n\t\tisCombined: false\r\n\t});\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"劳动力分布比例\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcloseFullChart();\r\n\t\tnextTick(() => {\r\n\t\t\tcurrentChart.value = {\r\n\t\t\t\ttitle: infobox.title,\r\n\t\t\t\tfield: field,\r\n\t\t\t\tdata: getField(infobox, field.key),\r\n\t\t\t\tisCombined: false\r\n\t\t\t};\r\n\t\t\tshowFullChartModal.value = true;\r\n\t\t});\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: \"\",\r\n\t\t\tfield: {},\r\n\t\t\tdata: [],\r\n\t\t\tisCombined: false\r\n\t\t};\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\tcloseFullChart();\r\n\t\tnextTick(() => {\r\n\t\t\temit(\"compareAttribute\", {\r\n\t\t\t\tfieldKey: field.key,\r\n\t\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\t\tfieldType: field.type,\r\n\t\t\t\tfieldLabel: field.typeLabel\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleRightClick = (event, field) => {\r\n\t\tevent.preventDefault();\r\n\t\tcloseFullChart();\r\n\t\tnextTick(() => {\r\n\t\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\t\tif (leftData.length === 0 && rightData.length === 0) {\r\n\t\t\t\tconsole.warn(\"没有可合并的数据\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentChart.value = {\r\n\t\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\t\tfield: field,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tleft: {\r\n\t\t\t\t\t\ttitle: leftInfobox.value.title,\r\n\t\t\t\t\t\tdata: leftData\r\n\t\t\t\t\t},\r\n\t\t\t\t\tright: {\r\n\t\t\t\t\t\ttitle: rightInfobox.value.title,\r\n\t\t\t\t\t\tdata: rightData\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tisCombined: true\r\n\t\t\t};\r\n\t\t\tshowFullChartModal.value = true;\r\n\t\t});\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"close-all-charts\", () => {\r\n\t\t\tcloseFullChart();\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.middle-column:active {\r\n\t\tbackground-color: #dee2e6;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.action-hint {\r\n\t\tposition: absolute;\r\n\t\tbottom: 2px;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tfont-size: 9px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\topacity: 0;\r\n\t\ttransition: opacity 0.3s;\r\n\t}\r\n\r\n\t.middle-column:hover .action-hint {\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}