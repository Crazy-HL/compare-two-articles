{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e9e4c20\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"div0 selectContent1\",\n  id: \"div1\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    innerHTML: $setup.div1Content,\n    class: \"showHtml\"\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","innerHTML","$setup","div1Content","_hoisted_2"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div1.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0 selectContent1\" id=\"div1\">\r\n\t\t<div v-html=\"div1Content\" class=\"showHtml\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport MouseSelection from \"@/js/mouse_selection\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst div1Content = ref(\"\");\r\n\r\n\tonMounted(async () => {\r\n\t\tconst src = \"https://en.wikipedia.org/wiki/LeBron_James\";\r\n\t\tawait showHtml(src, div1Content);\r\n\r\n\t\tnextTick(() => {\r\n\t\t\tMouseSelection.start({\r\n\t\t\t\trangeSelector: \".selectContent1\",\r\n\t\t\t\tcustomId: \"div1\"\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 只绑定 div1 的 mouseup 事件\r\n\t\tdocument\r\n\t\t\t.querySelector(\"#div1\")\r\n\t\t\t.addEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tdocument\r\n\t\t\t.querySelector(\"#div1\")\r\n\t\t\t.removeEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n\r\n\tfunction handleSelection() {\r\n\t\tMouseSelection.selectionChangeFun(selectContent => {\r\n\t\t\tif (selectContent) {\r\n\t\t\t\tconsole.log(\"选中的内容来自 Div1:\", selectContent);\r\n\t\t\t\tbus.emit(\"div1Event\", selectContent);\r\n\t\t\t}\r\n\t\t}, \"div1\");\r\n\t}\r\n\r\n\tasync function showHtml(src, area) {\r\n\t\ttry {\r\n\t\t\tapi.get(\"html\", { url: src }, data => {\r\n\t\t\t\tarea.value = fixWikipediaCSS(htmlToDom(data));\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"请求失败：\", err.message);\r\n\t\t\tarea.value = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t// 解析 HTML\r\n\tfunction htmlToDom(html) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn doc.documentElement.outerHTML;\r\n\t}\r\n\r\n\t// 修正维基百科的 CSS\r\n\tfunction fixWikipediaCSS(html) {\r\n\t\treturn html.replace(\r\n\t\t\t\"</head>\",\r\n\t\t\t`\r\n\t\t<style>\r\n\t\t\tbody {\r\n\t\t\t\twidth: 1000px; /* 强制宽度足够，防止换行 */\r\n\t\t\t\toverflow-x: auto !important;\r\n\t\t\t}\r\n\t\t\t.mw-body {\r\n\t\t\t\twidth: 100% !important;\r\n\t\t\t}\r\n\t\t\t.vector-header {\r\n\t\t\t\tmin-width: 1000px !important; /* 防止搜索栏换行 */\r\n\t\t\t}\r\n\t\t</style>\r\n\t\t</head>\r\n\t`\r\n\t\t);\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#div1 {\r\n\t\twidth: 55%;\r\n\t\theight: 90vh; /* 让 div 高度适应页面 */\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tposition: relative;\r\n\t\tbackground: white;\r\n\t\tborder: 1px solid #ccc;\r\n\t}\r\n\r\n\t/* 使用 transform 缩小页面 */\r\n\t.showHtml {\r\n\t\twidth: 125%;\r\n\t\ttransform: scale(0.8); /* 缩小页面 */\r\n\t\ttransform-origin: top left;\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #ccc;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,qBAAqB;EAACC,EAAE,EAAC;;mBADrC;;uBACCC,mBAAA,CAEM,OAFNC,UAEM,GADLC,mBAAA,CAAiD;IAA5CC,SAAoB,EAAZC,MAAA,CAAAC,WAAW;IAAEP,KAAK,EAAC;0BAFlCQ,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}