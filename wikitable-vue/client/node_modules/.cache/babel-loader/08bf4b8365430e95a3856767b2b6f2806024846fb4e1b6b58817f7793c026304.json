{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport HighlightText from \"@/js/highlight\"; // 高亮工具\n\nexport default {\n  __name: 'BaseWikipedia',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref(\"\"); // 选中的文字\n    const showPopup = ref(false); // 是否显示弹出框\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n        injectWikipediaStyles();\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **手动引入 Wikipedia CSS**\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // **选中内容并处理表格显示**\n    const handleSelection = () => {\n      const selection = window.getSelection();\n      if (!selection.rangeCount) return;\n      const range = selection.getRangeAt(0);\n      const selectedHtml = range.cloneContents();\n\n      // 创建临时容器\n      const tempDiv = document.createElement(\"div\");\n      tempDiv.appendChild(selectedHtml);\n      if (tempDiv.querySelector(\"table\")) {\n        // 选中的是表格\n        selectedText.value = tempDiv.innerHTML;\n      } else {\n        // 选中的是普通文本\n        const text = selection.toString().trim();\n        if (!text) return;\n        selectedText.value = `<p>${text}</p>`;\n      }\n      showPopup.value = true;\n\n      // 触发高亮\n      bus.emit(`${props.divId}Event`, {\n        content: selection.toString()\n      });\n      HighlightText.highlightSelection();\n\n      // 确保弹窗位置更新\n      nextTick(() => {\n        updatePopupPosition();\n      });\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value = false;\n      selectedText.value = \"\";\n    };\n\n    // **更新遮罩层和弹出框的位置**\n    const updatePopupPosition = () => {\n      if (showPopup.value && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        if (popup) {\n          const rect = divRef.value.getBoundingClientRect();\n          const scrollTop = divRef.value.scrollTop;\n          const scrollLeft = divRef.value.scrollLeft;\n          popup.style.top = `${rect.height / 2 + scrollTop}px`;\n          popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n        }\n      }\n    };\n\n    // **组件挂载时加载 Wikipedia 内容**\n    onMounted(() => {\n      fetchWikipediaContent();\n      document.querySelector(`#${props.divId}`).addEventListener(\"mouseup\", handleSelection);\n    });\n\n    // **组件卸载时解绑事件**\n    onUnmounted(() => {\n      document.querySelector(`#${props.divId}`).removeEventListener(\"mouseup\", handleSelection);\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      handleSelection,\n      closePopup,\n      updatePopupPosition,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      get HighlightText() {\n        return HighlightText;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","bus","HighlightText","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","contentElement","querySelector","value","innerHTML","injectWikipediaStyles","err","message","wikipediaStyles","forEach","url","document","styleTag","createElement","rel","href","head","appendChild","handleSelection","selection","window","getSelection","rangeCount","range","getRangeAt","selectedHtml","cloneContents","tempDiv","toString","trim","emit","divId","content","highlightSelection","updatePopupPosition","closePopup","popup","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","height","left","width","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<div v-if=\"loading\" class=\"loading-container\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">Loading...</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<div v-else-if=\"error\" class=\"error-container\">\r\n\t\t\t<div class=\"error-icon\">⚠️</div>\r\n\t\t\t<div class=\"error-message\">{{ error }}</div>\r\n\t\t\t<button class=\"retry-button\" @click=\"fetchWikipediaContent\">重试</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 遮罩层 -->\r\n\t\t<div v-if=\"showPopup\" class=\"overlay\" @click=\"closePopup\"></div>\r\n\r\n\t\t<!-- 选中内容放大显示 -->\r\n\t\t<div v-if=\"showPopup\" class=\"text-popup\" @click=\"closePopup\">\r\n\t\t\t<div v-html=\"selectedText\"></div>\r\n\t\t\t<!-- 允许渲染 HTML，支持表格 -->\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport HighlightText from \"@/js/highlight\"; // 高亮工具\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **选中内容并处理表格显示**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection.rangeCount) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst selectedHtml = range.cloneContents();\r\n\r\n\t\t// 创建临时容器\r\n\t\tconst tempDiv = document.createElement(\"div\");\r\n\t\ttempDiv.appendChild(selectedHtml);\r\n\r\n\t\tif (tempDiv.querySelector(\"table\")) {\r\n\t\t\t// 选中的是表格\r\n\t\t\tselectedText.value = tempDiv.innerHTML;\r\n\t\t} else {\r\n\t\t\t// 选中的是普通文本\r\n\t\t\tconst text = selection.toString().trim();\r\n\t\t\tif (!text) return;\r\n\t\t\tselectedText.value = `<p>${text}</p>`;\r\n\t\t}\r\n\r\n\t\tshowPopup.value = true;\r\n\r\n\t\t// 触发高亮\r\n\t\tbus.emit(`${props.divId}Event`, { content: selection.toString() });\r\n\t\tHighlightText.highlightSelection();\r\n\r\n\t\t// 确保弹窗位置更新\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **更新遮罩层和弹出框的位置**\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tif (popup) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载时加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.addEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.removeEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* Wikipedia 内容 */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tfont-size: 0.6vw;\r\n\t}\r\n\r\n\t/* 表格样式 */\r\n\t.wikipedia-content table {\r\n\t\tborder: 1px solid #ddd;\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t}\r\n\r\n\t.wikipedia-content th,\r\n\t.wikipedia-content td {\r\n\t\tborder: 1px solid #ddd;\r\n\t\tpadding: 8px;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.wikipedia-content th {\r\n\t\tbackground-color: #f2f2f2;\r\n\t}\r\n\r\n\t/* 遮罩层 */\r\n\t.overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0, 0, 0, 0.6);\r\n\t\tz-index: 90;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 选中内容弹出框 */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 80%;\r\n\t\tmax-width: 600px;\r\n\t\tbackground: rgba(255, 255, 255, 0.98);\r\n\t\tpadding: 25px;\r\n\t\tbox-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 12px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 0.8vw;\r\n\t\tfont-weight: 500;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t/* 选中文本的高亮 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}