{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nexport default {\n  __name: 'LoadingSpinner',\n  props: {\n    message: {\n      type: String,\n      default: \"正在处理数据...\"\n    },\n    isLoading: Boolean,\n    table1: Object,\n    table2: Object\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 计算公共属性\n    const commonAttributes = computed(() => {\n      if (!props.table1?.rows || !props.table2?.rows) return [];\n      return props.table1.rows.filter(attr => props.table2.rows.includes(attr) && ![\"Year\", \"Team\"].includes(attr));\n    });\n\n    // 计算年份范围\n    const minYear = computed(() => {\n      const years = [...getAllYears(props.table1), ...getAllYears(props.table2)].filter(y => !isNaN(y));\n      return years.length ? Math.min(...years) : null;\n    });\n    const maxYear = computed(() => {\n      const years = [...getAllYears(props.table1), ...getAllYears(props.table2)].filter(y => !isNaN(y));\n      return years.length ? Math.max(...years) : null;\n    });\n    const hasData = computed(() => {\n      return commonAttributes.value.length > 0;\n    });\n\n    // 初始化图表\n    function initChart(el, attr) {\n      if (!el || !props.table1 || !props.table2) return;\n      renderComparisonChart(el, {\n        attr,\n        table1: props.table1,\n        table2: props.table2\n      });\n    }\n\n    // 渲染对比图表\n    function renderComparisonChart(container, _ref2) {\n      let {\n        attr,\n        table1,\n        table2\n      } = _ref2;\n      // 清空容器\n      container.innerHTML = \"\";\n      const width = 400;\n      const height = 200;\n      const padding = 30;\n\n      // 创建SVG元素\n      const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      svg.setAttribute(\"width\", \"100%\");\n      svg.setAttribute(\"height\", \"100%\");\n      svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n      // 获取所有年份\n      const allYears = [...getAllYears(table1), ...getAllYears(table2)].filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n\n      // 准备数据\n      const dataset = {\n        table1: prepareSeriesData(table1, attr, allYears),\n        table2: prepareSeriesData(table2, attr, allYears)\n      };\n\n      // 计算比例尺\n      const xScale = year => {\n        const index = allYears.indexOf(year);\n        return padding + index * (width - 2 * padding) / (allYears.length - 1);\n      };\n      const yScale = value => {\n        const allValues = [...dataset.table1, ...dataset.table2].filter(v => v !== null);\n        const max = Math.max(...allValues);\n        return height - padding - value / max * 0.8 * (height - 2 * padding);\n      };\n\n      // 绘制折线\n      const drawLine = (data, color) => {\n        let pathData = \"\";\n        data.forEach((item, i) => {\n          if (item.value === null) return;\n          const x = xScale(item.year);\n          const y = yScale(item.value);\n          if (i === 0 || pathData === \"\") {\n            pathData = `M ${x} ${y}`;\n          } else {\n            pathData += ` L ${x} ${y}`;\n          }\n        });\n        const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.setAttribute(\"d\", pathData);\n        path.setAttribute(\"stroke\", color);\n        path.setAttribute(\"stroke-width\", \"2\");\n        path.setAttribute(\"fill\", \"none\");\n        svg.appendChild(path);\n      };\n\n      // 绘制数据点\n      const drawPoints = (data, color) => {\n        data.forEach(item => {\n          if (item.value === null) return;\n          const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n          circle.setAttribute(\"cx\", xScale(item.year));\n          circle.setAttribute(\"cy\", yScale(item.value));\n          circle.setAttribute(\"r\", \"4\");\n          circle.setAttribute(\"fill\", color);\n          circle.setAttribute(\"data-year\", item.year);\n          circle.setAttribute(\"data-value\", item.value);\n          svg.appendChild(circle);\n        });\n      };\n\n      // 执行绘制\n      drawLine(dataset.table1, \"#5470c6\");\n      drawLine(dataset.table2, \"#ee6666\");\n      drawPoints(dataset.table1, \"#5470c6\");\n      drawPoints(dataset.table2, \"#ee6666\");\n      container.appendChild(svg);\n    }\n\n    // 辅助函数\n    function getAllYears(table) {\n      return table?.columns?.map(col => col.data.Year) || [];\n    }\n    function prepareSeriesData(table, attr, allYears) {\n      return allYears.map(year => ({\n        year,\n        value: getValueByYear(table, year, attr)\n      }));\n    }\n    function getValueByYear(table, year, attr) {\n      const record = table?.columns?.find(col => col.data.Year == year);\n      return record ? parseFloat(record.data[attr]) || null : null;\n    }\n    function getAttributeName(attr) {\n      const map = {\n        GP: \"出场次数\",\n        GS: \"首发次数\",\n        MPG: \"场均时间\",\n        PPG: \"场均得分\",\n        APG: \"场均助攻\",\n        RPG: \"场均篮板\",\n        SPG: \"场均抢断\",\n        BPG: \"场均盖帽\",\n        \"FG%\": \"投篮命中率\",\n        \"3P%\": \"三分命中率\",\n        \"FT%\": \"罚球命中率\"\n      };\n      return map[attr] || attr;\n    }\n    const __returned__ = {\n      props,\n      commonAttributes,\n      minYear,\n      maxYear,\n      hasData,\n      initChart,\n      renderComparisonChart,\n      getAllYears,\n      prepareSeriesData,\n      getValueByYear,\n      getAttributeName,\n      ref,\n      computed,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","props","__props","commonAttributes","table1","rows","table2","filter","attr","includes","minYear","years","getAllYears","y","isNaN","length","Math","min","maxYear","max","hasData","value","initChart","el","renderComparisonChart","container","_ref2","innerHTML","width","height","padding","svg","document","createElementNS","setAttribute","allYears","v","i","a","indexOf","sort","b","dataset","prepareSeriesData","xScale","year","index","yScale","allValues","drawLine","data","color","pathData","forEach","item","x","path","appendChild","drawPoints","circle","table","columns","map","col","Year","getValueByYear","record","find","parseFloat","getAttributeName","GP","GS","MPG","PPG","APG","RPG","SPG","BPG"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/LoadingSpinner.vue"],"sourcesContent":["<template>\r\n\t<div class=\"visualization-container\">\r\n\t\t<!-- 加载状态 -->\r\n\t\t<div v-if=\"isLoading\" class=\"loading-state\">\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">{{ message }}</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化展示 -->\r\n\t\t<div v-else-if=\"hasData\" class=\"time-series-comparison\">\r\n\t\t\t<div v-for=\"attr in commonAttributes\" :key=\"attr\" class=\"chart-card\">\r\n\t\t\t\t<h3>{{ getAttributeName(attr) }}</h3>\r\n\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t<svg :ref=\"el => initChart(el, attr)\" class=\"time-series-chart\"></svg>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"time-range\">年份范围: {{ minYear }} - {{ maxYear }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 空状态 -->\r\n\t\t<div v-else class=\"empty-state\">暂无数据可供可视化</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tmessage: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"正在处理数据...\"\r\n\t\t},\r\n\t\tisLoading: Boolean,\r\n\t\ttable1: Object,\r\n\t\ttable2: Object\r\n\t});\r\n\r\n\t// 计算公共属性\r\n\tconst commonAttributes = computed(() => {\r\n\t\tif (!props.table1?.rows || !props.table2?.rows) return [];\r\n\t\treturn props.table1.rows.filter(\r\n\t\t\tattr =>\r\n\t\t\t\tprops.table2.rows.includes(attr) && ![\"Year\", \"Team\"].includes(attr)\r\n\t\t);\r\n\t});\r\n\r\n\t// 计算年份范围\r\n\tconst minYear = computed(() => {\r\n\t\tconst years = [\r\n\t\t\t...getAllYears(props.table1),\r\n\t\t\t...getAllYears(props.table2)\r\n\t\t].filter(y => !isNaN(y));\r\n\t\treturn years.length ? Math.min(...years) : null;\r\n\t});\r\n\r\n\tconst maxYear = computed(() => {\r\n\t\tconst years = [\r\n\t\t\t...getAllYears(props.table1),\r\n\t\t\t...getAllYears(props.table2)\r\n\t\t].filter(y => !isNaN(y));\r\n\t\treturn years.length ? Math.max(...years) : null;\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn commonAttributes.value.length > 0;\r\n\t});\r\n\r\n\t// 初始化图表\r\n\tfunction initChart(el, attr) {\r\n\t\tif (!el || !props.table1 || !props.table2) return;\r\n\r\n\t\trenderComparisonChart(el, {\r\n\t\t\tattr,\r\n\t\t\ttable1: props.table1,\r\n\t\t\ttable2: props.table2\r\n\t\t});\r\n\t}\r\n\r\n\t// 渲染对比图表\r\n\tfunction renderComparisonChart(container, { attr, table1, table2 }) {\r\n\t\t// 清空容器\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = 400;\r\n\t\tconst height = 200;\r\n\t\tconst padding = 30;\r\n\r\n\t\t// 创建SVG元素\r\n\t\tconst svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\tsvg.setAttribute(\"width\", \"100%\");\r\n\t\tsvg.setAttribute(\"height\", \"100%\");\r\n\t\tsvg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\r\n\r\n\t\t// 获取所有年份\r\n\t\tconst allYears = [...getAllYears(table1), ...getAllYears(table2)]\r\n\t\t\t.filter((v, i, a) => a.indexOf(v) === i)\r\n\t\t\t.sort((a, b) => a - b);\r\n\r\n\t\t// 准备数据\r\n\t\tconst dataset = {\r\n\t\t\ttable1: prepareSeriesData(table1, attr, allYears),\r\n\t\t\ttable2: prepareSeriesData(table2, attr, allYears)\r\n\t\t};\r\n\r\n\t\t// 计算比例尺\r\n\t\tconst xScale = year => {\r\n\t\t\tconst index = allYears.indexOf(year);\r\n\t\t\treturn padding + (index * (width - 2 * padding)) / (allYears.length - 1);\r\n\t\t};\r\n\r\n\t\tconst yScale = value => {\r\n\t\t\tconst allValues = [...dataset.table1, ...dataset.table2].filter(\r\n\t\t\t\tv => v !== null\r\n\t\t\t);\r\n\t\t\tconst max = Math.max(...allValues);\r\n\t\t\treturn height - padding - (value / max) * 0.8 * (height - 2 * padding);\r\n\t\t};\r\n\r\n\t\t// 绘制折线\r\n\t\tconst drawLine = (data, color) => {\r\n\t\t\tlet pathData = \"\";\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tif (item.value === null) return;\r\n\r\n\t\t\t\tconst x = xScale(item.year);\r\n\t\t\t\tconst y = yScale(item.value);\r\n\r\n\t\t\t\tif (i === 0 || pathData === \"\") {\r\n\t\t\t\t\tpathData = `M ${x} ${y}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpathData += ` L ${x} ${y}`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst path = document.createElementNS(\r\n\t\t\t\t\"http://www.w3.org/2000/svg\",\r\n\t\t\t\t\"path\"\r\n\t\t\t);\r\n\t\t\tpath.setAttribute(\"d\", pathData);\r\n\t\t\tpath.setAttribute(\"stroke\", color);\r\n\t\t\tpath.setAttribute(\"stroke-width\", \"2\");\r\n\t\t\tpath.setAttribute(\"fill\", \"none\");\r\n\t\t\tsvg.appendChild(path);\r\n\t\t};\r\n\r\n\t\t// 绘制数据点\r\n\t\tconst drawPoints = (data, color) => {\r\n\t\t\tdata.forEach(item => {\r\n\t\t\t\tif (item.value === null) return;\r\n\r\n\t\t\t\tconst circle = document.createElementNS(\r\n\t\t\t\t\t\"http://www.w3.org/2000/svg\",\r\n\t\t\t\t\t\"circle\"\r\n\t\t\t\t);\r\n\t\t\t\tcircle.setAttribute(\"cx\", xScale(item.year));\r\n\t\t\t\tcircle.setAttribute(\"cy\", yScale(item.value));\r\n\t\t\t\tcircle.setAttribute(\"r\", \"4\");\r\n\t\t\t\tcircle.setAttribute(\"fill\", color);\r\n\t\t\t\tcircle.setAttribute(\"data-year\", item.year);\r\n\t\t\t\tcircle.setAttribute(\"data-value\", item.value);\r\n\t\t\t\tsvg.appendChild(circle);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// 执行绘制\r\n\t\tdrawLine(dataset.table1, \"#5470c6\");\r\n\t\tdrawLine(dataset.table2, \"#ee6666\");\r\n\t\tdrawPoints(dataset.table1, \"#5470c6\");\r\n\t\tdrawPoints(dataset.table2, \"#ee6666\");\r\n\r\n\t\tcontainer.appendChild(svg);\r\n\t}\r\n\r\n\t// 辅助函数\r\n\tfunction getAllYears(table) {\r\n\t\treturn table?.columns?.map(col => col.data.Year) || [];\r\n\t}\r\n\r\n\tfunction prepareSeriesData(table, attr, allYears) {\r\n\t\treturn allYears.map(year => ({\r\n\t\t\tyear,\r\n\t\t\tvalue: getValueByYear(table, year, attr)\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction getValueByYear(table, year, attr) {\r\n\t\tconst record = table?.columns?.find(col => col.data.Year == year);\r\n\t\treturn record ? parseFloat(record.data[attr]) || null : null;\r\n\t}\r\n\r\n\tfunction getAttributeName(attr) {\r\n\t\tconst map = {\r\n\t\t\tGP: \"出场次数\",\r\n\t\t\tGS: \"首发次数\",\r\n\t\t\tMPG: \"场均时间\",\r\n\t\t\tPPG: \"场均得分\",\r\n\t\t\tAPG: \"场均助攻\",\r\n\t\t\tRPG: \"场均篮板\",\r\n\t\t\tSPG: \"场均抢断\",\r\n\t\t\tBPG: \"场均盖帽\",\r\n\t\t\t\"FG%\": \"投篮命中率\",\r\n\t\t\t\"3P%\": \"三分命中率\",\r\n\t\t\t\"FT%\": \"罚球命中率\"\r\n\t\t};\r\n\t\treturn map[attr] || attr;\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.loading-state {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.time-series-comparison {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-card {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 15px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\theight: 200px;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t.time-series-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.time-range {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.empty-state {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #888;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}