{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nimport CausalFlowChart from \"@/components/compoents_base/CausalFlowChart.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const PRESERVED_FIELDS_BY_SECTION = {\n      Statistics: [\"Population\", \"GDP\", \"GDP rank\", \"GDP growth\", \"GDP per capita\", \"GDP per capita rank\", \"GDP by sector\", \"Inflation (CPI)\", \"Population below poverty line\", \"Gini coefficient\", \"Human Development Index\", \"Corruption Perceptions Index\", \"Labor force\", \"Labor force by occupation\", \"Unemployment\", \"Average gross salary\", \"Average net salary\", \"Main industries\"],\n      \"Public finances\": [\"Government debt\", \"Foreign reserves\", \"Budget balance\", \"Revenues\", \"Expenses\", \"Economic aid\", \"Credit rating\"]\n    };\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n    const div1InfoboxData = ref(null);\n    const div3InfoboxData = ref(null);\n    const showSuggestedQuestion = ref(false);\n    const suggestedQuestion = ref(\"\");\n    const currentFieldKey = ref(\"\");\n    const leftData = ref(null);\n    const rightData = ref(null);\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    };\n    const getLastAnalysis = () => {\n      const reversed = [...chatHistory.value].reverse();\n      const lastAssistantMsg = reversed.find(msg => msg.role === \"assistant\" && !msg.error);\n      return lastAssistantMsg ? lastAssistantMsg.content : \"\";\n    };\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n      bus.on(\"div1_InfoboxData\", data => {\n        div1InfoboxData.value = data;\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        div3InfoboxData.value = data;\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n      text = text.replace(/^# (.*$)/gm, \"<h1>$1</h1>\").replace(/^## (.*$)/gm, \"<h2>$1</h2>\").replace(/^### (.*$)/gm, \"<h3>$1</h3>\").replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\*(.*?)\\*/g, \"<em>$1</em>\").replace(/`(.*?)`/g, \"<code>$1</code>\").replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">').replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>').replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\").replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\").replace(/\\n\\n/g, \"<br><br>\").replace(/\\n/g, \"<br>\");\n      return `<div class=\"markdown-content\">${text}</div>`;\n    };\n    const extractEssentialData = fieldData => {\n      if (!fieldData) return null;\n      const essential = {\n        value: fieldData.value,\n        type: fieldData.type\n      };\n      if (fieldData.unit) essential.unit = fieldData.unit;\n      if (fieldData.currency) essential.currency = fieldData.currency;\n      if (fieldData.extracted) essential.raw = fieldData.raw;\n      return essential;\n    };\n    const simplifyInfobox = infobox => {\n      if (!infobox) return {};\n      const result = {\n        title: infobox.title,\n        type: infobox.type\n      };\n      if (infobox.sections) {\n        result.sections = {};\n        Object.entries(infobox.sections).forEach(_ref2 => {\n          let [sectionName, sectionData] = _ref2;\n          if (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\n            result.sections[sectionName] = {};\n            PRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\n              if (sectionData[fieldName]) {\n                if (Array.isArray(sectionData[fieldName])) {\n                  result.sections[sectionName][fieldName] = sectionData[fieldName].map(item => extractEssentialData(item));\n                } else {\n                  result.sections[sectionName][fieldName] = extractEssentialData(sectionData[fieldName]);\n                }\n              }\n            });\n          }\n        });\n      }\n      return result;\n    };\n    const parseCausalChains = text => {\n      const chains = [];\n      const countries = text.split(\"##\").filter(s => s.trim());\n      countries.forEach(countrySection => {\n        const countryMatch = countrySection.match(/(韩国|日本)/);\n        if (!countryMatch) return;\n        const country = countryMatch[0] === \"韩国\" ? \"korea\" : \"japan\";\n        const chainContent = countrySection.replace(/^.*?\\n/, \"\").trim();\n        const steps = chainContent.split(\"→\").map(step => {\n          const cleanStep = step.trim();\n          const evidenceMatch = cleanStep.match(/\\((.*?)\\)/);\n          const textPart = evidenceMatch ? cleanStep.replace(evidenceMatch[0], \"\").trim() : cleanStep;\n          return {\n            text: textPart,\n            evidence: evidenceMatch ? evidenceMatch[1] : null\n          };\n        }).filter(step => step.text);\n        if (steps.length > 0) {\n          chains.push({\n            country,\n            steps: steps.slice(0, 6)\n          });\n        }\n      });\n      return chains;\n    };\n\n    // 新增公共函数\n    const pushMessage = function (role, content) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      chatHistory.value.push({\n        role,\n        content,\n        timestamp: new Date().toLocaleString(),\n        ...options\n      });\n    };\n    const handleError = error => {\n      pushMessage(\"assistant\", `请求失败: ${error.message || \"未知错误\"}`, {\n        error: true\n      });\n    };\n    const buildChartData = () => ({\n      leftData: leftData.value,\n      rightData: rightData.value,\n      leftTitle: \"当前选择\",\n      rightTitle: \"对比选择\",\n      fieldKey: currentFieldKey.value,\n      leftInfobox: simplifyInfobox(div1InfoboxData.value),\n      rightInfobox: simplifyInfobox(div3InfoboxData.value)\n    });\n    const sendAnalysisRequest = async (endpoint, payload) => {\n      try {\n        const response = await api.post(endpoint, payload);\n        const resultKey = endpoint === \"ask_infobox\" ? \"answer\" : \"analysis\";\n        const formatted = formatAnalysisResult(response[resultKey]);\n\n        // 处理因果流程图\n        const hasCausalFlow = response[resultKey]?.includes(\"##\");\n        pushMessage(\"assistant\", hasCausalFlow ? \"以下是因果分析：\" : formatted, {\n          isCausalFlow: hasCausalFlow,\n          causalChains: hasCausalFlow ? parseCausalChains(response[resultKey]) : []\n        });\n        return response;\n      } catch (error) {\n        handleError(error);\n        throw error;\n      }\n    };\n\n    // 修改后的核心函数\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        pushMessage(\"assistant\", \"问题不能为空\", {\n          error: true\n        });\n        return;\n      }\n      const question = userQuestion.value;\n      pushMessage(\"user\", question);\n      userQuestion.value = \"\";\n      showSuggestedQuestion.value = false;\n      isLoading.value = true;\n      try {\n        // 自由提问模式\n        if (!currentFieldKey.value) {\n          await sendAnalysisRequest(\"ask_infobox\", {\n            question: question,\n            leftInfobox: simplifyInfobox(div1InfoboxData.value),\n            rightInfobox: simplifyInfobox(div3InfoboxData.value)\n          });\n          return;\n        }\n\n        // 深入分析模式（通过建议问题触发）\n        if (question.includes(\"分析\") && question.includes(\"原因\")) {\n          await sendAnalysisRequest(\"compare_attributes\", {\n            chartData: {\n              ...buildChartData(),\n              allFields: Object.keys({\n                ...div1InfoboxData.value,\n                ...div3InfoboxData.value\n              })\n            },\n            chartType: \"comparison\",\n            followUp: true,\n            previousAnalysis: getLastAnalysis()\n          });\n        }\n        // 普通对比模式（非建议问题触发）\n        else {\n          await sendAnalysisRequest(\"compare_attributes\", {\n            chartData: buildChartData(),\n            chartType: \"comparison\",\n            followUp: false\n          });\n          suggestedQuestion.value = `请结合其他属性深入分析${currentFieldKey.value}差异的原因`;\n          showSuggestedQuestion.value = true;\n        }\n      } catch (error) {\n        handleError(error);\n      } finally {\n        isLoading.value = false;\n        isAutoComparison.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 修改后的自动对比函数\n    const handleAttributeComparison = async _ref3 => {\n      let {\n        fieldKey,\n        leftData: incomingLeftData,\n        rightData: incomingRightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref3;\n      if (!incomingLeftData || !incomingRightData) {\n        pushMessage(\"assistant\", \"请先选择要对比的数据\", {\n          error: true\n        });\n        return;\n      }\n\n      // 更新数据状态\n      leftData.value = incomingLeftData;\n      rightData.value = incomingRightData;\n      currentFieldKey.value = fieldKey;\n      isAutoComparison.value = true; // 标记为自动对比\n\n      isLoading.value = true;\n      pushMessage(\"assistant\", `正在对比分析<strong>${fieldKey}</strong>属性...`);\n      try {\n        await sendAnalysisRequest(\"compare_attributes\", {\n          chartData: {\n            leftData: leftData.value,\n            rightData: rightData.value,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType,\n            allFields: Object.keys({\n              ...div1InfoboxData.value,\n              ...div3InfoboxData.value\n            }),\n            leftInfobox: simplifyInfobox(div1InfoboxData.value),\n            rightInfobox: simplifyInfobox(div3InfoboxData.value)\n          },\n          chartType: \"comparison\"\n        });\n\n        // 自动对比后设置建议问题\n        suggestedQuestion.value = `请结合其他属性深入分析${fieldKey}差异的原因`;\n        showSuggestedQuestion.value = true;\n      } catch (error) {\n        handleError(error);\n      } finally {\n        isLoading.value = false;\n        isAutoComparison.value = false; // 重置标记\n        scrollToBottom();\n      }\n    };\n    const __returned__ = {\n      PRESERVED_FIELDS_BY_SECTION,\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      div1InfoboxData,\n      div3InfoboxData,\n      showSuggestedQuestion,\n      suggestedQuestion,\n      currentFieldKey,\n      leftData,\n      rightData,\n      loadChatHistory,\n      scrollToBottom,\n      getLastAnalysis,\n      handleDiv1Event,\n      handleDiv3Event,\n      handleSelection,\n      getPlainTextFromSelection,\n      formatAnalysisResult,\n      extractEssentialData,\n      simplifyInfobox,\n      parseCausalChains,\n      pushMessage,\n      handleError,\n      buildChartData,\n      sendAnalysisRequest,\n      askQuestion,\n      handleAttributeComparison,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable,\n      CausalFlowChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","CausalFlowChart","PRESERVED_FIELDS_BY_SECTION","Statistics","userQuestion","chatHistory","selectText2","selectText3","div1RawData","div3RawData","isLoading","div1InfoboxData","div3InfoboxData","showSuggestedQuestion","suggestedQuestion","currentFieldKey","leftData","rightData","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","getLastAnalysis","reversed","reverse","lastAssistantMsg","find","msg","role","content","handleDiv1Event","data","handleSelection","handleDiv3Event","on","off","source","plainText","getPlainTextFromSelection","htmlContent","createElement","innerHTML","innerText","textContent","formatAnalysisResult","text","replace","extractEssentialData","fieldData","essential","type","unit","currency","extracted","raw","simplifyInfobox","infobox","result","title","sections","Object","entries","forEach","_ref2","sectionName","sectionData","fieldName","Array","isArray","map","item","parseCausalChains","chains","countries","split","filter","s","trim","countrySection","countryMatch","match","country","chainContent","steps","step","cleanStep","evidenceMatch","textPart","evidence","length","push","slice","pushMessage","options","arguments","undefined","timestamp","Date","toLocaleString","handleError","message","buildChartData","leftTitle","rightTitle","fieldKey","leftInfobox","rightInfobox","sendAnalysisRequest","endpoint","payload","response","api","post","resultKey","formatted","hasCausalFlow","includes","isCausalFlow","causalChains","askQuestion","question","chartData","allFields","keys","chartType","followUp","previousAnalysis","isAutoComparison","handleAttributeComparison","_ref3","incomingLeftData","incomingRightData","fieldType","fieldLabel"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\" v-html=\"message.content\"></div>\r\n\t\t\t\t\t<CausalFlowChart\r\n\t\t\t\t\t\tv-if=\"message.isCausalFlow\"\r\n\t\t\t\t\t\t:chains=\"message.causalChains\"\r\n\t\t\t\t\t\tclass=\"causal-flow-container\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"showSuggestedQuestion\" class=\"suggested-question\">\r\n\t\t\t\t\t<div class=\"suggestion-text\">建议深入分析的问题：</div>\r\n\t\t\t\t\t<div class=\"suggestion-content\" @click=\"useSuggestedQuestion\">\r\n\t\t\t\t\t\t{{ suggestedQuestion }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input-area\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport CausalFlowChart from \"@/components/compoents_base/CausalFlowChart.vue\";\r\n\r\n\tconst PRESERVED_FIELDS_BY_SECTION = {\r\n\t\tStatistics: [\r\n\t\t\t\"Population\",\r\n\t\t\t\"GDP\",\r\n\t\t\t\"GDP rank\",\r\n\t\t\t\"GDP growth\",\r\n\t\t\t\"GDP per capita\",\r\n\t\t\t\"GDP per capita rank\",\r\n\t\t\t\"GDP by sector\",\r\n\t\t\t\"Inflation (CPI)\",\r\n\t\t\t\"Population below poverty line\",\r\n\t\t\t\"Gini coefficient\",\r\n\t\t\t\"Human Development Index\",\r\n\t\t\t\"Corruption Perceptions Index\",\r\n\t\t\t\"Labor force\",\r\n\t\t\t\"Labor force by occupation\",\r\n\t\t\t\"Unemployment\",\r\n\t\t\t\"Average gross salary\",\r\n\t\t\t\"Average net salary\",\r\n\t\t\t\"Main industries\"\r\n\t\t],\r\n\t\t\"Public finances\": [\r\n\t\t\t\"Government debt\",\r\n\t\t\t\"Foreign reserves\",\r\n\t\t\t\"Budget balance\",\r\n\t\t\t\"Revenues\",\r\n\t\t\t\"Expenses\",\r\n\t\t\t\"Economic aid\",\r\n\t\t\t\"Credit rating\"\r\n\t\t]\r\n\t};\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\tconst showSuggestedQuestion = ref(false);\r\n\tconst suggestedQuestion = ref(\"\");\r\n\tconst currentFieldKey = ref(\"\");\r\n\tconst leftData = ref(null);\r\n\tconst rightData = ref(null);\r\n\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst getLastAnalysis = () => {\r\n\t\tconst reversed = [...chatHistory.value].reverse();\r\n\t\tconst lastAssistantMsg = reversed.find(\r\n\t\t\tmsg => msg.role === \"assistant\" && !msg.error\r\n\t\t);\r\n\t\treturn lastAssistantMsg ? lastAssistantMsg.content : \"\";\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\r\n\t\ttext = text\r\n\t\t\t.replace(/^# (.*$)/gm, \"<h1>$1</h1>\")\r\n\t\t\t.replace(/^## (.*$)/gm, \"<h2>$1</h2>\")\r\n\t\t\t.replace(/^### (.*$)/gm, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\r\n\t\t\t.replace(/`(.*?)`/g, \"<code>$1</code>\")\r\n\t\t\t.replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">')\r\n\t\t\t.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>')\r\n\t\t\t.replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\")\r\n\t\t\t.replace(/\\n\\n/g, \"<br><br>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\");\r\n\r\n\t\treturn `<div class=\"markdown-content\">${text}</div>`;\r\n\t};\r\n\r\n\tconst extractEssentialData = fieldData => {\r\n\t\tif (!fieldData) return null;\r\n\r\n\t\tconst essential = {\r\n\t\t\tvalue: fieldData.value,\r\n\t\t\ttype: fieldData.type\r\n\t\t};\r\n\r\n\t\tif (fieldData.unit) essential.unit = fieldData.unit;\r\n\t\tif (fieldData.currency) essential.currency = fieldData.currency;\r\n\t\tif (fieldData.extracted) essential.raw = fieldData.raw;\r\n\r\n\t\treturn essential;\r\n\t};\r\n\r\n\tconst simplifyInfobox = infobox => {\r\n\t\tif (!infobox) return {};\r\n\r\n\t\tconst result = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\ttype: infobox.type\r\n\t\t};\r\n\r\n\t\tif (infobox.sections) {\r\n\t\t\tresult.sections = {};\r\n\r\n\t\t\tObject.entries(infobox.sections).forEach(([sectionName, sectionData]) => {\r\n\t\t\t\tif (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\r\n\t\t\t\t\tresult.sections[sectionName] = {};\r\n\r\n\t\t\t\t\tPRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\r\n\t\t\t\t\t\tif (sectionData[fieldName]) {\r\n\t\t\t\t\t\t\tif (Array.isArray(sectionData[fieldName])) {\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = sectionData[\r\n\t\t\t\t\t\t\t\t\tfieldName\r\n\t\t\t\t\t\t\t\t].map(item => extractEssentialData(item));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = extractEssentialData(\r\n\t\t\t\t\t\t\t\t\tsectionData[fieldName]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst parseCausalChains = text => {\r\n\t\tconst chains = [];\r\n\t\tconst countries = text.split(\"##\").filter(s => s.trim());\r\n\r\n\t\tcountries.forEach(countrySection => {\r\n\t\t\tconst countryMatch = countrySection.match(/(韩国|日本)/);\r\n\t\t\tif (!countryMatch) return;\r\n\r\n\t\t\tconst country = countryMatch[0] === \"韩国\" ? \"korea\" : \"japan\";\r\n\t\t\tconst chainContent = countrySection.replace(/^.*?\\n/, \"\").trim();\r\n\r\n\t\t\tconst steps = chainContent\r\n\t\t\t\t.split(\"→\")\r\n\t\t\t\t.map(step => {\r\n\t\t\t\t\tconst cleanStep = step.trim();\r\n\t\t\t\t\tconst evidenceMatch = cleanStep.match(/\\((.*?)\\)/);\r\n\t\t\t\t\tconst textPart = evidenceMatch\r\n\t\t\t\t\t\t? cleanStep.replace(evidenceMatch[0], \"\").trim()\r\n\t\t\t\t\t\t: cleanStep;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: textPart,\r\n\t\t\t\t\t\tevidence: evidenceMatch ? evidenceMatch[1] : null\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.filter(step => step.text);\r\n\r\n\t\t\tif (steps.length > 0) {\r\n\t\t\t\tchains.push({\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tsteps: steps.slice(0, 6)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn chains;\r\n\t};\r\n\r\n\t// 新增公共函数\r\n\tconst pushMessage = (role, content, options = {}) => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole,\r\n\t\t\tcontent,\r\n\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t...options\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleError = error => {\r\n\t\tpushMessage(\"assistant\", `请求失败: ${error.message || \"未知错误\"}`, {\r\n\t\t\terror: true\r\n\t\t});\r\n\t};\r\n\r\n\tconst buildChartData = () => ({\r\n\t\tleftData: leftData.value,\r\n\t\trightData: rightData.value,\r\n\t\tleftTitle: \"当前选择\",\r\n\t\trightTitle: \"对比选择\",\r\n\t\tfieldKey: currentFieldKey.value,\r\n\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t});\r\n\r\n\tconst sendAnalysisRequest = async (endpoint, payload) => {\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(endpoint, payload);\r\n\t\t\tconst resultKey = endpoint === \"ask_infobox\" ? \"answer\" : \"analysis\";\r\n\t\t\tconst formatted = formatAnalysisResult(response[resultKey]);\r\n\r\n\t\t\t// 处理因果流程图\r\n\t\t\tconst hasCausalFlow = response[resultKey]?.includes(\"##\");\r\n\t\t\tpushMessage(\"assistant\", hasCausalFlow ? \"以下是因果分析：\" : formatted, {\r\n\t\t\t\tisCausalFlow: hasCausalFlow,\r\n\t\t\t\tcausalChains: hasCausalFlow\r\n\t\t\t\t\t? parseCausalChains(response[resultKey])\r\n\t\t\t\t\t: []\r\n\t\t\t});\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\thandleError(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\t// 修改后的核心函数\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tpushMessage(\"assistant\", \"问题不能为空\", { error: true });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tpushMessage(\"user\", question);\r\n\t\tuserQuestion.value = \"\";\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 自由提问模式\r\n\t\t\tif (!currentFieldKey.value) {\r\n\t\t\t\tawait sendAnalysisRequest(\"ask_infobox\", {\r\n\t\t\t\t\tquestion: question,\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// 深入分析模式（通过建议问题触发）\r\n\t\t\tif (question.includes(\"分析\") && question.includes(\"原因\")) {\r\n\t\t\t\tawait sendAnalysisRequest(\"compare_attributes\", {\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\t...buildChartData(),\r\n\t\t\t\t\t\tallFields: Object.keys({\r\n\t\t\t\t\t\t\t...div1InfoboxData.value,\r\n\t\t\t\t\t\t\t...div3InfoboxData.value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\tfollowUp: true,\r\n\t\t\t\t\tpreviousAnalysis: getLastAnalysis()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// 普通对比模式（非建议问题触发）\r\n\t\t\telse {\r\n\t\t\t\tawait sendAnalysisRequest(\"compare_attributes\", {\r\n\t\t\t\t\tchartData: buildChartData(),\r\n\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\tfollowUp: false\r\n\t\t\t\t});\r\n\t\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${currentFieldKey.value}差异的原因`;\r\n\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\thandleError(error);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tisAutoComparison.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 修改后的自动对比函数\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData: incomingLeftData,\r\n\t\trightData: incomingRightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!incomingLeftData || !incomingRightData) {\r\n\t\t\tpushMessage(\"assistant\", \"请先选择要对比的数据\", { error: true });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 更新数据状态\r\n\t\tleftData.value = incomingLeftData;\r\n\t\trightData.value = incomingRightData;\r\n\t\tcurrentFieldKey.value = fieldKey;\r\n\t\tisAutoComparison.value = true; // 标记为自动对比\r\n\r\n\t\tisLoading.value = true;\r\n\t\tpushMessage(\"assistant\", `正在对比分析<strong>${fieldKey}</strong>属性...`);\r\n\r\n\t\ttry {\r\n\t\t\tawait sendAnalysisRequest(\"compare_attributes\", {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tleftTitle,\r\n\t\t\t\t\trightTitle,\r\n\t\t\t\t\tfieldKey,\r\n\t\t\t\t\tfieldType,\r\n\t\t\t\t\tallFields: Object.keys({\r\n\t\t\t\t\t\t...div1InfoboxData.value,\r\n\t\t\t\t\t\t...div3InfoboxData.value\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t},\r\n\t\t\t\tchartType: \"comparison\"\r\n\t\t\t});\r\n\r\n\t\t\t// 自动对比后设置建议问题\r\n\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${fieldKey}差异的原因`;\r\n\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t} catch (error) {\r\n\t\t\thandleError(error);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tisAutoComparison.value = false; // 重置标记\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100vh;\r\n\t\tbackground: #f5f7fa;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\theight: 50vh;\r\n\t\tmin-height: 50vh;\r\n\t\toverflow: hidden;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\tscroll-behavior: smooth;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\theight: 30vh;\r\n\t\tmin-height: 30vh;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tmargin: 0 10px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-area {\r\n\t\theight: 15vh;\r\n\t\tmin-height: 15vh;\r\n\t\tpadding: 15px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-top: 1px solid #e0e0e0;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 15px 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tline-height: 1.6;\r\n\t\tposition: relative;\r\n\t\tmax-width: 85%;\r\n\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.message.user {\r\n\t\tbackground: #e3f2fd;\r\n\t\tmargin-left: auto;\r\n\t\tborder-bottom-right-radius: 4px;\r\n\t\tborder: 1px solid #bbdefb;\r\n\t}\r\n\r\n\t.message.assistant {\r\n\t\tbackground: #f8f9fa;\r\n\t\tmargin-right: auto;\r\n\t\tborder-bottom-left-radius: 4px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.message.error {\r\n\t\tbackground: #ffebee;\r\n\t\tborder-left: 4px solid #f44336;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tword-wrap: break-word;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.input-container textarea {\r\n\t\twidth: 100%;\r\n\t\tpadding: 12px 16px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 12px;\r\n\t\tresize: none;\r\n\t\tfont-size: 14px;\r\n\t\toutline: none;\r\n\t\tbackground: #f9f9f9;\r\n\t}\r\n\r\n\t.input-container textarea:focus {\r\n\t\tbackground: #ffffff;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tbackground: #4285f4;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 20px;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.button-container button:hover {\r\n\t\tbackground: #3367d6;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t.button-container button:disabled {\r\n\t\tbackground: #b3c6e0;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 15px;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\tborder: 3px solid rgba(66, 133, 244, 0.2);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top: 3px solid #4285f4;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.markdown-content {\r\n\t\tline-height: 1.7;\r\n\t\tfont-size: 15px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.markdown-content h1 {\r\n\t\tfont-size: 1.5em;\r\n\t\tmargin: 20px 0 15px;\r\n\t\tpadding-bottom: 5px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.markdown-content h2 {\r\n\t\tfont-size: 1.3em;\r\n\t\tmargin: 18px 0 12px;\r\n\t\tcolor: #34495e;\r\n\t}\r\n\r\n\t.markdown-content h3 {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin: 15px 0 10px;\r\n\t\tcolor: #4285f4;\r\n\t}\r\n\r\n\t.markdown-content ul,\r\n\t.markdown-content ol {\r\n\t\tpadding-left: 25px;\r\n\t\tmargin: 12px 0;\r\n\t}\r\n\r\n\t.markdown-content li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.markdown-content ul li::before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #4285f4;\r\n\t\tposition: absolute;\r\n\t\tleft: -15px;\r\n\t}\r\n\r\n\t.markdown-content strong {\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.markdown-content em {\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.markdown-content code {\r\n\t\tbackground: rgba(66, 133, 244, 0.1);\r\n\t\tpadding: 2px 6px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\r\n\t\tfont-size: 0.9em;\r\n\t\tcolor: #d63384;\r\n\t}\r\n\r\n\t.markdown-content blockquote {\r\n\t\tborder-left: 3px solid #4285f4;\r\n\t\tpadding: 10px 15px;\r\n\t\tmargin: 15px 0;\r\n\t\tbackground: rgba(66, 133, 244, 0.05);\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.markdown-content a {\r\n\t\tcolor: #4285f4;\r\n\t\ttext-decoration: none;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.markdown-content a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n\r\n\t.suggested-question {\r\n\t\tmargin: 15px 0;\r\n\t\tpadding: 12px;\r\n\t\tbackground-color: #f5f7fa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px dashed #4285f4;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.suggested-question:hover {\r\n\t\tbackground-color: #e8f0fe;\r\n\t}\r\n\r\n\t.suggestion-text {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.suggestion-content {\r\n\t\tcolor: #4285f4;\r\n\t\tfont-weight: 500;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.causal-flow-container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\toverflow: hidden;\r\n\t\tpadding: 0 5px;\r\n\t\tmargin-top: 15px;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.chat-container {\r\n\t\t\theight: 45vh;\r\n\t\t\tmin-height: 45vh;\r\n\t\t}\r\n\r\n\t\t.vis-container {\r\n\t\t\theight: 35vh;\r\n\t\t\tmin-height: 35vh;\r\n\t\t}\r\n\r\n\t\t.input-area {\r\n\t\t\theight: 20vh;\r\n\t\t\tmin-height: 20vh;\r\n\t\t}\r\n\r\n\t\t.message {\r\n\t\t\tmax-width: 90%;\r\n\t\t\tpadding: 12px 15px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}