{"ast":null,"code":"import * as d3 from \"d3\";\nimport { toRaw } from \"vue\";\nimport { renderLineChart, renderBarChart, renderPieChart } from \"@/js/chartUtils\";\nexport default {\n  data() {\n    return {\n      text: \"\",\n      // 用户输入的文章内容\n      jsonData: null // 后端返回的 JSON 数据\n    };\n  },\n  methods: {\n    // 提交文章内容并获取处理结果\n    async processText() {\n      try {\n        const response = await fetch(\"http://localhost:8888/process_text\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: this.text\n          })\n        });\n        const result = await response.json();\n\n        // 检查是否有错误信息\n        if (result.error) {\n          console.error(\"后端返回的错误:\", result.error);\n          alert(`处理文章内容时出错: ${result.message}`);\n          return;\n        }\n\n        // 赋值时确保 jsonData 是对象\n        this.jsonData = result.json_data;\n        console.log(\"后端返回的数据:\", result.json_data);\n        console.log(\"赋值后的 jsonData:\", this.jsonData);\n        this.renderChart();\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    },\n    // 渲染图表\n    renderChart() {\n      // 将响应式对象转换为普通对象\n      const rawJsonData = toRaw(this.jsonData);\n      if (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n      const chartType = rawJsonData.type;\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      if (chartType === \"line\") {\n        renderLineChart(this.$refs.chart, data, options);\n      } else if (chartType === \"bar\") {\n        renderBarChart(this.$refs.chart, data, options);\n      } else if (chartType === \"pie\") {\n        renderPieChart(this.$refs.chart, data, options);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n  }\n};","map":{"version":3,"names":["d3","toRaw","renderLineChart","renderBarChart","renderPieChart","data","text","jsonData","methods","processText","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","alert","message","json_data","log","renderChart","rawJsonData","select","$refs","chart","html","chartType","type","options"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis2.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<h1>文章内容可视化工具</h1>\r\n\t\t<div class=\"upload-section\">\r\n\t\t\t<textarea v-model=\"text\" placeholder=\"请输入文章内容\"></textarea>\r\n\t\t\t<button @click=\"processText\">提交并可视化</button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"visualization-section\">\r\n\t\t\t<h2>可视化结果</h2>\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\timport { toRaw } from \"vue\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttext: \"\", // 用户输入的文章内容\r\n\t\t\t\tjsonData: null // 后端返回的 JSON 数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交文章内容并获取处理结果\r\n\t\t\tasync processText() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({ text: this.text })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst result = await response.json();\r\n\r\n\t\t\t\t\t// 检查是否有错误信息\r\n\t\t\t\t\tif (result.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 赋值时确保 jsonData 是对象\r\n\t\t\t\t\tthis.jsonData = result.json_data;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", result.json_data);\r\n\t\t\t\t\tconsole.log(\"赋值后的 jsonData:\", this.jsonData);\r\n\t\t\t\t\tthis.renderChart();\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\t// 将响应式对象转换为普通对象\r\n\t\t\t\tconst rawJsonData = toRaw(this.jsonData);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!rawJsonData ||\r\n\t\t\t\t\ttypeof rawJsonData !== \"object\" ||\r\n\t\t\t\t\t!rawJsonData.data\r\n\t\t\t\t) {\r\n\t\t\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\tconst chartType = rawJsonData.type;\r\n\t\t\t\tconst data = rawJsonData.data;\r\n\t\t\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\t\t\tif (chartType === \"line\") {\r\n\t\t\t\t\trenderLineChart(this.$refs.chart, data, options);\r\n\t\t\t\t} else if (chartType === \"bar\") {\r\n\t\t\t\t\trenderBarChart(this.$refs.chart, data, options);\r\n\t\t\t\t} else if (chartType === \"pie\") {\r\n\t\t\t\t\trenderPieChart(this.$refs.chart, data, options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t#app {\r\n\t\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 60px;\r\n\t}\r\n\r\n\t.upload-section {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 80%;\r\n\t\theight: 150px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 800px;\r\n\t\theight: 400px;\r\n\t\tmargin-top: 20px;\r\n\t\tborder: 1px solid #ccc; /* 添加边框以便查看容器 */\r\n\t}\r\n</style>\r\n"],"mappings":"AAgBC,OAAO,KAAKA,EAAC,MAAO,IAAI;AACxB,SAASC,KAAI,QAAS,KAAK;AAC3B,SACCC,eAAe,EACfC,cAAc,EACdC,cAAa,QACP,iBAAiB;AAExB,eAAe;EACdC,IAAIA,CAAA,EAAG;IACN,OAAO;MACNC,IAAI,EAAE,EAAE;MAAE;MACVC,QAAQ,EAAE,IAAG,CAAE;IAChB,CAAC;EACF,CAAC;EACDC,OAAO,EAAE;IACR;IACA,MAAMC,WAAWA,CAAA,EAAG;MACnB,IAAI;QACH,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACR,cAAc,EAAE;UACjB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,IAAI,EAAE,IAAI,CAACA;UAAK,CAAC;QACzC,CAAC,CAAC;QACF,MAAMW,MAAK,GAAI,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;QAEpC;QACA,IAAID,MAAM,CAACE,KAAK,EAAE;UACjBC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEF,MAAM,CAACE,KAAK,CAAC;UACvCE,KAAK,CAAC,cAAcJ,MAAM,CAACK,OAAO,EAAE,CAAC;UACrC;QACD;;QAEA;QACA,IAAI,CAACf,QAAO,GAAIU,MAAM,CAACM,SAAS;QAChCH,OAAO,CAACI,GAAG,CAAC,UAAU,EAAEP,MAAM,CAACM,SAAS,CAAC;QACzCH,OAAO,CAACI,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACjB,QAAQ,CAAC;QAC5C,IAAI,CAACkB,WAAW,CAAC,CAAC;MACnB,EAAE,OAAON,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCE,KAAK,CAAC,iBAAiB,CAAC;MACzB;IACD,CAAC;IAED;IACAI,WAAWA,CAAA,EAAG;MACb;MACA,MAAMC,WAAU,GAAIzB,KAAK,CAAC,IAAI,CAACM,QAAQ,CAAC;MAExC,IACC,CAACmB,WAAU,IACX,OAAOA,WAAU,KAAM,QAAO,IAC9B,CAACA,WAAW,CAACrB,IAAG,EACf;QACDe,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEO,WAAW,CAAC;QACxC;MACD;;MAEA;MACA1B,EAAE,CAAC2B,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;MAEpC,MAAMC,SAAQ,GAAIL,WAAW,CAACM,IAAI;MAClC,MAAM3B,IAAG,GAAIqB,WAAW,CAACrB,IAAI;MAC7B,MAAM4B,OAAM,GAAIP,WAAW,CAACO,OAAM,IAAK,CAAC,CAAC;MAEzC,IAAIF,SAAQ,KAAM,MAAM,EAAE;QACzB7B,eAAe,CAAC,IAAI,CAAC0B,KAAK,CAACC,KAAK,EAAExB,IAAI,EAAE4B,OAAO,CAAC;MACjD,OAAO,IAAIF,SAAQ,KAAM,KAAK,EAAE;QAC/B5B,cAAc,CAAC,IAAI,CAACyB,KAAK,CAACC,KAAK,EAAExB,IAAI,EAAE4B,OAAO,CAAC;MAChD,OAAO,IAAIF,SAAQ,KAAM,KAAK,EAAE;QAC/B3B,cAAc,CAAC,IAAI,CAACwB,KAAK,CAACC,KAAK,EAAExB,IAAI,EAAE4B,OAAO,CAAC;MAChD,OAAO;QACNb,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEY,SAAS,CAAC;MACrC;IACD;EACD;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}