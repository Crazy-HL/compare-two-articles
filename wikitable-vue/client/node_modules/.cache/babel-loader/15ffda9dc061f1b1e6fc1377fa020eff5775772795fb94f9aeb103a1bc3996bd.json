{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3649e1b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"infobox-viewer\"\n};\nconst _hoisted_2 = {\n  class: \"data-grid\"\n};\nconst _hoisted_3 = {\n  class: \"data-label\"\n};\nconst _hoisted_4 = {\n  class: \"data-value\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"data-parsed\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.classifiedData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.classifiedData, (data, category) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"data-section\",\n      key: category\n    }, [_createElementVNode(\"h3\", null, _toDisplayString($setup.categoryLabels[category]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(data, (value, key) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: key,\n        class: \"data-item\"\n      }, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString(key) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, [value && typeof value === 'object' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createTextVNode(_toDisplayString(value.original) + \" \", 1 /* TEXT */), value.value ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" (\" + _toDisplayString(value.value) + \" \" + _toDisplayString(value.unit) + \") \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createTextVNode(_toDisplayString(value || \"-\"), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"未找到可提取的信息框数据\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","classifiedData","_Fragment","_renderList","data","category","_createElementVNode","_toDisplayString","categoryLabels","_hoisted_2","value","_hoisted_3","_hoisted_4","_createTextVNode","original","_hoisted_5","unit","_createCommentVNode","_hoisted_6"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\WikiInfoboxViewer.vue"],"sourcesContent":["<template>\r\n\t<div class=\"infobox-viewer\">\r\n\t\t<div\r\n\t\t\tv-if=\"classifiedData\"\r\n\t\t\tclass=\"data-section\"\r\n\t\t\tv-for=\"(data, category) in classifiedData\"\r\n\t\t\t:key=\"category\">\r\n\t\t\t<h3>{{ categoryLabels[category] }}</h3>\r\n\t\t\t<div class=\"data-grid\">\r\n\t\t\t\t<div v-for=\"(value, key) in data\" :key=\"key\" class=\"data-item\">\r\n\t\t\t\t\t<span class=\"data-label\">{{ key }}:</span>\r\n\t\t\t\t\t<span class=\"data-value\">\r\n\t\t\t\t\t\t<template v-if=\"value && typeof value === 'object'\">\r\n\t\t\t\t\t\t\t{{ value.original }}\r\n\t\t\t\t\t\t\t<span v-if=\"value.value\" class=\"data-parsed\">\r\n\t\t\t\t\t\t\t\t({{ value.value }} {{ value.unit }})\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t{{ value || \"-\" }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else class=\"no-data\">未找到可提取的信息框数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport {\r\n\t\textractInfoboxData,\r\n\t\tclassifyInfoboxData\r\n\t} from \"@/js/wikiInfoboxParser\";\r\n\r\n\tconst props = defineProps({\r\n\t\tinfoboxElement: {\r\n\t\t\ttype: HTMLElement,\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 分类标签映射\r\n\tconst categoryLabels = {\r\n\t\tidentifiers: \"标识信息\",\r\n\t\ttemporal: \"时间信息\",\r\n\t\tquantitative: \"量化数据\",\r\n\t\trelational: \"关联信息\",\r\n\t\tcategorical: \"分类信息\",\r\n\t\tother: \"其他信息\"\r\n\t};\r\n\r\n\t// 提取并分类数据\r\n\tconst classifiedData = computed(() => {\r\n\t\tif (!props.infoboxElement) return null;\r\n\t\tconst rawData = extractInfoboxData(props.infoboxElement);\r\n\t\treturn classifyInfoboxData(rawData);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.infobox-viewer {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.5;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.data-section {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #e1e4e8;\r\n\t\tborder-radius: 6px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.data-section h3 {\r\n\t\tmargin: 0;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground-color: #f6f8fa;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 600;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t}\r\n\r\n\t.data-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n\t\tgap: 12px;\r\n\t\tpadding: 12px;\r\n\t}\r\n\r\n\t.data-item {\r\n\t\tdisplay: flex;\r\n\t\tmin-width: 0;\r\n\t}\r\n\r\n\t.data-label {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-right: 8px;\r\n\t\tflex-shrink: 0;\r\n\t\tcolor: #24292e;\r\n\t}\r\n\r\n\t.data-value {\r\n\t\tflex-grow: 1;\r\n\t\tmin-width: 0;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.data-parsed {\r\n\t\tcolor: #6a737d;\r\n\t\tfont-size: 0.9em;\r\n\t\tmargin-left: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tpadding: 16px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #6a737d;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAOpBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAX7BC,GAAA;EAcgCD,KAAK,EAAC;;;EAdtCC,GAAA;EAyBcD,KAAK,EAAC;;;uBAxBnBE,mBAAA,CAyBM,OAzBNC,UAyBM,GAvBEC,MAAA,CAAAC,cAAc,I,kBADrBH,mBAAA,CAsBMI,SAAA;IAxBRL,GAAA;EAAA,GAAAM,WAAA,CAK8BH,MAAA,CAAAC,cAAc,EAL5C,CAKWG,IAAI,EAAEC,QAAQ;yBAHvBP,mBAAA,CAsBM;MApBLF,KAAK,EAAC,cAAc;MAEnBC,GAAG,EAAEQ;QACNC,mBAAA,CAAuC,YAAAC,gBAAA,CAAhCP,MAAA,CAAAQ,cAAc,CAACH,QAAQ,mBAC9BC,mBAAA,CAeM,OAfNG,UAeM,I,kBAdLX,mBAAA,CAaMI,SAAA,QAtBVC,WAAA,CASgCC,IAAI,EATpC,CASiBM,KAAK,EAAEb,GAAG;2BAAvBC,mBAAA,CAaM;QAb6BD,GAAG,EAAEA,GAAG;QAAED,KAAK,EAAC;UAClDU,mBAAA,CAA0C,QAA1CK,UAA0C,EAAAJ,gBAAA,CAAdV,GAAG,IAAG,GAAC,iBACnCS,mBAAA,CAUO,QAVPM,UAUO,GATUF,KAAK,WAAWA,KAAK,iB,cAArCZ,mBAAA,CAKWI,SAAA;QAjBjBL,GAAA;MAAA,IAAAgB,gBAAA,CAAAN,gBAAA,CAaUG,KAAK,CAACI,QAAQ,IAAG,GACpB,iBAAYJ,KAAK,CAACA,KAAK,I,cAAvBZ,mBAAA,CAEO,QAFPiB,UAEO,EAFsC,IAC3C,GAAAR,gBAAA,CAAGG,KAAK,CAACA,KAAK,IAAG,GAAC,GAAAH,gBAAA,CAAGG,KAAK,CAACM,IAAI,IAAG,IACpC,mBAhBPC,mBAAA,e,8CAkBMnB,mBAAA,CAEWI,SAAA;QApBjBL,GAAA;MAAA,IAAAgB,gBAAA,CAAAN,gBAAA,CAmBUG,KAAK,wB;;kDAMbZ,mBAAA,CAA8C,OAA9CoB,UAA8C,EAAlB,cAAY,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}