{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport { debounce } from \"lodash-es\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 数据源状态\n    const showInfoboxData = ref(true);\n    const infoboxDataReady = ref(false);\n    const tableDataReady = ref(false);\n\n    // 容器引用\n    const containerRef = ref(null);\n\n    // 图表尺寸控制\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n    const leftChartColor = ref(\"#4a90e2\");\n    const rightChartColor = ref(\"#ef4444\");\n\n    // 数据存储\n    const processedTable1 = ref({\n      title: \"表格1\",\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"表格2\",\n      timeSeriesData: {}\n    });\n    const leftInfobox = ref({\n      title: \"Infobox 1\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"Infobox 2\",\n      data: {}\n    });\n\n    // 弹窗状态\n    const showFullChartModal = ref(false);\n    const currentAttribute = ref(\"\");\n    const currentSide = ref(\"left\");\n    const currentChartData = ref({\n      data: [],\n      compareData: [],\n      type: \"line\",\n      side: \"left\"\n    });\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      chartType: \"bar\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\",\n      chartType: \"bar\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      chartType: \"text\"\n    }];\n\n    // 计算属性\n    const leftTitle = computed(() => showInfoboxData.value ? leftInfobox.value.title || \"Infobox 1\" : processedTable1.value.title || \"表格1\");\n    const rightTitle = computed(() => showInfoboxData.value ? rightInfobox.value.title || \"Infobox 2\" : processedTable2.value.title || \"表格2\");\n    const displayFields = computed(() => {\n      if (showInfoboxData.value) {\n        return COMPARABLE_FIELDS.filter(field => hasDataForCurrentSource(field.key, \"left\") || hasDataForCurrentSource(field.key, \"right\"));\n      } else {\n        const commonAttrs = Object.keys(processedTable1.value.timeSeriesData || {}).filter(attr => hasDataForAttribute(processedTable1.value, attr) && hasDataForAttribute(processedTable2.value, attr));\n        return commonAttrs.map(attr => ({\n          key: attr,\n          type: \"number\",\n          typeLabel: \"数值\",\n          chartType: commonAttrs.length <= 3 ? \"bar\" : \"line\"\n        }));\n      }\n    });\n    const hasData = computed(() => {\n      return displayFields.value.length > 0;\n    });\n\n    // 数据获取方法\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) return section[fieldKey];\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n    const getChartType = field => {\n      // 如果是表格数据且数据点少于等于3个，使用柱状图\n      if (!showInfoboxData.value && getChartData(field.key, \"left\").length <= 3) {\n        return \"bar\";\n      }\n      return field.chartType || \"line\";\n    };\n    const shouldShowCompare = fieldKey => {\n      // 只在表格数据模式下显示对比数据\n      return !showInfoboxData.value;\n    };\n    const getChartData = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        const fieldData = getField(infobox, fieldKey);\n        return convertToSparklineData(fieldData, fieldKey);\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return table.timeSeriesData[fieldKey] || [];\n      }\n    };\n    const getCompareData = (fieldKey, side) => {\n      const compareTable = side === \"left\" ? processedTable2.value : processedTable1.value;\n      return compareTable.timeSeriesData[fieldKey] || [];\n    };\n    const getFieldDescription = (fieldKey, side) => {\n      if (!showInfoboxData.value) return \"\";\n      const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n      const fieldData = getField(infobox, fieldKey);\n      if (!fieldData) return \"\";\n      if (Array.isArray(fieldData)) {\n        return fieldData.map(item => item.text || item.value).join(\", \");\n      }\n      if (typeof fieldData === \"object\") {\n        return fieldData.text || fieldData.value || \"\";\n      }\n      return String(fieldData);\n    };\n\n    // 数据转换方法\n    const convertToSparklineData = (data, fieldKey) => {\n      if (!data) return [];\n\n      // 处理百分比数据 (饼图)\n      if (fieldKey.toLowerCase().includes(\"growth\") || fieldKey.toLowerCase().includes(\"inflation\") || fieldKey.toLowerCase().includes(\"percentage\")) {\n        if (Array.isArray(data)) {\n          return data.map((item, index) => ({\n            year: item.year || new Date().getFullYear() - (data.length - index - 1),\n            value: parseFloat(item.percentage || item.value) || 0,\n            name: item.name || item.text || `项目 ${index + 1}`\n          }));\n        }\n        if (typeof data === \"object\") {\n          return [{\n            year: data.year || new Date().getFullYear(),\n            value: parseFloat(data.percentage || data.value) || 0,\n            name: data.name || data.text || \"项目\"\n          }];\n        }\n        return [{\n          year: new Date().getFullYear(),\n          value: parseFloat(data) || 0,\n          name: \"项目\"\n        }];\n      }\n\n      // 处理数组类型数据\n      if (Array.isArray(data)) {\n        return data.map(item => ({\n          year: item.year || new Date().getFullYear(),\n          value: parseFloat(item.value) || 0,\n          name: item.name || item.text || \"\"\n        })).filter(item => !isNaN(item.value));\n      }\n\n      // 处理对象类型数据\n      if (typeof data === \"object\" && data !== null) {\n        const value = parseFloat(data.value) || 0;\n        if (isNaN(value)) return [];\n        return [{\n          year: data.year || new Date().getFullYear(),\n          value: value,\n          name: data.name || data.text || \"\"\n        }];\n      }\n\n      // 处理简单值\n      const numericValue = parseFloat(data);\n      if (isNaN(numericValue)) return [];\n      return [{\n        year: new Date().getFullYear(),\n        value: numericValue,\n        name: \"\"\n      }];\n    };\n\n    // 数据检查方法\n    const hasDataForAttribute = (table, attr) => {\n      return table.timeSeriesData?.[attr]?.length > 0;\n    };\n    const hasDataForCurrentSource = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        return !!getField(infobox, fieldKey);\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return hasDataForAttribute(table, fieldKey);\n      }\n    };\n\n    // 数据源切换方法\n    const switchToInfoboxData = () => {\n      showInfoboxData.value = true;\n    };\n    const switchToTableData = () => {\n      showInfoboxData.value = false;\n    };\n\n    // 图表相关方法\n    const showFullChart = (attr, side) => {\n      currentAttribute.value = attr;\n      currentSide.value = side;\n      const field = displayFields.value.find(f => f.key === attr) || {};\n      currentChartData.value = {\n        data: getChartData(attr, side),\n        compareData: shouldShowCompare(attr) ? getCompareData(attr, side) : [],\n        type: getChartType(field),\n        side: side\n      };\n      showFullChartModal.value = true;\n    };\n    const hideFullChart = () => {\n      showFullChartModal.value = false;\n    };\n\n    // 数据处理方法\n    const processInfoboxData = (data, side) => {\n      if (!data) return {\n        title: `Infobox ${side}`,\n        data: {}\n      };\n      infoboxDataReady.value = true;\n      return {\n        title: data.title || `Infobox ${side}`,\n        data: data.sections || {}\n      };\n    };\n    const parseTableToStandardJSON = function (html) {\n      let defaultTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"未命名表格\";\n      const result = {\n        title: defaultTitle,\n        timeSeriesData: {}\n      };\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n        const table = doc.querySelector(\"table\");\n        if (!table) return result;\n\n        // 提取表头\n        const headerCells = table.querySelector(\"tr\")?.children || [];\n        const headers = Array.from(headerCells).map(cell => cell.textContent.replace(/[\\n†*]/g, \"\").trim().replace(/\\s+/g, \" \"));\n\n        // 检查年份列\n        const yearColumnIndex = headers.findIndex(h => h.toLowerCase().includes(\"year\"));\n        if (yearColumnIndex === -1) return result;\n\n        // 处理数据行\n        const dataRows = Array.from(table.querySelectorAll(\"tr:not(:first-child)\"));\n        dataRows.forEach(row => {\n          const cells = Array.from(row.children);\n          if (cells.length <= yearColumnIndex) return;\n          const year = parseInt(cells[yearColumnIndex].textContent.replace(/\\D/g, \"\"));\n          if (isNaN(year)) return;\n          headers.forEach((header, index) => {\n            if (index === yearColumnIndex || index >= cells.length) return;\n            const value = parseFloat(cells[index].textContent.replace(/[^\\d.-]/g, \"\"));\n            if (isNaN(value)) return;\n            if (!result.timeSeriesData[header]) {\n              result.timeSeriesData[header] = [];\n            }\n            result.timeSeriesData[header].push({\n              year: year,\n              value: value,\n              name: cells[0].textContent.trim()\n            });\n          });\n        });\n\n        // 排序\n        Object.values(result.timeSeriesData).forEach(data => {\n          data.sort((a, b) => a.year - b.year);\n        });\n\n        // 提取标题\n        result.title = extractTitleFromHTML(html) || defaultTitle;\n        tableDataReady.value = true;\n      } catch (error) {\n        console.error(\"表格解析错误:\", error);\n      }\n      return result;\n    };\n    const extractTitleFromHTML = html => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      return doc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null;\n    };\n\n    // 生命周期和监听\n    onMounted(() => {\n      updateChartSize();\n      window.addEventListener(\"resize\", updateChartSize);\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data, \"1\");\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data, \"2\");\n      });\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener(\"resize\", updateChartSize);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const updateChartSize = debounce(() => {\n      if (containerRef.value) {\n        chartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\n      }\n    }, 100);\n\n    // 监听表格数据变化\n    watch(() => props.div1RawData, html => {\n      processedTable1.value = parseTableToStandardJSON(html, \"表格1\");\n    }, {\n      immediate: true\n    });\n    watch(() => props.div3RawData, html => {\n      processedTable2.value = parseTableToStandardJSON(html, \"表格2\");\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      showInfoboxData,\n      infoboxDataReady,\n      tableDataReady,\n      containerRef,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftChartColor,\n      rightChartColor,\n      processedTable1,\n      processedTable2,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentAttribute,\n      currentSide,\n      currentChartData,\n      COMPARABLE_FIELDS,\n      leftTitle,\n      rightTitle,\n      displayFields,\n      hasData,\n      getField,\n      getChartType,\n      shouldShowCompare,\n      getChartData,\n      getCompareData,\n      getFieldDescription,\n      convertToSparklineData,\n      hasDataForAttribute,\n      hasDataForCurrentSource,\n      switchToInfoboxData,\n      switchToTableData,\n      showFullChart,\n      hideFullChart,\n      processInfoboxData,\n      parseTableToStandardJSON,\n      extractTitleFromHTML,\n      updateChartSize,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      SparklineChart,\n      get debounce() {\n        return debounce;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","SparklineChart","debounce","bus","props","__props","showInfoboxData","infoboxDataReady","tableDataReady","containerRef","chartMaxWidth","chartMaxHeight","leftChartColor","rightChartColor","processedTable1","title","timeSeriesData","processedTable2","leftInfobox","data","rightInfobox","showFullChartModal","currentAttribute","currentSide","currentChartData","compareData","type","side","COMPARABLE_FIELDS","key","typeLabel","chartType","leftTitle","value","rightTitle","displayFields","filter","field","hasDataForCurrentSource","commonAttrs","Object","keys","attr","hasDataForAttribute","map","length","hasData","getField","infobox","fieldKey","section","values","undefined","cleanKey","toLowerCase","replace","matchedKey","find","k","getChartType","getChartData","shouldShowCompare","fieldData","convertToSparklineData","table","getCompareData","compareTable","getFieldDescription","Array","isArray","item","text","join","String","includes","index","year","Date","getFullYear","parseFloat","percentage","name","isNaN","numericValue","switchToInfoboxData","switchToTableData","showFullChart","f","hideFullChart","processInfoboxData","sections","parseTableToStandardJSON","html","defaultTitle","arguments","result","parser","DOMParser","doc","parseFromString","querySelector","headerCells","children","headers","from","cell","textContent","trim","yearColumnIndex","findIndex","h","dataRows","querySelectorAll","forEach","row","cells","parseInt","header","push","sort","a","b","extractTitleFromHTML","error","console","updateChartSize","window","addEventListener","on","removeEventListener","off","Math","min","clientWidth","div1RawData","immediate","div3RawData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'left')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'left')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"\r\n\t\t\t\t\t\t\t\t\t\tshouldShowCompare(field.key)\r\n\t\t\t\t\t\t\t\t\t\t\t? getCompareData(field.key, 'left')\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t:chart-type=\"getChartType(field)\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"!showInfoboxData\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"left\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'right')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'right')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"\r\n\t\t\t\t\t\t\t\t\t\tshouldShowCompare(field.key)\r\n\t\t\t\t\t\t\t\t\t\t\t? getCompareData(field.key, 'right')\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t:chart-type=\"getChartType(field)\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"!showInfoboxData\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"right\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div v-for=\"i in 3\" :key=\"i\" class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'m' + i\"\r\n\t\t\t\t\tclass=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'r' + i\"\r\n\t\t\t\t\tclass=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToInfoboxData\"\r\n\t\t\t\t:class=\"{ active: showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!infoboxDataReady\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToTableData\"\r\n\t\t\t\t:class=\"{ active: !showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!tableDataReady\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"modal-chart-container\">\r\n\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t:data=\"currentChartData.data\"\r\n\t\t\t\t\t\t:compare-data=\"currentChartData.compareData\"\r\n\t\t\t\t\t\t:chart-type=\"currentChartData.type\"\r\n\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t:line-color=\"\r\n\t\t\t\t\t\t\tcurrentChartData.side === 'left'\r\n\t\t\t\t\t\t\t\t? leftChartColor\r\n\t\t\t\t\t\t\t\t: rightChartColor\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\tfullscreen-mode />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 数据源状态\r\n\tconst showInfoboxData = ref(true);\r\n\tconst infoboxDataReady = ref(false);\r\n\tconst tableDataReady = ref(false);\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 数据存储\r\n\tconst processedTable1 = ref({ title: \"表格1\", timeSeriesData: {} });\r\n\tconst processedTable2 = ref({ title: \"表格2\", timeSeriesData: {} });\r\n\tconst leftInfobox = ref({ title: \"Infobox 1\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"Infobox 2\", data: {} });\r\n\r\n\t// 弹窗状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentSide = ref(\"left\");\r\n\tconst currentChartData = ref({\r\n\t\tdata: [],\r\n\t\tcompareData: [],\r\n\t\ttype: \"line\",\r\n\t\tside: \"left\"\r\n\t});\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tchartType: \"text\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 计算属性\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(\r\n\t\t\t\tfield =>\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"left\") ||\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"right\")\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst commonAttrs = Object.keys(\r\n\t\t\t\tprocessedTable1.value.timeSeriesData || {}\r\n\t\t\t).filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\thasDataForAttribute(processedTable1.value, attr) &&\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr)\r\n\t\t\t);\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\",\r\n\t\t\t\tchartType: commonAttrs.length <= 3 ? \"bar\" : \"line\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn displayFields.value.length > 0;\r\n\t});\r\n\r\n\t// 数据获取方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst getChartType = field => {\r\n\t\t// 如果是表格数据且数据点少于等于3个，使用柱状图\r\n\t\tif (!showInfoboxData.value && getChartData(field.key, \"left\").length <= 3) {\r\n\t\t\treturn \"bar\";\r\n\t\t}\r\n\t\treturn field.chartType || \"line\";\r\n\t};\r\n\r\n\tconst shouldShowCompare = fieldKey => {\r\n\t\t// 只在表格数据模式下显示对比数据\r\n\t\treturn !showInfoboxData.value;\r\n\t};\r\n\r\n\tconst getChartData = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\t\treturn convertToSparklineData(fieldData, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn table.timeSeriesData[fieldKey] || [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCompareData = (fieldKey, side) => {\r\n\t\tconst compareTable =\r\n\t\t\tside === \"left\" ? processedTable2.value : processedTable1.value;\r\n\t\treturn compareTable.timeSeriesData[fieldKey] || [];\r\n\t};\r\n\r\n\tconst getFieldDescription = (fieldKey, side) => {\r\n\t\tif (!showInfoboxData.value) return \"\";\r\n\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\tif (!fieldData) return \"\";\r\n\r\n\t\tif (Array.isArray(fieldData)) {\r\n\t\t\treturn fieldData.map(item => item.text || item.value).join(\", \");\r\n\t\t}\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\treturn fieldData.text || fieldData.value || \"\";\r\n\t\t}\r\n\t\treturn String(fieldData);\r\n\t};\r\n\r\n\t// 数据转换方法\r\n\tconst convertToSparklineData = (data, fieldKey) => {\r\n\t\tif (!data) return [];\r\n\r\n\t\t// 处理百分比数据 (饼图)\r\n\t\tif (\r\n\t\t\tfieldKey.toLowerCase().includes(\"growth\") ||\r\n\t\t\tfieldKey.toLowerCase().includes(\"inflation\") ||\r\n\t\t\tfieldKey.toLowerCase().includes(\"percentage\")\r\n\t\t) {\r\n\t\t\tif (Array.isArray(data)) {\r\n\t\t\t\treturn data.map((item, index) => ({\r\n\t\t\t\t\tyear:\r\n\t\t\t\t\t\titem.year || new Date().getFullYear() - (data.length - index - 1),\r\n\t\t\t\t\tvalue: parseFloat(item.percentage || item.value) || 0,\r\n\t\t\t\t\tname: item.name || item.text || `项目 ${index + 1}`\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\t\tvalue: parseFloat(data.percentage || data.value) || 0,\r\n\t\t\t\t\t\tname: data.name || data.text || \"项目\"\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(data) || 0,\r\n\t\t\t\t\tname: \"项目\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理数组类型数据\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\treturn data\r\n\t\t\t\t.map(item => ({\r\n\t\t\t\t\tyear: item.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(item.value) || 0,\r\n\t\t\t\t\tname: item.name || item.text || \"\"\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\t// 处理对象类型数据\r\n\t\tif (typeof data === \"object\" && data !== null) {\r\n\t\t\tconst value = parseFloat(data.value) || 0;\r\n\t\t\tif (isNaN(value)) return [];\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tname: data.name || data.text || \"\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tconst numericValue = parseFloat(data);\r\n\t\tif (isNaN(numericValue)) return [];\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\tvalue: numericValue,\r\n\t\t\t\tname: \"\"\r\n\t\t\t}\r\n\t\t];\r\n\t};\r\n\r\n\t// 数据检查方法\r\n\tconst hasDataForAttribute = (table, attr) => {\r\n\t\treturn table.timeSeriesData?.[attr]?.length > 0;\r\n\t};\r\n\r\n\tconst hasDataForCurrentSource = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\treturn !!getField(infobox, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn hasDataForAttribute(table, fieldKey);\r\n\t\t}\r\n\t};\r\n\r\n\t// 数据源切换方法\r\n\tconst switchToInfoboxData = () => {\r\n\t\tshowInfoboxData.value = true;\r\n\t};\r\n\r\n\tconst switchToTableData = () => {\r\n\t\tshowInfoboxData.value = false;\r\n\t};\r\n\r\n\t// 图表相关方法\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tconst field = displayFields.value.find(f => f.key === attr) || {};\r\n\r\n\t\tcurrentChartData.value = {\r\n\t\t\tdata: getChartData(attr, side),\r\n\t\t\tcompareData: shouldShowCompare(attr) ? getCompareData(attr, side) : [],\r\n\t\t\ttype: getChartType(field),\r\n\t\t\tside: side\r\n\t\t};\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 数据处理方法\r\n\tconst processInfoboxData = (data, side) => {\r\n\t\tif (!data) return { title: `Infobox ${side}`, data: {} };\r\n\r\n\t\tinfoboxDataReady.value = true;\r\n\t\treturn {\r\n\t\t\ttitle: data.title || `Infobox ${side}`,\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tconst parseTableToStandardJSON = (html, defaultTitle = \"未命名表格\") => {\r\n\t\tconst result = {\r\n\t\t\ttitle: defaultTitle,\r\n\t\t\ttimeSeriesData: {}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headerCells = table.querySelector(\"tr\")?.children || [];\r\n\t\t\tconst headers = Array.from(headerCells).map(cell =>\r\n\t\t\t\tcell.textContent\r\n\t\t\t\t\t.replace(/[\\n†*]/g, \"\")\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t);\r\n\r\n\t\t\t// 检查年份列\r\n\t\t\tconst yearColumnIndex = headers.findIndex(h =>\r\n\t\t\t\th.toLowerCase().includes(\"year\")\r\n\t\t\t);\r\n\t\t\tif (yearColumnIndex === -1) return result;\r\n\r\n\t\t\t// 处理数据行\r\n\t\t\tconst dataRows = Array.from(\r\n\t\t\t\ttable.querySelectorAll(\"tr:not(:first-child)\")\r\n\t\t\t);\r\n\r\n\t\t\tdataRows.forEach(row => {\r\n\t\t\t\tconst cells = Array.from(row.children);\r\n\t\t\t\tif (cells.length <= yearColumnIndex) return;\r\n\r\n\t\t\t\tconst year = parseInt(\r\n\t\t\t\t\tcells[yearColumnIndex].textContent.replace(/\\D/g, \"\")\r\n\t\t\t\t);\r\n\t\t\t\tif (isNaN(year)) return;\r\n\r\n\t\t\t\theaders.forEach((header, index) => {\r\n\t\t\t\t\tif (index === yearColumnIndex || index >= cells.length) return;\r\n\r\n\t\t\t\t\tconst value = parseFloat(\r\n\t\t\t\t\t\tcells[index].textContent.replace(/[^\\d.-]/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (isNaN(value)) return;\r\n\r\n\t\t\t\t\tif (!result.timeSeriesData[header]) {\r\n\t\t\t\t\t\tresult.timeSeriesData[header] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult.timeSeriesData[header].push({\r\n\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tname: cells[0].textContent.trim()\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// 排序\r\n\t\t\tObject.values(result.timeSeriesData).forEach(data => {\r\n\t\t\t\tdata.sort((a, b) => a.year - b.year);\r\n\t\t\t});\r\n\r\n\t\t\t// 提取标题\r\n\t\t\tresult.title = extractTitleFromHTML(html) || defaultTitle;\r\n\t\t\ttableDataReady.value = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst extractTitleFromHTML = html => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn (\r\n\t\t\tdoc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null\r\n\t\t);\r\n\t};\r\n\r\n\t// 生命周期和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data, \"1\");\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data, \"2\");\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-description {\r\n\t\tmargin-top: 5px;\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.empty-cell {\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 12px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.data-source-switcher button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.modal-header h3 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t.modal-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 70vh;\r\n\t\tmin-height: 400px;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.field-description {\r\n\t\t\tfont-size: 11px;\r\n\t\t}\r\n\r\n\t\t.modal-chart-container {\r\n\t\t\theight: 60vh;\r\n\t\t\tmin-height: 300px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}