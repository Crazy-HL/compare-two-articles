{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, watch, onMounted, nextTick } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport InfoboxField from \"./InfoboxField.vue\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String,\n    div1InfoboxData: {\n      type: Object,\n      default: () => ({\n        title: \"\",\n        type: \"none\",\n        data: {}\n      })\n    },\n    div3InfoboxData: {\n      type: Object,\n      default: () => ({\n        title: \"\",\n        type: \"none\",\n        data: {}\n      })\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isDev = process.env.NODE_ENV === \"development\";\n    const viewMode = ref(\"chart\");\n    const containerRef = ref(null);\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n\n    // 信息框数据（使用响应式引用）\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"none\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"none\",\n      data: {}\n    });\n\n    // 处理Proxy对象数据\n    const processInfoboxData = data => {\n      try {\n        if (!data) return {\n          title: \"\",\n          type: \"none\",\n          data: {}\n        };\n\n        // 处理Proxy对象转换为普通对象\n        const rawData = JSON.parse(JSON.stringify(data));\n        return {\n          title: rawData.title || \"无标题\",\n          type: rawData.type || \"未知类型\",\n          data: rawData.data || {}\n        };\n      } catch (e) {\n        console.error(\"处理信息框数据失败:\", e);\n        return {\n          title: \"数据错误\",\n          type: \"error\",\n          data: {}\n        };\n      }\n    };\n\n    // 监听props变化\n    watch(() => props.div1InfoboxData, newData => {\n      leftInfobox.value = processInfoboxData(newData);\n      console.log(\"左侧信息框数据:\", leftInfobox.value);\n    }, {\n      immediate: true,\n      deep: true\n    });\n    watch(() => props.div3InfoboxData, newData => {\n      rightInfobox.value = processInfoboxData(newData);\n      console.log(\"右侧信息框数据:\", rightInfobox.value);\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // 计算属性\n    const hasInfoboxData = computed(() => {\n      const leftFields = Object.keys(leftInfobox.value.data || {});\n      const rightFields = Object.keys(rightInfobox.value.data || {});\n      return leftFields.length > 0 || rightFields.length > 0;\n    });\n    const commonInfoboxFields = computed(() => {\n      const leftFields = Object.keys(leftInfobox.value.data || {});\n      const rightFields = Object.keys(rightInfobox.value.data || {});\n      return [...new Set([...leftFields, ...rightFields])].sort();\n    });\n\n    // 调试方法\n    const forceRerender = () => {\n      leftInfobox.value = {\n        ...leftInfobox.value\n      };\n      rightInfobox.value = {\n        ...rightInfobox.value\n      };\n      nextTick(() => {\n        console.log(\"强制刷新完成\");\n      });\n    };\n    const logData = () => {\n      console.group(\"当前数据状态\");\n      console.log(\"左侧信息框:\", leftInfobox.value);\n      console.log(\"右侧信息框:\", rightInfobox.value);\n      console.log(\"共有字段:\", commonInfoboxFields.value);\n      console.groupEnd();\n    };\n\n    // 开发模式下每5秒自动检查数据\n    if (isDev) {\n      setInterval(() => {\n        console.log(\"数据检查:\", {\n          left: leftInfobox.value,\n          right: rightInfobox.value,\n          hasData: hasInfoboxData.value\n        });\n      }, 5000);\n    }\n    const __returned__ = {\n      props,\n      isDev,\n      viewMode,\n      containerRef,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      hasInfoboxData,\n      commonInfoboxFields,\n      forceRerender,\n      logData,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      nextTick,\n      SparklineChart,\n      InfoboxField\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","nextTick","SparklineChart","InfoboxField","props","__props","isDev","process","env","NODE_ENV","viewMode","containerRef","chartMaxWidth","chartMaxHeight","leftInfobox","title","type","data","rightInfobox","processInfoboxData","rawData","JSON","parse","stringify","e","console","error","div1InfoboxData","newData","value","log","immediate","deep","div3InfoboxData","hasInfoboxData","leftFields","Object","keys","rightFields","length","commonInfoboxFields","Set","sort","forceRerender","logData","group","groupEnd","setInterval","left","right","hasData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\"\r\n\t\t\t\t:disabled=\"!hasInfoboxData\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"viewMode === 'chart'\" class=\"table-grid\">\r\n\t\t\t<!-- 图表对比模式内容 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-else class=\"infobox-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"field in commonInfoboxFields\" :key=\"field\">\r\n\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"leftInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t\t<div class=\"data-type\">\r\n\t\t\t\t\t\t\t{{ leftInfobox.data[field]?.dataType || \"text\" }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"rightInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<div v-else class=\"no-infobox-data\">\r\n\t\t\t\t<div class=\"no-data-message\">未找到可对比的信息框数据</div>\r\n\t\t\t\t<div class=\"suggestion\">\r\n\t\t\t\t\t可能原因：\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>页面不包含标准信息框</li>\r\n\t\t\t\t\t\t<li>数据仍在加载中</li>\r\n\t\t\t\t\t\t<li>网络请求失败</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 调试面板（开发时使用） -->\r\n\t\t<div v-if=\"isDev\" class=\"debug-panel\">\r\n\t\t\t<button @click=\"forceRerender\">强制刷新</button>\r\n\t\t\t<button @click=\"logData\">打印数据</button>\r\n\t\t\t<div>Left Infobox Fields: {{ Object.keys(leftInfobox.data).length }}</div>\r\n\t\t\t<div>\r\n\t\t\t\tRight Infobox Fields: {{ Object.keys(rightInfobox.data).length }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, nextTick } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String,\r\n\t\tdiv1InfoboxData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\ttype: \"none\",\r\n\t\t\t\tdata: {}\r\n\t\t\t})\r\n\t\t},\r\n\t\tdiv3InfoboxData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\ttype: \"none\",\r\n\t\t\t\tdata: {}\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\tconst isDev = process.env.NODE_ENV === \"development\";\r\n\tconst viewMode = ref(\"chart\");\r\n\tconst containerRef = ref(null);\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\r\n\t// 信息框数据（使用响应式引用）\r\n\tconst leftInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"none\",\r\n\t\tdata: {}\r\n\t});\r\n\tconst rightInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"none\",\r\n\t\tdata: {}\r\n\t});\r\n\r\n\t// 处理Proxy对象数据\r\n\tconst processInfoboxData = data => {\r\n\t\ttry {\r\n\t\t\tif (!data) return { title: \"\", type: \"none\", data: {} };\r\n\r\n\t\t\t// 处理Proxy对象转换为普通对象\r\n\t\t\tconst rawData = JSON.parse(JSON.stringify(data));\r\n\t\t\treturn {\r\n\t\t\t\ttitle: rawData.title || \"无标题\",\r\n\t\t\t\ttype: rawData.type || \"未知类型\",\r\n\t\t\t\tdata: rawData.data || {}\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"处理信息框数据失败:\", e);\r\n\t\t\treturn { title: \"数据错误\", type: \"error\", data: {} };\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听props变化\r\n\twatch(\r\n\t\t() => props.div1InfoboxData,\r\n\t\tnewData => {\r\n\t\t\tleftInfobox.value = processInfoboxData(newData);\r\n\t\t\tconsole.log(\"左侧信息框数据:\", leftInfobox.value);\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3InfoboxData,\r\n\t\tnewData => {\r\n\t\t\trightInfobox.value = processInfoboxData(newData);\r\n\t\t\tconsole.log(\"右侧信息框数据:\", rightInfobox.value);\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n\r\n\t// 计算属性\r\n\tconst hasInfoboxData = computed(() => {\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.data || {});\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.data || {});\r\n\t\treturn leftFields.length > 0 || rightFields.length > 0;\r\n\t});\r\n\r\n\tconst commonInfoboxFields = computed(() => {\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.data || {});\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.data || {});\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t});\r\n\r\n\t// 调试方法\r\n\tconst forceRerender = () => {\r\n\t\tleftInfobox.value = { ...leftInfobox.value };\r\n\t\trightInfobox.value = { ...rightInfobox.value };\r\n\t\tnextTick(() => {\r\n\t\t\tconsole.log(\"强制刷新完成\");\r\n\t\t});\r\n\t};\r\n\r\n\tconst logData = () => {\r\n\t\tconsole.group(\"当前数据状态\");\r\n\t\tconsole.log(\"左侧信息框:\", leftInfobox.value);\r\n\t\tconsole.log(\"右侧信息框:\", rightInfobox.value);\r\n\t\tconsole.log(\"共有字段:\", commonInfoboxFields.value);\r\n\t\tconsole.groupEnd();\r\n\t};\r\n\r\n\t// 开发模式下每5秒自动检查数据\r\n\tif (isDev) {\r\n\t\tsetInterval(() => {\r\n\t\t\tconsole.log(\"数据检查:\", {\r\n\t\t\t\tleft: leftInfobox.value,\r\n\t\t\t\tright: rightInfobox.value,\r\n\t\t\t\thasData: hasInfoboxData.value\r\n\t\t\t});\r\n\t\t}, 5000);\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.mode-toggle {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.mode-toggle button {\r\n\t\tpadding: 8px 16px;\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.mode-toggle button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.mode-toggle button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 信息框网格样式 */\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tmin-height: 80px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.data-type {\r\n\t\tfont-size: 0.75em;\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-infobox-data {\r\n\t\tgrid-column: 1 / -1;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.suggestion ul {\r\n\t\ttext-align: left;\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 5px auto;\r\n\t}\r\n\r\n\t/* 调试面板 */\r\n\t.debug-panel {\r\n\t\tposition: fixed;\r\n\t\tbottom: 10px;\r\n\t\tright: 10px;\r\n\t\tbackground: rgba(0, 0, 0, 0.7);\r\n\t\tcolor: white;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.debug-panel button {\r\n\t\tmargin: 0 5px;\r\n\t\tpadding: 5px 10px;\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 3px;\r\n\t\tcursor: pointer;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}