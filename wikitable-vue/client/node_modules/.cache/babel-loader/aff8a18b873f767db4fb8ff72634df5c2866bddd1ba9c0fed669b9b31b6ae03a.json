{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, computed } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    divId: String,\n    currentDivId: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const outline = ref([]);\n\n    // 计算当前 div 是否是激活状态\n    const isCurrentDiv = computed(() => props.divId === props.currentDivId);\n\n    // 解析文章内容生成大纲\n    const extractOutline = content => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      const outlineItems = [];\n      headings.forEach(heading => {\n        const id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${props.divId}`; // 确保 ID 唯一\n        heading.id = id;\n        outlineItems.push({\n          id,\n          text: heading.textContent,\n          level: parseInt(heading.tagName.charAt(1))\n        });\n      });\n      return outlineItems;\n    };\n\n    // 监听 content 变化，更新大纲\n    watch(() => props.content, newContent => {\n      if (newContent && isCurrentDiv.value) {\n        outline.value = extractOutline(newContent);\n      } else {\n        outline.value = []; // 避免错误共享数据\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      outline,\n      isCurrentDiv,\n      extractOutline,\n      ref,\n      watch,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","computed","props","__props","outline","isCurrentDiv","divId","currentDivId","extractOutline","content","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","outlineItems","forEach","heading","id","textContent","toLowerCase","replace","push","text","level","parseInt","tagName","charAt","newContent","value","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div v-if=\"isCurrentDiv\">\r\n\t\t<h2>文章大纲</h2>\r\n\t\t<ul>\r\n\t\t\t<li v-for=\"item in outline\" :key=\"item.id\">\r\n\t\t\t\t<a :href=\"'#' + item.id\">{{ item.text }}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String,\r\n\t\tdivId: String,\r\n\t\tcurrentDivId: String\r\n\t});\r\n\r\n\tconst outline = ref([]);\r\n\r\n\t// 计算当前 div 是否是激活状态\r\n\tconst isCurrentDiv = computed(() => props.divId === props.currentDivId);\r\n\r\n\t// 解析文章内容生成大纲\r\n\tconst extractOutline = content => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst outlineItems = [];\r\n\r\n\t\theadings.forEach(heading => {\r\n\t\t\tconst id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${\r\n\t\t\t\tprops.divId\r\n\t\t\t}`; // 确保 ID 唯一\r\n\t\t\theading.id = id;\r\n\t\t\toutlineItems.push({\r\n\t\t\t\tid,\r\n\t\t\t\ttext: heading.textContent,\r\n\t\t\t\tlevel: parseInt(heading.tagName.charAt(1))\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn outlineItems;\r\n\t};\r\n\r\n\t// 监听 content 变化，更新大纲\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\tif (newContent && isCurrentDiv.value) {\r\n\t\t\t\toutline.value = extractOutline(newContent);\r\n\t\t\t} else {\r\n\t\t\t\toutline.value = []; // 避免错误共享数据\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\tli {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: blue;\r\n\t}\r\n\r\n\ta:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n"],"mappings":";AAYC,SAASA,GAAG,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;IAE1C,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,OAAO,GAAGL,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMM,YAAY,GAAGJ,QAAQ,CAAC,MAAMC,KAAK,CAACI,KAAK,KAAKJ,KAAK,CAACK,YAAY,CAAC;;IAEvE;IACA,MAAMC,cAAc,GAAGC,OAAO,IAAI;MACjC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMK,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAC/D,MAAMC,YAAY,GAAG,EAAE;MAEvBF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QAC3B,MAAMC,EAAE,GAAG,GAAGD,OAAO,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,IACnEpB,KAAK,CAACI,KAAK,EACV,CAAC,CAAC;QACJY,OAAO,CAACC,EAAE,GAAGA,EAAE;QACfH,YAAY,CAACO,IAAI,CAAC;UACjBJ,EAAE;UACFK,IAAI,EAAEN,OAAO,CAACE,WAAW;UACzBK,KAAK,EAAEC,QAAQ,CAACR,OAAO,CAACS,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;MACH,CAAC,CAAC;MAEF,OAAOZ,YAAY;IACpB,CAAC;;IAED;IACAhB,KAAK,CACJ,MAAME,KAAK,CAACO,OAAO,EACnBoB,UAAU,IAAI;MACb,IAAIA,UAAU,IAAIxB,YAAY,CAACyB,KAAK,EAAE;QACrC1B,OAAO,CAAC0B,KAAK,GAAGtB,cAAc,CAACqB,UAAU,CAAC;MAC3C,CAAC,MAAM;QACNzB,OAAO,CAAC0B,KAAK,GAAG,EAAE,CAAC,CAAC;MACrB;IACD,CAAC,EACD;MAAEC,SAAS,EAAE;IAAK,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}