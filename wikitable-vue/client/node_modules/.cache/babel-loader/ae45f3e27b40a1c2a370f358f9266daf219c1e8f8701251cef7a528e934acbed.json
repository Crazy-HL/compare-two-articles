{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5423a9e6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"div-container\",\n  ref: \"divRef\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */), _createCommentVNode(\" 文章内容 \"), _createElementVNode(\"div\", {\n    class: \"showHtml wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createCommentVNode(\" 选中文字的弹出框 \"), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"text-popup\",\n    style: _normalizeStyle($setup.popupStyle),\n    onClick: $setup.closePopup\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.selectedText), 1 /* TEXT */)], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","pageTitle","_createCommentVNode","innerHTML","$setup","pageHtml","onMouseup","handleSelection","_hoisted_2","showPopup","key","style","_normalizeStyle","popupStyle","onClick","closePopup","selectedText"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div-container\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 选中文字的弹出框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showPopup\"\r\n\t\t\tclass=\"text-popup\"\r\n\t\t\t:style=\"popupStyle\"\r\n\t\t\t@click=\"closePopup\">\r\n\t\t\t<p>{{ selectedText }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({ pageTitle: String });\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章内容\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst popupStyle = ref({}); // 弹出框的样式\r\n\tconst divRef = ref(null); // `Div1` 的 DOM 参考\r\n\r\n\t// **选中文字并显示弹出框**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tconst text = selection.toString().trim();\r\n\r\n\t\tif (text && divRef.value) {\r\n\t\t\tselectedText.value = text;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 获取 `Div1` 的位置信息\r\n\t\t\tconst divRect = divRef.value.getBoundingClientRect();\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst rect = range.getBoundingClientRect();\r\n\r\n\t\t\t// 计算弹出框的位置（相对于 `Div1`）\r\n\t\t\tpopupStyle.value = {\r\n\t\t\t\ttop: `${rect.top - divRect.top + divRef.value.scrollTop}px`,\r\n\t\t\t\tleft: \"50%\",\r\n\t\t\t\ttransform: \"translateX(-50%)\"\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **获取 Wikipedia 页面内容**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tpageHtml.value = await response.text();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error fetching content:\", err);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(fetchWikipediaContent);\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 让 `Div1` 作为相对定位的父容器 */\r\n\t.div-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* 文章内容 */\r\n\t.wikipedia-content {\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t/* 弹出框：基于 `Div1` 内部居中 */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\twidth: 50%;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 10px;\r\n\t\tbox-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\r\n\t\tborder-radius: 10px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 1.2rem;\r\n\t\tfont-weight: bold;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tcolor: #4a4a4a;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: scale(0.9);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;mBADhC;;uBACCC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBLC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBC,MAAA,CAAAC,SAAS,kBAEhBC,mBAAA,UAAa,EACbJ,mBAAA,CAGkC;IAFjCJ,KAAK,EAAC,4BAA4B;IAClCS,SAAiB,EAATC,MAAA,CAAAC,QAAQ;IACfC,SAAO,EAAEF,MAAA,CAAAG;2CARbC,UAAA,GAUEN,mBAAA,cAAiB,EAEVE,MAAA,CAAAK,SAAS,I,cADhBb,mBAAA,CAMM;IAjBRc,GAAA;IAaGhB,KAAK,EAAC,YAAY;IACjBiB,KAAK,EAdTC,eAAA,CAcWR,MAAA,CAAAS,UAAU;IACjBC,OAAK,EAAEV,MAAA,CAAAW;MACRjB,mBAAA,CAAyB,WAAAC,gBAAA,CAAnBK,MAAA,CAAAY,YAAY,iB,oBAhBrBd,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}