{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  class: \"message-content\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"vis-container\"\n};\nconst _hoisted_6 = {\n  class: \"input-container\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"debug-info\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"接收状态\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", {\n    class: \"chat-container\",\n    onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: $setup.handleDrop\n  }, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_4)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 视觉内容容器 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 图表容器 \"), _createElementVNode(\"div\", {\n    ref: \"chart\",\n    class: \"chart-container\",\n    draggable: \"true\",\n    onDragstart: $setup.handleDragStart\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", {\n    class: \"button-container\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: $setup.compareTexts\n  }, \"对比文章\"), _createElementVNode(\"button\", {\n    onClick: $setup.mergedJson,\n    class: \"submit-btn\"\n  }, \"合并数据可视化\")])])]), _createCommentVNode(\" 调试信息（开发时可显示） \"), $setup.debugMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"p\", null, \"Div1内容: \" + _toDisplayString($setup.receivedContents.div1.primary ? \"已接收\" : \"未接收\"), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Div3内容: \" + _toDisplayString($setup.receivedContents.div3.primary ? \"已接收\" : \"未接收\"), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.showReceivedData\n  }, \"显示接收数据\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","onDragover","_cache","_withModifiers","onDrop","$setup","handleDrop","_hoisted_2","_Fragment","_renderList","chatHistory","message","index","_normalizeClass","role","_hoisted_3","_toDisplayString","innerHTML","content","_hoisted_4","_hoisted_5","ref","draggable","onDragstart","handleDragStart","_hoisted_6","$event","userQuestion","rows","placeholder","onClick","askQuestion","compareTexts","mergedJson","debugMode","_hoisted_7","_hoisted_8","receivedContents","div1","primary","div3","showReceivedData"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 图表容器 -->\r\n\t\t\t<div\r\n\t\t\t\tref=\"chart\"\r\n\t\t\t\tclass=\"chart-container\"\r\n\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t@dragstart=\"handleDragStart\"></div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"submit-btn\">合并数据可视化</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 调试信息（开发时可显示） -->\r\n\t\t<div v-if=\"debugMode\" class=\"debug-info\">\r\n\t\t\t<h3>接收状态</h3>\r\n\t\t\t<p>Div1内容: {{ receivedContents.div1.primary ? \"已接收\" : \"未接收\" }}</p>\r\n\t\t\t<p>Div3内容: {{ receivedContents.div3.primary ? \"已接收\" : \"未接收\" }}</p>\r\n\t\t\t<button @click=\"showReceivedData\">显示接收数据</button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\t// 状态管理\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst debugMode = ref(true); // 开发时设为true，生产环境设为false\r\n\r\n\t// 接收到的内容存储（增强版）\r\n\tconst receivedContents = ref({\r\n\t\tdiv1: {\r\n\t\t\tprimary: null, // 主内容\r\n\t\t\tlinked: null // 关联内容\r\n\t\t},\r\n\t\tdiv3: {\r\n\t\t\tprimary: null,\r\n\t\t\tlinked: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 调试函数\r\n\tconst showReceivedData = () => {\r\n\t\tconsole.log(\r\n\t\t\t\"当前接收内容:\",\r\n\t\t\tJSON.parse(JSON.stringify(receivedContents.value))\r\n\t\t);\r\n\t\talert(`\r\n    Div1内容: ${receivedContents.value.div1.primary ? \"已接收\" : \"未接收\"}\r\n    Div3内容: ${receivedContents.value.div3.primary ? \"已接收\" : \"未接收\"}\r\n  `);\r\n\t};\r\n\r\n\t// 事件处理函数（兼容新旧版本）\r\n\tconst handleDiv1Event = data => {\r\n\t\tconsole.log(\"[Div2] 收到Div1事件:\", data);\r\n\r\n\t\t// 统一处理逻辑\r\n\t\tif (data.type === \"linked\") {\r\n\t\t\treceivedContents.value.div1.linked = data.content;\r\n\t\t} else {\r\n\t\t\t// 主内容或旧版数据\r\n\t\t\treceivedContents.value.div1.primary = data.content;\r\n\r\n\t\t\t// 同时更新selectText2（兼容旧代码）\r\n\t\t\tselectText2.value = getPlainTextFromSelection(data.content);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDiv3Event = data => {\r\n\t\tconsole.log(\"[Div2] 收到Div3事件:\", data);\r\n\r\n\t\tif (data.type === \"linked\") {\r\n\t\t\treceivedContents.value.div3.linked = data.content;\r\n\t\t} else {\r\n\t\t\treceivedContents.value.div3.primary = data.content;\r\n\t\t\tselectText3.value = getPlainTextFromSelection(data.content);\r\n\t\t}\r\n\t};\r\n\r\n\t// 兼容旧版代码（保留selectText引用）\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\r\n\t// 从HTML内容提取纯文本\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\t// 图表拖拽相关\r\n\tconst handleDragStart = event => {\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(\"拖拽数据已设置:\", currentChartData.value);\r\n\t};\r\n\r\n\tconst handleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst data = event.dataTransfer.getData(\"application/json\");\r\n\r\n\t\tif (data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { chartData, chartType } = JSON.parse(data);\r\n\t\t\t\tcurrentChartData.value = chartData;\r\n\t\t\t\tcurrentChartType.value = chartType;\r\n\t\t\t\tanalyzeChart(chartData, chartType);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"解析拖拽数据失败:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 图表分析\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t\tapi.post(\r\n\t\t\t\"analyze_chart\",\r\n\t\t\t{ chartData, chartType },\r\n\t\t\tresponse => {\r\n\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formatAnalysisResult(response.analysis)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"图表分析失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"图表分析失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\treturn text\r\n\t\t\t.replace(/### (.*)/g, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\")\r\n\t\t\t.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t};\r\n\r\n\t// 提问功能\r\n\tconst askQuestion = () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\tapi.post(\r\n\t\t\t\"gpt_ask_chart\",\r\n\t\t\t{\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(response.answer)\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"请求失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tuserQuestion.value = \"\";\r\n\t};\r\n\r\n\t// 文本对比\r\n\tconst compareTexts = async () => {\r\n\t\tif (\r\n\t\t\t!receivedContents.value.div1.primary ||\r\n\t\t\t!receivedContents.value.div3.primary\r\n\t\t) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{\r\n\t\t\t\t\ttext1: getPlainTextFromSelection(receivedContents.value.div1.primary),\r\n\t\t\t\t\ttext2: getPlainTextFromSelection(receivedContents.value.div3.primary)\r\n\t\t\t\t},\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: data.result\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比失败:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\t// 合并可视化\r\n\tconst mergedJson = async () => {\r\n\t\tconst { div1, div3 } = receivedContents.value;\r\n\r\n\t\tif (!div1.primary || !div3.primary) {\r\n\t\t\talert(\"请先在两篇文章中选择内容！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{\r\n\t\t\t\t\ttext1: div1.primary,\r\n\t\t\t\t\ttext2: div3.primary,\r\n\t\t\t\t\ttext1Plain: getPlainTextFromSelection(div1.primary),\r\n\t\t\t\t\ttext2Plain: getPlainTextFromSelection(div3.primary)\r\n\t\t\t\t},\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端错误:\", data.error);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentChartData.value = data.json_data;\r\n\t\t\t\t\tcurrentChartType.value = data.chart_classification;\r\n\r\n\t\t\t\t\tif (data.yes_no === \"no\") {\r\n\t\t\t\t\t\trenderNonVisualChart(\".chart-container\", data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法合并\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trenderChart(data.json_data, data.chart_classification);\r\n\r\n\t\t\t\t\t// 更新两侧图表\r\n\t\t\t\t\tif (data.div1_json) {\r\n\t\t\t\t\t\tbus.emit(\"updateChart1\", {\r\n\t\t\t\t\t\t\tjsonData: data.div1_json,\r\n\t\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.div3_json) {\r\n\t\t\t\t\t\tbus.emit(\"updateChart3\", {\r\n\t\t\t\t\t\t\tjsonData: data.div3_json,\r\n\t\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"合并失败:\", error);\r\n\t\t\talert(\"合并数据时出错，请稍后重试\");\r\n\t\t}\r\n\t};\r\n\r\n\t// 图表渲染\r\n\tconst renderChart = (rawJsonData, chartType) => {\r\n\t\tconst container = document.querySelector(\".chart-container\");\r\n\t\tif (!container) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\trenderNonVisualChart(container, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON数据无效\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = rawJsonData.data || rawJsonData;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\tswitch (chartType) {\r\n\t\t\tcase \"Line Chart\":\r\n\t\t\t\trenderLineChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bar Chart\":\r\n\t\t\t\trenderBarChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Pie Chart\":\r\n\t\t\t\trenderPieChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stacked Bar Chart\":\r\n\t\t\t\trenderStackedBarChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Radar Chart\":\r\n\t\t\t\trenderRadarChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Scatter Chart\":\r\n\t\t\t\trenderScatterChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(\"未知图表类型:\", chartType);\r\n\t\t}\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\t// 监听所有可能的事件格式\r\n\t\tbus.on(\"div1Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event); // 兼容带下划线版本\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\r\n\t\tconsole.log(\"Div2已挂载，监听事件:\", {\r\n\t\t\tdiv1: bus._events[\"div1Event\"]?.length,\r\n\t\t\tdiv3: bus._events[\"div3Event\"]?.length\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t/* 调试信息样式 */\r\n\t.debug-info {\r\n\t\tposition: fixed;\r\n\t\tbottom: 10px;\r\n\t\tright: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 5px;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tfont-size: 12px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBAVjC;;EAmBOA,KAAK,EAAC;AAAe;;EASpBA,KAAK,EAAC;AAAiB;;EA5B/BC,GAAA;EA0CwBD,KAAK,EAAC;;gEAC3BE,mBAAA,CAAa,YAAT,MAAI;;uBA1CVC,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CLC,mBAAA,UAAa,EACbH,mBAAA,CAaM;IAbDF,KAAK,EAAC,gBAAgB;IAAEM,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAHvCC,cAAA,CAG8B,QAAiB;IAAEC,MAAI,EAAEC,MAAA,CAAAC;MACpDN,mBAAA,YAAe,EACfH,mBAAA,CAUM,OAVNU,UAUM,I,kBATLT,mBAAA,CAQMU,SAAA,QAdVC,WAAA,CAOgCJ,MAAA,CAAAK,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBd,mBAAA,CAQM;MANJF,GAAG,EAAEgB,KAAK;MACVjB,KAAK,EATXkB,eAAA,aASyBF,OAAO,CAACG,IAAI;QAChCjB,mBAAA,CAGM,OAHNkB,UAGM,GAFLlB,mBAAA,CAA8D,gBAAAmB,gBAAA,CAAnDL,OAAO,CAACG,IAAI,8BAA6B,GAAC,iBACrDjB,mBAAA,CAAgC;MAA7BoB,SAAwB,EAAhBN,OAAO,CAACO;4BAZzBC,UAAA,E;+DAkBEnB,mBAAA,YAAe,EACfH,mBAAA,CAoBM,OApBNuB,UAoBM,GAnBLpB,mBAAA,UAAa,EACbH,mBAAA,CAIoC;IAHnCwB,GAAG,EAAC,OAAO;IACX1B,KAAK,EAAC,iBAAiB;IACvB2B,SAAS,EAAC,MAAM;IACfC,WAAS,EAAElB,MAAA,CAAAmB;kDAEbxB,mBAAA,cAAiB,EACjBH,mBAAA,CAUM,OAVN4B,UAUM,G,gBATL5B,mBAAA,CAGuC;IAhC3C,uBAAAK,MAAA,QAAAA,MAAA,MAAAwB,MAAA,IA8BcrB,MAAA,CAAAsB,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHxB,MAAA,CAAAsB,YAAY,E,GAGtB9B,mBAAA,CAIM;IAJDF,KAAK,EAAC;EAAkB,IAC5BE,mBAAA,CAAwC;IAA/BiC,OAAK,EAAEzB,MAAA,CAAA0B;EAAW,GAAE,IAAE,GAC/BlC,mBAAA,CAA2C;IAAlCiC,OAAK,EAAEzB,MAAA,CAAA2B;EAAY,GAAE,MAAI,GAClCnC,mBAAA,CAA+D;IAAtDiC,OAAK,EAAEzB,MAAA,CAAA4B,UAAU;IAAEtC,KAAK,EAAC;KAAa,SAAO,E,OAKzDK,mBAAA,kBAAqB,EACVK,MAAA,CAAA6B,SAAS,I,cAApBpC,mBAAA,CAKM,OALNqC,UAKM,GAJLC,UAAa,EACbvC,mBAAA,CAAkE,WAA/D,UAAQ,GAAAmB,gBAAA,CAAGX,MAAA,CAAAgC,gBAAgB,CAACC,IAAI,CAACC,OAAO,kCAC3C1C,mBAAA,CAAkE,WAA/D,UAAQ,GAAAmB,gBAAA,CAAGX,MAAA,CAAAgC,gBAAgB,CAACG,IAAI,CAACD,OAAO,kCAC3C1C,mBAAA,CAAiD;IAAxCiC,OAAK,EAAEzB,MAAA,CAAAoC;EAAgB,GAAE,QAAM,E,KA9C3CzC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}