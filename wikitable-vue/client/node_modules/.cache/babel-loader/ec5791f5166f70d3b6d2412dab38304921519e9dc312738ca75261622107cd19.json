{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'CombinedChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    fieldKey: {\n      type: String,\n      required: true\n    },\n    sources: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartRef = ref(null);\n    let chartInstance = null;\n    const initChart = () => {\n      if (!chartRef.value) return;\n\n      // 按来源分组数据\n      const groupedData = {};\n      props.data.forEach(item => {\n        if (!groupedData[item.source]) {\n          groupedData[item.source] = [];\n        }\n        groupedData[item.source].push(item);\n      });\n\n      // 准备系列数据\n      const series = [];\n      const colors = [\"#4285F4\", \"#EA4335\"]; // 蓝色和红色\n\n      Object.entries(groupedData).forEach((_ref2, index) => {\n        let [source, data] = _ref2;\n        // 按年份排序\n        data.sort((a, b) => (a.year || 0) - (b.year || 0));\n        series.push({\n          name: source,\n          type: \"line\",\n          data: data.map(item => ({\n            value: item.value,\n            raw: item.raw,\n            year: item.year\n          })),\n          symbol: \"circle\",\n          symbolSize: 8,\n          itemStyle: {\n            color: colors[index % colors.length]\n          },\n          lineStyle: {\n            width: 3\n          },\n          label: {\n            show: true,\n            formatter: _ref3 => {\n              let {\n                data\n              } = _ref3;\n              return data.raw;\n            }\n          }\n        });\n      });\n\n      // 提取所有年份并去重排序\n      const allYears = [...new Set(props.data.map(item => item.year).filter(Boolean))].sort();\n      const option = {\n        title: {\n          text: `${props.fieldKey} 对比`,\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.map(param => {\n              const {\n                seriesName,\n                data\n              } = param;\n              return `${seriesName}: ${data.raw}`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          data: Object.keys(groupedData),\n          top: 30\n        },\n        grid: {\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: allYears,\n          axisLabel: {\n            formatter: value => `${value}年`\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          }\n        },\n        series\n      };\n      if (!chartInstance) {\n        chartInstance = echarts.init(chartRef.value);\n      }\n      chartInstance.setOption(option);\n    };\n    onMounted(() => {\n      initChart();\n      window.addEventListener(\"resize\", handleResize);\n    });\n    const handleResize = () => {\n      if (chartInstance) {\n        chartInstance.resize();\n      }\n    };\n    watch(() => props.data, () => {\n      initChart();\n    }, {\n      deep: true\n    });\n    onUnmounted(() => {\n      window.removeEventListener(\"resize\", handleResize);\n      if (chartInstance) {\n        chartInstance.dispose();\n      }\n    });\n    const __returned__ = {\n      props,\n      chartRef,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","echarts","props","__props","chartRef","chartInstance","initChart","value","groupedData","data","forEach","item","source","push","series","colors","Object","entries","_ref2","index","sort","a","b","year","name","type","map","raw","symbol","symbolSize","itemStyle","color","length","lineStyle","width","label","show","formatter","_ref3","allYears","Set","filter","Boolean","option","title","text","fieldKey","left","tooltip","trigger","params","param","seriesName","join","legend","keys","top","grid","containLabel","xAxis","axisLabel","yAxis","init","setOption","window","addEventListener","handleResize","resize","deep","onUnmounted","removeEventListener","dispose"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/CombinedChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartRef\" class=\"combined-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tfieldKey: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Object,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartRef = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartRef.value) return;\r\n\r\n\t\t// 按来源分组数据\r\n\t\tconst groupedData = {};\r\n\t\tprops.data.forEach(item => {\r\n\t\t\tif (!groupedData[item.source]) {\r\n\t\t\t\tgroupedData[item.source] = [];\r\n\t\t\t}\r\n\t\t\tgroupedData[item.source].push(item);\r\n\t\t});\r\n\r\n\t\t// 准备系列数据\r\n\t\tconst series = [];\r\n\t\tconst colors = [\"#4285F4\", \"#EA4335\"]; // 蓝色和红色\r\n\r\n\t\tObject.entries(groupedData).forEach(([source, data], index) => {\r\n\t\t\t// 按年份排序\r\n\t\t\tdata.sort((a, b) => (a.year || 0) - (b.year || 0));\r\n\r\n\t\t\tseries.push({\r\n\t\t\t\tname: source,\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdata: data.map(item => ({\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\tyear: item.year\r\n\t\t\t\t})),\r\n\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\tsymbolSize: 8,\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: colors[index % colors.length]\r\n\t\t\t\t},\r\n\t\t\t\tlineStyle: {\r\n\t\t\t\t\twidth: 3\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: ({ data }) => data.raw\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 提取所有年份并去重排序\r\n\t\tconst allYears = [\r\n\t\t\t...new Set(props.data.map(item => item.year).filter(Boolean))\r\n\t\t].sort();\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: `${props.fieldKey} 对比`,\r\n\t\t\t\tleft: \"center\"\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\tconst { seriesName, data } = param;\r\n\t\t\t\t\t\t\treturn `${seriesName}: ${data.raw}`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tdata: Object.keys(groupedData),\r\n\t\t\t\ttop: 30\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: 80,\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: allYears,\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: value => `${value}年`\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries\r\n\t\t};\r\n\r\n\t\tif (!chartInstance) {\r\n\t\t\tchartInstance = echarts.init(chartRef.value);\r\n\t\t}\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t});\r\n\r\n\tconst handleResize = () => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.resize();\r\n\t\t}\r\n\t};\r\n\r\n\twatch(\r\n\t\t() => props.data,\r\n\t\t() => {\r\n\t\t\tinitChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tonUnmounted(() => {\r\n\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.combined-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}