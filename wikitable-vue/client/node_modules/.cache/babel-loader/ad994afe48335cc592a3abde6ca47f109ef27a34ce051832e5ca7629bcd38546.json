{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'SimpleChart',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 颜色定义（保持不变）\n    const pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\n    const barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\n\n    // 单位转换因子（保持不变）\n    const getUnitFactor = fieldKey => {\n      switch (fieldKey) {\n        case \"GDP\":\n          return 1e12;\n        case \"Population\":\n          return 1e8;\n        default:\n          return 1;\n      }\n    };\n\n    // 安全转换为数字（保持不变）\n    const safeToNumber = (value, fieldKey) => {\n      if (value === null || value === undefined) return 0;\n      if (typeof value === \"number\") return value / getUnitFactor(fieldKey);\n      if (typeof value === \"string\") {\n        const percentMatch = value.match(/(\\d+\\.?\\d*)%/);\n        if (percentMatch) return parseFloat(percentMatch[1]);\n        const numStr = value.toString().replace(/[^0-9.-]/g, \"\");\n        const num = parseFloat(numStr);\n        return isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\n      }\n      return 0;\n    };\n\n    // 格式化数值（保持不变）\n    const formatNumber = (value, fieldKey) => {\n      const num = Number(value);\n      if (isNaN(num)) return \"0\";\n      if (props.type === \"percentage\") {\n        return num.toFixed(1) + \"%\";\n      }\n      if (fieldKey === \"GDP\") {\n        return num.toFixed(2) + \"T\";\n      }\n      if (fieldKey === \"Population\") {\n        return num.toFixed(2) + \"亿\";\n      }\n      return num.toFixed(2);\n    };\n\n    // 格式化文本（保持不变）\n    const formatSimpleText = value => {\n      if (!value) return \"-\";\n      if (Array.isArray(value)) {\n        const items = value.map(item => item.raw || item.value || item);\n        return items.length > 2 ? items.slice(0, 2).join(\"; \") + \"...\" : items.join(\"; \");\n      }\n      if (typeof value === \"object\") {\n        return value.raw || value.value || \"-\";\n      }\n      return value.toString().length > 50 ? value.toString().substring(0, 50) + \"...\" : value.toString();\n    };\n\n    // 饼图数据（保持不变）\n    const pieData = computed(() => {\n      if (!props.field) return [];\n      if (Array.isArray(props.field)) {\n        return props.field.filter(item => {\n          const value = item?.value || item?.raw;\n          return value !== undefined && value !== null;\n        }).map((item, index) => {\n          let value = safeToNumber(item.value || item.raw, props.fieldKey);\n          value = Math.min(100, Math.max(0, value));\n          return {\n            value,\n            name: item.raw ? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : `项目${index + 1}`\n          };\n        });\n      }\n      if (typeof props.field === \"object\") {\n        let value = safeToNumber(props.field.value || props.field.raw, props.fieldKey);\n        value = Math.min(100, Math.max(0, value));\n        return [{\n          value,\n          name: props.field.raw ? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : \"项目\"\n        }];\n      }\n      let value = safeToNumber(props.field, props.fieldKey);\n      value = Math.min(100, Math.max(0, value));\n      return [{\n        value,\n        name: \"数值\"\n      }];\n    });\n\n    // 新增：单个数值的clipPath计算\n    const singleValueClipPath = computed(() => {\n      if (pieData.value.length !== 1) return \"\";\n      const value = pieData.value[0].value;\n      const degrees = value / 100 * 360;\n      return `polygon(50% 50%, 50% 0%, ${getPieSlicePoint(degrees)})`;\n    });\n\n    // 饼图切片（修改为不处理单值情况）\n    const pieSlices = computed(() => {\n      if (pieData.value.length <= 1) return [];\n      const total = pieData.value.reduce((sum, item) => sum + item.value, 0);\n      if (total <= 0) return [];\n      let accumulated = 0;\n      return pieData.value.map((item, index) => {\n        const start = accumulated / total * 360;\n        accumulated += item.value;\n        const end = accumulated / total * 360;\n        return {\n          style: {\n            backgroundColor: pieColors[index % pieColors.length],\n            transform: `rotate(${start}deg)`,\n            clipPath: `polygon(50% 50%, 50% 0%, ${end > 180 ? \"100% 0%, 100% 100%, 50% 100%\" : \"100% 0%\"}, ${getPieSlicePoint(end)})`\n          }\n        };\n      });\n    });\n\n    // 计算饼图切片点（保持不变）\n    const getPieSlicePoint = degrees => {\n      const radians = (degrees - 90) * Math.PI / 180;\n      const x = 50 + 50 * Math.cos(radians);\n      const y = 50 + 50 * Math.sin(radians);\n      return `${x}% ${y}%`;\n    };\n\n    // 格式化饼图数据（保持不变）\n    const formattedPieData = computed(() => {\n      return pieData.value.map((item, index) => {\n        return `${item.name}: ${formatNumber(item.value, props.fieldKey)}`;\n      });\n    });\n\n    /* 以下是完全保持不变的其他图表代码 */\n    // 柱状图数据（保持不变）\n    const simpleBarData = computed(() => {\n      // ... 原有实现 ...\n    });\n\n    // 格式化柱状图数据（保持不变）\n    const formattedBarData = computed(() => {\n      // ... 原有实现 ...\n    });\n\n    // 折线图数据（保持不变）\n    const lineData = computed(() => {\n      // ... 原有实现 ...\n    });\n\n    // 折线图点（保持不变）\n    const linePointsArray = computed(() => {\n      // ... 原有实现 ...\n    });\n    const linePoints = computed(() => {\n      // ... 原有实现 ...\n    });\n\n    // 格式化折线图数据（保持不变）\n    const formattedLineData = computed(() => {\n      // ... 原有实现 ...\n    });\n    const hasData = computed(() => {\n      // ... 原有实现 ...\n    });\n    const __returned__ = {\n      props,\n      pieColors,\n      barColors,\n      getUnitFactor,\n      safeToNumber,\n      formatNumber,\n      formatSimpleText,\n      pieData,\n      singleValueClipPath,\n      pieSlices,\n      getPieSlicePoint,\n      formattedPieData,\n      simpleBarData,\n      formattedBarData,\n      lineData,\n      linePointsArray,\n      linePoints,\n      formattedLineData,\n      hasData,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","pieColors","barColors","getUnitFactor","fieldKey","safeToNumber","value","undefined","percentMatch","match","parseFloat","numStr","toString","replace","num","isNaN","formatNumber","Number","type","toFixed","formatSimpleText","Array","isArray","items","map","item","raw","length","slice","join","substring","pieData","field","filter","index","Math","min","max","name","singleValueClipPath","degrees","getPieSlicePoint","pieSlices","total","reduce","sum","accumulated","start","end","style","backgroundColor","transform","clipPath","radians","PI","x","cos","y","sin","formattedPieData","simpleBarData","formattedBarData","lineData","linePointsArray","linePoints","formattedLineData","hasData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 修改后的饼图部分 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-pie-container\">\r\n\t\t\t\t<div class=\"simple-pie\">\r\n\t\t\t\t\t<!-- 单个数值时显示比例扇形 + 灰色背景 -->\r\n\t\t\t\t\t<template v-if=\"pieData.length === 1\">\r\n\t\t\t\t\t\t<div class=\"pie-slice-bg\"></div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\t\tbackgroundColor: pieColors[0],\r\n\t\t\t\t\t\t\t\ttransform: 'rotate(0deg)',\r\n\t\t\t\t\t\t\t\tclipPath: singleValueClipPath\r\n\t\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<!-- 多个数值时保持原有显示 -->\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tv-for=\"(slice, index) in pieSlices\"\r\n\t\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:style=\"slice.style\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"pie-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedPieData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"pie-value-item\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"pie-color\"\r\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: pieColors[index] }\"></span>\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图（保持不变） -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-bars-container\">\r\n\t\t\t\t<div class=\"simple-bars\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in simpleBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"simple-bar\"\r\n\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\theight: item.height + '%',\r\n\t\t\t\t\t\t\tbackgroundColor: barColors[index]\r\n\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bar-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"bar-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图（保持不变） -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-line-container\">\r\n\t\t\t\t<svg viewBox=\"0 0 100 50\" class=\"line-svg\">\r\n\t\t\t\t\t<polyline\r\n\t\t\t\t\t\t:points=\"linePoints\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"#3498db\"\r\n\t\t\t\t\t\tstroke-width=\"2\" />\r\n\t\t\t\t\t<circle\r\n\t\t\t\t\t\tv-for=\"(point, index) in linePointsArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t:cx=\"point.x\"\r\n\t\t\t\t\t\t:cy=\"point.y\"\r\n\t\t\t\t\t\tr=\"2\"\r\n\t\t\t\t\t\tfill=\"#3498db\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<div class=\"line-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedLineData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"line-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示（保持不变） -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\t// 颜色定义（保持不变）\r\n\tconst pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\r\n\t// 单位转换因子（保持不变）\r\n\tconst getUnitFactor = fieldKey => {\r\n\t\tswitch (fieldKey) {\r\n\t\t\tcase \"GDP\":\r\n\t\t\t\treturn 1e12;\r\n\t\t\tcase \"Population\":\r\n\t\t\t\treturn 1e8;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 1;\r\n\t\t}\r\n\t};\r\n\r\n\t// 安全转换为数字（保持不变）\r\n\tconst safeToNumber = (value, fieldKey) => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (typeof value === \"number\") return value / getUnitFactor(fieldKey);\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst percentMatch = value.match(/(\\d+\\.?\\d*)%/);\r\n\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 格式化数值（保持不变）\r\n\tconst formatNumber = (value, fieldKey) => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\treturn num.toFixed(1) + \"%\";\r\n\t\t}\r\n\t\tif (fieldKey === \"GDP\") {\r\n\t\t\treturn num.toFixed(2) + \"T\";\r\n\t\t}\r\n\t\tif (fieldKey === \"Population\") {\r\n\t\t\treturn num.toFixed(2) + \"亿\";\r\n\t\t}\r\n\t\treturn num.toFixed(2);\r\n\t};\r\n\r\n\t// 格式化文本（保持不变）\r\n\tconst formatSimpleText = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tconst items = value.map(item => item.raw || item.value || item);\r\n\t\t\treturn items.length > 2\r\n\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t: items.join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || \"-\";\r\n\t\t}\r\n\t\treturn value.toString().length > 50\r\n\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t: value.toString();\r\n\t};\r\n\r\n\t// 饼图数据（保持不变）\r\n\tconst pieData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tlet value = safeToNumber(item.value || item.raw, props.fieldKey);\r\n\t\t\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tlet value = safeToNumber(\r\n\t\t\t\tprops.field.value || props.field.raw,\r\n\t\t\t\tprops.fieldKey\r\n\t\t\t);\r\n\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t: \"项目\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tlet value = safeToNumber(props.field, props.fieldKey);\r\n\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tvalue,\r\n\t\t\t\tname: \"数值\"\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\t// 新增：单个数值的clipPath计算\r\n\tconst singleValueClipPath = computed(() => {\r\n\t\tif (pieData.value.length !== 1) return \"\";\r\n\t\tconst value = pieData.value[0].value;\r\n\t\tconst degrees = (value / 100) * 360;\r\n\t\treturn `polygon(50% 50%, 50% 0%, ${getPieSlicePoint(degrees)})`;\r\n\t});\r\n\r\n\t// 饼图切片（修改为不处理单值情况）\r\n\tconst pieSlices = computed(() => {\r\n\t\tif (pieData.value.length <= 1) return [];\r\n\r\n\t\tconst total = pieData.value.reduce((sum, item) => sum + item.value, 0);\r\n\t\tif (total <= 0) return [];\r\n\r\n\t\tlet accumulated = 0;\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\tconst start = (accumulated / total) * 360;\r\n\t\t\taccumulated += item.value;\r\n\t\t\tconst end = (accumulated / total) * 360;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: pieColors[index % pieColors.length],\r\n\t\t\t\t\ttransform: `rotate(${start}deg)`,\r\n\t\t\t\t\tclipPath: `polygon(50% 50%, 50% 0%, ${\r\n\t\t\t\t\t\tend > 180 ? \"100% 0%, 100% 100%, 50% 100%\" : \"100% 0%\"\r\n\t\t\t\t\t}, ${getPieSlicePoint(end)})`\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算饼图切片点（保持不变）\r\n\tconst getPieSlicePoint = degrees => {\r\n\t\tconst radians = ((degrees - 90) * Math.PI) / 180;\r\n\t\tconst x = 50 + 50 * Math.cos(radians);\r\n\t\tconst y = 50 + 50 * Math.sin(radians);\r\n\t\treturn `${x}% ${y}%`;\r\n\t};\r\n\r\n\t// 格式化饼图数据（保持不变）\r\n\tconst formattedPieData = computed(() => {\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\treturn `${item.name}: ${formatNumber(item.value, props.fieldKey)}`;\r\n\t\t});\r\n\t});\r\n\r\n\t/* 以下是完全保持不变的其他图表代码 */\r\n\t// 柱状图数据（保持不变）\r\n\tconst simpleBarData = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\t// 格式化柱状图数据（保持不变）\r\n\tconst formattedBarData = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\t// 折线图数据（保持不变）\r\n\tconst lineData = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\t// 折线图点（保持不变）\r\n\tconst linePointsArray = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\tconst linePoints = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\t// 格式化折线图数据（保持不变）\r\n\tconst formattedLineData = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\t// ... 原有实现 ...\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 新增饼图样式 */\r\n\t.pie-slice-bg {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f0f0f0; /* 灰色背景 */\r\n\t\tz-index: 0;\r\n\t}\r\n\r\n\t/* 修改饼图切片样式 */\r\n\t.pie-slice {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\ttransform-origin: center;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t/* 其他完全保持不变的样式 */\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t.simple-pie-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-pie {\r\n\t\twidth: 60px;\r\n\t\theight: 60px;\r\n\t\tborder-radius: 50%;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.pie-values {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tgap: 5px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.pie-value-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 3px;\r\n\t}\r\n\r\n\t.pie-color {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t.simple-bars-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-bars {\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-end;\r\n\t\theight: 60px;\r\n\t\tgap: 4px;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 10px;\r\n\t}\r\n\r\n\t.simple-bar {\r\n\t\tflex: 1;\r\n\t\tmin-width: 5px;\r\n\t\ttransition: height 0.3s;\r\n\t\tborder-radius: 2px 2px 0 0;\r\n\t}\r\n\r\n\t.bar-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.bar-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.simple-line-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.line-svg {\r\n\t\twidth: 100%;\r\n\t\theight: 60px;\r\n\t}\r\n\r\n\t.line-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.line-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}