{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Infobox 数据对比\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"titles\"\n};\nconst _hoisted_5 = {\n  class: \"title-box left\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-box center\"\n}, \"比较属性\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"title-box right\"\n};\nconst _hoisted_8 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header left-column\"\n}, \"数据展示\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header middle-column\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header right-column\"\n}, \"数据展示\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_13 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_14 = {\n  class: \"field-name\"\n};\nconst _hoisted_15 = {\n  class: \"field-type\"\n};\nconst _hoisted_16 = {\n  class: \"cell right-column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" 表头 \"), _hoisted_9, _hoisted_10, _hoisted_11, _createCommentVNode(\" 内容行 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type,\n      \"field-key\": field.key\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"field-key\"])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(field.typeLabel), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type,\n      \"field-key\": field.key\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"field-key\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$setup","leftInfobox","title","_hoisted_6","_hoisted_7","rightInfobox","_hoisted_8","_createCommentVNode","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","comparableFields","field","key","_hoisted_12","_createVNode","getField","type","_hoisted_13","_hoisted_14","_hoisted_15","typeLabel","_hoisted_16"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 标准化数据结构\r\n\t\tconst result = {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: {}\r\n\t\t};\r\n\r\n\t\t// 合并所有sections\r\n\t\tif (data.sections) {\r\n\t\t\tfor (const [sectionName, sectionData] of Object.entries(data.sections)) {\r\n\t\t\t\tresult.data[sectionName] = { ...sectionData };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{ key: \"GDP\", type: \"number\", typeLabel: \"数值(万亿美元)\" },\r\n\t\t{ key: \"Population\", type: \"number\", typeLabel: \"数值(亿人)\" },\r\n\t\t{ key: \"GDP growth\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{ key: \"Inflation (CPI)\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{ key: \"Currency\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Country group\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Fiscal year\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Trade organizations\", type: \"text\", typeLabel: \"文本\" }\r\n\t];\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 1. 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. 模糊匹配（忽略大小写、空格和符号）\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\tconsole.log(`模糊匹配成功: ${fieldKey} -> ${matchedKey}`);\r\n\t\t\t\treturn section[matchedKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.warn(`字段未匹配: ${fieldKey}`, {\r\n\t\t\tavailableKeys: Object.values(infobox.data).flatMap(s => Object.keys(s))\r\n\t\t});\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\r\n\t\t\tconsole.log(`字段检查 ${field.key}:`, {\r\n\t\t\t\tleft: leftVal,\r\n\t\t\t\tright: rightVal\r\n\t\t\t});\r\n\r\n\t\t\treturn leftVal !== null || rightVal !== null;\r\n\t\t});\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"左侧数据接收:\",\r\n\t\t\t\tJSON.parse(JSON.stringify(leftInfobox.value))\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"右侧数据接收:\",\r\n\t\t\t\tJSON.parse(JSON.stringify(rightInfobox.value))\r\n\t\t\t);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.header h2 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.title-box.center {\r\n\t\tflex: 0.5;\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tmin-height: 100px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAmB;;EACxBA,KAAK,EAAC;AAAQ;gEAClBC,mBAAA,CAAqB,YAAjB,cAAY;;EACXD,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAgB;gEAC3BC,mBAAA,CAAwC;EAAnCD,KAAK,EAAC;AAAkB,GAAC,MAAI;;EAC7BA,KAAK,EAAC;AAAiB;;EAIzBA,KAAK,EAAC;AAAiB;gEAE3BC,mBAAA,CAAiD;EAA5CD,KAAK,EAAC;AAA2B,GAAC,MAAI;iEAC3CC,mBAAA,CAAiD;EAA5CD,KAAK,EAAC;AAA6B,GAAC,IAAE;iEAC3CC,mBAAA,CAAkD;EAA7CD,KAAK,EAAC;AAA4B,GAAC,MAAI;;EAItCA,KAAK,EAAC;AAAkB;;EAMxBA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAEnBA,KAAK,EAAC;AAAmB;;uBA5BjCE,mBAAA,CAoCM,OApCNC,UAoCM,GAnCLF,mBAAA,CAOM,OAPNG,UAOM,GANLC,UAAqB,EACrBJ,mBAAA,CAIM,OAJNK,UAIM,GAHLL,mBAAA,CAAyD,OAAzDM,UAAyD,EAAAC,gBAAA,CAA1BC,MAAA,CAAAC,WAAW,CAACC,KAAK,kBAChDC,UAAwC,EACxCX,mBAAA,CAA2D,OAA3DY,UAA2D,EAAAL,gBAAA,CAA3BC,MAAA,CAAAK,YAAY,CAACH,KAAK,iB,KAIpDV,mBAAA,CAyBM,OAzBNc,UAyBM,GAxBLC,mBAAA,QAAW,EACXC,UAAiD,EACjDC,WAAiD,EACjDC,WAAkD,EAElDH,mBAAA,SAAY,G,kBACZd,mBAAA,CAiBWkB,SAAA,QAnCdC,WAAA,CAkB6BZ,MAAA,CAAAa,gBAAgB,EAAzBC,KAAK;yBAlBzBrB,mBAAA,CAAAkB,SAAA;MAAAI,GAAA,EAkBqDD,KAAK,CAACC;QACvDvB,mBAAA,CAKM,OALNwB,WAKM,GAJLC,YAAA,CAG0BjB,MAAA;MAFxBc,KAAK,EAAEd,MAAA,CAAAkB,QAAQ,CAAClB,MAAA,CAAAC,WAAW,EAAEa,KAAK,CAACC,GAAG;MACtCI,IAAI,EAAEL,KAAK,CAACK,IAAI;MAChB,WAAS,EAAEL,KAAK,CAACC;+DAEpBvB,mBAAA,CAGM,OAHN4B,WAGM,GAFL5B,mBAAA,CAA6C,OAA7C6B,WAA6C,EAAAtB,gBAAA,CAAlBe,KAAK,CAACC,GAAG,kBACpCvB,mBAAA,CAAmD,OAAnD8B,WAAmD,EAAAvB,gBAAA,CAAxBe,KAAK,CAACS,SAAS,iB,GAE3C/B,mBAAA,CAKM,OALNgC,WAKM,GAJLP,YAAA,CAG0BjB,MAAA;MAFxBc,KAAK,EAAEd,MAAA,CAAAkB,QAAQ,CAAClB,MAAA,CAAAK,YAAY,EAAES,KAAK,CAACC,GAAG;MACvCI,IAAI,EAAEL,KAAK,CAACK,IAAI;MAChB,WAAS,EAAEL,KAAK,CAACC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}