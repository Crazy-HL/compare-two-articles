{"ast":null,"code":"import { ref, computed, onMounted, nextTick } from \"vue\";\n\n// 接收父组件传递的 props\n\nexport default {\n  __name: 'input_output',\n  props: {\n    width: {\n      type: String,\n      default: \"100%\" // 默认宽度为 100%\n    },\n    height: {\n      type: [String, Number],\n      default: \"800px\" // 默认最大高度为 800px\n    },\n    placeholder: {\n      type: String,\n      default: \"请输入文本\" // 默认 placeholder 文本\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 创建响应式变量\n    const inputText = ref(\"\"); // 绑定文本框的值\n    const textarea = ref(null); // 获取 textarea 的引用\n\n    // 计算样式对象，支持传入的宽度和最大高度\n    const textareaStyles = computed(() => ({\n      width: props.width,\n      // 根据传入的宽度设置\n      maxHeight: props.height // 根据传入的最大高度设置\n    }));\n\n    // 自动调整文本框的高度\n    const adjustTextareaHeight = () => {\n      const textareaElement = textarea.value;\n\n      // 重置 textarea 的高度\n      textareaElement.style.height = \"auto\"; // 重置高度以重新计算\n\n      // 获取滚动区域的高度，并设置为新的高度，最大值为传入的最大高度\n      const scrollHeight = textareaElement.scrollHeight;\n\n      // 处理最大高度，确保不超过最大高度\n      let maxHeight = props.height;\n      if (typeof maxHeight === \"string\" && maxHeight.endsWith(\"px\")) {\n        maxHeight = parseInt(maxHeight); // 仅当包含 'px' 时进行解析\n      }\n\n      // 设置新的高度，确保不超过最大高度\n      textareaElement.style.height = Math.min(scrollHeight, maxHeight) + \"px\";\n    };\n\n    // 在组件挂载后执行一次高度调整\n    onMounted(() => {\n      nextTick(() => {\n        adjustTextareaHeight();\n      });\n    });\n    const __returned__ = {\n      props,\n      inputText,\n      textarea,\n      textareaStyles,\n      adjustTextareaHeight,\n      ref,\n      computed,\n      onMounted,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","props","__props","inputText","textarea","textareaStyles","width","maxHeight","height","adjustTextareaHeight","textareaElement","value","style","scrollHeight","endsWith","parseInt","Math","min"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/input_output.vue"],"sourcesContent":["<template>\r\n\t<div class=\"textarea-container\">\r\n\t\t<textarea\r\n\t\t\tv-model=\"inputText\"\r\n\t\t\tref=\"textarea\"\r\n\t\t\t:placeholder=\"placeholder\"\r\n\t\t\t@input=\"adjustTextareaHeight\"\r\n\t\t\t:style=\"textareaStyles\"></textarea>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, nextTick } from \"vue\";\r\n\r\n\t// 接收父组件传递的 props\r\n\tconst props = defineProps({\r\n\t\twidth: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"100%\" // 默认宽度为 100%\r\n\t\t},\r\n\t\theight: {\r\n\t\t\ttype: [String, Number],\r\n\t\t\tdefault: \"800px\" // 默认最大高度为 800px\r\n\t\t},\r\n\t\tplaceholder: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"请输入文本\" // 默认 placeholder 文本\r\n\t\t}\r\n\t});\r\n\r\n\t// 创建响应式变量\r\n\tconst inputText = ref(\"\"); // 绑定文本框的值\r\n\tconst textarea = ref(null); // 获取 textarea 的引用\r\n\r\n\t// 计算样式对象，支持传入的宽度和最大高度\r\n\tconst textareaStyles = computed(() => ({\r\n\t\twidth: props.width, // 根据传入的宽度设置\r\n\t\tmaxHeight: props.height // 根据传入的最大高度设置\r\n\t}));\r\n\r\n\t// 自动调整文本框的高度\r\n\tconst adjustTextareaHeight = () => {\r\n\t\tconst textareaElement = textarea.value;\r\n\r\n\t\t// 重置 textarea 的高度\r\n\t\ttextareaElement.style.height = \"auto\"; // 重置高度以重新计算\r\n\r\n\t\t// 获取滚动区域的高度，并设置为新的高度，最大值为传入的最大高度\r\n\t\tconst scrollHeight = textareaElement.scrollHeight;\r\n\r\n\t\t// 处理最大高度，确保不超过最大高度\r\n\t\tlet maxHeight = props.height;\r\n\t\tif (typeof maxHeight === \"string\" && maxHeight.endsWith(\"px\")) {\r\n\t\t\tmaxHeight = parseInt(maxHeight); // 仅当包含 'px' 时进行解析\r\n\t\t}\r\n\r\n\t\t// 设置新的高度，确保不超过最大高度\r\n\t\ttextareaElement.style.height = Math.min(scrollHeight, maxHeight) + \"px\";\r\n\t};\r\n\r\n\t// 在组件挂载后执行一次高度调整\r\n\tonMounted(() => {\r\n\t\tnextTick(() => {\r\n\t\t\tadjustTextareaHeight();\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.textarea-container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px; /* 最大宽度 */\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 50px; /* 最小高度 */\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 1.5;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t\tresize: none; /* 禁用手动调整大小 */\r\n\t}\r\n</style>\r\n"],"mappings":"AAYC,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;;AAExD;;;;;;;;;;;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAaZ;;IAEF;IACA,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,MAAMO,QAAQ,GAAGP,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE5B;IACA,MAAMQ,cAAc,GAAGP,QAAQ,CAAC,OAAO;MACtCQ,KAAK,EAAEL,KAAK,CAACK,KAAK;MAAE;MACpBC,SAAS,EAAEN,KAAK,CAACO,MAAM,CAAC;IACzB,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MAClC,MAAMC,eAAe,GAAGN,QAAQ,CAACO,KAAK;;MAEtC;MACAD,eAAe,CAACE,KAAK,CAACJ,MAAM,GAAG,MAAM,CAAC,CAAC;;MAEvC;MACA,MAAMK,YAAY,GAAGH,eAAe,CAACG,YAAY;;MAEjD;MACA,IAAIN,SAAS,GAAGN,KAAK,CAACO,MAAM;MAC5B,IAAI,OAAOD,SAAS,KAAK,QAAQ,IAAIA,SAAS,CAACO,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC9DP,SAAS,GAAGQ,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC;MAClC;;MAEA;MACAG,eAAe,CAACE,KAAK,CAACJ,MAAM,GAAGQ,IAAI,CAACC,GAAG,CAACJ,YAAY,EAAEN,SAAS,CAAC,GAAG,IAAI;IACxE,CAAC;;IAED;IACAR,SAAS,CAAC,MAAM;MACfC,QAAQ,CAAC,MAAM;QACdS,oBAAoB,CAAC,CAAC;MACvB,CAAC,CAAC;IACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}