{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"auto-comparison-status\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"loading-icon\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-lock\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"compare-icon\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"extraction-progress\"\n};\nconst _hoisted_11 = {\n  class: \"chat-history\"\n};\nconst _hoisted_12 = {\n  class: \"message-content\"\n};\nconst _hoisted_13 = [\"innerHTML\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"comparison-vis-container\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"metadata-comparison\"\n};\nconst _hoisted_16 = {\n  class: \"item-name\"\n};\nconst _hoisted_17 = {\n  class: \"item-value\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"infobox-comparison\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"属性\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"左侧值\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"右侧值\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"状态\")])], -1 /* HOISTED */));\nconst _hoisted_20 = {\n  key: 2,\n  class: \"key-differences\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"关键差异点：\", -1 /* HOISTED */));\nconst _hoisted_22 = {\n  class: \"vis-container\"\n};\nconst _hoisted_23 = {\n  class: \"input\"\n};\nconst _hoisted_24 = {\n  class: \"input-container\"\n};\nconst _hoisted_25 = {\n  class: \"button-container\"\n};\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-send\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-merge\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-compare\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache) {\n  const _component_CompareTable = _resolveComponent(\"CompareTable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 智能对比状态栏 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: _normalizeClass(_ctx.statusClass)\n  }, _toDisplayString(_ctx.statusMessage), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.autoCompareArticles && _ctx.autoCompareArticles(...arguments);\n    }),\n    disabled: !_ctx.canCompare || _ctx.isComparing,\n    class: _normalizeClass([\"smart-compare-btn\", {\n      disabled: !_ctx.canCompare || _ctx.isComparing\n    }])\n  }, [_ctx.isComparing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [_hoisted_5, _createTextVNode(\" 对比中... \")])) : !_ctx.canCompare ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, [_hoisted_7, _createTextVNode(\" 智能对比 \")])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, [_hoisted_9, _createTextVNode(\" 智能对比 \")]))], 10 /* CLASS, PROPS */, _hoisted_3), _ctx.isComparing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    class: \"progress-bar\",\n    style: _normalizeStyle({\n      width: _ctx.extractionProgress + '%'\n    })\n  }, null, 4 /* STYLE */)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", {\n    class: \"chat-container\",\n    onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleDrop && _ctx.handleDrop(...arguments);\n    })\n  }, [_createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"系统\") + \":\", 1 /* TEXT */), _createElementVNode(\"div\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_13)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 对比结果可视化区域 \"), _ctx.comparisonResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comparisonResult.structure, (section, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"comparison-section\",\n      key: index\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(section.title), 1 /* TEXT */), section.type === 'metadata' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.name,\n        class: \"metadata-item\"\n      }, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString(item.name) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(item.value), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), section.type === 'infobox' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"table\", null, [_hoisted_19, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, item => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: item.field\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.field), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.left), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.right), 1 /* TEXT */), _createElementVNode(\"td\", {\n        class: _normalizeClass({\n          same: item.is_same,\n          different: !item.is_same\n        })\n      }, _toDisplayString(item.is_same ? \"✔ 相同\" : \"✖ 不同\"), 3 /* TEXT, CLASS */)]);\n    }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), section.type === 'key_differences' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_hoisted_21, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, (diff, idx) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: idx\n      }, _toDisplayString(diff), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 可视化表格容器 \"), _createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_CompareTable, {\n    class: \"compare-table\",\n    \"div1-raw-data\": _ctx.div1RawData,\n    \"div3-raw-data\": _ctx.div3RawData,\n    onCompareAttribute: _ctx.handleAttributeComparison\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\", \"onCompareAttribute\"])]), _createCommentVNode(\" 输入区域 \"), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"输入关于对比结果的问题...\",\n    onKeydown: _cache[4] || (_cache[4] = _withKeys(_withModifiers(function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    }, [\"prevent\"]), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.userQuestion]]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    }),\n    class: \"btn-send\"\n  }, [_hoisted_26, _createTextVNode(\" 发送 \")]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = function () {\n      return _ctx.mergedJson && _ctx.mergedJson(...arguments);\n    }),\n    class: \"btn-merge\"\n  }, [_hoisted_27, _createTextVNode(\" 合并数据 \")]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = function () {\n      return _ctx.compareTexts && _ctx.compareTexts(...arguments);\n    }),\n    class: \"btn-compare\"\n  }, [_hoisted_28, _createTextVNode(\" 对比选中 \")])])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_normalizeClass","_ctx","statusClass","statusMessage","onClick","_cache","autoCompareArticles","arguments","disabled","canCompare","isComparing","_hoisted_4","_hoisted_5","_createTextVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_3","_hoisted_10","style","_normalizeStyle","width","extractionProgress","onDragover","_withModifiers","onDrop","handleDrop","_hoisted_11","_Fragment","_renderList","chatHistory","message","index","role","_hoisted_12","_toDisplayString","innerHTML","content","_hoisted_13","comparisonResult","_hoisted_14","structure","section","title","type","_hoisted_15","items","item","name","_hoisted_16","_hoisted_17","value","_hoisted_18","_hoisted_19","field","left","right","same","is_same","different","_hoisted_20","_hoisted_21","diff","idx","_hoisted_22","_createVNode","_component_CompareTable","div1RawData","div3RawData","onCompareAttribute","handleAttributeComparison","_hoisted_23","_hoisted_24","$event","userQuestion","rows","placeholder","onKeydown","_withKeys","askQuestion","_hoisted_25","_hoisted_26","mergedJson","_hoisted_27","compareTexts","_hoisted_28"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 智能对比状态栏 -->\r\n\t\t<div class=\"auto-comparison-status\">\r\n\t\t\t<span :class=\"statusClass\">\r\n\t\t\t\t{{ statusMessage }}\r\n\t\t\t</span>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"autoCompareArticles\"\r\n\t\t\t\t:disabled=\"!canCompare || isComparing\"\r\n\t\t\t\tclass=\"smart-compare-btn\"\r\n\t\t\t\t:class=\"{ disabled: !canCompare || isComparing }\">\r\n\t\t\t\t<span v-if=\"isComparing\"> <i class=\"loading-icon\"></i> 对比中... </span>\r\n\t\t\t\t<span v-else-if=\"!canCompare\">\r\n\t\t\t\t\t<i class=\"icon-lock\"></i> 智能对比\r\n\t\t\t\t</span>\r\n\t\t\t\t<span v-else> <i class=\"compare-icon\"></i> 智能对比 </span>\r\n\t\t\t</button>\r\n\t\t\t<div v-if=\"isComparing\" class=\"extraction-progress\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"progress-bar\"\r\n\t\t\t\t\t:style=\"{ width: extractionProgress + '%' }\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"系统\" }}:</strong>\r\n\t\t\t\t\t\t<div v-html=\"message.content\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 对比结果可视化区域 -->\r\n\t\t<div class=\"comparison-vis-container\" v-if=\"comparisonResult\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"comparison-section\"\r\n\t\t\t\tv-for=\"(section, index) in comparisonResult.structure\"\r\n\t\t\t\t:key=\"index\">\r\n\t\t\t\t<h3>{{ section.title }}</h3>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'metadata'\" class=\"metadata-comparison\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"item in section.items\"\r\n\t\t\t\t\t\t:key=\"item.name\"\r\n\t\t\t\t\t\tclass=\"metadata-item\">\r\n\t\t\t\t\t\t<span class=\"item-name\">{{ item.name }}:</span>\r\n\t\t\t\t\t\t<span class=\"item-value\">{{ item.value }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'infobox'\" class=\"infobox-comparison\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>属性</th>\r\n\t\t\t\t\t\t\t\t<th>左侧值</th>\r\n\t\t\t\t\t\t\t\t<th>右侧值</th>\r\n\t\t\t\t\t\t\t\t<th>状态</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr v-for=\"item in section.items\" :key=\"item.field\">\r\n\t\t\t\t\t\t\t\t<td>{{ item.field }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.left }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.right }}</td>\r\n\t\t\t\t\t\t\t\t<td :class=\"{ same: item.is_same, different: !item.is_same }\">\r\n\t\t\t\t\t\t\t\t\t{{ item.is_same ? \"✔ 相同\" : \"✖ 不同\" }}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div v-if=\"section.type === 'key_differences'\" class=\"key-differences\">\r\n\t\t\t\t\t<h4>关键差异点：</h4>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li v-for=\"(diff, idx) in section.items\" :key=\"idx\">\r\n\t\t\t\t\t\t\t{{ diff }}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化表格容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\r\n\t\t<!-- 输入区域 -->\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"输入关于对比结果的问题...\"\r\n\t\t\t\t\t@keydown.enter.prevent=\"askQuestion\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" class=\"btn-send\">\r\n\t\t\t\t\t\t<i class=\"icon-send\"></i> 发送\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"btn-merge\">\r\n\t\t\t\t\t\t<i class=\"icon-merge\"></i> 合并数据\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\" class=\"btn-compare\">\r\n\t\t\t\t\t\t<i class=\"icon-compare\"></i> 对比选中\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport {\r\n\t  renderLineChart,\r\n\t  renderBarChart,\r\n\t  renderPieChart,\r\n\t  renderNonVisualChart,\r\n\t  renderRadarChart,\r\n\t  renderStackedBarChart,\r\n\t  renderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\t// 状态变量\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst comparisonResult = ref(null);\r\n\tconst isComparing = ref(false);\r\n\tconst div1FullContent = ref(null);\r\n\tconst div3FullContent = ref(null);\r\n\tconst extractionProgress = ref(0);\r\n\r\n\t// 计算属性\r\n\tconst canCompare = computed(() => {\r\n\t  return (\r\n\t    div1FullContent.value &&\r\n\t    div3FullContent.value &&\r\n\t    div1FullContent.value.trim() &&\r\n\t    div3FullContent.value.trim()\r\n\t  );\r\n\t});\r\n\r\n\tconst statusMessage = computed(() => {\r\n\t  if (!div1FullContent.value && !div3FullContent.value)\r\n\t    return \"⏳ 请先加载左右两篇文章\";\r\n\t  if (!div1FullContent.value) return \"⏳ 请加载左侧文章\";\r\n\t  if (!div3FullContent.value) return \"⏳ 请加载右侧文章\";\r\n\t  return \"✓ 已准备好对比\";\r\n\t});\r\n\r\n\tconst statusClass = computed(() => ({\r\n\t  \"status-ready\": canCompare.value,\r\n\t  \"status-waiting\": !canCompare.value\r\n\t}));\r\n\r\n\t// 事件处理\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\tconst handleDiv1FullContent = data => {\r\n\t  div1FullContent.value = data.content;\r\n\t  if (div1FullContent.value && div3FullContent.value) {\r\n\t    autoCompareArticles();\r\n\t  }\r\n\t};\r\n\tconst handleDiv3FullContent = data => {\r\n\t  div3FullContent.value = data.content;\r\n\t  if (div1FullContent.value && div3FullContent.value) {\r\n\t    autoCompareArticles();\r\n\t  }\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t  bus.on(\"div1_Event\", handleDiv1Event);\r\n\t  bus.on(\"div3_Event\", handleDiv3Event);\r\n\t  bus.on(\"div1_FullContent\", handleDiv1FullContent);\r\n\t  bus.on(\"div3_FullContent\", handleDiv3FullContent);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t  bus.off(\"div1_Event\", handleDiv1Event);\r\n\t  bus.off(\"div3_Event\", handleDiv3Event);\r\n\t  bus.off(\"div1_FullContent\", handleDiv1FullContent);\r\n\t  bus.off(\"div3_FullContent\", handleDiv3FullContent);\r\n\t});\r\n\r\n\t// 智能对比方法\r\n\tconst autoCompareArticles = async () => {\r\n\t  if (!canCompare.value || isComparing.value) return;\r\n\r\n\t  isComparing.value = true;\r\n\t  extractionProgress.value = 0;\r\n\t  addChatMessage(\"system\", \"开始智能对比两篇文章内容...\");\r\n\r\n\t  try {\r\n\t    const timeoutPromise = new Promise((_, reject) =>\r\n\t      setTimeout(() => reject(new Error(\"对比超时，请重试\")), 30000);\r\n\r\n\t    const comparePromise = new Promise((resolve, reject) => {\r\n\t      api.post(\r\n\t        \"wiki_compare\",\r\n\t        {\r\n\t          left_html: div1FullContent.value,\r\n\t          right_html: div3FullContent.value,\r\n\t          light_mode: true // 告诉后端使用精简模式\r\n\t        },\r\n\t        response => {\r\n\t          if (response?.success) {\r\n\t            resolve(response.result);\r\n\t          } else {\r\n\t            reject(new Error(response?.error || \"对比服务返回异常\"));\r\n\t          }\r\n\t        },\r\n\t        error => {\r\n\t          reject(error);\r\n\t        }\r\n\t      );\r\n\t    });\r\n\r\n\t    const result = await Promise.race([comparePromise, timeoutPromise]);\r\n\t    comparisonResult.value = processComparisonResult(result);\r\n\t    extractionProgress.value = 100;\r\n\t    addChatMessage(\r\n\t      \"system\",\r\n\t      `对比完成！发现 ${result.key_differences?.length || 0} 个关键差异`\r\n\t    );\r\n\t  } catch (error) {\r\n\t    console.error(\"对比失败:\", error);\r\n\t    addChatMessage(\"system\", `对比失败: ${error.message}`);\r\n\t  } finally {\r\n\t    isComparing.value = false;\r\n\t    extractionProgress.value = 0;\r\n\t  }\r\n\t};\r\n\r\n\t// 辅助方法\r\n\tfunction processComparisonResult(result) {\r\n\t  if (!result.structure) {\r\n\t    result.structure = [];\r\n\t  }\r\n\r\n\t  if (result.key_differences?.length) {\r\n\t    result.structure.push({\r\n\t      type: \"key_differences\",\r\n\t      title: \"关键差异\",\r\n\t      items: result.key_differences\r\n\t    });\r\n\t  }\r\n\r\n\t  return result;\r\n\t}\r\n\r\n\tfunction addChatMessage(role, content) {\r\n\t  chatHistory.value.push({\r\n\t    role,\r\n\t    content: formatMessageContent(content)\r\n\t  });\r\n\t}\r\n\r\n\tfunction formatMessageContent(text) {\r\n\t  return text\r\n\t    .replace(/### (.*)/g, \"<h3>$1</h3>\")\r\n\t    .replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t    .replace(/\\n/g, \"<br>\")\r\n\t    .replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\")\r\n\t    .replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t    .replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t}\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t  if (!data?.content) return;\r\n\r\n\t  const plainText = getPlainTextFromSelection(data.content);\r\n\t  if (source === \"div1\") {\r\n\t    selectText2.value = plainText;\r\n\t    div1RawData.value = data.content;\r\n\t  } else if (source === \"div3\") {\r\n\t    selectText3.value = plainText;\r\n\t    div3RawData.value = data.content;\r\n\t  }\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t  const container = document.createElement(\"div\");\r\n\t  container.innerHTML = htmlContent;\r\n\t  return container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst handleDragStart = event => {\r\n\t  event.dataTransfer.setData(\r\n\t    \"application/json\",\r\n\t    JSON.stringify({\r\n\t      chartData: currentChartData.value,\r\n\t      chartType: currentChartType.value\r\n\t    })\r\n\t  );\r\n\t};\r\n\r\n\tconst handleDrop = event => {\r\n\t  event.preventDefault();\r\n\t  const data = event.dataTransfer.getData(\"application/json\");\r\n\t  if (data) {\r\n\t    try {\r\n\t      const { chartData, chartType } = JSON.parse(data);\r\n\t      currentChartData.value = chartData;\r\n\t      currentChartType.value = chartType;\r\n\t      analyzeChart(chartData, chartType);\r\n\t    } catch (error) {\r\n\t      console.error(\"解析拖拽数据失败:\", error);\r\n\t    }\r\n\t  }\r\n\t};\r\n\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t  api.post(\r\n\t    \"analyze_chart\",\r\n\t    { chartData, chartType },\r\n\t    response => {\r\n\t      if (response?.analysis) {\r\n\t        addChatMessage(\"assistant\", response.analysis);\r\n\t      } else {\r\n\t        addChatMessage(\"assistant\", \"图表分析失败，数据格式不正确\");\r\n\t      }\r\n\t    },\r\n\t    error => {\r\n\t      console.error(\"图表分析失败:\", error);\r\n\t      addChatMessage(\"assistant\", \"图表分析失败，请稍后重试\");\r\n\t    }\r\n\t  );\r\n\t};\r\n\r\n\tconst askQuestion = () => {\r\n\t  if (!userQuestion.value.trim()) {\r\n\t    alert(\"请输入问题内容！\");\r\n\t    return;\r\n\t  }\r\n\r\n\t  addChatMessage(\"user\", userQuestion.value);\r\n\t  userQuestion.value = \"\";\r\n\r\n\t  api.post(\r\n\t    \"gpt_ask_chart\",\r\n\t    {\r\n\t      question: userQuestion.value,\r\n\t      chartData: currentChartData.value,\r\n\t      chartType: currentChartType.value\r\n\t    },\r\n\t    response => {\r\n\t      addChatMessage(\"assistant\", response.answer);\r\n\t    },\r\n\t    error => {\r\n\t      console.error(\"请求失败:\", error);\r\n\t      addChatMessage(\"assistant\", \"请求失败，请稍后重试\");\r\n\t    }\r\n\t  );\r\n\t};\r\n\r\n\tasync function compareTexts() {\r\n\t  if (!selectText2.value || !selectText3.value) {\r\n\t    alert(\"请先在左右文章中选择要对比的文本！\");\r\n\t    return;\r\n\t  }\r\n\r\n\t  addChatMessage(\"system\", \"开始对比选中文本...\");\r\n\r\n\t  try {\r\n\t    api.post(\r\n\t      \"gpt_compare\",\r\n\t      { text1: selectText2.value, text2: selectText3.value },\r\n\t      data => {\r\n\t        if (data?.result) {\r\n\t          addChatMessage(\"assistant\", data.result);\r\n\t        } else {\r\n\t          addChatMessage(\"assistant\", \"文本对比失败\");\r\n\t        }\r\n\t      }\r\n\t    );\r\n\t  } catch (error) {\r\n\t    console.error(\"对比失败:\", error);\r\n\t    addChatMessage(\"assistant\", \"文本对比失败\");\r\n\t  }\r\n\t}\r\n\r\n\tasync function mergedJson() {\r\n\t  if (!selectText2.value || !selectText3.value) {\r\n\t    alert(\"请先在左右文章中选择要合并的内容！\");\r\n\t    return;\r\n\t  }\r\n\r\n\t  addChatMessage(\"system\", \"开始合并数据...\");\r\n\r\n\t  try {\r\n\t    api.post(\r\n\t      \"merged_json\",\r\n\t      { text1: selectText2.value, text2: selectText3.value },\r\n\t      data => {\r\n\t        if (data.error) {\r\n\t          addChatMessage(\"assistant\", `合并失败: ${data.message}`);\r\n\t          return;\r\n\t        }\r\n\r\n\t        currentChartData.value = data.json_data;\r\n\t        currentChartType.value = data.chart_classification;\r\n\r\n\t        if (data.yes_no === \"no\" || !data.json_data) {\r\n\t          renderNonVisualChart(\".chart-container\", data, {\r\n\t            message: \"数据无法合并\"\r\n\t          });\r\n\t          return;\r\n\t        }\r\n\r\n\t        renderChart(data.json_data, data.chart_classification);\r\n\t        bus.emit(\"updateChart1\", {\r\n\t          divId: \"div1\",\r\n\t          jsonData: data.div1_json,\r\n\t          chartType: data.chart_classification\r\n\t        });\r\n\t        bus.emit(\"updateChart3\", {\r\n\t          divId: \"div3\",\r\n\t          jsonData: data.div3_json,\r\n\t          chartType: data.chart_classification\r\n\t        });\r\n\r\n\t        addChatMessage(\"assistant\", \"数据合并完成，已生成可视化图表\");\r\n\t      }\r\n\t    );\r\n\t  } catch (error) {\r\n\t    console.error(\"合并失败:\", error);\r\n\t    addChatMessage(\"assistant\", \"数据合并失败\");\r\n\t  }\r\n\t}\r\n\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t  if (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t    renderNonVisualChart(\".chart-container\", {\r\n\t      message: \"JSON数据无效\"\r\n\t    });\r\n\t    return;\r\n\t  }\r\n\r\n\t  const chartContainer = document.querySelector(\".chart-container\");\r\n\t  if (!chartContainer) return;\r\n\r\n\t  switch (chartType) {\r\n\t    case \"Line Chart\":\r\n\t      renderLineChart(chartContainer, rawJsonData.data, rawJsonData.options);\r\n\t      break;\r\n\t    case \"Bar Chart\":\r\n\t      renderBarChart(chartContainer, rawJsonData);\r\n\t      break;\r\n\t    case \"Pie Chart\":\r\n\t      renderPieChart(chartContainer, rawJsonData.data, rawJsonData.options);\r\n\t      break;\r\n\t    case \"Stacked Bar Chart\":\r\n\t      renderStackedBarChart(\r\n\t        chartContainer,\r\n\t        rawJsonData.data,\r\n\t        rawJsonData.options\r\n\t      );\r\n\t      break;\r\n\t    case \"Radar Chart\":\r\n\t      renderRadarChart(chartContainer, rawJsonData);\r\n\t      break;\r\n\t    case \"Scatter Chart\":\r\n\t      renderScatterChart(chartContainer, rawJsonData);\r\n\t      break;\r\n\t    default:\r\n\t      console.error(\"未知图表类型:\", chartType);\r\n\t      renderNonVisualChart(chartContainer, {\r\n\t        message: `不支持 ${chartType} 图表类型`\r\n\t      });\r\n\t  }\r\n\t}\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t  fieldKey,\r\n\t  leftData,\r\n\t  rightData,\r\n\t  leftTitle,\r\n\t  rightTitle,\r\n\t  fieldType,\r\n\t  fieldLabel\r\n\t}) => {\r\n\t  addChatMessage(\r\n\t    \"system\",\r\n\t    `正在对比属性: <strong>${fieldKey}</strong> (${fieldLabel})`\r\n\t  );\r\n\r\n\t  try {\r\n\t    api.post(\r\n\t      \"analyze_chart\",\r\n\t      {\r\n\t        chartData: {\r\n\t          leftData,\r\n\t          rightData,\r\n\t          leftTitle,\r\n\t          rightTitle,\r\n\t          fieldKey,\r\n\t          fieldType\r\n\t        },\r\n\t        chartType: \"comparison\"\r\n\t      },\r\n\t      response => {\r\n\t        if (response?.analysis) {\r\n\t          addChatMessage(\"assistant\", response.analysis);\r\n\t        } else {\r\n\t          throw new Error(\"无效的响应格式\");\r\n\t        }\r\n\t      },\r\n\t      error => {\r\n\t        throw error;\r\n\t      }\r\n\t    );\r\n\t  } catch (error) {\r\n\t    console.error(\"属性对比失败:\", error);\r\n\t    addChatMessage(\r\n\t      \"assistant\",\r\n\t      `属性对比失败: ${error.message || \"未知错误\"}`\r\n\t    );\r\n\t  }\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.auto-comparison-status {\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-bottom: 5px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.status-ready {\r\n\t\tcolor: #4caf50;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.status-waiting {\r\n\t\tcolor: #ff9800;\r\n\t}\r\n\r\n\t.smart-compare-btn {\r\n\t\tbackground: #2196f3;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 6px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.smart-compare-btn:hover:not(:disabled) {\r\n\t\tbackground: #1976d2;\r\n\t}\r\n\r\n\t.smart-compare-btn.disabled {\r\n\t\tbackground: #e0e0e0 !important;\r\n\t\tcolor: #9e9e9e !important;\r\n\t\tcursor: not-allowed !important;\r\n\t}\r\n\r\n\t.loading-icon {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 14px;\r\n\t\theight: 14px;\r\n\t\tborder: 2px solid rgba(255, 255, 255, 0.3);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top-color: white;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t.compare-icon::before {\r\n\t\tcontent: \"⇄\";\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.icon-lock::before {\r\n\t\tcontent: \"🔒\";\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.extraction-progress {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 3px;\r\n\t\tbackground-color: #e0e0e0;\r\n\t\tborder-radius: 0 0 8px 8px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.progress-bar {\r\n\t\theight: 100%;\r\n\t\tbackground-color: #4caf50;\r\n\t\ttransition: width 0.3s ease;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 25%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t\tanimation: fadeIn 0.3s ease;\r\n\t}\r\n\r\n\t@keyframes fadeIn {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: translateY(5px);\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.6;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message-content > div {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tcolor: #333;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0 5px;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 8px 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.comparison-vis-container {\r\n\t\tflex: 1;\r\n\t\tpadding: 15px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\toverflow-y: auto;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.comparison-section {\r\n\t\tmargin-bottom: 20px;\r\n\t\tanimation: fadeIn 0.4s ease;\r\n\t}\r\n\r\n\t.comparison-section h3 {\r\n\t\tcolor: #2c3e50;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tpadding-bottom: 8px;\r\n\t\tmargin-bottom: 12px;\r\n\t\tfont-size: 1.1em;\r\n\t}\r\n\r\n\t.metadata-comparison {\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 6px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.metadata-item {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 8px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.item-name {\r\n\t\tfont-weight: bold;\r\n\t\tmin-width: 120px;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.item-value {\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\t.infobox-comparison {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tmargin-bottom: 15px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.infobox-comparison th,\r\n\t.infobox-comparison td {\r\n\t\tpadding: 10px 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.infobox-comparison th {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.same {\r\n\t\tcolor: #4caf50;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.different {\r\n\t\tcolor: #f44336;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.key-differences {\r\n\t\tbackground-color: #fff8e1;\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 6px;\r\n\t\tborder-left: 4px solid #ffc107;\r\n\t\tmargin-top: 15px;\r\n\t}\r\n\r\n\t.key-differences h4 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #ff8f00;\r\n\t}\r\n\r\n\t.key-differences ul {\r\n\t\tmargin: 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.key-differences li {\r\n\t\tmargin-bottom: 6px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.key-differences li::before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #ffa000;\r\n\t\tfont-weight: bold;\r\n\t\tposition: absolute;\r\n\t\tleft: -15px;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0 0 auto;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: all 0.3s;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t\tbox-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.2s;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 6px;\r\n\t}\r\n\r\n\t.btn-send {\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-send:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t.btn-merge {\r\n\t\tbackground-color: #2196f3;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-merge:hover {\r\n\t\tbackground-color: #1976d2;\r\n\t}\r\n\r\n\t.btn-compare {\r\n\t\tbackground-color: #ff9800;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.btn-compare:hover {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n\r\n\t.icon-send::before {\r\n\t\tcontent: \"↑\";\r\n\t}\r\n\r\n\t.icon-merge::before {\r\n\t\tcontent: \"⇄\";\r\n\t}\r\n\r\n\t.icon-compare::before {\r\n\t\tcontent: \"≈\";\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}