{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a5dde20\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Data Visualization with D3.js\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"jsonData\"\n}, \"输入 JSON 数据：\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"jsonData\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.jsonData = $event),\n    rows: \"5\",\n    cols: \"50\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.jsonData]])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.fetchRecommendation && $options.fetchRecommendation(...arguments);\n    })\n  }, \"获取可视化推荐\"), $data.visualizationType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, \"推荐的可视化类型：\" + _toDisplayString($data.visualizationType), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","for","key","ref","_createElementBlock","_hoisted_1","_hoisted_2","id","_cache","$event","$data","jsonData","rows","cols","onClick","$options","fetchRecommendation","arguments","visualizationType","_hoisted_3","_toDisplayString","_hoisted_4","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h1>Data Visualization with D3.js</h1>\r\n\t\t<div>\r\n\t\t\t<label for=\"jsonData\">输入 JSON 数据：</label>\r\n\t\t\t<textarea id=\"jsonData\" v-model=\"jsonData\" rows=\"5\" cols=\"50\"></textarea>\r\n\t\t</div>\r\n\t\t<button @click=\"fetchRecommendation\">获取可视化推荐</button>\r\n\t\t<div v-if=\"visualizationType\">\r\n\t\t\t<h2>推荐的可视化类型：{{ visualizationType }}</h2>\r\n\t\t\t<div ref=\"chart\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tjsonData: '{\"A\": 10, \"B\": 20, \"C\": 30, \"D\": 40}', // 默认 JSON 数据\r\n\t\t\t\tvisualizationType: \"\", // 推荐的可视化类型\r\n\t\t\t\tchartData: {} // 用于存储图表数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 获取后端推荐的可视化类型\r\n\t\t\tasync fetchRecommendation() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t\t\"http://localhost:8888/recommend_visualization\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\t\tdata: JSON.parse(this.jsonData)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst result = await response.json();\r\n\t\t\t\t\tthis.visualizationType = result.visualization_type;\r\n\t\t\t\t\tthis.chartData = result.data;\r\n\t\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\t\tthis.renderChart(); // 确保 DOM 更新后渲染图表\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"获取推荐失败：\", error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 根据推荐类型渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\tconst chartElement = this.$refs.chart;\r\n\t\t\t\tif (!chartElement) {\r\n\t\t\t\t\tconsole.error(\"图表容器未找到\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\tchartElement.innerHTML = \"\";\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(chartElement)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", 500)\r\n\t\t\t\t\t.attr(\"height\", 500);\r\n\r\n\t\t\t\tconst data = Object.entries(this.chartData);\r\n\r\n\t\t\t\tif (this.visualizationType === \"bar\") {\r\n\t\t\t\t\tthis.renderBarChart(svg, data);\r\n\t\t\t\t} else if (this.visualizationType === \"line\") {\r\n\t\t\t\t\tthis.renderLineChart(svg, data);\r\n\t\t\t\t} else if (this.visualizationType === \"pie\") {\r\n\t\t\t\t\tthis.renderPieChart(svg, data);\r\n\t\t\t\t} else if (this.visualizationType === \"scatter\") {\r\n\t\t\t\t\tthis.renderScatterChart(svg, data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未知的可视化类型：\", this.visualizationType);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 渲染柱状图\r\n\t\t\trenderBarChart(svg, data) {\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(data)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => i * 100)\r\n\t\t\t\t\t.attr(\"y\", d => 500 - d[1] * 10)\r\n\t\t\t\t\t.attr(\"width\", 50)\r\n\t\t\t\t\t.attr(\"height\", d => d[1] * 10)\r\n\t\t\t\t\t.attr(\"fill\", \"blue\");\r\n\t\t\t},\r\n\t\t\t// 渲染折线图\r\n\t\t\trenderLineChart(svg, data) {\r\n\t\t\t\tconst line = d3\r\n\t\t\t\t\t.line()\r\n\t\t\t\t\t.x((d, i) => i * 50)\r\n\t\t\t\t\t.y(d => 500 - d[1] * 10);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.datum(data)\r\n\t\t\t\t\t.attr(\"d\", line)\r\n\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t.attr(\"stroke\", \"green\")\r\n\t\t\t\t\t.attr(\"stroke-width\", 2);\r\n\t\t\t},\r\n\t\t\t// 渲染饼图\r\n\t\t\trenderPieChart(svg, data) {\r\n\t\t\t\tconst pie = d3.pie().value(d => d[1]);\r\n\r\n\t\t\t\tconst arcs = pie(data);\r\n\r\n\t\t\t\tconst arc = d3.arc().innerRadius(0).outerRadius(200);\r\n\r\n\t\t\t\tconst g = svg.append(\"g\").attr(\"transform\", \"translate(250, 250)\");\r\n\r\n\t\t\t\tg.selectAll(\"path\")\r\n\t\t\t\t\t.data(arcs)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arc)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => d3.schemeCategory10[i]);\r\n\t\t\t},\r\n\t\t\t// 渲染散点图\r\n\t\t\trenderScatterChart(svg, data) {\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\"circle\")\r\n\t\t\t\t\t.data(data)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"cx\", (d, i) => i * 100)\r\n\t\t\t\t\t.attr(\"cy\", d => 500 - d[1] * 10)\r\n\t\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t\t\t.attr(\"fill\", \"red\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\ttextarea {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\tbutton {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t.chart {\r\n\t\tmargin: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":";;gEAEEA,mBAAA,CAAsC,YAAlC,+BAA6B;gEAEhCA,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAU,GAAC,aAAW;;EAJpCC,GAAA;AAAA;;EAUQC,GAAG,EAAC;AAAO;;uBATlBC,mBAAA,CAWM,cAVLC,UAAsC,EACtCL,mBAAA,CAGM,cAFLM,UAAyC,E,gBACzCN,mBAAA,CAAyE;IAA/DO,EAAE,EAAC,UAAU;IAL1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKoCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,IAAI,EAAC,GAAG;IAACC,IAAI,EAAC;iDAAxBH,KAAA,CAAAC,QAAQ,E,KAE1CX,mBAAA,CAAqD;IAA5Cc,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEO,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAC,SAAA,CAAmB;IAAA;KAAE,SAAO,GACjCP,KAAA,CAAAQ,iBAAiB,I,cAA5Bd,mBAAA,CAGM,OAXRe,UAAA,GASGnB,mBAAA,CAAyC,YAArC,WAAS,GAAAoB,gBAAA,CAAGV,KAAA,CAAAQ,iBAAiB,kBACjClB,mBAAA,CAAuB,OAAvBqB,UAAuB,8B,KAV1BC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}