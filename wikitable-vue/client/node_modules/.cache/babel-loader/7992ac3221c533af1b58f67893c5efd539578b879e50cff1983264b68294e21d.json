{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport CombinedChart from \"./charts/CombinedChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 状态变量\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const isInitializing = ref(true);\n    const leftDataLoaded = ref(false);\n    const rightDataLoaded = ref(false);\n\n    // 可比较字段配置（顺序即显示顺序）\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Export goods\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"stacked-chart\",\n      legend: \"主要出口商品构成（%）\"\n    }, {\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"按职业划分的劳动力\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"Main export partners\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"按职业划分的劳动力\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n\n    // 计算统一的最大值\n    const getUnifiedMaxValue = fieldKey => {\n      const leftValues = getField(leftInfobox.value, fieldKey).map(v => typeof v === \"object\" ? v.value ?? v.raw : v).map(Number).filter(n => !isNaN(n));\n      const rightValues = getField(rightInfobox.value, fieldKey).map(v => typeof v === \"object\" ? v.value ?? v.raw : v).map(Number).filter(n => !isNaN(n));\n      const leftMax = leftValues.length ? Math.max(...leftValues) : 0;\n      const rightMax = rightValues.length ? Math.max(...rightValues) : 0;\n      return Math.max(leftMax, rightMax) * 1.1 || 1;\n    };\n\n    // 获取图表props\n    const getChartProps = (infobox, field) => {\n      return {\n        field: getField(infobox, field.key),\n        type: field.type,\n        visualization: field.visualization,\n        unifiedMax: getUnifiedMaxValue(field.key),\n        fieldKey: field.key\n      };\n    };\n\n    // 获取字段数据\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n      const possibleKeys = [fieldKey];\n      if (fieldKey.includes(\"Labor\")) {\n        possibleKeys.push(fieldKey.replace(\"Labor\", \"Labour\"));\n      }\n      const deepFind = (obj, keys) => {\n        for (const key of keys) {\n          if (obj[key] !== undefined) return obj[key];\n        }\n        for (const [k, v] of Object.entries(obj)) {\n          if (typeof v === \"object\" && v !== null) {\n            const found = deepFind(v, keys);\n            if (found !== undefined) return found;\n          }\n        }\n        return undefined;\n      };\n      let fieldData = deepFind(infobox.data, possibleKeys);\n      if (fieldData === undefined) return [];\n\n      // 处理右侧职业数据为多行字符串的情况\n      if (typeof fieldData === \"string\" && fieldKey.includes(\"Labor force by occupation\")) {\n        const lines = fieldData.split(\"\\n\").map(line => line.trim()).filter(Boolean);\n        fieldData = lines.map(line => {\n          const [occupation, percentage] = line.split(/[:：]/);\n          return {\n            label: occupation.trim(),\n            value: parseFloat(percentage),\n            raw: line\n          };\n        });\n      }\n      return Array.isArray(fieldData) ? fieldData : [fieldData];\n    };\n\n    // 计算属性：直接按 COMPARABLE_FIELDS 顺序显示\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 排序字段（直接返回 comparableFields，保持原始顺序）\n    const sortedFields = computed(() => comparableFields.value);\n\n    // 显示全屏图表\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: `${infobox.title} - ${field.key}`,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n\n    // 关闭全屏图表\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n\n    // 悬停交互方法（保持不变）\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n\n    // 中间栏点击事件\n    const handleMiddleColumnClick = field => {\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: getField(leftInfobox.value, field.key),\n        rightData: getField(rightInfobox.value, field.key),\n        leftTitle: leftInfobox.value.title,\n        rightTitle: rightInfobox.value.title,\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n    };\n\n    // 合并图表\n    const showCombinedChart = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      const combinedData = [...leftData.map(item => ({\n        ...item,\n        source: leftInfobox.value.title,\n        sourceType: \"left\"\n      })), ...rightData.map(item => ({\n        ...item,\n        source: rightInfobox.value.title,\n        sourceType: \"right\"\n      }))];\n      currentChart.value = {\n        title: `合并图表 - ${field.key}`,\n        field: {\n          ...field,\n          visualization: \"line-chart\",\n          combined: true,\n          sources: {\n            left: leftInfobox.value.title,\n            right: rightInfobox.value.title\n          }\n        },\n        data: combinedData\n      };\n      showFullChartModal.value = true;\n    };\n\n    // 处理Infobox数据\n    const processInfoboxData = data => {\n      if (!data) {\n        console.warn(\"接收到空Infobox数据\");\n        return {\n          title: \"\",\n          type: \"\",\n          data: {}\n        };\n      }\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 生命周期钩子\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n        leftDataLoaded.value = true;\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n        rightDataLoaded.value = true;\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      isInitializing,\n      leftDataLoaded,\n      rightDataLoaded,\n      COMPARABLE_FIELDS,\n      getUnifiedMaxValue,\n      getChartProps,\n      getField,\n      comparableFields,\n      sortedFields,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      handleMiddleColumnClick,\n      showCombinedChart,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      onUnmounted,\n      SimpleChart,\n      FullChart,\n      CombinedChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","onUnmounted","SimpleChart","FullChart","CombinedChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","isInitializing","leftDataLoaded","rightDataLoaded","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","getUnifiedMaxValue","fieldKey","leftValues","getField","value","map","v","raw","Number","filter","n","isNaN","rightValues","leftMax","length","Math","max","rightMax","getChartProps","infobox","unifiedMax","possibleKeys","includes","push","replace","deepFind","obj","keys","undefined","k","Object","entries","found","fieldData","lines","split","line","trim","Boolean","occupation","percentage","label","parseFloat","Array","isArray","comparableFields","leftVal","rightVal","sortedFields","showFullChart","closeFullChart","hoverInfobox","side","infoboxTitle","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","handleMiddleColumnClick","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","showCombinedChart","combinedData","item","source","sourceType","combined","sources","left","right","processInfoboxData","console","warn","sections","on","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- 加载状态提示 -->\r\n\t\t<div v-if=\"false\" class=\"initial-loading\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<p>正在准备数据对比...</p>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主对比表格 -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart v-bind=\"getChartProps(leftInfobox, field)\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"对比分析\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t⚖️\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"合并图表\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\t📊\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart v-bind=\"getChartProps(rightInfobox, field)\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<template v-if=\"currentChart.field.combined\">\r\n\t\t\t\t\t\t<CombinedChart\r\n\t\t\t\t\t\t\t:data=\"currentChart.data\"\r\n\t\t\t\t\t\t\t:fieldKey=\"currentChart.field.key\"\r\n\t\t\t\t\t\t\t:sources=\"currentChart.field.sources\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport CombinedChart from \"./charts/CombinedChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\t// 状态变量\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst isInitializing = ref(true);\r\n\tconst leftDataLoaded = ref(false);\r\n\tconst rightDataLoaded = ref(false);\r\n\r\n\t// 可比较字段配置（顺序即显示顺序）\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Export goods\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"stacked-chart\",\r\n\t\t\tlegend: \"主要出口商品构成（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"按职业划分的劳动力\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tkey: \"Main export partners\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"按职业划分的劳动力\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 计算统一的最大值\r\n\tconst getUnifiedMaxValue = fieldKey => {\r\n\t\tconst leftValues = getField(leftInfobox.value, fieldKey)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tconst rightValues = getField(rightInfobox.value, fieldKey)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tconst leftMax = leftValues.length ? Math.max(...leftValues) : 0;\r\n\t\tconst rightMax = rightValues.length ? Math.max(...rightValues) : 0;\r\n\r\n\t\treturn Math.max(leftMax, rightMax) * 1.1 || 1;\r\n\t};\r\n\r\n\t// 获取图表props\r\n\tconst getChartProps = (infobox, field) => {\r\n\t\treturn {\r\n\t\t\tfield: getField(infobox, field.key),\r\n\t\t\ttype: field.type,\r\n\t\t\tvisualization: field.visualization,\r\n\t\t\tunifiedMax: getUnifiedMaxValue(field.key),\r\n\t\t\tfieldKey: field.key\r\n\t\t};\r\n\t};\r\n\r\n\t// 获取字段数据\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tconst possibleKeys = [fieldKey];\r\n\t\tif (fieldKey.includes(\"Labor\")) {\r\n\t\t\tpossibleKeys.push(fieldKey.replace(\"Labor\", \"Labour\"));\r\n\t\t}\r\n\r\n\t\tconst deepFind = (obj, keys) => {\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\tif (obj[key] !== undefined) return obj[key];\r\n\t\t\t}\r\n\t\t\tfor (const [k, v] of Object.entries(obj)) {\r\n\t\t\t\tif (typeof v === \"object\" && v !== null) {\r\n\t\t\t\t\tconst found = deepFind(v, keys);\r\n\t\t\t\t\tif (found !== undefined) return found;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\tlet fieldData = deepFind(infobox.data, possibleKeys);\r\n\t\tif (fieldData === undefined) return [];\r\n\r\n\t\t// 处理右侧职业数据为多行字符串的情况\r\n\t\tif (\r\n\t\t\ttypeof fieldData === \"string\" &&\r\n\t\t\tfieldKey.includes(\"Labor force by occupation\")\r\n\t\t) {\r\n\t\t\tconst lines = fieldData\r\n\t\t\t\t.split(\"\\n\")\r\n\t\t\t\t.map(line => line.trim())\r\n\t\t\t\t.filter(Boolean);\r\n\t\t\tfieldData = lines.map(line => {\r\n\t\t\t\tconst [occupation, percentage] = line.split(/[:：]/);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel: occupation.trim(),\r\n\t\t\t\t\tvalue: parseFloat(percentage),\r\n\t\t\t\t\traw: line\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn Array.isArray(fieldData) ? fieldData : [fieldData];\r\n\t};\r\n\r\n\t// 计算属性：直接按 COMPARABLE_FIELDS 顺序显示\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 排序字段（直接返回 comparableFields，保持原始顺序）\r\n\tconst sortedFields = computed(() => comparableFields.value);\r\n\r\n\t// 显示全屏图表\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `${infobox.title} - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\t// 关闭全屏图表\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 悬停交互方法（保持不变）\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\t// 中间栏点击事件\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\t};\r\n\r\n\t// 合并图表\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tconst combinedData = [\r\n\t\t\t...leftData.map(item => ({\r\n\t\t\t\t...item,\r\n\t\t\t\tsource: leftInfobox.value.title,\r\n\t\t\t\tsourceType: \"left\"\r\n\t\t\t})),\r\n\t\t\t...rightData.map(item => ({\r\n\t\t\t\t...item,\r\n\t\t\t\tsource: rightInfobox.value.title,\r\n\t\t\t\tsourceType: \"right\"\r\n\t\t\t}))\r\n\t\t];\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: {\r\n\t\t\t\t...field,\r\n\t\t\t\tvisualization: \"line-chart\",\r\n\t\t\t\tcombined: true,\r\n\t\t\t\tsources: {\r\n\t\t\t\t\tleft: leftInfobox.value.title,\r\n\t\t\t\t\tright: rightInfobox.value.title\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdata: combinedData\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) {\r\n\t\t\tconsole.warn(\"接收到空Infobox数据\");\r\n\t\t\treturn { title: \"\", type: \"\", data: {} };\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 生命周期钩子\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tleftDataLoaded.value = true;\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\trightDataLoaded.value = true;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.initial-loading {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.initial-loading p {\r\n\t\tmargin-top: 10px;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\tborder: 3px solid #f3f3f3;\r\n\t\tborder-top: 3px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 150px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\tbackdrop-filter: blur(8px);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t\tanimation: fadeIn 0.3s ease-out;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}