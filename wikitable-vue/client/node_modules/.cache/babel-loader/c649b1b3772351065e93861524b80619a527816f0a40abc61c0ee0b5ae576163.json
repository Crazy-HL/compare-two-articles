{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { computed } from \"vue\";\nimport PieChart from \"./charts/PieChart.vue\";\nimport BarChart from \"./charts/BarChart.vue\";\nimport LineChart from \"./charts/LineChart.vue\";\nexport default {\n  __name: 'FullChart',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isCombinedChart = computed(() => {\n      return props.field?.combined === true;\n    });\n\n    // 处理合并图表数据 - 关键修复\n    const processedCombinedData = computed(() => {\n      if (!isCombinedChart.value) return [];\n\n      // 转换年份为四位数\n      const formatYear = year => {\n        if (!year) return null;\n        return year < 100 ? 2000 + year : year;\n      };\n\n      // 获取所有年份（去重并排序）\n      const allYears = [...new Set(props.field.map(item => formatYear(item.year)))].filter(Boolean).sort((a, b) => a - b);\n\n      // 为每个数据源创建数据系列\n      const seriesData = {\n        left: {\n          name: props.field.sources.left,\n          color: \"#4e79a7\",\n          data: []\n        },\n        right: {\n          name: props.field.sources.right,\n          color: \"#e15759\",\n          data: []\n        }\n      };\n\n      // 填充每个年份的数据点\n      allYears.forEach(year => {\n        // 左侧数据源\n        const leftPoint = props.field.find(item => formatYear(item.year) === year && item.sourceType === \"left\");\n        seriesData.left.data.push(leftPoint ? leftPoint.value : null);\n\n        // 右侧数据源\n        const rightPoint = props.field.find(item => formatYear(item.year) === year && item.sourceType === \"right\");\n        seriesData.right.data.push(rightPoint ? rightPoint.value : null);\n      });\n      return {\n        categories: allYears,\n        series: [seriesData.left, seriesData.right]\n      };\n    });\n\n    // 获取数据源颜色\n    const getSourceColor = index => {\n      const colors = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\"];\n      return colors[index % colors.length];\n    };\n\n    // 数据预处理（统一数据结构）\n    const normalizedData = computed(() => {\n      if (!props.field) return [];\n\n      // 处理数组数据\n      if (Array.isArray(props.field)) {\n        return props.field.map(item => normalizeItem(item));\n      }\n\n      // 处理单条数据\n      return [normalizeItem(props.field)];\n    });\n\n    // 统一数据结构\n    const normalizeItem = item => {\n      // 已经是标准格式\n      if (typeof item === \"object\" && item !== null && (\"value\" in item || \"raw\" in item)) {\n        return {\n          value: item.value ?? null,\n          raw: item.raw ?? String(item.value) ?? \"\",\n          unit: item.unit ?? null,\n          year: item.year ?? null,\n          currency: item.currency ?? null,\n          extracted: item.extracted ?? false,\n          source: item.source ?? null // 添加来源字段\n        };\n      }\n\n      // 原始值处理\n      return {\n        value: typeof item === \"number\" ? item : null,\n        raw: String(item),\n        unit: null,\n        year: null,\n        currency: null,\n        extracted: false,\n        source: null\n      };\n    };\n\n    // 格式化显示值（带单位）\n    const formatDisplayValue = item => {\n      if (!item) return \"-\";\n\n      // 优先使用raw字段\n      if (item.raw) {\n        let text = item.raw;\n        if (item.unit) text += ` ${item.unit}`;\n        if (item.year) text += ` (${item.year})`;\n        return text;\n      }\n\n      // 数值格式化\n      if (item.value !== null) {\n        let num = item.value;\n        let text = \"\";\n\n        // 百分比处理\n        if (props.type === \"percentage\") {\n          return `${num > 0 ? \"+\" : \"\"}${num.toFixed(1)}%`;\n        }\n\n        // 大数值格式化\n        if (Math.abs(num) >= 100000000) {\n          text = (num / 100000000).toFixed(2) + \"亿\";\n        } else if (Math.abs(num) >= 10000) {\n          text = (num / 10000).toFixed(1) + \"万\";\n        } else {\n          text = num.toLocaleString();\n        }\n        if (item.unit) text += ` ${item.unit}`;\n        if (item.year) text += ` (${item.year})`;\n        return text;\n      }\n      return \"-\";\n    };\n\n    // 饼图数据\n    const pieChartData = computed(() => {\n      return normalizedData.value.filter(item => item.value !== null).map((item, index) => ({\n        name: item.raw || `项目${index + 1}`,\n        value: Math.min(100, Math.max(0, item.value)),\n        raw: item.raw,\n        unit: item.unit\n      }));\n    });\n\n    // 柱状图数据\n    const barChartData = computed(() => {\n      return normalizedData.value.map((item, index) => ({\n        name: item.raw || `项目${index + 1}`,\n        value: item.value !== null ? item.value : 0,\n        raw: item.raw,\n        unit: item.unit,\n        year: item.year\n      }));\n    });\n\n    // 折线图数据\n    const lineChartData = computed(() => {\n      return normalizedData.value.filter(item => item.value !== null).map((item, index) => ({\n        year: item.year || index + 1,\n        value: item.value,\n        raw: item.raw,\n        unit: item.unit\n      })).sort((a, b) => a.year - b.year);\n    });\n\n    // 文本显示数据\n    const formattedData = computed(() => {\n      return normalizedData.value;\n    });\n    const hasData = computed(() => {\n      return normalizedData.value.length > 0 && normalizedData.value.some(item => item.value !== null || item.raw && item.raw.trim() !== \"\");\n    });\n    const __returned__ = {\n      props,\n      isCombinedChart,\n      processedCombinedData,\n      getSourceColor,\n      normalizedData,\n      normalizeItem,\n      formatDisplayValue,\n      pieChartData,\n      barChartData,\n      lineChartData,\n      formattedData,\n      hasData,\n      computed,\n      PieChart,\n      BarChart,\n      LineChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","PieChart","BarChart","LineChart","props","__props","isCombinedChart","field","combined","processedCombinedData","value","formatYear","year","allYears","Set","map","item","filter","Boolean","sort","a","b","seriesData","left","name","sources","color","data","right","forEach","leftPoint","find","sourceType","push","rightPoint","categories","series","getSourceColor","index","colors","length","normalizedData","Array","isArray","normalizeItem","raw","String","unit","currency","extracted","source","formatDisplayValue","text","num","type","toFixed","Math","abs","toLocaleString","pieChartData","min","max","barChartData","lineChartData","formattedData","hasData","some","trim"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FullChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"full-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedData\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ formatDisplayValue(item) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<PieChart :data=\"pieChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\t:data=\"barChartData\"\r\n\t\t\t\t\t:field-key=\"fieldKey\"\r\n\t\t\t\t\t:show-value=\"true\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<template v-if=\"isCombinedChart\">\r\n\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t:data=\"processedCombinedData\"\r\n\t\t\t\t\t\t:show-trend=\"true\"\r\n\t\t\t\t\t\t:is-combined=\"true\"\r\n\t\t\t\t\t\t:sources=\"field.sources\" />\r\n\t\t\t\t\t<div class=\"chart-legend\">\r\n\t\t\t\t\t\t<span v-for=\"(source, index) in field.sources\" :key=\"index\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclass=\"legend-color\"\r\n\t\t\t\t\t\t\t\t:style=\"{ backgroundColor: getSourceColor(index) }\"></span>\r\n\t\t\t\t\t\t\t{{ source }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<LineChart :data=\"lineChartData\" :show-trend=\"true\" />\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedData\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ formatDisplayValue(item) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport PieChart from \"./charts/PieChart.vue\";\r\n\timport BarChart from \"./charts/BarChart.vue\";\r\n\timport LineChart from \"./charts/LineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst isCombinedChart = computed(() => {\r\n\t\treturn props.field?.combined === true;\r\n\t});\r\n\r\n\t// 处理合并图表数据 - 关键修复\r\n\tconst processedCombinedData = computed(() => {\r\n\t\tif (!isCombinedChart.value) return [];\r\n\r\n\t\t// 转换年份为四位数\r\n\t\tconst formatYear = year => {\r\n\t\t\tif (!year) return null;\r\n\t\t\treturn year < 100 ? 2000 + year : year;\r\n\t\t};\r\n\r\n\t\t// 获取所有年份（去重并排序）\r\n\t\tconst allYears = [\r\n\t\t\t...new Set(props.field.map(item => formatYear(item.year)))\r\n\t\t]\r\n\t\t\t.filter(Boolean)\r\n\t\t\t.sort((a, b) => a - b);\r\n\r\n\t\t// 为每个数据源创建数据系列\r\n\t\tconst seriesData = {\r\n\t\t\tleft: {\r\n\t\t\t\tname: props.field.sources.left,\r\n\t\t\t\tcolor: \"#4e79a7\",\r\n\t\t\t\tdata: []\r\n\t\t\t},\r\n\t\t\tright: {\r\n\t\t\t\tname: props.field.sources.right,\r\n\t\t\t\tcolor: \"#e15759\",\r\n\t\t\t\tdata: []\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 填充每个年份的数据点\r\n\t\tallYears.forEach(year => {\r\n\t\t\t// 左侧数据源\r\n\t\t\tconst leftPoint = props.field.find(\r\n\t\t\t\titem => formatYear(item.year) === year && item.sourceType === \"left\"\r\n\t\t\t);\r\n\t\t\tseriesData.left.data.push(leftPoint ? leftPoint.value : null);\r\n\r\n\t\t\t// 右侧数据源\r\n\t\t\tconst rightPoint = props.field.find(\r\n\t\t\t\titem => formatYear(item.year) === year && item.sourceType === \"right\"\r\n\t\t\t);\r\n\t\t\tseriesData.right.data.push(rightPoint ? rightPoint.value : null);\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tcategories: allYears,\r\n\t\t\tseries: [seriesData.left, seriesData.right]\r\n\t\t};\r\n\t});\r\n\r\n\t// 获取数据源颜色\r\n\tconst getSourceColor = index => {\r\n\t\tconst colors = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\"];\r\n\t\treturn colors[index % colors.length];\r\n\t};\r\n\r\n\t// 数据预处理（统一数据结构）\r\n\tconst normalizedData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field.map(item => normalizeItem(item));\r\n\t\t}\r\n\r\n\t\t// 处理单条数据\r\n\t\treturn [normalizeItem(props.field)];\r\n\t});\r\n\r\n\t// 统一数据结构\r\n\tconst normalizeItem = item => {\r\n\t\t// 已经是标准格式\r\n\t\tif (\r\n\t\t\ttypeof item === \"object\" &&\r\n\t\t\titem !== null &&\r\n\t\t\t(\"value\" in item || \"raw\" in item)\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: item.value ?? null,\r\n\t\t\t\traw: item.raw ?? String(item.value) ?? \"\",\r\n\t\t\t\tunit: item.unit ?? null,\r\n\t\t\t\tyear: item.year ?? null,\r\n\t\t\t\tcurrency: item.currency ?? null,\r\n\t\t\t\textracted: item.extracted ?? false,\r\n\t\t\t\tsource: item.source ?? null // 添加来源字段\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// 原始值处理\r\n\t\treturn {\r\n\t\t\tvalue: typeof item === \"number\" ? item : null,\r\n\t\t\traw: String(item),\r\n\t\t\tunit: null,\r\n\t\t\tyear: null,\r\n\t\t\tcurrency: null,\r\n\t\t\textracted: false,\r\n\t\t\tsource: null\r\n\t\t};\r\n\t};\r\n\r\n\t// 格式化显示值（带单位）\r\n\tconst formatDisplayValue = item => {\r\n\t\tif (!item) return \"-\";\r\n\r\n\t\t// 优先使用raw字段\r\n\t\tif (item.raw) {\r\n\t\t\tlet text = item.raw;\r\n\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\t// 数值格式化\r\n\t\tif (item.value !== null) {\r\n\t\t\tlet num = item.value;\r\n\t\t\tlet text = \"\";\r\n\r\n\t\t\t// 百分比处理\r\n\t\t\tif (props.type === \"percentage\") {\r\n\t\t\t\treturn `${num > 0 ? \"+\" : \"\"}${num.toFixed(1)}%`;\r\n\t\t\t}\r\n\r\n\t\t\t// 大数值格式化\r\n\t\t\tif (Math.abs(num) >= 100000000) {\r\n\t\t\t\ttext = (num / 100000000).toFixed(2) + \"亿\";\r\n\t\t\t} else if (Math.abs(num) >= 10000) {\r\n\t\t\t\ttext = (num / 10000).toFixed(1) + \"万\";\r\n\t\t\t} else {\r\n\t\t\t\ttext = num.toLocaleString();\r\n\t\t\t}\r\n\r\n\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\treturn \"-\";\r\n\t};\r\n\r\n\t// 饼图数据\r\n\tconst pieChartData = computed(() => {\r\n\t\treturn normalizedData.value\r\n\t\t\t.filter(item => item.value !== null)\r\n\t\t\t.map((item, index) => ({\r\n\t\t\t\tname: item.raw || `项目${index + 1}`,\r\n\t\t\t\tvalue: Math.min(100, Math.max(0, item.value)),\r\n\t\t\t\traw: item.raw,\r\n\t\t\t\tunit: item.unit\r\n\t\t\t}));\r\n\t});\r\n\r\n\t// 柱状图数据\r\n\tconst barChartData = computed(() => {\r\n\t\treturn normalizedData.value.map((item, index) => ({\r\n\t\t\tname: item.raw || `项目${index + 1}`,\r\n\t\t\tvalue: item.value !== null ? item.value : 0,\r\n\t\t\traw: item.raw,\r\n\t\t\tunit: item.unit,\r\n\t\t\tyear: item.year\r\n\t\t}));\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineChartData = computed(() => {\r\n\t\treturn normalizedData.value\r\n\t\t\t.filter(item => item.value !== null)\r\n\t\t\t.map((item, index) => ({\r\n\t\t\t\tyear: item.year || index + 1,\r\n\t\t\t\tvalue: item.value,\r\n\t\t\t\traw: item.raw,\r\n\t\t\t\tunit: item.unit\r\n\t\t\t}))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\t});\r\n\r\n\t// 文本显示数据\r\n\tconst formattedData = computed(() => {\r\n\t\treturn normalizedData.value;\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tnormalizedData.value.length > 0 &&\r\n\t\t\tnormalizedData.value.some(\r\n\t\t\t\titem => item.value !== null || (item.raw && item.raw.trim() !== \"\")\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.full-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 16px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.full-text {\r\n\t\tmax-height: 400px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin-bottom: 8px;\r\n\t\tpadding: 8px;\r\n\t\tbackground: #f8f9fa;\r\n\t\tborder-radius: 4px;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tmargin-top: 15px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.legend-color {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tmargin-right: 5px;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}