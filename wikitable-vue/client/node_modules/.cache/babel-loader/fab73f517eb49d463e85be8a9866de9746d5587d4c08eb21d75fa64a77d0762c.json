{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport IO from \"./input_output.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const selectText2 = ref(\"\"); // 左侧选中文本\n    const selectText3 = ref(\"\"); // 右侧选中文本\n    const userQuestion = ref(\"\"); // 用户提问\n    const outputPlaceholder = ref(\"对比结果或 GPT 回答将显示在这里\"); // 顶部输出框的占位符\n\n    let offDiv1, offDiv3;\n    onMounted(() => {\n      offDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\n      offDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\n    });\n    onUnmounted(() => {\n      offDiv1();\n      offDiv3();\n    });\n\n    // 处理选中文本\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n      }\n    }\n\n    // 从 HTML 内容中提取纯文本\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n\n    // 向 GPT 提问\n    async function askQuestion() {\n      if (!userQuestion.value) {\n        alert(\"请输入问题！\");\n        return;\n      }\n      try {\n        const response = await api.post(\"gpt_ask\", {\n          question: userQuestion.value\n        }, data => {\n          if (data) {\n            outputPlaceholder.value = data.answer; // 显示 GPT 的回答\n          } else {\n            console.error(\"提问失败:\", data.error);\n          }\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n    }\n\n    // 对比文章\n    async function compareTexts() {\n      try {\n        api.post(\"gpt_compare\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data) {\n            outputPlaceholder.value = data.result; // 显示对比结果\n          } else {\n            console.error(\"对比失败:\", data.error);\n          }\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n    }\n    const __returned__ = {\n      selectText2,\n      selectText3,\n      userQuestion,\n      outputPlaceholder,\n      get offDiv1() {\n        return offDiv1;\n      },\n      set offDiv1(v) {\n        offDiv1 = v;\n      },\n      get offDiv3() {\n        return offDiv3;\n      },\n      set offDiv3(v) {\n        offDiv3 = v;\n      },\n      handleSelection,\n      getPlainTextFromSelection,\n      askQuestion,\n      compareTexts,\n      ref,\n      onMounted,\n      onUnmounted,\n      IO,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","IO","bus","selectText2","selectText3","userQuestion","outputPlaceholder","offDiv1","offDiv3","on","data","handleSelection","source","plainText","getPlainTextFromSelection","content","value","htmlContent","container","document","createElement","innerHTML","innerText","textContent","askQuestion","alert","response","api","post","question","answer","console","error","compareTexts","text1","text2","result"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0\" id=\"div2\">\r\n\t\t<div class=\"VisContainer\">\r\n\t\t\t<!-- 顶部输出框 -->\r\n\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t<IO width=\"100%\" height=\"200px\" :placeholder=\"outputPlaceholder\"></IO>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 底部输入框 -->\r\n\t\t\t<div class=\"botContainer container\">\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"100%\" height=\"150px\" :placeholder=\"selectText2\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"100%\" height=\"150px\" :placeholder=\"selectText3\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 操作按钮 -->\r\n\t\t\t<div class=\"button-container\">\r\n\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t<button @click=\"askQuestion\">向 ChatGPT 提问</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 提问框 -->\r\n\t\t\t<div class=\"question-box\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\tconst userQuestion = ref(\"\"); // 用户提问\r\n\tconst outputPlaceholder = ref(\"对比结果或 GPT 回答将显示在这里\"); // 顶部输出框的占位符\r\n\r\n\tlet offDiv1, offDiv3;\r\n\r\n\tonMounted(() => {\r\n\t\toffDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\r\n\t\toffDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\toffDiv1();\r\n\t\toffDiv3();\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 向 GPT 提问\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\r\n\t\t\t\t\"gpt_ask\",\r\n\t\t\t\t{ question: userQuestion.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\toutputPlaceholder.value = data.answer; // 显示 GPT 的回答\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"提问失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t// 对比文章\r\n\tasync function compareTexts() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\toutputPlaceholder.value = data.result; // 显示对比结果\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 容器样式 */\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t\theight: 100%;\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #f9f9f9;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tmargin: 10px 0;\r\n\t\tflex-grow: 1;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\r\n\t.topContainer {\r\n\t\theight: 200px;\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f1f1f1;\r\n\t}\r\n\r\n\t/* 按钮容器 */\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-top: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t/* 提问框样式 */\r\n\t.question-box {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\tresize: none;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t/* 输出框占位符样式 */\r\n\t.output-placeholder {\r\n\t\tcolor: #888;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}