{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\n// import api from \"@/js/api.js\"; // 确保api导入正确\n\n// 聊天相关状态\n\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n\n    // 表格相关状态\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const compareTable = ref(null);\n\n    // 表格处理状态\n    const tableState = ref({\n      loading: false,\n      error: null,\n      data: null,\n      lastUpdated: null\n    });\n\n    // 事件处理\n    const handleTablesReady = data => {\n      tableState.value = {\n        loading: false,\n        error: null,\n        data: data,\n        lastUpdated: new Date()\n      };\n      console.log(\"表格数据已准备:\", data);\n    };\n    const handleProcessingError = error => {\n      tableState.value = {\n        loading: false,\n        error: error,\n        data: null,\n        lastUpdated: null\n      };\n    };\n\n    // 比较表格属性\n    const compareTableAttributes = async () => {\n      // 验证数据状态\n      if (tableState.value.loading) {\n        alert(\"请等待当前操作完成\");\n        return;\n      }\n      let comparisonData = tableState.value.data;\n\n      // 如果没有通过事件获取的数据，尝试直接从子组件获取\n      if (!comparisonData && compareTable.value) {\n        const currentData = compareTable.value.getTableData();\n        if (currentData.processingState.isProcessing) {\n          alert(\"表格数据正在处理中，请稍候\");\n          return;\n        }\n        if (currentData.processingState.error) {\n          alert(`错误: ${currentData.processingState.error}`);\n          return;\n        }\n        comparisonData = {\n          table1: currentData.table1,\n          table2: currentData.table2,\n          commonAttributes: currentData.commonAttributes\n        };\n      }\n\n      // 检查数据是否可用\n      if (!comparisonData || !comparisonData.commonAttributes?.length) {\n        alert(\"没有可比较的公共属性\");\n        return;\n      }\n\n      // 准备请求数据\n      const requestData = {\n        table1: comparisonData.table1,\n        table2: comparisonData.table2,\n        commonAttributes: comparisonData.commonAttributes\n      };\n\n      // 调用API\n      try {\n        tableState.value.loading = true;\n        console.log(\"发送请求数据:\", requestData); // 调试日志\n\n        const response = await api.post(\"compare_table_attributes\", requestData);\n        console.log(\"收到响应:\", response); // 调试日志\n\n        if (response.success) {\n          // 显示总体信息\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatAnalysisResult(`\n          ### 表格对比结果\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\n          **比较属性**: ${response.results.length}个\n        `)\n          });\n\n          // 显示每个属性的分析结果\n          response.results.forEach(result => {\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formatAnalysisResult(`\n            ### ${result.attribute} 分析\n            ${result.analysis}\n          `)\n            });\n          });\n        } else {\n          throw new Error(response.message || \"比较失败\");\n        }\n      } catch (error) {\n        console.error(\"API调用失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `表格比较失败: ${error.message || \"未知错误\"}`\n        });\n      } finally {\n        tableState.value.loading = false;\n      }\n    };\n\n    // 格式化分析结果\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n\n      // 转换Markdown格式\n      text = text.replace(/### (.*?)\\n/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(\\d+\\.\\s+.*?)(<br>|$)/g, \"<li>$1</li>$2\");\n      text = text.replace(/-\\s+(.*?)(<br>|$)/g, \"<li>$1</li>$2\");\n      text = text.replace(/<li>.*?<\\/li>/g, match => `<ul>${match}</ul>`);\n      return text;\n    };\n\n    // 原有其他方法保持不变\n    const handleSelection = (data, source) => {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    };\n    const getPlainTextFromSelection = htmlContent => {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    };\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        alert(\"请输入问题！\");\n        return;\n      }\n\n      // 添加到聊天历史\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      try {\n        const response = await api.post(\"gpt_ask\", {\n          question: userQuestion.value,\n          // 可以附加表格数据\n          tableData: tableState.value.data\n        });\n        if (response.answer) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatAnalysisResult(response.answer)\n          });\n        } else {\n          throw new Error(\"未收到有效回答\");\n        }\n      } catch (error) {\n        console.error(\"提问失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `提问失败: ${error.message || \"未知错误\"}`\n        });\n      } finally {\n        userQuestion.value = \"\";\n      }\n    };\n\n    // 初始化事件监听\n    onMounted(() => {\n      bus.on(\"div1_Event\", data => handleSelection(data, \"div1\"));\n      bus.on(\"div3_Event\", data => handleSelection(data, \"div3\"));\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\");\n      bus.off(\"div3_Event\");\n    });\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      div1RawData,\n      div3RawData,\n      compareTable,\n      tableState,\n      handleTablesReady,\n      handleProcessingError,\n      compareTableAttributes,\n      formatAnalysisResult,\n      handleSelection,\n      getPlainTextFromSelection,\n      askQuestion,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","CompareTable","userQuestion","chatHistory","selectText2","selectText3","div1RawData","div3RawData","compareTable","tableState","loading","error","data","lastUpdated","handleTablesReady","value","Date","console","log","handleProcessingError","compareTableAttributes","alert","comparisonData","currentData","getTableData","processingState","isProcessing","table1","table2","commonAttributes","length","requestData","response","api","post","success","push","role","content","formatAnalysisResult","table1Title","table2Title","results","forEach","result","attribute","analysis","Error","message","text","replace","match","handleSelection","source","plainText","getPlainTextFromSelection","htmlContent","container","document","createElement","innerHTML","innerText","textContent","askQuestion","trim","question","tableData","answer","on","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"-viscontainer\">\r\n\t\t\t<!-- 状态显示 -->\r\n\t\t\t<div v-if=\"tableState.loading\" class=\"status-message loading\">\r\n\t\t\t\t<i class=\"el-icon-loading\"></i> 表格数据处理中...\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"tableState.error\" class=\"status-message error\">\r\n\t\t\t\t<i class=\"el-icon-error\"></i> {{ tableState.error }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<CompareTable\r\n\t\t\t\tref=\"compareTable\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@tables-ready=\"handleTablesReady\"\r\n\t\t\t\t@processing-error=\"handleProcessingError\" />\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t@click=\"compareTableAttributes\"\r\n\t\t\t\t\t\t:disabled=\"tableState.loading || !tableState.data\"\r\n\t\t\t\t\t\t:class=\"{ loading: tableState.loading }\">\r\n\t\t\t\t\t\t{{ tableState.loading ? \"分析中...\" : \"分析表格属性\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\t// import api from \"@/js/api.js\"; // 确保api导入正确\r\n\r\n\t// 聊天相关状态\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\r\n\t// 表格相关状态\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst compareTable = ref(null);\r\n\r\n\t// 表格处理状态\r\n\tconst tableState = ref({\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t\tdata: null,\r\n\t\tlastUpdated: null\r\n\t});\r\n\r\n\t// 事件处理\r\n\tconst handleTablesReady = data => {\r\n\t\ttableState.value = {\r\n\t\t\tloading: false,\r\n\t\t\terror: null,\r\n\t\t\tdata: data,\r\n\t\t\tlastUpdated: new Date()\r\n\t\t};\r\n\t\tconsole.log(\"表格数据已准备:\", data);\r\n\t};\r\n\r\n\tconst handleProcessingError = error => {\r\n\t\ttableState.value = {\r\n\t\t\tloading: false,\r\n\t\t\terror: error,\r\n\t\t\tdata: null,\r\n\t\t\tlastUpdated: null\r\n\t\t};\r\n\t};\r\n\r\n\t// 比较表格属性\r\n\tconst compareTableAttributes = async () => {\r\n\t\t// 验证数据状态\r\n\t\tif (tableState.value.loading) {\r\n\t\t\talert(\"请等待当前操作完成\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet comparisonData = tableState.value.data;\r\n\r\n\t\t// 如果没有通过事件获取的数据，尝试直接从子组件获取\r\n\t\tif (!comparisonData && compareTable.value) {\r\n\t\t\tconst currentData = compareTable.value.getTableData();\r\n\t\t\tif (currentData.processingState.isProcessing) {\r\n\t\t\t\talert(\"表格数据正在处理中，请稍候\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (currentData.processingState.error) {\r\n\t\t\t\talert(`错误: ${currentData.processingState.error}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcomparisonData = {\r\n\t\t\t\ttable1: currentData.table1,\r\n\t\t\t\ttable2: currentData.table2,\r\n\t\t\t\tcommonAttributes: currentData.commonAttributes\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// 检查数据是否可用\r\n\t\tif (!comparisonData || !comparisonData.commonAttributes?.length) {\r\n\t\t\talert(\"没有可比较的公共属性\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 准备请求数据\r\n\t\tconst requestData = {\r\n\t\t\ttable1: comparisonData.table1,\r\n\t\t\ttable2: comparisonData.table2,\r\n\t\t\tcommonAttributes: comparisonData.commonAttributes\r\n\t\t};\r\n\r\n\t\t// 调用API\r\n\t\ttry {\r\n\t\t\ttableState.value.loading = true;\r\n\r\n\t\t\tconsole.log(\"发送请求数据:\", requestData); // 调试日志\r\n\r\n\t\t\tconst response = await api.post(\"compare_table_attributes\", requestData);\r\n\r\n\t\t\tconsole.log(\"收到响应:\", response); // 调试日志\r\n\r\n\t\t\tif (response.success) {\r\n\t\t\t\t// 显示总体信息\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(`\r\n          ### 表格对比结果\r\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\r\n          **比较属性**: ${response.results.length}个\r\n        `)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 显示每个属性的分析结果\r\n\t\t\t\tresponse.results.forEach(result => {\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formatAnalysisResult(`\r\n            ### ${result.attribute} 分析\r\n            ${result.analysis}\r\n          `)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"比较失败\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"API调用失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `表格比较失败: ${error.message || \"未知错误\"}`\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\ttableState.value.loading = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\r\n\t\t// 转换Markdown格式\r\n\t\ttext = text.replace(/### (.*?)\\n/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(\\d+\\.\\s+.*?)(<br>|$)/g, \"<li>$1</li>$2\");\r\n\t\ttext = text.replace(/-\\s+(.*?)(<br>|$)/g, \"<li>$1</li>$2\");\r\n\t\ttext = text.replace(/<li>.*?<\\/li>/g, match => `<ul>${match}</ul>`);\r\n\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 原有其他方法保持不变\r\n\tconst handleSelection = (data, source) => {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 添加到聊天历史\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\"gpt_ask\", {\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\t// 可以附加表格数据\r\n\t\t\t\ttableData: tableState.value.data\r\n\t\t\t});\r\n\r\n\t\t\tif (response.answer) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(response.answer)\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"未收到有效回答\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"提问失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `提问失败: ${error.message || \"未知错误\"}`\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tuserQuestion.value = \"\";\r\n\t\t}\r\n\t};\r\n\r\n\t// 初始化事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", data => handleSelection(data, \"div1\"));\r\n\t\tbus.on(\"div3_Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\");\r\n\t\tbus.off(\"div3_Event\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\r\n\t.status-message {\r\n\t\tpadding: 10px 15px;\r\n\t\tmargin: 10px 0;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 14px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.status-message i {\r\n\t\tmargin-right: 8px;\r\n\t}\r\n\r\n\t.status-message.loading {\r\n\t\tbackground-color: #f0f9ff;\r\n\t\tcolor: #409eff;\r\n\t\tborder: 1px solid #d9ecff;\r\n\t}\r\n\r\n\t.status-message.error {\r\n\t\tbackground-color: #fef0f0;\r\n\t\tcolor: #f56c6c;\r\n\t\tborder: 1px solid #fde2e2;\r\n\t}\r\n\r\n\t.button-container button.loading {\r\n\t\tposition: relative;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.button-container button.loading::after {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tmargin: -8px 0 0 -8px;\r\n\t\tborder: 2px solid transparent;\r\n\t\tborder-top-color: currentColor;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 0.8s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}