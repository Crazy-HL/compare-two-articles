{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"data-viz\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"field-visualization\",\n    \"data-viz\": $props.visualization\n  }, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createBlock($setup[\"InfoboxField\"], {\n    key: 0,\n    value: $setup.formatTextValue($props.field)\n  }, null, 8 /* PROPS */, [\"value\"])) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 饼图 \"), $setup.hasChartData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode($setup[\"PieChart\"], {\n    data: $setup.pieChartData\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 柱状图 \"), $setup.hasChartData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode($setup[\"BarChart\"], {\n    data: $setup.barChartData,\n    \"y-range\": $props.yRange,\n    \"compare-data\": $setup.normalizedCompareData\n  }, null, 8 /* PROPS */, [\"data\", \"y-range\", \"compare-data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 折线图 \"), $setup.hasChartData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode($setup[\"LineChart\"], {\n    data: $setup.lineChartData\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 默认显示 \"), _createVNode($setup[\"InfoboxField\"], {\n    value: $props.field\n  }, null, 8 /* PROPS */, [\"value\"])], 64 /* STABLE_FRAGMENT */))], 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","_createElementBlock","$props","visualization","_createCommentVNode","_createBlock","$setup","value","formatTextValue","field","_Fragment","hasChartData","_hoisted_2","_createVNode","data","pieChartData","_hoisted_3","_hoisted_4","barChartData","yRange","normalizedCompareData","_hoisted_5","_hoisted_6","lineChartData","_hoisted_7","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\" :data-viz=\"visualization\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<InfoboxField :value=\"formatTextValue(field)\" />\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<PieChart :data=\"pieChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\t:data=\"barChartData\"\r\n\t\t\t\t\t:y-range=\"yRange\"\r\n\t\t\t\t\t:compare-data=\"normalizedCompareData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<LineChart :data=\"lineChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<InfoboxField :value=\"field\" />\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport PieChart from \"./charts/PieChart.vue\";\r\n\timport BarChart from \"./charts/BarChart.vue\";\r\n\timport LineChart from \"./charts/LineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String,\r\n\t\tyRange: Array,\r\n\t\tcompareData: [Array, Object]\r\n\t});\r\n\r\n\t// 确保compareData始终是数组\r\n\tconst normalizedCompareData = computed(() => {\r\n\t\tif (Array.isArray(props.compareData)) return props.compareData;\r\n\t\tif (props.compareData && typeof props.compareData === \"object\")\r\n\t\t\treturn [props.compareData];\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 格式化文本值\r\n\tconst formatTextValue = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value.map(item => item.raw || item.value || item).join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || JSON.stringify(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 提取数值从字符串中（处理$、¥等货币符号和单位）\r\n\tconst extractNumber = str => {\r\n\t\tif (typeof str === \"number\") return str;\r\n\t\tif (!str) return null;\r\n\r\n\t\t// 处理类似 \"$19.53 trillion (nominal; 2025)\" 的字符串\r\n\t\tconst match = str\r\n\t\t\t.toString()\r\n\t\t\t.match(/(\\$|¥)?\\s*([\\d,.]+)\\s*(million|billion|trillion)?/);\r\n\t\tif (match) {\r\n\t\t\tlet num = parseFloat(match[2].replace(/,/g, \"\"));\r\n\r\n\t\t\t// 处理单位换算\r\n\t\t\tif (match[3] === \"million\") num *= 1e6;\r\n\t\t\tif (match[3] === \"billion\") num *= 1e9;\r\n\t\t\tif (match[3] === \"trillion\") num *= 1e12;\r\n\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\treturn parseFloat(str) || null;\r\n\t};\r\n\r\n\t// 提取图表数据 - 饼图\r\n\tconst pieChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理百分比数据\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\t// 处理数组数据\r\n\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\treturn props.field\r\n\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\tconst value = item.value || item.raw;\r\n\t\t\t\t\t\treturn value && extractNumber(value) !== null;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\t\tlet value = extractNumber(item.value || item.raw);\r\n\t\t\t\t\t\t// 确保百分比值在0-100之间\r\n\t\t\t\t\t\tvalue = Math.min(100, Math.max(0, value || 0));\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// 处理对象数据\r\n\t\t\tif (typeof props.field === \"object\") {\r\n\t\t\t\tconst value = extractNumber(props.field.value || props.field.raw);\r\n\t\t\t\tif (value !== null) {\r\n\t\t\t\t\tconst adjustedValue = Math.min(100, Math.max(0, value));\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\t\t\tvalue: adjustedValue,\r\n\t\t\t\t\t\t\t// 单个数据点时添加一个对比项\r\n\t\t\t\t\t\t\t...(adjustedValue === 100\r\n\t\t\t\t\t\t\t\t? []\r\n\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t_contrast: {\r\n\t\t\t\t\t\t\t\t\t\t\tname: \"对比\",\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 100 - adjustedValue\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 提取图表数据 - 柱状图\r\n\tconst barChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item.value || item.raw;\r\n\t\t\t\t\treturn value && extractNumber(value) !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = extractNumber(item.value || item.raw);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\tvalue: value || 0\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 处理对象数据\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = extractNumber(props.field.value || props.field.raw);\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tif (typeof props.field === \"string\" || typeof props.field === \"number\") {\r\n\t\t\tconst value = extractNumber(props.field);\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: props.fieldKey || \"值\",\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 提取图表数据 - 折线图\r\n\tconst lineChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => item.value !== undefined)\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = parseFloat(item.value) || 0;\r\n\t\t\t\t\tconst year = item.year || index + 1;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tyear,\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.sort((a, b) => a.year - b.year);\r\n\t\t}\r\n\r\n\t\t// 处理对象数据\r\n\t\tif (typeof props.field === \"object\" && props.field.value !== undefined) {\r\n\t\t\tconst value = parseFloat(props.field.value) || 0;\r\n\t\t\tconst year = props.field.year || 1;\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\tconst hasChartData = computed(() => {\r\n\t\tswitch (props.visualization) {\r\n\t\t\tcase \"pie-chart\":\r\n\t\t\t\treturn pieChartData.value.length > 0;\r\n\t\t\tcase \"bar-chart\":\r\n\t\t\t\treturn barChartData.value.length > 0;\r\n\t\t\tcase \"line-chart\":\r\n\t\t\t\treturn lineChartData.value.length > 0;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;EAAAA,GAAA;EAS4BC,KAAK,EAAC;;;EATlCD,GAAA;EAYeC,KAAK,EAAC;;;EAZrBD,GAAA;EAiB4BC,KAAK,EAAC;;;EAjBlCD,GAAA;EAuBeC,KAAK,EAAC;;;EAvBrBD,GAAA;EA4B4BC,KAAK,EAAC;;;EA5BlCD,GAAA;EA+BeC,KAAK,EAAC;;;uBA9BpBC,mBAAA,CAqCM;IArCDD,KAAK,EAAC,qBAAqB;IAAE,UAAQ,EAAEE,MAAA,CAAAC;MAC3CC,mBAAA,UAAa,EACGF,MAAA,CAAAC,aAAa,oB,cAC5BE,YAAA,CAAgDC,MAAA;IAJnDP,GAAA;IAIkBQ,KAAK,EAAED,MAAA,CAAAE,eAAe,CAACN,MAAA,CAAAO,KAAK;wCAIvBP,MAAA,CAAAC,aAAa,oB,cAAlCF,mBAAA,CAKWS,SAAA;IAbbX,GAAA;EAAA,IAOEK,mBAAA,QAAW,EAECE,MAAA,CAAAK,YAAY,I,cAAvBV,mBAAA,CAEM,OAFNW,UAEM,GADLC,YAAA,CAAiCP,MAAA;IAAtBQ,IAAI,EAAER,MAAA,CAAAS;EAAY,kC,oBAE9Bd,mBAAA,CAAuC,OAAvCe,UAAuC,EAAX,OAAK,G,+BAIbd,MAAA,CAAAC,aAAa,oB,cAAlCF,mBAAA,CAQWS,SAAA;IAxBbX,GAAA;EAAA,IAeEK,mBAAA,SAAY,EAEAE,MAAA,CAAAK,YAAY,I,cAAvBV,mBAAA,CAKM,OALNgB,UAKM,GAJLJ,YAAA,CAGyCP,MAAA;IAFvCQ,IAAI,EAAER,MAAA,CAAAY,YAAY;IAClB,SAAO,EAAEhB,MAAA,CAAAiB,MAAM;IACf,cAAY,EAAEb,MAAA,CAAAc;mFAEjBnB,mBAAA,CAAuC,OAAvCoB,UAAuC,EAAX,OAAK,G,+BAIbnB,MAAA,CAAAC,aAAa,qB,cAAlCF,mBAAA,CAKWS,SAAA;IAhCbX,GAAA;EAAA,IA0BEK,mBAAA,SAAY,EAEAE,MAAA,CAAAK,YAAY,I,cAAvBV,mBAAA,CAEM,OAFNqB,UAEM,GADLT,YAAA,CAAmCP,MAAA;IAAvBQ,IAAI,EAAER,MAAA,CAAAiB;EAAa,kC,oBAEhCtB,mBAAA,CAAuC,OAAvCuB,UAAuC,EAAX,OAAK,G,8CAIlCvB,mBAAA,CAEWS,SAAA;IArCbX,GAAA;EAAA,IAkCEK,mBAAA,UAAa,EAEZS,YAAA,CAA+BP,MAAA;IAAhBC,KAAK,EAAEL,MAAA,CAAAO;EAAK,mC,8CApC9BgB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}