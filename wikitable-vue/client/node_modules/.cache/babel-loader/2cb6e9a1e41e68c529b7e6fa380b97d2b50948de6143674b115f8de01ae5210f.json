{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'CombinedLineChart',\n  props: {\n    data: {\n      type: Array,\n      required: true,\n      validator: value => value.every(item => item.hasOwnProperty(\"source\") && item.hasOwnProperty(\"year\") && item.hasOwnProperty(\"value\"))\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartContainer = ref(null);\n    let chartInstance = null;\n\n    // 处理原始数据 -> 转换为ECharts需要的格式\n    const processChartData = () => {\n      // 1. 获取所有唯一且排序后的年份\n      const allYears = [...new Set(props.data.map(item => item.year))].sort((a, b) => a - b);\n\n      // 2. 获取所有数据源\n      const dataSources = [...new Set(props.data.map(item => item.source))];\n\n      // 3. 为每个数据源创建数据系列\n      const series = dataSources.map((source, index) => {\n        // 获取该数据源的所有数据点\n        const sourceData = props.data.filter(item => item.source === source);\n\n        // 创建按年份对齐的数据点\n        const dataPoints = allYears.map(year => {\n          const point = sourceData.find(item => item.year === year);\n          return point ? point.value : null;\n        });\n        return {\n          name: source,\n          type: \"line\",\n          data: dataPoints,\n          symbol: \"circle\",\n          symbolSize: 10,\n          lineStyle: {\n            width: 3\n          },\n          itemStyle: {\n            color: index === 0 ? \"#4e79a7\" : \"#e15759\" // 固定颜色分配\n          },\n          label: {\n            show: true,\n            formatter: \"{c}%\",\n            position: \"top\"\n          },\n          emphasis: {\n            focus: \"series\",\n            itemStyle: {\n              borderWidth: 2,\n              borderColor: \"#fff\"\n            }\n          }\n        };\n      });\n      return {\n        years: allYears,\n        series\n      };\n    };\n\n    // 初始化图表\n    const initChart = () => {\n      if (!chartContainer.value) return;\n\n      // 销毁旧实例\n      if (chartInstance) {\n        chartInstance.dispose();\n      }\n\n      // 创建新实例\n      chartInstance = echarts.init(chartContainer.value);\n\n      // 处理数据\n      const {\n        years,\n        series\n      } = processChartData();\n\n      // 计算Y轴范围（最小值向下取整，最大值向上取整）\n      const allValues = props.data.map(item => item.value);\n      const yMin = Math.floor(Math.min(...allValues)) - 0.5;\n      const yMax = Math.ceil(Math.max(...allValues)) + 0.5;\n\n      // 配置项\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.filter(param => param.value != null).map(param => {\n              return `${param.seriesName}<br/>${param.name}: ${param.value}%`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          data: series.map(s => s.name),\n          bottom: 0\n        },\n        grid: {\n          top: \"12%\",\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"15%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: years,\n          axisLabel: {\n            formatter: value => value // 显示完整年份\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          min: yMin,\n          max: yMax,\n          axisLabel: {\n            formatter: \"{value}%\"\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        series\n      };\n\n      // 设置配置项\n      chartInstance.setOption(option);\n\n      // 响应式调整\n      window.addEventListener(\"resize\", handleResize);\n    };\n\n    // 窗口大小变化处理\n    const handleResize = () => {\n      chartInstance?.resize();\n    };\n\n    // 生命周期\n    onMounted(() => {\n      initChart();\n    });\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n\n    // 监听数据变化\n    watch(() => props.data, () => {\n      initChart();\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartContainer,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      processChartData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","echarts","props","__props","chartContainer","chartInstance","processChartData","allYears","Set","data","map","item","year","sort","a","b","dataSources","source","series","index","sourceData","filter","dataPoints","point","find","value","name","type","symbol","symbolSize","lineStyle","width","itemStyle","color","label","show","formatter","position","emphasis","focus","borderWidth","borderColor","years","initChart","dispose","init","allValues","yMin","Math","floor","min","yMax","ceil","max","option","tooltip","trigger","params","param","seriesName","join","legend","s","bottom","grid","top","left","right","containLabel","xAxis","axisLabel","yAxis","splitLine","setOption","window","addEventListener","handleResize","resize","removeEventListener","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/CombinedLineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"combined-line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t\tvalidator: value =>\r\n\t\t\t\tvalue.every(\r\n\t\t\t\t\titem =>\r\n\t\t\t\t\t\titem.hasOwnProperty(\"source\") &&\r\n\t\t\t\t\t\titem.hasOwnProperty(\"year\") &&\r\n\t\t\t\t\t\titem.hasOwnProperty(\"value\")\r\n\t\t\t\t)\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartContainer = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 处理原始数据 -> 转换为ECharts需要的格式\r\n\tconst processChartData = () => {\r\n\t\t// 1. 获取所有唯一且排序后的年份\r\n\t\tconst allYears = [...new Set(props.data.map(item => item.year))].sort(\r\n\t\t\t(a, b) => a - b\r\n\t\t);\r\n\r\n\t\t// 2. 获取所有数据源\r\n\t\tconst dataSources = [...new Set(props.data.map(item => item.source))];\r\n\r\n\t\t// 3. 为每个数据源创建数据系列\r\n\t\tconst series = dataSources.map((source, index) => {\r\n\t\t\t// 获取该数据源的所有数据点\r\n\t\t\tconst sourceData = props.data.filter(item => item.source === source);\r\n\r\n\t\t\t// 创建按年份对齐的数据点\r\n\t\t\tconst dataPoints = allYears.map(year => {\r\n\t\t\t\tconst point = sourceData.find(item => item.year === year);\r\n\t\t\t\treturn point ? point.value : null;\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\tname: source,\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdata: dataPoints,\r\n\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\tsymbolSize: 10,\r\n\t\t\t\tlineStyle: {\r\n\t\t\t\t\twidth: 3\r\n\t\t\t\t},\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: index === 0 ? \"#4e79a7\" : \"#e15759\" // 固定颜色分配\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: \"{c}%\",\r\n\t\t\t\t\tposition: \"top\"\r\n\t\t\t\t},\r\n\t\t\t\temphasis: {\r\n\t\t\t\t\tfocus: \"series\",\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\tborderColor: \"#fff\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tyears: allYears,\r\n\t\t\tseries\r\n\t\t};\r\n\t};\r\n\r\n\t// 初始化图表\r\n\tconst initChart = () => {\r\n\t\tif (!chartContainer.value) return;\r\n\r\n\t\t// 销毁旧实例\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t}\r\n\r\n\t\t// 创建新实例\r\n\t\tchartInstance = echarts.init(chartContainer.value);\r\n\r\n\t\t// 处理数据\r\n\t\tconst { years, series } = processChartData();\r\n\r\n\t\t// 计算Y轴范围（最小值向下取整，最大值向上取整）\r\n\t\tconst allValues = props.data.map(item => item.value);\r\n\t\tconst yMin = Math.floor(Math.min(...allValues)) - 0.5;\r\n\t\tconst yMax = Math.ceil(Math.max(...allValues)) + 0.5;\r\n\r\n\t\t// 配置项\r\n\t\tconst option = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${param.name}: ${param.value}%`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tdata: series.map(s => s.name),\r\n\t\t\t\tbottom: 0\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: \"12%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"15%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: years,\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: value => value // 显示完整年份\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\tmin: yMin,\r\n\t\t\t\tmax: yMax,\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t},\r\n\t\t\t\tsplitLine: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\ttype: \"dashed\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries\r\n\t\t};\r\n\r\n\t\t// 设置配置项\r\n\t\tchartInstance.setOption(option);\r\n\r\n\t\t// 响应式调整\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\t// 窗口大小变化处理\r\n\tconst handleResize = () => {\r\n\t\tchartInstance?.resize();\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\t// 监听数据变化\r\n\twatch(\r\n\t\t() => props.data,\r\n\t\t() => {\r\n\t\t\tinitChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.combined-line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 4px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}