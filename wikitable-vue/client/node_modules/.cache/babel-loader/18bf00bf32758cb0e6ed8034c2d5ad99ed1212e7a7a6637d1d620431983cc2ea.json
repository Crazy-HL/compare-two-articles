{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  __name: 'BaseWikipedia',\n  props: {\n    pageTitle: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章内容\n    const selectedText = ref(\"\"); // 选中的文字\n    const showPopup = ref(false); // 是否显示弹出框\n    const popupStyle = ref({}); // 弹出框的样式\n    const divRef = ref(null); // `Div1` 的 DOM 参考\n\n    // **选中文字并显示弹出框**\n    const handleSelection = () => {\n      const selection = window.getSelection();\n      const text = selection.toString().trim();\n      if (text && divRef.value) {\n        selectedText.value = text;\n        showPopup.value = true;\n\n        // 获取 `Div1` 的位置信息\n        const divRect = divRef.value.getBoundingClientRect();\n        const range = selection.getRangeAt(0);\n        const rect = range.getBoundingClientRect();\n\n        // 计算弹出框的位置（相对于 `Div1`）\n        popupStyle.value = {\n          top: `${rect.top - divRect.top + divRef.value.scrollTop}px`,\n          left: \"50%\",\n          transform: \"translateX(-50%)\"\n        };\n      }\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value = false;\n      selectedText.value = \"\";\n    };\n\n    // **获取 Wikipedia 页面内容**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        pageHtml.value = await response.text();\n      } catch (err) {\n        console.error(\"Error fetching content:\", err);\n      }\n    };\n    onMounted(fetchWikipediaContent);\n    const __returned__ = {\n      props,\n      pageHtml,\n      selectedText,\n      showPopup,\n      popupStyle,\n      divRef,\n      handleSelection,\n      closePopup,\n      fetchWikipediaContent,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","props","__props","pageHtml","selectedText","showPopup","popupStyle","divRef","handleSelection","selection","window","getSelection","text","toString","trim","value","divRect","getBoundingClientRect","range","getRangeAt","rect","top","scrollTop","left","transform","closePopup","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","err","console","error"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div-container\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 选中文字的弹出框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showPopup\"\r\n\t\t\tclass=\"text-popup\"\r\n\t\t\t:style=\"popupStyle\"\r\n\t\t\t@click=\"closePopup\">\r\n\t\t\t<p>{{ selectedText }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({ pageTitle: String });\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章内容\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst popupStyle = ref({}); // 弹出框的样式\r\n\tconst divRef = ref(null); // `Div1` 的 DOM 参考\r\n\r\n\t// **选中文字并显示弹出框**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tconst text = selection.toString().trim();\r\n\r\n\t\tif (text && divRef.value) {\r\n\t\t\tselectedText.value = text;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 获取 `Div1` 的位置信息\r\n\t\t\tconst divRect = divRef.value.getBoundingClientRect();\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst rect = range.getBoundingClientRect();\r\n\r\n\t\t\t// 计算弹出框的位置（相对于 `Div1`）\r\n\t\t\tpopupStyle.value = {\r\n\t\t\t\ttop: `${rect.top - divRect.top + divRef.value.scrollTop}px`,\r\n\t\t\t\tleft: \"50%\",\r\n\t\t\t\ttransform: \"translateX(-50%)\"\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **获取 Wikipedia 页面内容**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tpageHtml.value = await response.text();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error fetching content:\", err);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(fetchWikipediaContent);\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 让 `Div1` 作为相对定位的父容器 */\r\n\t.div-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* 文章内容 */\r\n\t.wikipedia-content {\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t/* 弹出框：基于 `Div1` 内部居中 */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\twidth: 50%;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 10px;\r\n\t\tbox-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\r\n\t\tborder-radius: 10px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 1.2rem;\r\n\t\tfont-weight: bold;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tcolor: #4a4a4a;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: scale(0.9);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"AAsBC,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;;;IAEpC,MAAMC,KAAK,GAAGC,OAAkC;IAEhD,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAMK,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,MAAMM,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMO,UAAU,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMQ,MAAM,GAAGR,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE1B;IACA,MAAMS,eAAe,GAAGA,CAAA,KAAM;MAC7B,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;MACvC,MAAMC,IAAI,GAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAExC,IAAIF,IAAI,IAAIL,MAAM,CAACQ,KAAK,EAAE;QACzBX,YAAY,CAACW,KAAK,GAAGH,IAAI;QACzBP,SAAS,CAACU,KAAK,GAAG,IAAI;;QAEtB;QACA,MAAMC,OAAO,GAAGT,MAAM,CAACQ,KAAK,CAACE,qBAAqB,CAAC,CAAC;QACpD,MAAMC,KAAK,GAAGT,SAAS,CAACU,UAAU,CAAC,CAAC,CAAC;QACrC,MAAMC,IAAI,GAAGF,KAAK,CAACD,qBAAqB,CAAC,CAAC;;QAE1C;QACAX,UAAU,CAACS,KAAK,GAAG;UAClBM,GAAG,EAAE,GAAGD,IAAI,CAACC,GAAG,GAAGL,OAAO,CAACK,GAAG,GAAGd,MAAM,CAACQ,KAAK,CAACO,SAAS,IAAI;UAC3DC,IAAI,EAAE,KAAK;UACXC,SAAS,EAAE;QACZ,CAAC;MACF;IACD,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACxBpB,SAAS,CAACU,KAAK,GAAG,KAAK;MACvBX,YAAY,CAACW,KAAK,GAAG,EAAE;IACxB,CAAC;;IAED;IACA,MAAMW,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH,MAAMC,MAAM,GAAG,kDAAkDC,kBAAkB,CAClF3B,KAAK,CAAC4B,SACP,CAAC,EAAE;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEzD9B,QAAQ,CAACY,KAAK,GAAG,MAAMe,QAAQ,CAAClB,IAAI,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACbC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC9C;IACD,CAAC;IAEDlC,SAAS,CAAC0B,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}