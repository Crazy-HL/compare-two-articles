{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showModal = ref(false);\n    const modalTitle = ref(\"\");\n    const modalData = ref(null);\n    const modalType = ref(\"\");\n    const modalVisualization = ref(\"\");\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\"\n    }];\n    const normalizeString = str => {\n      return str.toLowerCase().replace(/\\s+/g, \" \").trim().replace(/[^a-z0-9 ]/g, \"\").replace(/\\b(?:the|a|an|of|in|at|on)\\b/g, \"\") // 移除常见冠词和介词\n      .trim();\n    };\n    // 高亮Infobox相关方法\n    const highlightInfobox = (infobox, fieldKey, side) => {\n      const field = COMPARABLE_FIELDS.find(f => f.key === fieldKey);\n      if (!field) return;\n\n      // 尝试所有可能的匹配项\n      const possibleMatches = field.exactMatch || [field.key];\n      for (const match of possibleMatches) {\n        const normalizedMatch = normalizeString(match);\n        const foundKey = Object.keys(infobox.data).find(key => normalizeString(key) === normalizedMatch);\n        if (foundKey) {\n          bus.emit(`highlight-${side}-infobox`, {\n            fieldKey: foundKey,\n            infoboxTitle: infobox.title\n          });\n          return;\n        }\n      }\n\n      // 如果没有精确匹配，则回退到模糊匹配\n      bus.emit(`highlight-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n    };\n    const highlightBothInfoboxes = fieldKey => {\n      highlightInfobox(leftInfobox.value, fieldKey, \"left\");\n      highlightInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n\n    // 模态框相关方法\n    const openModal = (infobox, fieldKey) => {\n      const field = getField(infobox, fieldKey);\n      if (!field || field.length === 0) return;\n      modalTitle.value = `${infobox.title} - ${fieldKey}`;\n      modalData.value = field;\n      modalType.value = COMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\n      modalVisualization.value = COMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\n      showModal.value = true;\n    };\n    const closeModal = () => {\n      showModal.value = false;\n    };\n\n    // 获取字段数据\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) {\n          return Array.isArray(section[matchedKey]) ? section[matchedKey] : [section[matchedKey]];\n        }\n      }\n      return [];\n    };\n\n    // 计算可比较字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 处理Infobox数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 组件挂载时设置事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n        console.log(\"接收到左侧Infobox数据:\", data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n        console.log(\"接收到右侧Infobox数据:\", data);\n      });\n    });\n    const __returned__ = {\n      props,\n      leftInfobox,\n      rightInfobox,\n      showModal,\n      modalTitle,\n      modalData,\n      modalType,\n      modalVisualization,\n      COMPARABLE_FIELDS,\n      normalizeString,\n      highlightInfobox,\n      hoverInfobox,\n      unhoverInfobox,\n      highlightBothInfoboxes,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      openModal,\n      closeModal,\n      getField,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","SimpleChart","FullChart","bus","props","__props","leftInfobox","title","type","data","rightInfobox","showModal","modalTitle","modalData","modalType","modalVisualization","COMPARABLE_FIELDS","key","typeLabel","visualization","normalizeString","str","toLowerCase","replace","trim","highlightInfobox","infobox","fieldKey","side","field","find","f","possibleMatches","exactMatch","match","normalizedMatch","foundKey","Object","keys","emit","infoboxTitle","hoverInfobox","unhoverInfobox","highlightBothInfoboxes","value","hoverBothInfoboxes","unhoverBothInfoboxes","openModal","getField","length","closeModal","section","values","undefined","Array","isArray","cleanKey","matchedKey","k","comparableFields","filter","leftVal","rightVal","processInfoboxData","sections","on","console","log"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@click=\"highlightInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@click=\"highlightBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@click=\"highlightInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeModal\">×</button>\r\n\t\t\t\t<h3>{{ modalTitle }}</h3>\r\n\t\t\t\t<div class=\"full-chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"modalData\"\r\n\t\t\t\t\t\t:type=\"modalType\"\r\n\t\t\t\t\t\t:visualization=\"modalVisualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\tconst showModal = ref(false);\r\n\tconst modalTitle = ref(\"\");\r\n\tconst modalData = ref(null);\r\n\tconst modalType = ref(\"\");\r\n\tconst modalVisualization = ref(\"\");\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\tconst normalizeString = str => {\r\n\t\treturn str\r\n\t\t\t.toLowerCase()\r\n\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t.trim()\r\n\t\t\t.replace(/[^a-z0-9 ]/g, \"\")\r\n\t\t\t.replace(/\\b(?:the|a|an|of|in|at|on)\\b/g, \"\") // 移除常见冠词和介词\r\n\t\t\t.trim();\r\n\t};\r\n\t// 高亮Infobox相关方法\r\n\tconst highlightInfobox = (infobox, fieldKey, side) => {\r\n\t\tconst field = COMPARABLE_FIELDS.find(f => f.key === fieldKey);\r\n\t\tif (!field) return;\r\n\r\n\t\t// 尝试所有可能的匹配项\r\n\t\tconst possibleMatches = field.exactMatch || [field.key];\r\n\r\n\t\tfor (const match of possibleMatches) {\r\n\t\t\tconst normalizedMatch = normalizeString(match);\r\n\t\t\tconst foundKey = Object.keys(infobox.data).find(\r\n\t\t\t\tkey => normalizeString(key) === normalizedMatch\r\n\t\t\t);\r\n\r\n\t\t\tif (foundKey) {\r\n\t\t\t\tbus.emit(`highlight-${side}-infobox`, {\r\n\t\t\t\t\tfieldKey: foundKey,\r\n\t\t\t\t\tinfoboxTitle: infobox.title\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 如果没有精确匹配，则回退到模糊匹配\r\n\t\tbus.emit(`highlight-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst highlightBothInfoboxes = fieldKey => {\r\n\t\thighlightInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thighlightInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\t// 模态框相关方法\r\n\tconst openModal = (infobox, fieldKey) => {\r\n\t\tconst field = getField(infobox, fieldKey);\r\n\t\tif (!field || field.length === 0) return;\r\n\r\n\t\tmodalTitle.value = `${infobox.title} - ${fieldKey}`;\r\n\t\tmodalData.value = field;\r\n\t\tmodalType.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\r\n\t\tmodalVisualization.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\r\n\t\tshowModal.value = true;\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tshowModal.value = false;\r\n\t};\r\n\r\n\t// 获取字段数据\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\treturn Array.isArray(section[matchedKey])\r\n\t\t\t\t\t? section[matchedKey]\r\n\t\t\t\t\t: [section[matchedKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 计算可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 组件挂载时设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"接收到左侧Infobox数据:\", data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"接收到右侧Infobox数据:\", data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\theight: 160px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e3f2fd;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.modal-overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 80%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.full-chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tfont-size: 24px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}