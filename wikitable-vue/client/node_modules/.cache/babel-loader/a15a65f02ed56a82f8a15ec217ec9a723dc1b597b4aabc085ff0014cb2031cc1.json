{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9d3193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"文章大纲\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"sidebar-content\"\n};\nconst _hoisted_3 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 切换大纲的按钮 \"), _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"toggle-btn\"\n  }, _toDisplayString($setup.isVisible ? \"隐藏大纲\" : \"显示大纲\"), 1 /* TEXT */), _createCommentVNode(\" 侧边栏遮罩层 \"), $setup.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"overlay\",\n    onClick: $setup.toggleOutline\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 侧边栏大纲 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"sidebar\", {\n      visible: $setup.isVisible\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"sidebar-header\"\n  }, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"close-btn\"\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id\n    }, _toDisplayString(item.text), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_createCommentVNode","onClick","$setup","toggleOutline","isVisible","key","_normalizeClass","visible","_hoisted_1","_hoisted_2","_Fragment","_renderList","outline","item","id","href","text","_hoisted_3"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<!-- 切换大纲的按钮 -->\r\n\t\t<button @click=\"toggleOutline\" class=\"toggle-btn\">\r\n\t\t\t{{ isVisible ? \"隐藏大纲\" : \"显示大纲\" }}\r\n\t\t</button>\r\n\r\n\t\t<!-- 侧边栏遮罩层 -->\r\n\t\t<div v-if=\"isVisible\" class=\"overlay\" @click=\"toggleOutline\"></div>\r\n\r\n\t\t<!-- 侧边栏大纲 -->\r\n\t\t<div class=\"sidebar\" :class=\"{ visible: isVisible }\">\r\n\t\t\t<div class=\"sidebar-header\">\r\n\t\t\t\t<h2>文章大纲</h2>\r\n\t\t\t\t<button @click=\"toggleOutline\" class=\"close-btn\">×</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"sidebar-content\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li v-for=\"item in outline\" :key=\"item.id\">\r\n\t\t\t\t\t\t<a :href=\"'#' + item.id\">{{ item.text }}</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML 内容\r\n\t\tdivId: String // 组件对应的 divId\r\n\t});\r\n\r\n\tconst isVisible = ref(false); // 控制当前 divId 是否显示大纲\r\n\tconst outline = ref([]);\r\n\r\n\t// 切换当前 divId 的大纲显示状态\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// 解析文章内容，生成大纲\r\n\tconst extractOutline = content => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst outlineItems = [];\r\n\r\n\t\theadings.forEach(heading => {\r\n\t\t\tconst id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${\r\n\t\t\t\tprops.divId\r\n\t\t\t}`;\r\n\t\t\theading.id = id;\r\n\t\t\toutlineItems.push({\r\n\t\t\t\tid,\r\n\t\t\t\ttext: heading.textContent,\r\n\t\t\t\tlevel: parseInt(heading.tagName.charAt(1))\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn outlineItems;\r\n\t};\r\n\r\n\t// 监听 content 变化，更新大纲，但不影响 isVisible\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = newContent ? extractOutline(newContent) : [];\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 切换按钮样式 */\r\n\t.toggle-btn {\r\n\t\tposition: fixed;\r\n\t\ttop: 20px;\r\n\t\tright: 20px;\r\n\t\tz-index: 1000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-radius: 5px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\t.toggle-btn:hover {\r\n\t\tbackground-color: #005f8d;\r\n\t}\r\n\r\n\t/* 遮罩层样式 */\r\n\t.overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tz-index: 999;\r\n\t}\r\n\r\n\t/* 侧边栏容器 */\r\n\t.sidebar {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tright: -300px; /* 初始状态隐藏 */\r\n\t\twidth: 300px;\r\n\t\theight: 100%;\r\n\t\tbackground-color: white;\r\n\t\tbox-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\r\n\t\ttransition: right 0.3s ease;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t/* 侧边栏显示时的状态 */\r\n\t.sidebar.visible {\r\n\t\tright: 0;\r\n\t}\r\n\r\n\t/* 侧边栏头部 */\r\n\t.sidebar-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tpadding: 15px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.sidebar-header h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t/* 关闭按钮 */\r\n\t.close-btn {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 1.5em;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t/* 侧边栏内容 */\r\n\t.sidebar-content {\r\n\t\tpadding: 15px;\r\n\t\toverflow-y: auto;\r\n\t\theight: calc(100% - 60px); /* 减去头部高度 */\r\n\t}\r\n\r\n\t.sidebar-content ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.sidebar-content li {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.sidebar-content a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t\tfont-size: 0.9em;\r\n\t}\r\n\r\n\t.sidebar-content a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n"],"mappings":";;gEAaIA,mBAAA,CAAa,YAAT,MAAI;;EAGJC,KAAK,EAAC;AAAiB;mBAhB/B;;uBACCC,mBAAA,CAuBM,cAtBLC,mBAAA,aAAgB,EAChBH,mBAAA,CAES;IAFAI,OAAK,EAAEC,MAAA,CAAAC,aAAa;IAAEL,KAAK,EAAC;sBACjCI,MAAA,CAAAE,SAAS,oCAGbJ,mBAAA,YAAe,EACJE,MAAA,CAAAE,SAAS,I,cAApBL,mBAAA,CAAmE;IARrEM,GAAA;IAQwBP,KAAK,EAAC,SAAS;IAAEG,OAAK,EAAEC,MAAA,CAAAC;QARhDH,mBAAA,gBAUEA,mBAAA,WAAc,EACdH,mBAAA,CAYM;IAZDC,KAAK,EAXZQ,eAAA,EAWa,SAAS;MAAAC,OAAA,EAAoBL,MAAA,CAAAE;IAAS;MAChDP,mBAAA,CAGM;IAHDC,KAAK,EAAC;EAAgB,IAC1BU,UAAa,EACbX,mBAAA,CAA2D;IAAlDI,OAAK,EAAEC,MAAA,CAAAC,aAAa;IAAEL,KAAK,EAAC;KAAY,GAAC,E,GAEnDD,mBAAA,CAMM,OANNY,UAMM,GALLZ,mBAAA,CAIK,c,kBAHJE,mBAAA,CAEKW,SAAA,QApBVC,WAAA,CAkBwBT,MAAA,CAAAU,OAAO,EAAfC,IAAI;yBAAfd,mBAAA,CAEK;MAFwBM,GAAG,EAAEQ,IAAI,CAACC;QACtCjB,mBAAA,CAA4C;MAAxCkB,IAAI,QAAQF,IAAI,CAACC;wBAAOD,IAAI,CAACG,IAAI,wBAnB3CC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}