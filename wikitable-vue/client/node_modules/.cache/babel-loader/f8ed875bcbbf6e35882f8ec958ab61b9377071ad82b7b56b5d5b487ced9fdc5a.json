{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const isLoading = ref(false);\n\n    // 数据状态管理\n    const dataState = ref({\n      div1: {\n        loaded: false,\n        data: null\n      },\n      div3: {\n        loaded: false,\n        data: null\n      },\n      lastComparedField: null\n    });\n\n    // 监听infobox数据\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        dataState.value.div1 = {\n          loaded: true,\n          data\n        };\n        console.log(\"div1 infobox loaded:\", data);\n        attemptAutoCompare();\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        dataState.value.div3 = {\n          loaded: true,\n          data\n        };\n        console.log(\"div3 infobox loaded:\", data);\n        attemptAutoCompare();\n      });\n    });\n\n    // 检查数据是否就绪\n    const isDataReady = () => {\n      return dataState.value.div1.loaded && dataState.value.div3.loaded;\n    };\n\n    // 自动尝试首次对比\n    const attemptAutoCompare = () => {\n      if (isDataReady() && !dataState.value.lastComparedField) {\n        // 这里可以设置默认对比字段或从CompareTable获取\n        const defaultField = \"GDP\"; // 示例默认字段\n        handleAttributeComparison({\n          fieldKey: defaultField,\n          leftTitle: \"左侧\",\n          rightTitle: \"右侧\"\n        });\n      }\n    };\n\n    // 属性对比方法（仅传单个属性）\n    const handleAttributeComparison = async params => {\n      if (!isDataReady()) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"数据加载中，请稍候...\",\n          timestamp: new Date().toLocaleString(),\n          isTemp: true\n        });\n        return;\n      }\n\n      // 清除临时消息\n      chatHistory.value = chatHistory.value.filter(msg => !msg.isTemp);\n      isLoading.value = true;\n      dataState.value.lastComparedField = params.fieldKey;\n      try {\n        // 仅提取需要对比的单个属性值\n        const leftValue = extractFieldValue(dataState.value.div1.data, params.fieldKey);\n        const rightValue = extractFieldValue(dataState.value.div3.data, params.fieldKey);\n        const response = await api.post(\"compare_attributes\", {\n          fieldKey: params.fieldKey,\n          leftValue,\n          rightValue,\n          leftTitle: params.leftTitle,\n          rightTitle: params.rightTitle\n        });\n        if (response?.analysis) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: response.analysis,\n            timestamp: new Date().toLocaleString(),\n            isComparisonResult: true\n          });\n        }\n      } catch (error) {\n        showError(`对比分析失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 提取字段值（处理嵌套结构）\n    const extractFieldValue = (infoboxData, fieldKey) => {\n      if (!infoboxData?.sections) return null;\n\n      // 遍历所有section查找字段\n      for (const section in infoboxData.sections) {\n        if (infoboxData.sections[section][fieldKey]) {\n          const fieldData = infoboxData.sections[section][fieldKey];\n          return Array.isArray(fieldData) ? fieldData.map(item => item.value).join(\", \") : fieldData.value;\n        }\n      }\n      return null;\n    };\n\n    // 提问方法（传完整infobox）\n    const askQuestion = async () => {\n      if (!isDataReady()) {\n        showError(\"请等待信息框数据加载完成\");\n        return;\n      }\n      const question = userQuestion.value.trim();\n      if (!question) {\n        showError(\"问题不能为空\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      isLoading.value = true;\n      try {\n        const isFollowUp = question.includes(\"结合其余\") || question.includes(\"分析原因\");\n        const response = await api.post(\"ask_infobox\", {\n          question,\n          isFollowUp,\n          currentField: isFollowUp ? dataState.value.lastComparedField : null,\n          leftInfobox: isFollowUp ? dataState.value.div1.data : null,\n          rightInfobox: isFollowUp ? dataState.value.div3.data : null\n        });\n        if (response?.answer) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: response.answer,\n            timestamp: new Date().toLocaleString()\n          });\n        }\n      } catch (error) {\n        showError(`请求失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 快捷追问按钮\n    const quickFollowUp = () => {\n      userQuestion.value = \"结合其余对比属性，分析其原因\";\n      askQuestion();\n    };\n    const showError = message => {\n      chatHistory.value.push({\n        role: \"assistant\",\n        content: message,\n        timestamp: new Date().toLocaleString(),\n        error: true\n      });\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      isLoading,\n      dataState,\n      isDataReady,\n      attemptAutoCompare,\n      handleAttributeComparison,\n      extractFieldValue,\n      askQuestion,\n      quickFollowUp,\n      showError,\n      ref,\n      onMounted,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","bus","CompareTable","userQuestion","chatHistory","isLoading","dataState","div1","loaded","data","div3","lastComparedField","on","value","console","log","attemptAutoCompare","isDataReady","defaultField","handleAttributeComparison","fieldKey","leftTitle","rightTitle","params","push","role","content","timestamp","Date","toLocaleString","isTemp","filter","msg","leftValue","extractFieldValue","rightValue","response","api","post","analysis","isComparisonResult","error","showError","message","infoboxData","sections","section","fieldData","Array","isArray","map","item","join","askQuestion","question","trim","isFollowUp","includes","currentField","leftInfobox","rightInfobox","answer","quickFollowUp"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst isLoading = ref(false);\r\n\r\n\t// 数据状态管理\r\n\tconst dataState = ref({\r\n\t\tdiv1: { loaded: false, data: null },\r\n\t\tdiv3: { loaded: false, data: null },\r\n\t\tlastComparedField: null\r\n\t});\r\n\r\n\t// 监听infobox数据\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdataState.value.div1 = { loaded: true, data };\r\n\t\t\tconsole.log(\"div1 infobox loaded:\", data);\r\n\t\t\tattemptAutoCompare();\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdataState.value.div3 = { loaded: true, data };\r\n\t\t\tconsole.log(\"div3 infobox loaded:\", data);\r\n\t\t\tattemptAutoCompare();\r\n\t\t});\r\n\t});\r\n\r\n\t// 检查数据是否就绪\r\n\tconst isDataReady = () => {\r\n\t\treturn dataState.value.div1.loaded && dataState.value.div3.loaded;\r\n\t};\r\n\r\n\t// 自动尝试首次对比\r\n\tconst attemptAutoCompare = () => {\r\n\t\tif (isDataReady() && !dataState.value.lastComparedField) {\r\n\t\t\t// 这里可以设置默认对比字段或从CompareTable获取\r\n\t\t\tconst defaultField = \"GDP\"; // 示例默认字段\r\n\t\t\thandleAttributeComparison({\r\n\t\t\t\tfieldKey: defaultField,\r\n\t\t\t\tleftTitle: \"左侧\",\r\n\t\t\t\trightTitle: \"右侧\"\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// 属性对比方法（仅传单个属性）\r\n\tconst handleAttributeComparison = async params => {\r\n\t\tif (!isDataReady()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"数据加载中，请稍候...\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\tisTemp: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 清除临时消息\r\n\t\tchatHistory.value = chatHistory.value.filter(msg => !msg.isTemp);\r\n\r\n\t\tisLoading.value = true;\r\n\t\tdataState.value.lastComparedField = params.fieldKey;\r\n\r\n\t\ttry {\r\n\t\t\t// 仅提取需要对比的单个属性值\r\n\t\t\tconst leftValue = extractFieldValue(\r\n\t\t\t\tdataState.value.div1.data,\r\n\t\t\t\tparams.fieldKey\r\n\t\t\t);\r\n\t\t\tconst rightValue = extractFieldValue(\r\n\t\t\t\tdataState.value.div3.data,\r\n\t\t\t\tparams.fieldKey\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\tfieldKey: params.fieldKey,\r\n\t\t\t\tleftValue,\r\n\t\t\t\trightValue,\r\n\t\t\t\tleftTitle: params.leftTitle,\r\n\t\t\t\trightTitle: params.rightTitle\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.analysis) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: response.analysis,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\t\tisComparisonResult: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`对比分析失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 提取字段值（处理嵌套结构）\r\n\tconst extractFieldValue = (infoboxData, fieldKey) => {\r\n\t\tif (!infoboxData?.sections) return null;\r\n\r\n\t\t// 遍历所有section查找字段\r\n\t\tfor (const section in infoboxData.sections) {\r\n\t\t\tif (infoboxData.sections[section][fieldKey]) {\r\n\t\t\t\tconst fieldData = infoboxData.sections[section][fieldKey];\r\n\t\t\t\treturn Array.isArray(fieldData)\r\n\t\t\t\t\t? fieldData.map(item => item.value).join(\", \")\r\n\t\t\t\t\t: fieldData.value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 提问方法（传完整infobox）\r\n\tconst askQuestion = async () => {\r\n\t\tif (!isDataReady()) {\r\n\t\t\tshowError(\"请等待信息框数据加载完成\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value.trim();\r\n\t\tif (!question) {\r\n\t\t\tshowError(\"问题不能为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tconst isFollowUp =\r\n\t\t\t\tquestion.includes(\"结合其余\") || question.includes(\"分析原因\");\r\n\r\n\t\t\tconst response = await api.post(\"ask_infobox\", {\r\n\t\t\t\tquestion,\r\n\t\t\t\tisFollowUp,\r\n\t\t\t\tcurrentField: isFollowUp ? dataState.value.lastComparedField : null,\r\n\t\t\t\tleftInfobox: isFollowUp ? dataState.value.div1.data : null,\r\n\t\t\t\trightInfobox: isFollowUp ? dataState.value.div3.data : null\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.answer) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: response.answer,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`请求失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 快捷追问按钮\r\n\tconst quickFollowUp = () => {\r\n\t\tuserQuestion.value = \"结合其余对比属性，分析其原因\";\r\n\t\taskQuestion();\r\n\t};\r\n\r\n\tconst showError = message => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: message,\r\n\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\terror: true\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.message-meta {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #999;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tposition: sticky;\r\n\t\tbottom: 0;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:disabled {\r\n\t\tbackground-color: #eee;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\tbackground-color: #45a049;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\tbutton:active:not(:disabled) {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}