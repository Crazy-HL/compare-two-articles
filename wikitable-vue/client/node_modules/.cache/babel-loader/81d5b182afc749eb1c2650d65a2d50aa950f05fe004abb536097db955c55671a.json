{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createTextVNode as _createTextVNode, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  class: \"message-content\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"-viscontainer\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"status-message loading\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-loading\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 1,\n  class: \"status-message error\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-error\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"input-container\"\n};\nconst _hoisted_11 = {\n  class: \"button-container\"\n};\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", {\n    class: \"chat-container\",\n    onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleDrop && _ctx.handleDrop(...arguments);\n    })\n  }, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_4)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 视觉内容容器 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 状态显示 \"), $setup.tableState.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createTextVNode(\" 表格数据处理中... \")])) : _createCommentVNode(\"v-if\", true), $setup.tableState.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createTextVNode(\" \" + _toDisplayString($setup.tableState.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"CompareTable\"], {\n    ref: \"compareTable\",\n    \"div1-raw-data\": $setup.div1RawData,\n    \"div3-raw-data\": $setup.div3RawData,\n    onTablesReady: $setup.handleTablesReady,\n    onProcessingError: $setup.handleProcessingError\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\"]), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: $setup.compareTableAttributes,\n    disabled: $setup.tableState.loading || !$setup.tableState.data,\n    class: _normalizeClass({\n      loading: $setup.tableState.loading\n    })\n  }, _toDisplayString($setup.tableState.loading ? \"分析中...\" : \"分析表格属性\"), 11 /* TEXT, CLASS, PROPS */, _hoisted_12)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","onDragover","_cache","_withModifiers","onDrop","_ctx","handleDrop","arguments","_hoisted_2","_Fragment","_renderList","$setup","chatHistory","message","index","_normalizeClass","role","_hoisted_3","_toDisplayString","innerHTML","content","_hoisted_4","_hoisted_5","tableState","loading","_hoisted_6","_hoisted_7","_createTextVNode","error","_hoisted_8","_hoisted_9","_createVNode","ref","div1RawData","div3RawData","onTablesReady","handleTablesReady","onProcessingError","handleProcessingError","_hoisted_10","$event","userQuestion","rows","placeholder","_hoisted_11","onClick","askQuestion","compareTableAttributes","disabled","data","_hoisted_12"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"-viscontainer\">\r\n\t\t\t<!-- 状态显示 -->\r\n\t\t\t<div v-if=\"tableState.loading\" class=\"status-message loading\">\r\n\t\t\t\t<i class=\"el-icon-loading\"></i> 表格数据处理中...\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"tableState.error\" class=\"status-message error\">\r\n\t\t\t\t<i class=\"el-icon-error\"></i> {{ tableState.error }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<CompareTable\r\n\t\t\t\tref=\"compareTable\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@tables-ready=\"handleTablesReady\"\r\n\t\t\t\t@processing-error=\"handleProcessingError\" />\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t@click=\"compareTableAttributes\"\r\n\t\t\t\t\t\t:disabled=\"tableState.loading || !tableState.data\"\r\n\t\t\t\t\t\t:class=\"{ loading: tableState.loading }\">\r\n\t\t\t\t\t\t{{ tableState.loading ? \"分析中...\" : \"分析表格属性\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport api from \"@/js/api.js\"; // 确保api导入正确\r\n\r\n\t// 聊天相关状态\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\r\n\t// 表格相关状态\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst compareTable = ref(null);\r\n\r\n\t// 表格处理状态\r\n\tconst tableState = ref({\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t\tdata: null,\r\n\t\tlastUpdated: null\r\n\t});\r\n\r\n\t// 事件处理\r\n\tconst handleTablesReady = data => {\r\n\t\ttableState.value = {\r\n\t\t\tloading: false,\r\n\t\t\terror: null,\r\n\t\t\tdata: data,\r\n\t\t\tlastUpdated: new Date()\r\n\t\t};\r\n\t\tconsole.log(\"表格数据已准备:\", data);\r\n\t};\r\n\r\n\tconst handleProcessingError = error => {\r\n\t\ttableState.value = {\r\n\t\t\tloading: false,\r\n\t\t\terror: error,\r\n\t\t\tdata: null,\r\n\t\t\tlastUpdated: null\r\n\t\t};\r\n\t};\r\n\r\n\t// 比较表格属性\r\n\tconst compareTableAttributes = async () => {\r\n\t\t// 验证数据状态\r\n\t\tif (tableState.value.loading) {\r\n\t\t\talert(\"请等待当前操作完成\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet comparisonData = tableState.value.data;\r\n\r\n\t\t// 如果没有通过事件获取的数据，尝试直接从子组件获取\r\n\t\tif (!comparisonData && compareTable.value) {\r\n\t\t\tconst currentData = compareTable.value.getTableData();\r\n\t\t\tif (currentData.processingState.isProcessing) {\r\n\t\t\t\talert(\"表格数据正在处理中，请稍候\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (currentData.processingState.error) {\r\n\t\t\t\talert(`错误: ${currentData.processingState.error}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcomparisonData = {\r\n\t\t\t\ttable1: currentData.table1,\r\n\t\t\t\ttable2: currentData.table2,\r\n\t\t\t\tcommonAttributes: currentData.commonAttributes\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// 检查数据是否可用\r\n\t\tif (!comparisonData || !comparisonData.commonAttributes?.length) {\r\n\t\t\talert(\"没有可比较的公共属性\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 准备请求数据\r\n\t\tconst requestData = {\r\n\t\t\ttable1: comparisonData.table1,\r\n\t\t\ttable2: comparisonData.table2,\r\n\t\t\tcommonAttributes: comparisonData.commonAttributes\r\n\t\t};\r\n\r\n\t\t// 调用API\r\n\t\ttry {\r\n\t\t\ttableState.value.loading = true;\r\n\r\n\t\t\tconsole.log(\"发送请求数据:\", requestData); // 调试日志\r\n\r\n\t\t\tconst response = await api.post(\"compare_table_attributes\", requestData);\r\n\r\n\t\t\tconsole.log(\"收到响应:\", response); // 调试日志\r\n\r\n\t\t\tif (response.success) {\r\n\t\t\t\t// 显示总体信息\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(`\r\n          ### 表格对比结果\r\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\r\n          **比较属性**: ${response.results.length}个\r\n        `)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 显示每个属性的分析结果\r\n\t\t\t\tresponse.results.forEach(result => {\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formatAnalysisResult(`\r\n            ### ${result.attribute} 分析\r\n            ${result.analysis}\r\n          `)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"比较失败\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"API调用失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `表格比较失败: ${error.message || \"未知错误\"}`\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\ttableState.value.loading = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\r\n\t\t// 转换Markdown格式\r\n\t\ttext = text.replace(/### (.*?)\\n/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(\\d+\\.\\s+.*?)(<br>|$)/g, \"<li>$1</li>$2\");\r\n\t\ttext = text.replace(/-\\s+(.*?)(<br>|$)/g, \"<li>$1</li>$2\");\r\n\t\ttext = text.replace(/<li>.*?<\\/li>/g, match => `<ul>${match}</ul>`);\r\n\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 原有其他方法保持不变\r\n\tconst handleSelection = (data, source) => {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 添加到聊天历史\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\"gpt_ask\", {\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\t// 可以附加表格数据\r\n\t\t\t\ttableData: tableState.value.data\r\n\t\t\t});\r\n\r\n\t\t\tif (response.answer) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(response.answer)\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"未收到有效回答\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"提问失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `提问失败: ${error.message || \"未知错误\"}`\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tuserQuestion.value = \"\";\r\n\t\t}\r\n\t};\r\n\r\n\t// 初始化事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", data => handleSelection(data, \"div1\"));\r\n\t\tbus.on(\"div3_Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\");\r\n\t\tbus.off(\"div3_Event\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\r\n\t.status-message {\r\n\t\tpadding: 10px 15px;\r\n\t\tmargin: 10px 0;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 14px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.status-message i {\r\n\t\tmargin-right: 8px;\r\n\t}\r\n\r\n\t.status-message.loading {\r\n\t\tbackground-color: #f0f9ff;\r\n\t\tcolor: #409eff;\r\n\t\tborder: 1px solid #d9ecff;\r\n\t}\r\n\r\n\t.status-message.error {\r\n\t\tbackground-color: #fef0f0;\r\n\t\tcolor: #f56c6c;\r\n\t\tborder: 1px solid #fde2e2;\r\n\t}\r\n\r\n\t.button-container button.loading {\r\n\t\tposition: relative;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.button-container button.loading::after {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tmargin: -8px 0 0 -8px;\r\n\t\tborder: 2px solid transparent;\r\n\t\tborder-top-color: currentColor;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 0.8s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBAVjC;;EAmBOA,KAAK,EAAC;AAAe;;EAnB5BC,GAAA;EAqBkCD,KAAK,EAAC;;gEACpCE,mBAAA,CAA+B;EAA5BF,KAAK,EAAC;AAAiB;;EAtB9BC,GAAA;EAwBgCD,KAAK,EAAC;;gEAClCE,mBAAA,CAA6B;EAA1BF,KAAK,EAAC;AAAe;;EAWpBA,KAAK,EAAC;AAAiB;;EAKtBA,KAAK,EAAC;AAAkB;oBAzCjC;;uBACCG,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDLC,mBAAA,UAAa,EACbH,mBAAA,CAaM;IAbDF,KAAK,EAAC,gBAAgB;IAAEM,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAHvCC,cAAA,CAG8B,QAAiB;IAAEC,MAAI,EAAAF,MAAA,QAAAA,MAAA;MAAA,OAAEG,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAC,SAAA,CAAU;IAAA;MAC9DP,mBAAA,YAAe,EACfH,mBAAA,CAUM,OAVNW,UAUM,I,kBATLV,mBAAA,CAQMW,SAAA,QAdVC,WAAA,CAOgCC,MAAA,CAAAC,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBhB,mBAAA,CAQM;MANJF,GAAG,EAAEkB,KAAK;MACVnB,KAAK,EATXoB,eAAA,aASyBF,OAAO,CAACG,IAAI;QAChCnB,mBAAA,CAGM,OAHNoB,UAGM,GAFLpB,mBAAA,CAA8D,gBAAAqB,gBAAA,CAAnDL,OAAO,CAACG,IAAI,8BAA6B,GAAC,iBACrDnB,mBAAA,CAAgC;MAA7BsB,SAAwB,EAAhBN,OAAO,CAACO;4BAZzBC,UAAA,E;+DAkBErB,mBAAA,YAAe,EACfH,mBAAA,CAgCM,OAhCNyB,UAgCM,GA/BLtB,mBAAA,UAAa,EACFW,MAAA,CAAAY,UAAU,CAACC,OAAO,I,cAA7B1B,mBAAA,CAEM,OAFN2B,UAEM,GADLC,UAA+B,EAtBnCC,gBAAA,CAsBmC,cAChC,E,KAvBH3B,mBAAA,gBAwBcW,MAAA,CAAAY,UAAU,CAACK,KAAK,I,cAA3B9B,mBAAA,CAEM,OAFN+B,UAEM,GADLC,UAA6B,EAzBjCH,gBAAA,CAyBiC,GAAC,GAAAT,gBAAA,CAAGP,MAAA,CAAAY,UAAU,CAACK,KAAK,iB,KAzBrD5B,mBAAA,gBA4BG+B,YAAA,CAK6CpB,MAAA;IAJ5CqB,GAAG,EAAC,cAAc;IACjB,eAAa,EAAErB,MAAA,CAAAsB,WAAW;IAC1B,eAAa,EAAEtB,MAAA,CAAAuB,WAAW;IAC1BC,aAAY,EAAExB,MAAA,CAAAyB,iBAAiB;IAC/BC,iBAAgB,EAAE1B,MAAA,CAAA2B;+DAEpBtC,mBAAA,cAAiB,EACjBH,mBAAA,CAcM,OAdN0C,WAcM,G,gBAbL1C,mBAAA,CAGuC;IAxC3C,uBAAAK,MAAA,QAAAA,MAAA,MAAAsC,MAAA,IAsCc7B,MAAA,CAAA8B,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHhC,MAAA,CAAA8B,YAAY,E,GAGtB5C,mBAAA,CAQM,OARN+C,WAQM,GAPL/C,mBAAA,CAAwC;IAA/BgD,OAAK,EAAElC,MAAA,CAAAmC;EAAW,GAAE,IAAE,GAC/BjD,mBAAA,CAKS;IAJPgD,OAAK,EAAElC,MAAA,CAAAoC,sBAAsB;IAC7BC,QAAQ,EAAErC,MAAA,CAAAY,UAAU,CAACC,OAAO,KAAKb,MAAA,CAAAY,UAAU,CAAC0B,IAAI;IAChDtD,KAAK,EA9CZoB,eAAA;MAAAS,OAAA,EA8CyBb,MAAA,CAAAY,UAAU,CAACC;IAAO;sBAClCb,MAAA,CAAAY,UAAU,CAACC,OAAO,sDA/C3B0B,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}