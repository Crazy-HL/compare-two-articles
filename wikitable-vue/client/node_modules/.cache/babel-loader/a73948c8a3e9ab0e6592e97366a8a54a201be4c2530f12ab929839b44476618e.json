{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createVNode as _createVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"table-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_9 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_10 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"field-type\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell left-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell middle-column empty-cell\\\" data-v-ea6f3360></div><div class=\\\"cell right-column empty-cell\\\" data-v-ea6f3360></div>\", 9);\nconst _hoisted_24 = {\n  class: \"data-source-switcher\"\n};\nconst _hoisted_25 = {\n  class: \"modal-content\"\n};\nconst _hoisted_26 = {\n  class: \"modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 表头 \"), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.leftTitle), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.rightTitle), 1 /* TEXT */), _createCommentVNode(\" 数据行 \"), $setup.hasData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.displayFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.showFullChart(field.key, 'left')\n    }, [$setup.showInfoboxData ? (_openBlock(), _createBlock($setup[\"FieldVisualization\"], {\n      key: 0,\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization,\n      \"field-key\": field.key,\n      \"y-range\": field.visualization === 'bar-chart' ? $setup.getUnifiedYRange(field.key) : null,\n      \"compare-data\": $setup.getField($setup.rightInfobox, field.key)\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\", \"field-key\", \"y-range\", \"compare-data\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [$setup.hasDataForAttribute($setup.processedTable1, field.key) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode($setup[\"SparklineChart\"], {\n      data: $setup.processedTable1.timeSeriesData[field.key],\n      \"compare-data\": $setup.processedTable2.timeSeriesData[field.key],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.leftChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"无数据\"))], 64 /* STABLE_FRAGMENT */))], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(field.key), 1 /* TEXT */), $setup.showInfoboxData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString(field.typeLabel), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.showFullChart(field.key, 'right')\n    }, [$setup.showInfoboxData ? (_openBlock(), _createBlock($setup[\"FieldVisualization\"], {\n      key: 0,\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization,\n      \"field-key\": field.key,\n      \"y-range\": field.visualization === 'bar-chart' ? $setup.getUnifiedYRange(field.key) : null,\n      \"compare-data\": $setup.getField($setup.leftInfobox, field.key)\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\", \"field-key\", \"y-range\", \"compare-data\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [$setup.hasDataForAttribute($setup.processedTable2, field.key) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode($setup[\"SparklineChart\"], {\n      data: $setup.processedTable2.timeSeriesData[field.key],\n      \"compare-data\": $setup.processedTable1.timeSeriesData[field.key],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.rightChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \"无数据\"))], 64 /* STABLE_FRAGMENT */))], 8 /* PROPS */, _hoisted_12)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 空状态下的行 \"), _hoisted_15], 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 数据源切换按钮 \"), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showInfoboxData = true),\n    class: _normalizeClass({\n      active: $setup.showInfoboxData\n    })\n  }, \" Infobox数据 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.showInfoboxData = false),\n    class: _normalizeClass({\n      active: !$setup.showInfoboxData\n    })\n  }, \" 表格数据 \", 2 /* CLASS */)]), _createCommentVNode(\" 完整图表弹窗 \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.hideFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"h3\", null, _toDisplayString($setup.currentAttribute), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.hideFullChart,\n    class: \"close-button\"\n  }, \"×\")]), _createVNode($setup[\"FullChart\"], {\n    data: $setup.currentChartData,\n    title: $setup.currentAttribute,\n    side: $setup.currentSide\n  }, null, 8 /* PROPS */, [\"data\", \"title\", \"side\"])])])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","key","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","$setup","leftTitle","_hoisted_4","_hoisted_5","rightTitle","hasData","_Fragment","_renderList","displayFields","field","onClick","$event","showFullChart","showInfoboxData","_createBlock","getField","leftInfobox","type","visualization","getUnifiedYRange","rightInfobox","hasDataForAttribute","processedTable1","_hoisted_7","_createVNode","data","timeSeriesData","processedTable2","chartMaxWidth","chartMaxHeight","leftChartColor","_hoisted_8","_hoisted_6","_hoisted_9","_hoisted_10","_hoisted_11","typeLabel","_hoisted_13","rightChartColor","_hoisted_14","_hoisted_12","_hoisted_15","_hoisted_24","_cache","_normalizeClass","active","showFullChartModal","_withModifiers","hideFullChart","_hoisted_25","_hoisted_26","currentAttribute","currentChartData","title","side","currentSide"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t\tv-if=\"showInfoboxData\"\r\n\t\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t:compare-data=\"getField(rightInfobox, field.key)\" />\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, field.key)\">\r\n\t\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t\tv-if=\"showInfoboxData\"\r\n\t\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t:compare-data=\"getField(leftInfobox, field.key)\" />\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, field.key)\">\r\n\t\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click=\"showInfoboxData = true\"\r\n\t\t\t\t:class=\"{ active: showInfoboxData }\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"showInfoboxData = false\"\r\n\t\t\t\t:class=\"{ active: !showInfoboxData }\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:side=\"currentSide\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 数据源切换\r\n\tconst showInfoboxData = ref(true);\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 标题\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\t// 表格数据处理\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"表格1\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"表格2\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\r\n\t// Infobox数据处理\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 完整图表弹窗相关状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentChartData = ref({ type: \"line\", data: [] });\r\n\tconst currentSide = ref(\"left\");\r\n\r\n\t// 更新图表尺寸\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tconst containerWidth = containerRef.value.clientWidth;\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerWidth * 0.3);\r\n\t\t\tchartMaxHeight.value = 80;\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 初始化尺寸和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\t// 监听Infobox数据\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\t// Infobox处理函数\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 获取Infobox字段值\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 统一Y轴范围\r\n\tconst getUnifiedYRange = fieldKey => {\r\n\t\tconst leftData = getField(leftInfobox.value, fieldKey);\r\n\t\tconst rightData = getField(rightInfobox.value, fieldKey);\r\n\r\n\t\tconst extractValues = data => {\r\n\t\t\tif (!data) return [];\r\n\t\t\tif (Array.isArray(data))\r\n\t\t\t\treturn data.map(item => parseFloat(item?.value) || 0);\r\n\t\t\treturn [parseFloat(data?.value) || 0];\r\n\t\t};\r\n\r\n\t\tconst allValues = [\r\n\t\t\t...extractValues(leftData),\r\n\t\t\t...extractValues(rightData)\r\n\t\t].filter(v => !isNaN(v));\r\n\r\n\t\tif (allValues.length === 0) return [0, 1];\r\n\r\n\t\tconst max = Math.max(...allValues);\r\n\t\treturn [0, max * 1.2];\r\n\t};\r\n\r\n\t// 计算显示字段\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\t\treturn leftVal || rightVal;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst attrs1 = processedTable1.value.rows || [];\r\n\t\t\tconst attrs2 = processedTable2.value.rows || [];\r\n\t\t\tconst commonAttrs = attrs1.filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\tattrs2.includes(attr) &&\r\n\t\t\t\t\t(hasDataForAttribute(processedTable1.value, attr) ||\r\n\t\t\t\t\t\thasDataForAttribute(processedTable2.value, attr))\r\n\t\t\t);\r\n\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\",\r\n\t\t\t\tvisualization: \"line-chart\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn displayFields.value.length > 0;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\tprops.div1RawData &&\r\n\t\t\t\tprops.div3RawData &&\r\n\t\t\t\tprocessedTable1.value.columns.length > 0 &&\r\n\t\t\t\tprocessedTable2.value.columns.length > 0\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n\t// 表格对比相关函数\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst fieldData =\r\n\t\t\t\tside === \"left\"\r\n\t\t\t\t\t? getField(leftInfobox.value, attr)\r\n\t\t\t\t\t: getField(rightInfobox.value, attr);\r\n\r\n\t\t\tcurrentChartData.value = {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdata: Array.isArray(fieldData) ? fieldData : [fieldData]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tif (side === \"left\") {\r\n\t\t\t\tcurrentChartData.value = {\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tdata: processedTable1.value.timeSeriesData[attr] || []\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tcurrentChartData.value = {\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tdata: processedTable2.value.timeSeriesData[attr] || []\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tfunction parseTableToStandardJSON(html, defaultTitle = \"未命名表格\") {\r\n\t\t// ...保持原有parseTableToStandardJSON函数不变...\r\n\t}\r\n\r\n\tfunction smartValueConversion(rawValue) {\r\n\t\t// ...保持原有smartValueConversion函数不变...\r\n\t}\r\n\r\n\tfunction extractTitleFromHTML(html) {\r\n\t\t// ...保持原有extractTitleFromHTML函数不变...\r\n\t}\r\n\r\n\tfunction hasDataForAttribute(table, attr) {\r\n\t\treturn table.timeSeriesData[attr]?.length > 0;\r\n\t}\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}