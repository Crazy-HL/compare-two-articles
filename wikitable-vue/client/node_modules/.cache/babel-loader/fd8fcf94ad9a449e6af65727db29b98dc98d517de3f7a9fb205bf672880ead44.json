{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nexport default {\n  __name: 'Div3',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const url = ref(\"\"); // 用户输入的网址\n    const iframeSrc = ref(\"\"); // iframe 的 src 属性\n    const iframeRef = ref(null); // 用于引用 iframe 元素\n\n    // 当用户输入网址后，动态加载 iframe\n    const loadIframe = () => {\n      iframeSrc.value = url.value;\n    };\n\n    // 确保 iframe 已经完全加载\n    const onIframeLoad = () => {\n      // 在 iframe 加载后，再访问 contentWindow\n      if (iframeRef.value && iframeRef.value.contentWindow) {\n        const iframeDocument = iframeRef.value.contentWindow.document;\n\n        // 监听 iframe 内部的文本选择\n        iframeDocument.addEventListener(\"mouseup\", handleSelection, false);\n      }\n    };\n\n    // 处理选中的文本并进行高亮\n    const handleSelection = () => {\n      const iframeDocument = iframeRef.value.contentWindow.document;\n      const selection = iframeDocument.defaultView.getSelection();\n      if (selection.toString()) {\n        // 获取选中的文本\n        const selectedText = selection.toString();\n        console.log(\"选中的内容：\", selectedText);\n\n        // 高亮选中的文本\n        const range = selection.getRangeAt(0);\n        const span = document.createElement(\"span\");\n        span.style.backgroundColor = \"yellow\"; // 设置高亮颜色\n        range.surroundContents(span);\n      }\n    };\n\n    // 监听输入框的 URL 变化\n    watch(url, newUrl => {\n      iframeSrc.value = newUrl;\n    });\n    const __returned__ = {\n      url,\n      iframeSrc,\n      iframeRef,\n      loadIframe,\n      onIframeLoad,\n      handleSelection,\n      ref,\n      onMounted,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","url","iframeSrc","iframeRef","loadIframe","value","onIframeLoad","contentWindow","iframeDocument","document","addEventListener","handleSelection","selection","defaultView","getSelection","toString","selectedText","console","log","range","getRangeAt","span","createElement","style","backgroundColor","surroundContents","newUrl"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div3.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<input v-model=\"url\" placeholder=\"输入网址\" @change=\"loadIframe\" />\r\n\t\t<iframe\r\n\t\t\tref=\"iframe\"\r\n\t\t\tv-bind:src=\"iframeSrc\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\theight=\"500px\"\r\n\t\t\t@load=\"onIframeLoad\"\r\n\t\t\tstyle=\"border: none\"></iframe>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\r\n\tconst url = ref(\"\"); // 用户输入的网址\r\n\tconst iframeSrc = ref(\"\"); // iframe 的 src 属性\r\n\tconst iframeRef = ref(null); // 用于引用 iframe 元素\r\n\r\n\t// 当用户输入网址后，动态加载 iframe\r\n\tconst loadIframe = () => {\r\n\t\tiframeSrc.value = url.value;\r\n\t};\r\n\r\n\t// 确保 iframe 已经完全加载\r\n\tconst onIframeLoad = () => {\r\n\t\t// 在 iframe 加载后，再访问 contentWindow\r\n\t\tif (iframeRef.value && iframeRef.value.contentWindow) {\r\n\t\t\tconst iframeDocument = iframeRef.value.contentWindow.document;\r\n\r\n\t\t\t// 监听 iframe 内部的文本选择\r\n\t\t\tiframeDocument.addEventListener(\"mouseup\", handleSelection, false);\r\n\t\t}\r\n\t};\r\n\r\n\t// 处理选中的文本并进行高亮\r\n\tconst handleSelection = () => {\r\n\t\tconst iframeDocument = iframeRef.value.contentWindow.document;\r\n\t\tconst selection = iframeDocument.defaultView.getSelection();\r\n\r\n\t\tif (selection.toString()) {\r\n\t\t\t// 获取选中的文本\r\n\t\t\tconst selectedText = selection.toString();\r\n\t\t\tconsole.log(\"选中的内容：\", selectedText);\r\n\r\n\t\t\t// 高亮选中的文本\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst span = document.createElement(\"span\");\r\n\t\t\tspan.style.backgroundColor = \"yellow\"; // 设置高亮颜色\r\n\t\t\trange.surroundContents(span);\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听输入框的 URL 变化\r\n\twatch(url, newUrl => {\r\n\t\tiframeSrc.value = newUrl;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\tpadding: 10px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\tiframe {\r\n\t\twidth: 100%;\r\n\t\theight: 500px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAcC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;;;;;;;;IAE3C,MAAMC,GAAG,GAAGH,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,MAAMI,SAAS,GAAGJ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,MAAMK,SAAS,GAAGL,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE7B;IACA,MAAMM,UAAU,GAAGA,CAAA,KAAM;MACxBF,SAAS,CAACG,KAAK,GAAGJ,GAAG,CAACI,KAAK;IAC5B,CAAC;;IAED;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MAC1B;MACA,IAAIH,SAAS,CAACE,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACE,aAAa,EAAE;QACrD,MAAMC,cAAc,GAAGL,SAAS,CAACE,KAAK,CAACE,aAAa,CAACE,QAAQ;;QAE7D;QACAD,cAAc,CAACE,gBAAgB,CAAC,SAAS,EAAEC,eAAe,EAAE,KAAK,CAAC;MACnE;IACD,CAAC;;IAED;IACA,MAAMA,eAAe,GAAGA,CAAA,KAAM;MAC7B,MAAMH,cAAc,GAAGL,SAAS,CAACE,KAAK,CAACE,aAAa,CAACE,QAAQ;MAC7D,MAAMG,SAAS,GAAGJ,cAAc,CAACK,WAAW,CAACC,YAAY,CAAC,CAAC;MAE3D,IAAIF,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAE;QACzB;QACA,MAAMC,YAAY,GAAGJ,SAAS,CAACG,QAAQ,CAAC,CAAC;QACzCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,YAAY,CAAC;;QAEnC;QACA,MAAMG,KAAK,GAAGP,SAAS,CAACQ,UAAU,CAAC,CAAC,CAAC;QACrC,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,aAAa,CAAC,MAAM,CAAC;QAC3CD,IAAI,CAACE,KAAK,CAACC,eAAe,GAAG,QAAQ,CAAC,CAAC;QACvCL,KAAK,CAACM,gBAAgB,CAACJ,IAAI,CAAC;MAC7B;IACD,CAAC;;IAED;IACArB,KAAK,CAACC,GAAG,EAAEyB,MAAM,IAAI;MACpBxB,SAAS,CAACG,KAAK,GAAGqB,MAAM;IACzB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}