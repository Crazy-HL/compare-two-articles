{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-history\"\n};\nconst _hoisted_4 = {\n  class: \"message-content\"\n};\nconst _hoisted_5 = {\n  class: \"vis-container\"\n};\nconst _hoisted_6 = {\n  ref: \"chart\",\n  class: \"chart-container\"\n};\nconst _hoisted_7 = {\n  class: \"input-container\"\n};\nconst _hoisted_8 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(message.content), 1 /* TEXT */)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 视觉内容容器 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 图表容器 \"), _createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    })\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return _ctx.compareTexts && _ctx.compareTexts(...arguments);\n    })\n  }, \"对比文章\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return _ctx.mergedJson && _ctx.mergedJson(...arguments);\n    }),\n    class: \"submit-btn\"\n  }, \"合并数据可视化\")])])])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","chatHistory","message","index","key","_normalizeClass","role","_hoisted_4","_toDisplayString","content","_hoisted_5","_hoisted_6","_hoisted_7","_cache","$event","userQuestion","rows","placeholder","_hoisted_8","onClick","_ctx","askQuestion","arguments","compareTexts","mergedJson"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 图表容器 -->\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"submit-btn\">合并数据可视化</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\"); // 用户输入的问题\r\n\tconst chatHistory = ref([]); // 历史对话记录\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\r\n\tonMounted(() => {\r\n\t\t// 监听来自 Div1 和 Div3 的图表交互事件\r\n\t\tbus.on(\"chartInteraction\", eventData => {\r\n\t\t\tif (eventData.source === \"div1\" || eventData.source === \"div3\") {\r\n\t\t\t\t// 根据 eventData.data 更新 Div2 的图表\r\n\t\t\t\tupdateChart(eventData.data);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"chartInteraction\");\r\n\t});\r\n\r\n\t// 更新图表\r\n\tfunction updateChart(data) {\r\n\t\tconst chartContainer = document.querySelector(\".chart-container\");\r\n\t\tif (!chartContainer) return;\r\n\r\n\t\t// 高亮对应的数据点\r\n\t\tconst bars = chartContainer.querySelectorAll(\".bar\");\r\n\t\tbars.forEach(bar => {\r\n\t\t\tif (bar.__data__ === data) {\r\n\t\t\t\tbar.style.fill = \"orange\"; // 高亮颜色\r\n\t\t\t} else {\r\n\t\t\t\tbar.style.fill = \"steelblue\"; // 默认颜色\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%; /* 固定宽度 */\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\t/* max-height: 200px; */\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 视觉内容容器 */\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1; /* 按钮宽度占满容器 */\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\t/* 新增提交按钮样式 */\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t.submit-btn:hover {\r\n\t\tbackground-color: #fb8c00;\r\n\t}\r\n\r\n\t.submit-btn:active {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;;EAS1BA,KAAK,EAAC;AAAe;;EAEpBC,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC;;;EAGlBA,KAAK,EAAC;AAAiB;;EAKtBA,KAAK,EAAC;AAAkB;;uBA5BhCE,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCLC,mBAAA,UAAa,EACbC,mBAAA,CAaM,OAbNC,UAaM,GAZLF,mBAAA,YAAe,EACfC,mBAAA,CAUM,OAVNE,UAUM,I,kBATLL,mBAAA,CAQMM,SAAA,QAdVC,WAAA,CAOgCC,MAAA,CAAAC,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBX,mBAAA,CAQM;MANJY,GAAG,EAAED,KAAK;MACVb,KAAK,EATXe,eAAA,aASyBH,OAAO,CAACI,IAAI;QAChCX,mBAAA,CAGM,OAHNY,UAGM,GAFLZ,mBAAA,CAA8D,gBAAAa,gBAAA,CAAnDN,OAAO,CAACI,IAAI,8BAA6B,GAAC,iBACrDX,mBAAA,CAA4B,WAAAa,gBAAA,CAAtBN,OAAO,CAACO,OAAO,iB;sCAMzBf,mBAAA,YAAe,EACfC,mBAAA,CAgBM,OAhBNe,UAgBM,GAfLhB,mBAAA,UAAa,EACbC,mBAAA,CAA+C,OAA/CgB,UAA+C,+BAE/CjB,mBAAA,cAAiB,EACjBC,mBAAA,CAUM,OAVNiB,UAUM,G,gBATLjB,mBAAA,CAGuC;IA5B3C,uBAAAkB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0Bcd,MAAA,CAAAe,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHjB,MAAA,CAAAe,YAAY,E,GAGtBpB,mBAAA,CAIM,OAJNuB,UAIM,GAHLvB,mBAAA,CAAwC;IAA/BwB,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEO,IAAA,CAAAC,WAAA,IAAAD,IAAA,CAAAC,WAAA,IAAAC,SAAA,CAAW;IAAA;KAAE,IAAE,GAC/B3B,mBAAA,CAA2C;IAAlCwB,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEO,IAAA,CAAAG,YAAA,IAAAH,IAAA,CAAAG,YAAA,IAAAD,SAAA,CAAY;IAAA;KAAE,MAAI,GAClC3B,mBAAA,CAA+D;IAAtDwB,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEO,IAAA,CAAAI,UAAA,IAAAJ,IAAA,CAAAI,UAAA,IAAAF,SAAA,CAAU;IAAA;IAAEhC,KAAK,EAAC;KAAa,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}