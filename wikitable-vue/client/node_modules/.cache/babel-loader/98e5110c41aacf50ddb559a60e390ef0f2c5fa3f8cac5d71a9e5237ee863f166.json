{"ast":null,"code":"import { ref, onMounted, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\"; // 事件总线\n\nexport default {\n  __name: 'WikipediaViewer',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const pageTitle = ref(\"LeBron James\");\n    const pageHtml = ref(\"\");\n    const loading = ref(true);\n    const error = ref(\"\");\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        // Wikipedia JSON API（避免 `rest_v1` 跨域问题）\n        const apiUrl = `https://en.wikipedia.org/w/api.php?action=parse&page=${encodeURIComponent(pageTitle.value)}&format=json&origin=*`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const data = await response.json();\n        pageHtml.value = data.parse.text[\"*\"]; // Wikipedia 返回的 HTML\n\n        // **动态加载 Wikipedia 样式**\n        injectWikipediaStyles();\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **手动引入 Wikipedia CSS**\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // **选中文本高亮**\n    const handleTextSelection = () => {\n      const selection = window.getSelection().toString().trim();\n      if (selection) {\n        console.log(\"选中的内容:\", selection);\n        bus.emit(\"div1Event\", selection);\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(async () => {\n      await fetchWikipediaContent();\n      nextTick(() => {\n        // **如果 MouseSelection 需要手动初始化，这里执行**\n        // MouseSelection.start({ rangeSelector: \".selectContent1\", customId: \"div1\" });\n\n        // 绑定 `mouseup` 事件，支持高亮文本\n        document.querySelector(\"#div1\")?.addEventListener(\"mouseup\", handleTextSelection);\n      });\n    });\n    const __returned__ = {\n      pageTitle,\n      pageHtml,\n      loading,\n      error,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      handleTextSelection,\n      ref,\n      onMounted,\n      nextTick,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","bus","pageTitle","pageHtml","loading","error","fetchWikipediaContent","apiUrl","encodeURIComponent","value","response","fetch","ok","Error","data","json","parse","text","injectWikipediaStyles","err","message","wikipediaStyles","forEach","url","document","querySelector","styleTag","createElement","rel","href","head","appendChild","handleTextSelection","selection","window","getSelection","toString","trim","console","log","emit","addEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/WikipediaViewer.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0 selectContent1\" id=\"div1\">\r\n\t\t<div v-if=\"loading\">Loading...</div>\r\n\t\t<div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tref=\"content\"\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleTextSelection\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\"; // 事件总线\r\n\r\n\tconst pageTitle = ref(\"LeBron James\");\r\n\tconst pageHtml = ref(\"\");\r\n\tconst loading = ref(true);\r\n\tconst error = ref(\"\");\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\t// Wikipedia JSON API（避免 `rest_v1` 跨域问题）\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/w/api.php?action=parse&page=${encodeURIComponent(\r\n\t\t\t\tpageTitle.value\r\n\t\t\t)}&format=json&origin=*`;\r\n\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tpageHtml.value = data.parse.text[\"*\"]; // Wikipedia 返回的 HTML\r\n\r\n\t\t\t// **动态加载 Wikipedia 样式**\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **选中文本高亮**\r\n\tconst handleTextSelection = () => {\r\n\t\tconst selection = window.getSelection().toString().trim();\r\n\t\tif (selection) {\r\n\t\t\tconsole.log(\"选中的内容:\", selection);\r\n\t\t\tbus.emit(\"div1Event\", selection);\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(async () => {\r\n\t\tawait fetchWikipediaContent();\r\n\r\n\t\tnextTick(() => {\r\n\t\t\t// **如果 MouseSelection 需要手动初始化，这里执行**\r\n\t\t\t// MouseSelection.start({ rangeSelector: \".selectContent1\", customId: \"div1\" });\r\n\r\n\t\t\t// 绑定 `mouseup` 事件，支持高亮文本\r\n\t\t\tdocument\r\n\t\t\t\t.querySelector(\"#div1\")\r\n\t\t\t\t?.addEventListener(\"mouseup\", handleTextSelection);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **Wikipedia 内容容器** */\r\n\t#div1 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #ccc;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* **维基百科样式增强** */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\r\n\t/* **选中文本的高亮样式** */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n\r\n\t/* **表格样式** */\r\n\t.wikipedia-content table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #ddd;\r\n\t}\r\n\r\n\t.wikipedia-content th,\r\n\t.wikipedia-content td {\r\n\t\tborder: 1px solid #ddd;\r\n\t\tpadding: 8px;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.wikipedia-content th {\r\n\t\tbackground-color: #f2f2f2;\r\n\t}\r\n\r\n\t/* **错误信息** */\r\n\t.error {\r\n\t\tcolor: red;\r\n\t\tfont-weight: bold;\r\n\t}\r\n</style>\r\n"],"mappings":"AAcC,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,GAAG,MAAM,kBAAkB,CAAC,CAAC;;;;;;;;;IAEpC,MAAMC,SAAS,GAAGJ,GAAG,CAAC,cAAc,CAAC;IACrC,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,KAAK,GAAGP,GAAG,CAAC,EAAE,CAAC;;IAErB;IACA,MAAMQ,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH;QACA,MAAMC,MAAM,GAAG,wDAAwDC,kBAAkB,CACxFN,SAAS,CAACO,KACX,CAAC,uBAAuB;QAExB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAACM,KAAK,GAAGK,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEvC;QACAC,qBAAqB,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACbd,KAAK,CAACI,KAAK,GAAG,oCAAoC,GAAGU,GAAG,CAACC,OAAO;MACjE,CAAC,SAAS;QACThB,OAAO,CAACK,KAAK,GAAG,KAAK;MACtB;IACD,CAAC;;IAED;IACA,MAAMS,qBAAqB,GAAGA,CAAA,KAAM;MACnC,MAAMG,eAAe,GAAG,CACvB,yDAAyD,EACzD,6DAA6D,EAC7D,kEAAkE,EAClE,iEAAiE,CACjE;MAEDA,eAAe,CAACC,OAAO,CAACC,GAAG,IAAI;QAC9B,IAAI,CAACC,QAAQ,CAACC,aAAa,CAAC,cAAcF,GAAG,IAAI,CAAC,EAAE;UACnD,MAAMG,QAAQ,GAAGF,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;UAC/CD,QAAQ,CAACE,GAAG,GAAG,YAAY;UAC3BF,QAAQ,CAACG,IAAI,GAAGN,GAAG;UACnBC,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACL,QAAQ,CAAC;QACpC;MACD,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;MACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACzD,IAAIJ,SAAS,EAAE;QACdK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,SAAS,CAAC;QAChChC,GAAG,CAACuC,IAAI,CAAC,WAAW,EAAEP,SAAS,CAAC;MACjC;IACD,CAAC;;IAED;IACAlC,SAAS,CAAC,YAAY;MACrB,MAAMO,qBAAqB,CAAC,CAAC;MAE7BN,QAAQ,CAAC,MAAM;QACd;QACA;;QAEA;QACAwB,QAAQ,CACNC,aAAa,CAAC,OAAO,CAAC,EACrBgB,gBAAgB,CAAC,SAAS,EAAET,mBAAmB,CAAC;MACpD,CAAC,CAAC;IACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}