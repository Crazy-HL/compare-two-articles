{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62c843dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoadingSpinner = _resolveComponent(\"LoadingSpinner\");\n  const _component_ErrorDisplay = _resolveComponent(\"ErrorDisplay\");\n  const _component_WikipediaContent = _resolveComponent(\"WikipediaContent\");\n  const _component_TextPopup = _resolveComponent(\"TextPopup\");\n  const _component_ArticleOutline = _resolveComponent(\"ArticleOutline\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', _ctx.selectContentClass]),\n    id: _ctx.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.props.pageTitle), 1 /* TEXT */), _ctx.loading ? (_openBlock(), _createBlock(_component_LoadingSpinner, {\n    key: 0\n  })) : _ctx.error ? (_openBlock(), _createBlock(_component_ErrorDisplay, {\n    key: 1,\n    message: _ctx.error,\n    onRetry: _ctx.fetchWikipediaContent\n  }, null, 8 /* PROPS */, [\"message\", \"onRetry\"])) : (_openBlock(), _createBlock(_component_WikipediaContent, {\n    key: 2,\n    content: _ctx.pageHtml,\n    onSelect: $setup.handleSelection\n  }, null, 8 /* PROPS */, [\"content\"])), _createVNode(_component_TextPopup, {\n    visible: _ctx.showPopup[_ctx.divId],\n    content: _ctx.selectedText[_ctx.divId],\n    containerClass: _ctx.divId === 'div1' ? 'chart-container1' : 'chart-container2',\n    containerRef: _ctx.divRef,\n    onClose: _ctx.closePopup\n  }, null, 8 /* PROPS */, [\"visible\", \"content\", \"containerClass\", \"containerRef\", \"onClose\"]), _createVNode(_component_ArticleOutline, {\n    content: _ctx.pageHtml,\n    divId: _ctx.divId\n  }, null, 8 /* PROPS */, [\"content\", \"divId\"])], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","_ctx","selectContentClass","id","divId","ref","_createElementVNode","_toDisplayString","props","pageTitle","loading","_createBlock","_component_LoadingSpinner","key","error","_component_ErrorDisplay","message","onRetry","fetchWikipediaContent","_component_WikipediaContent","content","pageHtml","onSelect","$setup","handleSelection","_createVNode","_component_TextPopup","visible","showPopup","selectedText","containerClass","containerRef","divRef","onClose","closePopup","_component_ArticleOutline","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ props.pageTitle }}</h1>\r\n\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport CausalFlowChart from \"@/components/compoents_base/CausalFlowChart.vue\";\r\n\timport { FIELD_MAPPING } from \"@/utils/fieldMapping\";\r\n\r\n\tconst PRESERVED_FIELDS_BY_SECTION = {\r\n\t\tStatistics: [\r\n\t\t\t\"Population\",\r\n\t\t\t\"GDP\",\r\n\t\t\t\"GDP rank\",\r\n\t\t\t\"GDP growth\",\r\n\t\t\t\"GDP per capita\",\r\n\t\t\t\"GDP per capita rank\",\r\n\t\t\t\"GDP by sector\",\r\n\t\t\t\"Inflation (CPI)\",\r\n\t\t\t\"Population below poverty line\",\r\n\t\t\t\"Gini coefficient\",\r\n\t\t\t\"Human Development Index\",\r\n\t\t\t\"Corruption Perceptions Index\",\r\n\t\t\t\"Labor force\",\r\n\t\t\t\"Labor force by occupation\",\r\n\t\t\t\"Unemployment\",\r\n\t\t\t\"Average gross salary\",\r\n\t\t\t\"Average net salary\",\r\n\t\t\t\"Main industries\"\r\n\t\t],\r\n\t\t\"Public finances\": [\r\n\t\t\t\"Government debt\",\r\n\t\t\t\"Foreign reserves\",\r\n\t\t\t\"Budget balance\",\r\n\t\t\t\"Revenues\",\r\n\t\t\t\"Expenses\",\r\n\t\t\t\"Economic aid\",\r\n\t\t\t\"Credit rating\"\r\n\t\t]\r\n\t};\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\tconst showSuggestedQuestion = ref(false);\r\n\tconst suggestedQuestion = ref(\"\");\r\n\tconst currentFieldKey = ref(\"\");\r\n\tconst leftData = ref(null);\r\n\tconst rightData = ref(null);\r\n\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) container.scrollTop = container.scrollHeight;\r\n\t\t});\r\n\t};\r\n\r\n\tconst getLastAnalysis = () => {\r\n\t\tconst reversed = [...chatHistory.value].reverse();\r\n\t\tconst lastAssistantMsg = reversed.find(\r\n\t\t\tmsg => msg.role === \"assistant\" && !msg.error\r\n\t\t);\r\n\t\treturn lastAssistantMsg ? lastAssistantMsg.content : \"\";\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => (div1InfoboxData.value = data));\r\n\t\tbus.on(\"div3_InfoboxData\", data => (div3InfoboxData.value = data));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\treturn text\r\n\t\t\t.replace(/^# (.*$)/gm, \"<h1>$1</h1>\")\r\n\t\t\t.replace(/^## (.*$)/gm, \"<h2>$1</h2>\")\r\n\t\t\t.replace(/^### (.*$)/gm, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\r\n\t\t\t.replace(/`(.*?)`/g, \"<code>$1</code>\")\r\n\t\t\t.replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">')\r\n\t\t\t.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>')\r\n\t\t\t.replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\")\r\n\t\t\t.replace(/\\n\\n/g, \"<br><br>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\");\r\n\t};\r\n\r\n\tconst extractEssentialData = fieldData => {\r\n\t\tif (!fieldData) return null;\r\n\t\tconst essential = { value: fieldData.value, type: fieldData.type };\r\n\t\tif (fieldData.unit) essential.unit = fieldData.unit;\r\n\t\tif (fieldData.currency) essential.currency = fieldData.currency;\r\n\t\tif (fieldData.extracted) essential.raw = fieldData.raw;\r\n\t\treturn essential;\r\n\t};\r\n\r\n\tconst simplifyInfobox = infobox => {\r\n\t\tif (!infobox) return {};\r\n\t\tconst result = { title: infobox.title, type: infobox.type };\r\n\r\n\t\tif (infobox.sections) {\r\n\t\t\tresult.sections = {};\r\n\t\t\tObject.entries(infobox.sections).forEach(([sectionName, sectionData]) => {\r\n\t\t\t\tif (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\r\n\t\t\t\t\tresult.sections[sectionName] = {};\r\n\t\t\t\t\tPRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\r\n\t\t\t\t\t\tif (sectionData[fieldName]) {\r\n\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = Array.isArray(\r\n\t\t\t\t\t\t\t\tsectionData[fieldName]\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t? sectionData[fieldName].map(item => extractEssentialData(item))\r\n\t\t\t\t\t\t\t\t: extractEssentialData(sectionData[fieldName]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst parseCausalChains = text => {\r\n\t\tif (!text) return [];\r\n\t\tconst chains = [];\r\n\t\tconst countries = text.split(\"##\").filter(s => s.trim());\r\n\r\n\t\tcountries.forEach(countrySection => {\r\n\t\t\tconst countryMatch = countrySection.match(/(韩国|日本)/);\r\n\t\t\tif (!countryMatch) return;\r\n\r\n\t\t\tconst country = countryMatch[0] === \"韩国\" ? \"korea\" : \"japan\";\r\n\t\t\tconst chainContent = countrySection.replace(/^.*?\\n/, \"\").trim();\r\n\r\n\t\t\tconst steps = chainContent\r\n\t\t\t\t.split(\"→\")\r\n\t\t\t\t.map(step => {\r\n\t\t\t\t\tconst cleanStep = step.trim();\r\n\t\t\t\t\tconst evidenceMatch = cleanStep.match(/\\((.*?)\\)/);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: evidenceMatch\r\n\t\t\t\t\t\t\t? cleanStep.replace(evidenceMatch[0], \"\").trim()\r\n\t\t\t\t\t\t\t: cleanStep,\r\n\t\t\t\t\t\tevidence: evidenceMatch ? evidenceMatch[1] : null\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.filter(step => step.text);\r\n\r\n\t\t\tif (steps.length > 0) {\r\n\t\t\t\tchains.push({ country, steps: steps.slice(0, 6) });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn chains;\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tif (\r\n\t\t\t\tcurrentFieldKey.value &&\r\n\t\t\t\tquestion.includes(\"分析\") &&\r\n\t\t\t\tquestion.includes(\"原因\")\r\n\t\t\t) {\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\t\t\tleftTitle: \"当前选择\",\r\n\t\t\t\t\t\t\trightTitle: \"对比选择\",\r\n\t\t\t\t\t\t\tfieldKey: currentFieldKey.value,\r\n\t\t\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\t\tfollowUp: true,\r\n\t\t\t\t\t\tpreviousAnalysis: getLastAnalysis()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tconst hasCausalFlow = response.analysis.includes(\"##\");\r\n\t\t\t\t\t\tconst chains = hasCausalFlow\r\n\t\t\t\t\t\t\t? parseCausalChains(response.analysis)\r\n\t\t\t\t\t\t\t: [];\r\n\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: hasCausalFlow ? \"以下是因果分析：\" : formattedAnswer,\r\n\t\t\t\t\t\t\tisCausalFlow: hasCausalFlow,\r\n\t\t\t\t\t\t\tcausalChains: chains,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// 触发高亮\r\n\t\t\t\t\t\tif (hasCausalFlow) {\r\n\t\t\t\t\t\t\tchains.forEach(chain => {\r\n\t\t\t\t\t\t\t\tconst fields = chain.steps\r\n\t\t\t\t\t\t\t\t\t.filter(step => step.evidence)\r\n\t\t\t\t\t\t\t\t\t.map(step => {\r\n\t\t\t\t\t\t\t\t\t\tconst chineseField = step.evidence\r\n\t\t\t\t\t\t\t\t\t\t\t.match(/^([^(]+)/)?.[1]\r\n\t\t\t\t\t\t\t\t\t\t\t?.trim();\r\n\t\t\t\t\t\t\t\t\t\treturn chineseField\r\n\t\t\t\t\t\t\t\t\t\t\t? FIELD_MAPPING[chain.country]?.[chineseField]\r\n\t\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.filter(Boolean);\r\n\r\n\t\t\t\t\t\t\t\tif (fields.length > 0) {\r\n\t\t\t\t\t\t\t\t\tbus.emit(\r\n\t\t\t\t\t\t\t\t\t\t`highlight-${\r\n\t\t\t\t\t\t\t\t\t\t\tchain.country === \"korea\" ? \"div1\" : \"div3\"\r\n\t\t\t\t\t\t\t\t\t\t}-fields`,\r\n\t\t\t\t\t\t\t\t\t\tfields\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else if (currentFieldKey.value && !question.includes(\"分析\")) {\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\t\t\tleftTitle: \"当前选择\",\r\n\t\t\t\t\t\t\trightTitle: \"对比选择\",\r\n\t\t\t\t\t\t\tfieldKey: currentFieldKey.value\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\t\tfollowUp: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${currentFieldKey.value}差异的原因`;\r\n\t\t\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"ask_infobox\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestion: question,\r\n\t\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\tconst useSuggestedQuestion = () => {\r\n\t\tuserQuestion.value = suggestedQuestion.value;\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tnextTick(() => {\r\n\t\t\tdocument.querySelector(\".input-container textarea\").focus();\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData: incomingLeftData,\r\n\t\trightData: incomingRightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!incomingLeftData || !incomingRightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tleftData.value = incomingLeftData;\r\n\t\trightData.value = incomingRightData;\r\n\t\tcurrentFieldKey.value = fieldKey;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在对比分析<strong>${fieldKey}</strong>属性...`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tconst requestPayload = {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tleftTitle,\r\n\t\t\t\t\trightTitle,\r\n\t\t\t\t\tfieldKey,\r\n\t\t\t\t\tfieldType,\r\n\t\t\t\t\tallFields: Object.keys({\r\n\t\t\t\t\t\t...div1InfoboxData.value,\r\n\t\t\t\t\t\t...div3InfoboxData.value\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t},\r\n\t\t\t\tchartType: \"comparison\"\r\n\t\t\t};\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"compare_attributes\",\r\n\t\t\t\trequestPayload,\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析得出上述结论的原因`;\r\n\t\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t::selection {\r\n\t\tbackground-color: rgba(255, 255, 0, 0.3);\r\n\t\tcolor: inherit;\r\n\t}\r\n</style>\r\n\r\n<style>\r\n\t/* 原有全局样式 */\r\n\t.infobox tr.infobox-highlight th,\r\n\t.infobox tr.infobox-highlight td,\r\n\t.sidebar tr.infobox-highlight th,\r\n\t.sidebar tr.infobox-highlight td,\r\n\t.toccolours tr.infobox-highlight th,\r\n\t.toccolours tr.infobox-highlight td {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\tbox-shadow: 0 0 8px rgba(255, 235, 59, 0.8) !important;\r\n\t\ttransition: all 0.15s ease !important;\r\n\t}\r\n\r\n\t/* 新增精确高亮样式 - 区分左右 */\r\n\t.highlight-exact.highlight-div1 {\r\n\t\tbackground-color: rgba(255, 235, 59, 0.6);\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 1px rgba(255, 235, 59, 0.3);\r\n\t}\r\n\r\n\t.highlight-exact.highlight-div3 {\r\n\t\tbackground-color: rgba(100, 221, 23, 0.6);\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 1px rgba(76, 175, 80, 0.3);\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;;;;;;uBACCA,mBAAA,CAsBM;IAtBAC,KAAK,EADZC,eAAA,UACuBC,IAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,IAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DC,mBAAA,CAA8B,YAAAC,gBAAA,CAAvBN,IAAA,CAAAO,KAAK,CAACC,SAAS,kBAEAR,IAAA,CAAAS,OAAO,I,cAA7BC,YAAA,CAAiCC,yBAAA;IAJnCC,GAAA;EAAA,MAOcZ,IAAA,CAAAa,KAAK,I,cADjBH,YAAA,CAGkCI,uBAAA;IATpCF,GAAA;IAQIG,OAAO,EAAEf,IAAA,CAAAa,KAAK;IACdG,OAAK,EAAEhB,IAAA,CAAAiB;oEAETP,YAAA,CAAyEQ,2BAAA;IAX3EN,GAAA;IAW4BO,OAAO,EAAEnB,IAAA,CAAAoB,QAAQ;IAAGC,QAAM,EAAEC,MAAA,CAAAC;yCAEtDC,YAAA,CAOuBC,oBAAA;IANrBC,OAAO,EAAE1B,IAAA,CAAA2B,SAAS,CAAC3B,IAAA,CAAAG,KAAK;IACxBgB,OAAO,EAAEnB,IAAA,CAAA4B,YAAY,CAAC5B,IAAA,CAAAG,KAAK;IAC3B0B,cAAc,EAAQ7B,IAAA,CAAAG,KAAK;IAG3B2B,YAAY,EAAE9B,IAAA,CAAA+B,MAAM;IACpBC,OAAK,EAAEhC,IAAA,CAAAiC;gGAETT,YAAA,CAAqDU,yBAAA;IAApCf,OAAO,EAAEnB,IAAA,CAAAoB,QAAQ;IAAGjB,KAAK,EAAEH,IAAA,CAAAG;yEAtB9CgC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}