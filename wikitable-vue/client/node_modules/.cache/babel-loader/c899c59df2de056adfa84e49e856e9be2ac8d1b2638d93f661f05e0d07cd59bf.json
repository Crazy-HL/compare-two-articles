{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  __name: 'SimpleChart',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 颜色定义\n    const pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\n    const barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\n\n    // 单位转换因子\n    const getUnitFactor = fieldKey => {\n      switch (fieldKey) {\n        case \"GDP\":\n          return 1e12;\n        case \"Population\":\n          return 1e8;\n        default:\n          return 1;\n      }\n    };\n\n    // 检查是否是时间格式\n    const isTimeFormat = value => {\n      return typeof value === \"string\" && /^\\d{1,2}:\\d{2}(:\\d{2})?$/.test(value);\n    };\n\n    // 安全转换为数字（排除时间格式）\n    const safeToNumber = (value, fieldKey) => {\n      if (value === null || value === undefined) return 0;\n      if (isTimeFormat(value)) return null;\n      if (typeof value === \"number\") return value / getUnitFactor(fieldKey);\n      if (typeof value === \"string\") {\n        const percentMatch = value.match(/(\\d+\\.?\\d*)%/);\n        if (percentMatch) return parseFloat(percentMatch[1]);\n        const numStr = value.toString().replace(/[^0-9.-]/g, \"\");\n        const num = parseFloat(numStr);\n        return isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\n      }\n      return 0;\n    };\n\n    // 格式化数值\n    const formatNumber = (value, fieldKey) => {\n      const num = Number(value);\n      if (isNaN(num)) return \"0\";\n      if (props.type === \"percentage\") {\n        return num.toFixed(1) + \"%\";\n      }\n      if (fieldKey === \"GDP\") {\n        return num.toFixed(2) + \"T\";\n      }\n      if (fieldKey === \"Population\") {\n        return num.toFixed(2) + \"亿\";\n      }\n      return num.toFixed(2);\n    };\n\n    // 格式化文本\n    const formatSimpleText = value => {\n      if (!value) return \"-\";\n      if (Array.isArray(value)) {\n        const items = value.map(item => item.raw || item.value || item);\n        return items.length > 2 ? items.slice(0, 2).join(\"; \") + \"...\" : items.join(\"; \");\n      }\n      if (typeof value === \"object\") {\n        return value.raw || value.value || \"-\";\n      }\n      return value.toString().length > 50 ? value.toString().substring(0, 50) + \"...\" : value.toString();\n    };\n\n    // 检查是否是有效饼图数据\n    const isValidPieData = computed(() => {\n      if (!pieData.value.length) return false;\n      return pieData.value.every(item => !isTimeFormat(item.value));\n    });\n\n    // 饼图数据\n    const pieData = computed(() => {\n      if (!props.field) return [];\n      const processItem = item => {\n        const value = item?.value || item?.raw;\n        if (isTimeFormat(value)) return null;\n        const numValue = safeToNumber(value, props.fieldKey);\n        if (numValue === null) return null;\n        return {\n          value: Math.min(100, Math.max(0, numValue)),\n          name: item.raw ? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : \"项目\"\n        };\n      };\n      if (Array.isArray(props.field)) {\n        return props.field.map(processItem).filter(item => item !== null);\n      }\n      if (typeof props.field === \"object\") {\n        const result = processItem(props.field);\n        return result ? [result] : [];\n      }\n      if (isTimeFormat(props.field)) return [];\n      const numValue = safeToNumber(props.field, props.fieldKey);\n      return numValue !== null ? [{\n        value: Math.min(100, Math.max(0, numValue)),\n        name: \"数值\"\n      }] : [];\n    });\n\n    // 单个数值的扇形计算\n    const singleValueClipPath = computed(() => {\n      if (pieData.value.length !== 1) return \"\";\n      const value = Math.min(100, Math.max(0, pieData.value[0].value));\n      const degrees = Math.max(1, value / 100 * 360);\n      return `polygon(50% 50%, 50% 0%, ${getPieSlicePoint(degrees)})`;\n    });\n\n    // 饼图切片计算\n    const pieSlices = computed(() => {\n      if (pieData.value.length <= 1) return [];\n      const total = pieData.value.reduce((sum, item) => sum + item.value, 0);\n      if (total <= 0) return [];\n      let accumulated = 0;\n      return pieData.value.map((item, index) => {\n        const start = accumulated / total * 360;\n        accumulated += item.value;\n        const end = accumulated / total * 360;\n        const visibleEnd = Math.max(start + 1, end);\n        return {\n          style: {\n            backgroundColor: pieColors[index % pieColors.length],\n            transform: `rotate(${start}deg)`,\n            clipPath: `polygon(50% 50%, 50% 0%, ${visibleEnd > 180 ? \"100% 0%, 100% 100%, 50% 100%\" : \"100% 0%\"}, ${getPieSlicePoint(visibleEnd)})`\n          }\n        };\n      });\n    });\n\n    // 计算饼图切片点\n    const getPieSlicePoint = degrees => {\n      const radians = (degrees - 90) * Math.PI / 180;\n      const x = 50 + 50 * Math.cos(radians);\n      const y = 50 + 50 * Math.sin(radians);\n      return `${x}% ${y}%`;\n    };\n\n    // 格式化饼图数据\n    const formattedPieData = computed(() => {\n      return pieData.value.map((item, index) => {\n        return `${item.name}: ${formatNumber(item.value, props.fieldKey)}`;\n      });\n    });\n\n    // 柱状图数据\n    const simpleBarData = computed(() => {\n      if (!props.field) return [];\n      let values = [];\n      if (Array.isArray(props.field)) {\n        values = props.field.filter(item => {\n          const value = item?.value || item?.raw;\n          return value !== undefined && value !== null;\n        }).map(item => safeToNumber(item.value || item.raw, props.fieldKey));\n      } else if (typeof props.field === \"object\") {\n        values = [safeToNumber(props.field.value || props.field.raw, props.fieldKey)];\n      } else {\n        values = [safeToNumber(props.field, props.fieldKey)];\n      }\n      if (values.length === 0) return [];\n      const max = Math.max(...values, 1);\n      return values.map((v, index) => ({\n        value: v,\n        height: v / max * 100,\n        color: barColors[index % barColors.length]\n      }));\n    });\n\n    // 格式化柱状图数据\n    const formattedBarData = computed(() => {\n      return simpleBarData.value.map(item => {\n        return formatNumber(item.value, props.fieldKey);\n      });\n    });\n\n    // 折线图数据\n    const lineData = computed(() => {\n      if (!props.field) return [];\n      if (Array.isArray(props.field)) {\n        return props.field.filter(item => {\n          const value = item?.value || item?.raw;\n          return value !== undefined && value !== null;\n        }).map((item, index) => {\n          const value = safeToNumber(item.value || item.raw, props.fieldKey);\n          return {\n            x: index,\n            y: value,\n            raw: item.raw || item.value\n          };\n        });\n      }\n      if (typeof props.field === \"object\") {\n        const value = safeToNumber(props.field.value || props.field.raw, props.fieldKey);\n        return [{\n          x: 0,\n          y: value,\n          raw: props.field.raw || props.field.value\n        }];\n      }\n      const value = safeToNumber(props.field, props.fieldKey);\n      return [{\n        x: 0,\n        y: value,\n        raw: props.field\n      }];\n    });\n\n    // 折线图点\n    const linePointsArray = computed(() => {\n      if (lineData.value.length === 0) return [];\n      const maxY = Math.max(...lineData.value.map(p => p.y), 1);\n      const minY = Math.min(...lineData.value.map(p => p.y), 0);\n      const rangeY = maxY - minY;\n      return lineData.value.map(point => {\n        const x = point.x / (lineData.value.length - 1) * 100;\n        const y = rangeY > 0 ? 50 - (point.y - minY) / rangeY * 50 : 25;\n        return {\n          x,\n          y\n        };\n      });\n    });\n    const linePoints = computed(() => {\n      return linePointsArray.value.map(p => `${p.x},${p.y}`).join(\" \");\n    });\n\n    // 格式化折线图数据\n    const formattedLineData = computed(() => {\n      return lineData.value.map(item => {\n        return formatNumber(item.y, props.fieldKey);\n      });\n    });\n    const hasData = computed(() => {\n      if (!props.field) return false;\n      if (Array.isArray(props.field)) return props.field.length > 0;\n      if (typeof props.field === \"object\") return Object.keys(props.field).length > 0;\n      return String(props.field).trim().length > 0;\n    });\n    const __returned__ = {\n      props,\n      pieColors,\n      barColors,\n      getUnitFactor,\n      isTimeFormat,\n      safeToNumber,\n      formatNumber,\n      formatSimpleText,\n      isValidPieData,\n      pieData,\n      singleValueClipPath,\n      pieSlices,\n      getPieSlicePoint,\n      formattedPieData,\n      simpleBarData,\n      formattedBarData,\n      lineData,\n      linePointsArray,\n      linePoints,\n      formattedLineData,\n      hasData,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","pieColors","barColors","getUnitFactor","fieldKey","isTimeFormat","value","test","safeToNumber","undefined","percentMatch","match","parseFloat","numStr","toString","replace","num","isNaN","formatNumber","Number","type","toFixed","formatSimpleText","Array","isArray","items","map","item","raw","length","slice","join","substring","isValidPieData","pieData","every","field","processItem","numValue","Math","min","max","name","filter","result","singleValueClipPath","degrees","getPieSlicePoint","pieSlices","total","reduce","sum","accumulated","index","start","end","visibleEnd","style","backgroundColor","transform","clipPath","radians","PI","x","cos","y","sin","formattedPieData","simpleBarData","values","v","height","color","formattedBarData","lineData","linePointsArray","maxY","p","minY","rangeY","point","linePoints","formattedLineData","hasData","Object","keys","String","trim"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData && isValidPieData\" class=\"simple-pie-container\">\r\n\t\t\t\t<div class=\"simple-pie\">\r\n\t\t\t\t\t<template v-if=\"pieData.length === 1\">\r\n\t\t\t\t\t\t<div class=\"pie-slice-bg\"></div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\t\tbackgroundColor: pieColors[0],\r\n\t\t\t\t\t\t\t\ttransform: 'rotate(0deg)',\r\n\t\t\t\t\t\t\t\tclipPath: singleValueClipPath\r\n\t\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tv-for=\"(slice, index) in pieSlices\"\r\n\t\t\t\t\t\t\t:key=\"'slice-' + index\"\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:style=\"slice.style\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"pie-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedPieData\"\r\n\t\t\t\t\t\t:key=\"'legend-' + index\"\r\n\t\t\t\t\t\tclass=\"pie-value-item\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"pie-color\"\r\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: pieColors[index] }\"></span>\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-bars-container\">\r\n\t\t\t\t<div class=\"simple-bars\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in simpleBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"simple-bar\"\r\n\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\theight: item.height + '%',\r\n\t\t\t\t\t\t\tbackgroundColor: barColors[index]\r\n\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bar-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"bar-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-line-container\">\r\n\t\t\t\t<svg viewBox=\"0 0 100 50\" class=\"line-svg\">\r\n\t\t\t\t\t<polyline\r\n\t\t\t\t\t\t:points=\"linePoints\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"#3498db\"\r\n\t\t\t\t\t\tstroke-width=\"2\" />\r\n\t\t\t\t\t<circle\r\n\t\t\t\t\t\tv-for=\"(point, index) in linePointsArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t:cx=\"point.x\"\r\n\t\t\t\t\t\t:cy=\"point.y\"\r\n\t\t\t\t\t\tr=\"2\"\r\n\t\t\t\t\t\tfill=\"#3498db\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<div class=\"line-values\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in formattedLineData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"line-value-item\">\r\n\t\t\t\t\t\t{{ item }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"simple-text\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\t// 颜色定义\r\n\tconst pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\r\n\t// 单位转换因子\r\n\tconst getUnitFactor = fieldKey => {\r\n\t\tswitch (fieldKey) {\r\n\t\t\tcase \"GDP\":\r\n\t\t\t\treturn 1e12;\r\n\t\t\tcase \"Population\":\r\n\t\t\t\treturn 1e8;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 1;\r\n\t\t}\r\n\t};\r\n\r\n\t// 检查是否是时间格式\r\n\tconst isTimeFormat = value => {\r\n\t\treturn typeof value === \"string\" && /^\\d{1,2}:\\d{2}(:\\d{2})?$/.test(value);\r\n\t};\r\n\r\n\t// 安全转换为数字（排除时间格式）\r\n\tconst safeToNumber = (value, fieldKey) => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (isTimeFormat(value)) return null;\r\n\t\tif (typeof value === \"number\") return value / getUnitFactor(fieldKey);\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst percentMatch = value.match(/(\\d+\\.?\\d*)%/);\r\n\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 格式化数值\r\n\tconst formatNumber = (value, fieldKey) => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\treturn num.toFixed(1) + \"%\";\r\n\t\t}\r\n\t\tif (fieldKey === \"GDP\") {\r\n\t\t\treturn num.toFixed(2) + \"T\";\r\n\t\t}\r\n\t\tif (fieldKey === \"Population\") {\r\n\t\t\treturn num.toFixed(2) + \"亿\";\r\n\t\t}\r\n\t\treturn num.toFixed(2);\r\n\t};\r\n\r\n\t// 格式化文本\r\n\tconst formatSimpleText = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tconst items = value.map(item => item.raw || item.value || item);\r\n\t\t\treturn items.length > 2\r\n\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t: items.join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || \"-\";\r\n\t\t}\r\n\t\treturn value.toString().length > 50\r\n\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t: value.toString();\r\n\t};\r\n\r\n\t// 检查是否是有效饼图数据\r\n\tconst isValidPieData = computed(() => {\r\n\t\tif (!pieData.value.length) return false;\r\n\t\treturn pieData.value.every(item => !isTimeFormat(item.value));\r\n\t});\r\n\r\n\t// 饼图数据\r\n\tconst pieData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tconst processItem = item => {\r\n\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\tif (isTimeFormat(value)) return null;\r\n\r\n\t\t\tconst numValue = safeToNumber(value, props.fieldKey);\r\n\t\t\tif (numValue === null) return null;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tvalue: Math.min(100, Math.max(0, numValue)),\r\n\t\t\t\tname: item.raw ? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : \"项目\"\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field.map(processItem).filter(item => item !== null);\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst result = processItem(props.field);\r\n\t\t\treturn result ? [result] : [];\r\n\t\t}\r\n\r\n\t\tif (isTimeFormat(props.field)) return [];\r\n\t\tconst numValue = safeToNumber(props.field, props.fieldKey);\r\n\t\treturn numValue !== null\r\n\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: Math.min(100, Math.max(0, numValue)),\r\n\t\t\t\t\t\tname: \"数值\"\r\n\t\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t: [];\r\n\t});\r\n\r\n\t// 单个数值的扇形计算\r\n\tconst singleValueClipPath = computed(() => {\r\n\t\tif (pieData.value.length !== 1) return \"\";\r\n\t\tconst value = Math.min(100, Math.max(0, pieData.value[0].value));\r\n\t\tconst degrees = Math.max(1, (value / 100) * 360);\r\n\t\treturn `polygon(50% 50%, 50% 0%, ${getPieSlicePoint(degrees)})`;\r\n\t});\r\n\r\n\t// 饼图切片计算\r\n\tconst pieSlices = computed(() => {\r\n\t\tif (pieData.value.length <= 1) return [];\r\n\r\n\t\tconst total = pieData.value.reduce((sum, item) => sum + item.value, 0);\r\n\t\tif (total <= 0) return [];\r\n\r\n\t\tlet accumulated = 0;\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\tconst start = (accumulated / total) * 360;\r\n\t\t\taccumulated += item.value;\r\n\t\t\tconst end = (accumulated / total) * 360;\r\n\r\n\t\t\tconst visibleEnd = Math.max(start + 1, end);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: pieColors[index % pieColors.length],\r\n\t\t\t\t\ttransform: `rotate(${start}deg)`,\r\n\t\t\t\t\tclipPath: `polygon(50% 50%, 50% 0%, ${\r\n\t\t\t\t\t\tvisibleEnd > 180 ? \"100% 0%, 100% 100%, 50% 100%\" : \"100% 0%\"\r\n\t\t\t\t\t}, ${getPieSlicePoint(visibleEnd)})`\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算饼图切片点\r\n\tconst getPieSlicePoint = degrees => {\r\n\t\tconst radians = ((degrees - 90) * Math.PI) / 180;\r\n\t\tconst x = 50 + 50 * Math.cos(radians);\r\n\t\tconst y = 50 + 50 * Math.sin(radians);\r\n\t\treturn `${x}% ${y}%`;\r\n\t};\r\n\r\n\t// 格式化饼图数据\r\n\tconst formattedPieData = computed(() => {\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\treturn `${item.name}: ${formatNumber(item.value, props.fieldKey)}`;\r\n\t\t});\r\n\t});\r\n\r\n\t// 柱状图数据\r\n\tconst simpleBarData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tlet values = [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\tvalues = props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => safeToNumber(item.value || item.raw, props.fieldKey));\r\n\t\t} else if (typeof props.field === \"object\") {\r\n\t\t\tvalues = [\r\n\t\t\t\tsafeToNumber(props.field.value || props.field.raw, props.fieldKey)\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tvalues = [safeToNumber(props.field, props.fieldKey)];\r\n\t\t}\r\n\r\n\t\tif (values.length === 0) return [];\r\n\r\n\t\tconst max = Math.max(...values, 1);\r\n\t\treturn values.map((v, index) => ({\r\n\t\t\tvalue: v,\r\n\t\t\theight: (v / max) * 100,\r\n\t\t\tcolor: barColors[index % barColors.length]\r\n\t\t}));\r\n\t});\r\n\r\n\t// 格式化柱状图数据\r\n\tconst formattedBarData = computed(() => {\r\n\t\treturn simpleBarData.value.map(item => {\r\n\t\t\treturn formatNumber(item.value, props.fieldKey);\r\n\t\t});\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = safeToNumber(item.value || item.raw, props.fieldKey);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: index,\r\n\t\t\t\t\t\ty: value,\r\n\t\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = safeToNumber(\r\n\t\t\t\tprops.field.value || props.field.raw,\r\n\t\t\t\tprops.fieldKey\r\n\t\t\t);\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: value,\r\n\t\t\t\t\traw: props.field.raw || props.field.value\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tconst value = safeToNumber(props.field, props.fieldKey);\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: value,\r\n\t\t\t\traw: props.field\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\t// 折线图点\r\n\tconst linePointsArray = computed(() => {\r\n\t\tif (lineData.value.length === 0) return [];\r\n\r\n\t\tconst maxY = Math.max(...lineData.value.map(p => p.y), 1);\r\n\t\tconst minY = Math.min(...lineData.value.map(p => p.y), 0);\r\n\t\tconst rangeY = maxY - minY;\r\n\r\n\t\treturn lineData.value.map(point => {\r\n\t\t\tconst x = (point.x / (lineData.value.length - 1)) * 100;\r\n\t\t\tconst y = rangeY > 0 ? 50 - ((point.y - minY) / rangeY) * 50 : 25;\r\n\t\t\treturn { x, y };\r\n\t\t});\r\n\t});\r\n\r\n\tconst linePoints = computed(() => {\r\n\t\treturn linePointsArray.value.map(p => `${p.x},${p.y}`).join(\" \");\r\n\t});\r\n\r\n\t// 格式化折线图数据\r\n\tconst formattedLineData = computed(() => {\r\n\t\treturn lineData.value.map(item => {\r\n\t\t\treturn formatNumber(item.y, props.fieldKey);\r\n\t\t});\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return props.field.length > 0;\r\n\t\tif (typeof props.field === \"object\")\r\n\t\t\treturn Object.keys(props.field).length > 0;\r\n\t\treturn String(props.field).trim().length > 0;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.pie-slice-bg {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tz-index: 0;\r\n\t}\r\n\r\n\t.pie-slice {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\ttransform-origin: center;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.simple-pie {\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t.simple-pie-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-pie {\r\n\t\twidth: 60px;\r\n\t\theight: 60px;\r\n\t\tborder-radius: 50%;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.pie-values {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tgap: 5px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.pie-value-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 3px;\r\n\t}\r\n\r\n\t.pie-color {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t.simple-bars-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.simple-bars {\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-end;\r\n\t\theight: 60px;\r\n\t\tgap: 4px;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 10px;\r\n\t}\r\n\r\n\t.simple-bar {\r\n\t\tflex: 1;\r\n\t\tmin-width: 5px;\r\n\t\ttransition: height 0.3s;\r\n\t\tborder-radius: 2px 2px 0 0;\r\n\t}\r\n\r\n\t.bar-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.bar-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.simple-line-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.line-svg {\r\n\t\twidth: 100%;\r\n\t\theight: 60px;\r\n\t}\r\n\r\n\t.line-values {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.line-value-item {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}