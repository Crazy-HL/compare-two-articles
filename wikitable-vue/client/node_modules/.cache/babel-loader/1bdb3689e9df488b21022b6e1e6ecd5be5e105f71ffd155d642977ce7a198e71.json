{"ast":null,"code":"import { ref, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nimport { renderLineChart, renderBarChart, renderPieChart } from \"@/js/chartUtils\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"数据对比\"\n    },\n    leftHeader: {\n      type: String,\n      default: \"表格1\"\n    },\n    middleHeader: {\n      type: String,\n      default: \"公共属性\"\n    },\n    rightHeader: {\n      type: String,\n      default: \"表格2\"\n    },\n    tableData1: {\n      type: Object,\n      default: () => ({})\n    },\n    tableData2: {\n      type: Object,\n      default: () => ({})\n    },\n    emptyPlaceholder: {\n      type: String,\n      default: \"无数据\"\n    }\n  },\n  emits: [\"row-selected\"],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const selectedIndex = ref(-1);\n    const commonAttributes = ref([]);\n    const displayAttributes = ref(Array(2).fill(null)); // 默认显示2行\n    const chartRefs = ref({\n      left: [],\n      right: []\n    });\n\n    // 提取公共属性\n    const extractCommonAttributes = () => {\n      if (!props.tableData1 || !props.tableData2) return [];\n      try {\n        const attrs1 = Object.keys(props.tableData1);\n        const attrs2 = Object.keys(props.tableData2);\n        return attrs1.filter(attr => attrs2.includes(attr));\n      } catch (error) {\n        console.error(\"提取公共属性失败:\", error);\n        return [];\n      }\n    };\n\n    // 渲染图表\n    const renderCharts = () => {\n      nextTick(() => {\n        commonAttributes.value.forEach((attr, index) => {\n          // 渲染左侧图表\n          if (chartRefs.value.left[index] && props.tableData1[attr]) {\n            renderChart(chartRefs.value.left[index], props.tableData1[attr], \"left\");\n          }\n\n          // 渲染右侧图表\n          if (chartRefs.value.right[index] && props.tableData2[attr]) {\n            renderChart(chartRefs.value.right[index], props.tableData2[attr], \"right\");\n          }\n        });\n      });\n    };\n\n    // 统一图表渲染方法\n    const renderChart = (container, data, side) => {\n      if (!container || !data) return;\n\n      // 根据数据类型自动选择图表类型\n      let chartType = \"Bar Chart\";\n      if (Array.isArray(data)) {\n        chartType = data[0]?.value !== undefined ? \"Bar Chart\" : \"Line Chart\";\n      }\n      switch (chartType) {\n        case \"Line Chart\":\n          renderLineChart(container, data);\n          break;\n        case \"Bar Chart\":\n          renderBarChart(container, data);\n          break;\n        case \"Pie Chart\":\n          renderPieChart(container, data);\n          break;\n        default:\n          renderBarChart(container, data);\n      }\n    };\n\n    // 设置图表引用\n    const setChartRef = (el, index, type) => {\n      if (el) {\n        chartRefs.value[type][index] = el;\n      }\n    };\n\n    // 选择行\n    const selectRow = index => {\n      if (commonAttributes.value[index]) {\n        selectedIndex.value = index;\n        emit(\"row-selected\", index);\n      }\n    };\n\n    // 监听表格数据变化\n    watch(() => [props.tableData1, props.tableData2], () => {\n      commonAttributes.value = extractCommonAttributes();\n      displayAttributes.value = [...commonAttributes.value, ...Array(2 - commonAttributes.value.length).fill(null)];\n      renderCharts();\n    }, {\n      immediate: true,\n      deep: true\n    });\n    return {\n      selectedIndex,\n      commonAttributes,\n      displayAttributes,\n      setChartRef,\n      selectRow\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","nextTick","d3","renderLineChart","renderBarChart","renderPieChart","props","title","type","String","default","leftHeader","middleHeader","rightHeader","tableData1","Object","tableData2","emptyPlaceholder","emits","setup","_ref","emit","selectedIndex","commonAttributes","displayAttributes","Array","fill","chartRefs","left","right","extractCommonAttributes","attrs1","keys","attrs2","filter","attr","includes","error","console","renderCharts","value","forEach","index","renderChart","container","data","side","chartType","isArray","undefined","setChartRef","el","selectRow","length","immediate","deep"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"comparison-table\">\r\n\t\t<!-- 表格标题 -->\r\n\t\t<div class=\"table-title\" v-if=\"title\">{{ title }}</div>\r\n\r\n\t\t<!-- 表格主体 -->\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">{{ leftHeader }}</div>\r\n\t\t\t<div class=\"header middle-column\">{{ middleHeader }}</div>\r\n\t\t\t<div class=\"header right-column\">{{ rightHeader }}</div>\r\n\r\n\t\t\t<!-- 动态生成行 -->\r\n\t\t\t<template v-for=\"(attr, index) in displayAttributes\" :key=\"index\">\r\n\t\t\t\t<!-- 左侧图表 -->\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-if=\"attr\"\r\n\t\t\t\t\t\tclass=\"chart-container\"\r\n\t\t\t\t\t\t:ref=\"el => setChartRef(el, index, 'left')\"></div>\r\n\t\t\t\t\t<div v-else class=\"empty-placeholder\">-</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- 中间属性 -->\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column attribute-cell\"\r\n\t\t\t\t\t:class=\"{ active: selectedIndex === index }\"\r\n\t\t\t\t\t@click=\"selectRow(index)\">\r\n\t\t\t\t\t{{ attr || emptyPlaceholder }}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- 右侧图表 -->\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-if=\"attr\"\r\n\t\t\t\t\t\tclass=\"chart-container\"\r\n\t\t\t\t\t\t:ref=\"el => setChartRef(el, index, 'right')\"></div>\r\n\t\t\t\t\t<div v-else class=\"empty-placeholder\">-</div>\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ref, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\ttitle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"数据对比\"\r\n\t\t\t},\r\n\t\t\tleftHeader: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"表格1\"\r\n\t\t\t},\r\n\t\t\tmiddleHeader: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"公共属性\"\r\n\t\t\t},\r\n\t\t\trightHeader: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"表格2\"\r\n\t\t\t},\r\n\t\t\ttableData1: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => ({})\r\n\t\t\t},\r\n\t\t\ttableData2: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => ({})\r\n\t\t\t},\r\n\t\t\temptyPlaceholder: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"无数据\"\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"row-selected\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst selectedIndex = ref(-1);\r\n\t\t\tconst commonAttributes = ref([]);\r\n\t\t\tconst displayAttributes = ref(Array(2).fill(null)); // 默认显示2行\r\n\t\t\tconst chartRefs = ref({ left: [], right: [] });\r\n\r\n\t\t\t// 提取公共属性\r\n\t\t\tconst extractCommonAttributes = () => {\r\n\t\t\t\tif (!props.tableData1 || !props.tableData2) return [];\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst attrs1 = Object.keys(props.tableData1);\r\n\t\t\t\t\tconst attrs2 = Object.keys(props.tableData2);\r\n\t\t\t\t\treturn attrs1.filter(attr => attrs2.includes(attr));\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"提取公共属性失败:\", error);\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 渲染图表\r\n\t\t\tconst renderCharts = () => {\r\n\t\t\t\tnextTick(() => {\r\n\t\t\t\t\tcommonAttributes.value.forEach((attr, index) => {\r\n\t\t\t\t\t\t// 渲染左侧图表\r\n\t\t\t\t\t\tif (chartRefs.value.left[index] && props.tableData1[attr]) {\r\n\t\t\t\t\t\t\trenderChart(\r\n\t\t\t\t\t\t\t\tchartRefs.value.left[index],\r\n\t\t\t\t\t\t\t\tprops.tableData1[attr],\r\n\t\t\t\t\t\t\t\t\"left\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// 渲染右侧图表\r\n\t\t\t\t\t\tif (chartRefs.value.right[index] && props.tableData2[attr]) {\r\n\t\t\t\t\t\t\trenderChart(\r\n\t\t\t\t\t\t\t\tchartRefs.value.right[index],\r\n\t\t\t\t\t\t\t\tprops.tableData2[attr],\r\n\t\t\t\t\t\t\t\t\"right\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t// 统一图表渲染方法\r\n\t\t\tconst renderChart = (container, data, side) => {\r\n\t\t\t\tif (!container || !data) return;\r\n\r\n\t\t\t\t// 根据数据类型自动选择图表类型\r\n\t\t\t\tlet chartType = \"Bar Chart\";\r\n\t\t\t\tif (Array.isArray(data)) {\r\n\t\t\t\t\tchartType = data[0]?.value !== undefined ? \"Bar Chart\" : \"Line Chart\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (chartType) {\r\n\t\t\t\t\tcase \"Line Chart\":\r\n\t\t\t\t\t\trenderLineChart(container, data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Bar Chart\":\r\n\t\t\t\t\t\trenderBarChart(container, data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Pie Chart\":\r\n\t\t\t\t\t\trenderPieChart(container, data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\trenderBarChart(container, data);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 设置图表引用\r\n\t\t\tconst setChartRef = (el, index, type) => {\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tchartRefs.value[type][index] = el;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 选择行\r\n\t\t\tconst selectRow = index => {\r\n\t\t\t\tif (commonAttributes.value[index]) {\r\n\t\t\t\t\tselectedIndex.value = index;\r\n\t\t\t\t\temit(\"row-selected\", index);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 监听表格数据变化\r\n\t\t\twatch(\r\n\t\t\t\t() => [props.tableData1, props.tableData2],\r\n\t\t\t\t() => {\r\n\t\t\t\t\tcommonAttributes.value = extractCommonAttributes();\r\n\t\t\t\t\tdisplayAttributes.value = [\r\n\t\t\t\t\t\t...commonAttributes.value,\r\n\t\t\t\t\t\t...Array(2 - commonAttributes.value.length).fill(null)\r\n\t\t\t\t\t];\r\n\t\t\t\t\trenderCharts();\r\n\t\t\t\t},\r\n\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tselectedIndex,\r\n\t\t\t\tcommonAttributes,\r\n\t\t\t\tdisplayAttributes,\r\n\t\t\t\tsetChartRef,\r\n\t\t\t\tselectRow\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.comparison-table {\r\n\t\twidth: 100%;\r\n\t\tbackground: white;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.table-title {\r\n\t\tpadding: 16px 20px;\r\n\t\tfont-size: 18px;\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #333;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tgrid-template-rows: auto repeat(2, 1fr);\r\n\t\tgap: 1px;\r\n\t\tbackground: #f0f0f0;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #f8f9fa;\r\n\t\tfont-weight: 500;\r\n\t\ttext-align: center;\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 16px;\r\n\t\tbackground: white;\r\n\t\tmin-height: 120px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.left-column {\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t}\r\n\r\n\t.right-column {\r\n\t\tborder-left: 1px solid #f0f0f0;\r\n\t}\r\n\r\n\t.attribute-cell {\r\n\t\tcursor: pointer;\r\n\t\tfont-weight: 500;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.attribute-cell:hover {\r\n\t\tbackground: #f5f9ff;\r\n\t}\r\n\r\n\t.attribute-cell.active {\r\n\t\tbackground: #e6f0ff;\r\n\t\tcolor: #1976d2;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 100px;\r\n\t}\r\n\r\n\t.empty-placeholder {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t/* 响应式设计 */\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\tgrid-template-rows: auto repeat(6, auto);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.right-column {\r\n\t\t\tborder: none;\r\n\t\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}