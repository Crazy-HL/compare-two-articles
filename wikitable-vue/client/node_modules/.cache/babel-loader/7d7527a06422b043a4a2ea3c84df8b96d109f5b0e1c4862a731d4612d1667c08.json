{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-aae5f81a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chart\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\components_text\\PerCapitaGDPChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst chartRef = ref(null);\r\n\r\n\tonMounted(() => {\r\n\t\tconst data = [\r\n\t\t\t{ country: \"China\", perCapitaGDP: 13020 },\r\n\t\t\t{ country: \"USA\", perCapitaGDP: 87385 }\r\n\t\t];\r\n\r\n\t\tconst width = 500;\r\n\t\tconst height = 300;\r\n\t\tconst margin = { top: 20, right: 20, bottom: 40, left: 40 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(chartRef.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(data.map(d => d.country))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.1);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(data, d => d.perCapitaGDP)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\"x\", d => x(d.country))\r\n\t\t\t.attr(\"y\", d => y(d.perCapitaGDP))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.perCapitaGDP))\r\n\t\t\t.attr(\"fill\", \"#91CC75\");\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.selectAll(\".label\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"label\")\r\n\t\t\t.attr(\"x\", d => x(d.country) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.perCapitaGDP) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => d.perCapitaGDP);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.selectAll(\".x-axis\")\r\n\t\t\t.data([0])\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"x-axis\")\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x));\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.selectAll(\".y-axis\")\r\n\t\t\t.data([0])\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"y-axis\")\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y));\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.chart-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\t.bar {\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\t.bar:hover {\r\n\t\tfill: #fc8452;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,OAAO;EAACC,KAAK,EAAC;;;uBAAvBC,mBAAA,CAA+C,OAA/CC,UAA+C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}