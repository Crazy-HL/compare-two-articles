{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9d3193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"outline\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"文章大纲\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 大纲整体容器 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"outline-container\", {\n      expanded: $setup.isVisible\n    }]),\n    style: _normalizeStyle($setup.outlinePosition)\n  }, [_createCommentVNode(\" 切换大纲的按钮（箭头形式） \"), _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"toggle-btn\"\n  }, _toDisplayString($setup.isVisible ? \"❮\" : \"❯\"), 1 /* TEXT */), _createCommentVNode(\" 文章大纲 \"), $setup.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id\n    }, _toDisplayString(item.text), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementVNode","_createElementBlock","_Fragment","_createCommentVNode","_normalizeClass","expanded","$setup","isVisible","style","_normalizeStyle","outlinePosition","onClick","toggleOutline","_hoisted_1","_hoisted_2","_renderList","outline","item","id","href","text","_hoisted_3"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲整体容器 -->\r\n\t<div\r\n\t\tclass=\"outline-container\"\r\n\t\t:class=\"{ expanded: isVisible }\"\r\n\t\t:style=\"outlinePosition\">\r\n\t\t<!-- 切换大纲的按钮（箭头形式） -->\r\n\t\t<button @click=\"toggleOutline\" class=\"toggle-btn\">\r\n\t\t\t{{ isVisible ? \"❮\" : \"❯\" }}\r\n\t\t</button>\r\n\r\n\t\t<!-- 文章大纲 -->\r\n\t\t<div v-if=\"isVisible\" class=\"outline\">\r\n\t\t\t<h2>文章大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li v-for=\"item in outline\" :key=\"item.id\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\">{{ item.text }}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML 内容\r\n\t\tdivId: String // 组件对应的 divId（div1 或 div3）\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\r\n\t// 切换大纲显示\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// 解析文章内容生成大纲\r\n\tconst extractOutline = content => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst outlineItems = [];\r\n\r\n\t\theadings.forEach(heading => {\r\n\t\t\tconst id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${\r\n\t\t\t\tprops.divId\r\n\t\t\t}`;\r\n\t\t\theading.id = id;\r\n\t\t\toutlineItems.push({\r\n\t\t\t\tid,\r\n\t\t\t\ttext: heading.textContent,\r\n\t\t\t\tlevel: parseInt(heading.tagName.charAt(1))\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn outlineItems;\r\n\t};\r\n\r\n\t// 监听文章内容变化，更新大纲\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = newContent ? extractOutline(newContent) : [];\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// 计算大纲的按钮和大纲的位置\r\n\tconst outlinePosition = computed(() => {\r\n\t\tif (!props.divId) {\r\n\t\t\tconsole.error(\"divId is missing!\");\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// div1 的大纲在右侧，div3 的大纲在左侧\r\n\t\treturn props.divId.toLowerCase() === \"div1\"\r\n\t\t\t? { right: isVisible.value ? \"10px\" : \"-220px\", top: \"50px\" } // div1 右侧展开\r\n\t\t\t: { left: isVisible.value ? \"10px\" : \"-220px\", top: \"50px\" }; // div3 左侧展开\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 大纲容器 */\r\n\t.outline-container {\r\n\t\tposition: absolute;\r\n\t\twidth: 200px;\r\n\t\tbackground: #fff;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 10px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 切换大纲按钮（箭头按钮） */\r\n\t.toggle-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t\twidth: 224px;\r\n\t\theight: 240px;\r\n\t\tbackground: #0077b6;\r\n\t\tcolor: rgb(255, 0, 0);\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 118px;\r\n\t\tborder-radius: 4px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.toggle-btn:hover {\r\n\t\tbackground: #005f8d;\r\n\t}\r\n\r\n\t/* div1: 按钮在左侧（右边展开） */\r\n\t.outline-container[style*=\"right\"] .toggle-btn {\r\n\t\tleft: -24px;\r\n\t\tborder-radius: 4px 0 0 4px;\r\n\t}\r\n\r\n\t/* div3: 按钮在右侧（左边展开） */\r\n\t.outline-container[style*=\"left\"] .toggle-btn {\r\n\t\tright: -24px;\r\n\t\tborder-radius: 0 4px 4px 0;\r\n\t}\r\n\r\n\t/* 大纲内容样式 */\r\n\t.outline h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t\tcolor: #0077b6;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.outline a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t\tdisplay: block;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 4px;\r\n\t\ttransition: background 0.2s;\r\n\t}\r\n\r\n\t.outline a:hover {\r\n\t\tbackground: #e0f2ff;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EAYwBC,KAAK,EAAC;;gEAC3BC,mBAAA,CAAa,YAAT,MAAI;mBAbX;;uBAAAC,mBAAA,CAAAC,SAAA,SACCC,mBAAA,YAAe,EACfH,mBAAA,CAkBM;IAjBLD,KAAK,EAHPK,eAAA,EAGQ,mBAAmB;MAAAC,QAAA,EACLC,MAAA,CAAAC;IAAS;IAC5BC,KAAK,EALRC,eAAA,CAKUH,MAAA,CAAAI,eAAe;MACvBP,mBAAA,mBAAsB,EACtBH,mBAAA,CAES;IAFAW,OAAK,EAAEL,MAAA,CAAAM,aAAa;IAAEb,KAAK,EAAC;sBACjCO,MAAA,CAAAC,SAAS,8BAGbJ,mBAAA,UAAa,EACFG,MAAA,CAAAC,SAAS,I,cAApBN,mBAAA,CAOM,OAPNY,UAOM,GANLC,UAAa,EACbd,mBAAA,CAIK,c,kBAHJC,mBAAA,CAEKC,SAAA,QAjBTa,WAAA,CAeuBT,MAAA,CAAAU,OAAO,EAAfC,IAAI;yBAAfhB,mBAAA,CAEK;MAFwBH,GAAG,EAAEmB,IAAI,CAACC;QACtClB,mBAAA,CAA4C;MAAxCmB,IAAI,QAAQF,IAAI,CAACC;wBAAOD,IAAI,CAACG,IAAI,wBAhB1CC,UAAA,E;wCAAAlB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}