{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport IO from \"./input_output.vue\";\nimport bus from \"@/js/eventBus.js\"; // 引入事件总线\n\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    let receivedData = \"\";\n    const selectText1 = ref(\"\");\n    // 页面初始化时加载内容\n    onMounted(() => {\n      // 订阅事件\n      const off = bus.on(\"div1Event\", data => {\n        receivedData = data;\n        console.log(\"Received data from brother:\", receivedData);\n        selectText1.value = getPlainTextFromSelection(receivedData.content);\n      });\n      // 当组件卸载时，取消事件订阅以避免内存泄漏\n      onUnmounted(() => {\n        off();\n      });\n    });\n\n    // 仅获取选中的纯文本内容，去除所有 HTML 标签\n    function getPlainTextFromSelection() {\n      const selection = window.getSelection();\n      if (selection) {\n        const selectedText = selection.toString().trim(); // 获取纯文本\n        if (selectedText.length > 0) {\n          return selectedText; // 如果是纯文本，直接返回\n        }\n        const range = selection.getRangeAt(0);\n        const rangeClone = range.cloneContents();\n        if (rangeClone.childElementCount > 0) {\n          // 创建一个临时容器，获取 HTML 内容并剥离标签\n          const container = document.createElement(\"div\");\n          container.appendChild(rangeClone);\n\n          // 通过正则表达式去除所有 HTML 标签\n          const plainText = container.innerText || container.textContent; // 获取纯文本\n          return plainText.trim();\n        }\n      }\n      return null; // 没有选中内容时返回 null\n    }\n    const __returned__ = {\n      get receivedData() {\n        return receivedData;\n      },\n      set receivedData(v) {\n        receivedData = v;\n      },\n      selectText1,\n      getPlainTextFromSelection,\n      ref,\n      onMounted,\n      onUnmounted,\n      IO,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","IO","bus","receivedData","selectText1","off","on","data","console","log","value","getPlainTextFromSelection","content","selection","window","getSelection","selectedText","toString","trim","length","range","getRangeAt","rangeClone","cloneContents","childElementCount","container","document","createElement","appendChild","plainText","innerText","textContent"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<!-- Div2.vue -->\r\n<template>\r\n\t<div class=\"div0\" id=\"div2\">\r\n\t\t<div class=\"VisContainer\">\r\n\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t<IO width=\"800px\" height=\"300px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"botContainer container\">\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"400px\" height=\"500px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"400px\" height=\"300px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport bus from \"@/js/eventBus.js\"; // 引入事件总线\r\n\r\n\tlet receivedData = \"\";\r\n\tconst selectText1 = ref(\"\");\r\n\t// 页面初始化时加载内容\r\n\tonMounted(() => {\r\n\t\t// 订阅事件\r\n\t\tconst off = bus.on(\"div1Event\", data => {\r\n\t\t\treceivedData = data;\r\n\t\t\tconsole.log(\"Received data from brother:\", receivedData);\r\n\t\t\tselectText1.value = getPlainTextFromSelection(receivedData.content);\r\n\t\t});\r\n\t\t// 当组件卸载时，取消事件订阅以避免内存泄漏\r\n\t\tonUnmounted(() => {\r\n\t\t\toff();\r\n\t\t});\r\n\t});\r\n\r\n\t// 仅获取选中的纯文本内容，去除所有 HTML 标签\r\n\tfunction getPlainTextFromSelection() {\r\n\t\tconst selection = window.getSelection();\r\n\r\n\t\tif (selection) {\r\n\t\t\tconst selectedText = selection.toString().trim(); // 获取纯文本\r\n\t\t\tif (selectedText.length > 0) {\r\n\t\t\t\treturn selectedText; // 如果是纯文本，直接返回\r\n\t\t\t}\r\n\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst rangeClone = range.cloneContents();\r\n\r\n\t\t\tif (rangeClone.childElementCount > 0) {\r\n\t\t\t\t// 创建一个临时容器，获取 HTML 内容并剥离标签\r\n\t\t\t\tconst container = document.createElement(\"div\");\r\n\t\t\t\tcontainer.appendChild(rangeClone);\r\n\r\n\t\t\t\t// 通过正则表达式去除所有 HTML 标签\r\n\t\t\t\tconst plainText = container.innerText || container.textContent; // 获取纯文本\r\n\t\t\t\treturn plainText.trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null; // 没有选中内容时返回 null\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t\theight: 100%;\r\n\t\tflex-grow: 1; /* 使 div2 自动撑开占据剩余空间 */\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column; /* 保证内部子元素（如 .VisContainer）能自动排布 */\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t\tflex-grow: 1; /* 确保 VisContainer 会撑开 */\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid black;\r\n\t\tmargin: 10px 10px;\r\n\t\tflex-grow: 1; /* 使内部子元素可以扩展 */\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tmargin: 5px;\r\n\t\tborder: 1px solid blue;\r\n\t\tpadding: 5px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAoBC,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,EAAE,MAAM,oBAAoB;AACnC,OAAOC,GAAG,MAAM,kBAAkB,CAAC,CAAC;;;;;;;;;IAEpC,IAAIC,YAAY,GAAG,EAAE;IACrB,MAAMC,WAAW,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC3B;IACAC,SAAS,CAAC,MAAM;MACf;MACA,MAAMM,GAAG,GAAGH,GAAG,CAACI,EAAE,CAAC,WAAW,EAAEC,IAAI,IAAI;QACvCJ,YAAY,GAAGI,IAAI;QACnBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEN,YAAY,CAAC;QACxDC,WAAW,CAACM,KAAK,GAAGC,yBAAyB,CAACR,YAAY,CAACS,OAAO,CAAC;MACpE,CAAC,CAAC;MACF;MACAZ,WAAW,CAAC,MAAM;QACjBK,GAAG,CAAC,CAAC;MACN,CAAC,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,SAASM,yBAAyBA,CAAA,EAAG;MACpC,MAAME,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;MAEvC,IAAIF,SAAS,EAAE;QACd,MAAMG,YAAY,GAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClD,IAAIF,YAAY,CAACG,MAAM,GAAG,CAAC,EAAE;UAC5B,OAAOH,YAAY,CAAC,CAAC;QACtB;QAEA,MAAMI,KAAK,GAAGP,SAAS,CAACQ,UAAU,CAAC,CAAC,CAAC;QACrC,MAAMC,UAAU,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC;QAExC,IAAID,UAAU,CAACE,iBAAiB,GAAG,CAAC,EAAE;UACrC;UACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC/CF,SAAS,CAACG,WAAW,CAACN,UAAU,CAAC;;UAEjC;UACA,MAAMO,SAAS,GAAGJ,SAAS,CAACK,SAAS,IAAIL,SAAS,CAACM,WAAW,CAAC,CAAC;UAChE,OAAOF,SAAS,CAACX,IAAI,CAAC,CAAC;QACxB;MACD;MACA,OAAO,IAAI,CAAC,CAAC;IACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}