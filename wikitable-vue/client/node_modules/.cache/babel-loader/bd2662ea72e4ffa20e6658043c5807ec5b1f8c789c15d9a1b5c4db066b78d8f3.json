{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"field-name\"\n};\nconst _hoisted_9 = {\n  class: \"field-type\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = {\n  class: \"full-chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 表头 \"), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), _createCommentVNode(\" 内容行 - 固定高度 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.openModal($setup.leftInfobox, field.key)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"div\", {\n      class: \"cell middle-column\",\n      onClick: $event => $setup.handleFieldClick(field.key)\n    }, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(field.typeLabel), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.openModal($setup.rightInfobox, field.key)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 8 /* PROPS */, _hoisted_10)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 模态框 \"), $setup.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _withModifiers($setup.closeModal, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.closeModal\n  }, \"×\"), _createElementVNode(\"h3\", null, _toDisplayString($setup.modalTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"FullChart\"], {\n    field: $setup.modalData,\n    type: $setup.modalType,\n    visualization: $setup.modalVisualization\n  }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","$setup","leftInfobox","title","_hoisted_4","_hoisted_5","rightInfobox","_Fragment","_renderList","comparableFields","field","key","onClick","$event","openModal","_createVNode","getField","type","visualization","_hoisted_6","handleFieldClick","_hoisted_8","_hoisted_9","typeLabel","_hoisted_7","_hoisted_10","showModal","_withModifiers","closeModal","_hoisted_11","modalTitle","_hoisted_12","modalData","modalType","modalVisualization"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 内容行 - 固定高度 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@click=\"openModal(leftInfobox, field.key)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\" @click=\"handleFieldClick(field.key)\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@click=\"openModal(rightInfobox, field.key)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 模态框 -->\r\n\t\t<div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeModal\">×</button>\r\n\t\t\t\t<h3>{{ modalTitle }}</h3>\r\n\t\t\t\t<div class=\"full-chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"modalData\"\r\n\t\t\t\t\t\t:type=\"modalType\"\r\n\t\t\t\t\t\t:visualization=\"modalVisualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdivId: String\r\n\t});\r\n\r\n\t// 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 模态框状态\r\n\tconst showModal = ref(false);\r\n\tconst modalTitle = ref(\"\");\r\n\tconst modalData = ref(null);\r\n\tconst modalType = ref(\"\");\r\n\tconst modalVisualization = ref(\"\");\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 点击表格属性时触发\r\n\tconst handleFieldClick = fieldKey => {\r\n\t\t// 发送事件给父组件，通知哪个属性被点击了\r\n\t\tbus.emit(`${props.divId}_FieldClicked`, fieldKey);\r\n\r\n\t\t// 临时高亮当前行\r\n\t\thighlightCurrentRow(fieldKey);\r\n\t};\r\n\r\n\t// 高亮当前点击的行\r\n\tconst highlightCurrentRow = fieldKey => {\r\n\t\t// 移除之前的高亮\r\n\t\tconst previousHighlights = document.querySelectorAll(\".highlighted-row\");\r\n\t\tpreviousHighlights.forEach(el => {\r\n\t\t\tel.classList.remove(\"highlighted-row\");\r\n\t\t});\r\n\r\n\t\t// 高亮当前行\r\n\t\tconst rows = document.querySelectorAll(\".middle-column\");\r\n\t\trows.forEach(row => {\r\n\t\t\tif (row.textContent.includes(fieldKey)) {\r\n\t\t\t\trow.parentElement.classList.add(\"highlighted-row\");\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 监听infobox字段点击事件\r\n\tconst highlightTableField = fieldName => {\r\n\t\t// 找到对应的字段行\r\n\t\tconst rows = document.querySelectorAll(\".middle-column\");\r\n\t\tlet found = false;\r\n\r\n\t\trows.forEach(row => {\r\n\t\t\tif (row.textContent.toLowerCase().includes(fieldName.toLowerCase())) {\r\n\t\t\t\t// 添加高亮类\r\n\t\t\t\trow.parentElement.classList.add(\"highlighted-row\");\r\n\t\t\t\tfound = true;\r\n\r\n\t\t\t\t// 滚动到该行\r\n\t\t\t\trow.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!found) {\r\n\t\t\tconsole.log(`Field ${fieldName} not found in table`);\r\n\t\t}\r\n\t};\r\n\r\n\t// 打开模态框\r\n\tconst openModal = (infobox, fieldKey) => {\r\n\t\tconst field = getField(infobox, fieldKey);\r\n\t\tif (!field || field.length === 0) return;\r\n\r\n\t\tmodalTitle.value = `${infobox.title} - ${fieldKey}`;\r\n\t\tmodalData.value = field;\r\n\t\tmodalType.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\r\n\t\tmodalVisualization.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\r\n\t\tshowModal.value = true;\r\n\t};\r\n\r\n\t// 关闭模态框\r\n\tconst closeModal = () => {\r\n\t\tshowModal.value = false;\r\n\t};\r\n\r\n\t// 获取字段值（确保始终返回数组）\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\treturn Array.isArray(section[matchedKey])\r\n\t\t\t\t\t? section[matchedKey]\r\n\t\t\t\t\t: [section[matchedKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 计算可显示字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\t// 监听infobox字段点击事件\r\n\t\tbus.on(\"scrollToTableField\", ({ divId, fieldName }) => {\r\n\t\t\tif (divId === props.divId) {\r\n\t\t\t\thighlightTableField(fieldName);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t\tbus.off(\"scrollToTableField\");\r\n\t});\r\n\r\n\t// 处理数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\theight: 160px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tcursor: pointer;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.highlighted-row {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\t/* 模态框样式 */\r\n\t.modal-overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 80%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.full-chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tfont-size: 24px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}