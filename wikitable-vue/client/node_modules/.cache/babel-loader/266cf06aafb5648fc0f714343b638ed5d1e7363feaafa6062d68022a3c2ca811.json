{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_7 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_8 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_9 = {\n  class: \"cell right-column\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"empty-state\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DynamicSparkline = _resolveComponent(\"DynamicSparkline\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" 动态表头 \"), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.table1Name), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.table2Name), 1 /* TEXT */), _createCommentVNode(\" 动态数据行 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: attr\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_DynamicSparkline, {\n      data: $setup.getChartData($setup.processedTable1, attr)\n    }, null, 8 /* PROPS */, [\"data\"])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(attr), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_DynamicSparkline, {\n      data: $setup.getChartData($setup.processedTable2, attr)\n    }, null, 8 /* PROPS */, [\"data\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"请先从左/右侧选择两个表格进行对比\"))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","$setup","hasData","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","_ctx","table1Name","_hoisted_4","_hoisted_5","table2Name","_Fragment","_renderList","commonAttributes","attr","_hoisted_6","_createVNode","_component_DynamicSparkline","data","getChartData","processedTable1","_hoisted_7","_hoisted_8","_hoisted_9","processedTable2","_hoisted_10"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div v-if=\"hasData\" class=\"table-grid\">\r\n\t\t\t<!-- 动态表头 -->\r\n\t\t\t<div class=\"header left-column\">{{ table1Name }}</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">{{ table2Name }}</div>\r\n\r\n\t\t\t<!-- 动态数据行 -->\r\n\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<DynamicSparkline :data=\"getChartData(processedTable1, attr)\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<DynamicSparkline :data=\"getChartData(processedTable2, attr)\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t\t<div v-else class=\"empty-state\">请先从左/右侧选择两个表格进行对比</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1Html: String,\r\n\t\tdiv3Html: String\r\n\t});\r\n\r\n\t// 表格处理状态\r\n\tconst processedTable1 = ref({ headers: [], rows: [] });\r\n\tconst processedTable2 = ref({ headers: [], rows: [] });\r\n\r\n\t// 动态解析任意HTML表格\r\n\tconst parseDynamicTable = html => {\r\n\t\tconst result = { headers: [], rows: [] };\r\n\t\tif (!html) return result;\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 动态提取表头（考虑th或第一行td）\r\n\t\t\tconst headerCells =\r\n\t\t\t\ttable.querySelectorAll(\"th\") ||\r\n\t\t\t\ttable.querySelector(\"tr:first-child\")?.querySelectorAll(\"td\");\r\n\r\n\t\t\tif (headerCells) {\r\n\t\t\t\tresult.headers = Array.from(headerCells).map(cell =>\r\n\t\t\t\t\tcell.textContent.trim().replace(/\\s+/g, \" \")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// 动态提取行数据（跳过表头行）\r\n\t\t\tconst rows = Array.from(table.querySelectorAll(\"tr\")).slice(\r\n\t\t\t\theaderCells ? 1 : 0\r\n\t\t\t);\r\n\r\n\t\t\tresult.rows = rows.map(tr => {\r\n\t\t\t\treturn Array.from(tr.querySelectorAll(\"td\")).map(td => {\r\n\t\t\t\t\tconst content = td.textContent.trim();\r\n\t\t\t\t\t// 尝试解析数值\r\n\t\t\t\t\tconst num = parseFloat(content.replace(/[^\\d.-]/g, \"\"));\r\n\t\t\t\t\treturn isNaN(num) ? content : num;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"动态表格解析错误:\", error);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\r\n\t// 获取公共属性（动态匹配表头）\r\n\tconst commonAttributes = computed(() => {\r\n\t\tconst headers1 = processedTable1.value.headers;\r\n\t\tconst headers2 = processedTable2.value.headers;\r\n\t\treturn headers1.filter(\r\n\t\t\theader =>\r\n\t\t\t\theaders2.includes(header) &&\r\n\t\t\t\t![\"Year\", \"Team\", \"Season\"].includes(header) // 排除常见非数据列\r\n\t\t);\r\n\t});\r\n\r\n\t// 获取图表数据\r\n\tconst getChartData = (table, attr) => {\r\n\t\tconst index = table.headers.indexOf(attr);\r\n\t\tif (index === -1) return { values: [], labels: [] };\r\n\r\n\t\treturn {\r\n\t\t\tvalues: table.rows.map(row => {\r\n\t\t\t\tconst val = row[index];\r\n\t\t\t\treturn typeof val === \"number\" ? val : 0;\r\n\t\t\t}),\r\n\t\t\tlabels: table.rows.map((_, i) => `条目${i + 1}`)\r\n\t\t};\r\n\t};\r\n\r\n\t// 监听HTML变化\r\n\twatch(\r\n\t\t() => props.div1Html,\r\n\t\thtml => {\r\n\t\t\tprocessedTable1.value = parseDynamicTable(html);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3Html,\r\n\t\thtml => {\r\n\t\t\tprocessedTable2.value = parseDynamicTable(html);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tconst hasData = computed(\r\n\t\t() => props.div1Html && props.div3Html && commonAttributes.value.length > 0\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 保持原有样式不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tgap: 1px;\r\n\t\tbackground: #eee;\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\t/* 其他样式... */\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAmB;;EAD/BC,GAAA;EAEsBD,KAAK,EAAC;;;EAEpBA,KAAK,EAAC;AAAoB;gEAC/BE,mBAAA,CAA4C;EAAvCF,KAAK,EAAC;AAAsB,GAAC,MAAI;;EACjCA,KAAK,EAAC;AAAqB;;EAI1BA,KAAK,EAAC;AAAkB;;EAIxBA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAgB;;EAGvBA,KAAK,EAAC;AAAmB;;EAlBlCC,GAAA;EAuBcD,KAAK,EAAC;;;;uBAtBnBG,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBMC,MAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAoBM,OApBNI,UAoBM,GAnBLC,mBAAA,UAAa,EACbN,mBAAA,CAAsD,OAAtDO,UAAsD,EAAAC,gBAAA,CAAnBC,IAAA,CAAAC,UAAU,kBAC7CC,UAA4C,EAC5CX,mBAAA,CAAuD,OAAvDY,UAAuD,EAAAJ,gBAAA,CAAnBC,IAAA,CAAAI,UAAU,kBAE9CP,mBAAA,WAAc,G,kBACdL,mBAAA,CAYWa,SAAA,QArBdC,WAAA,CAS4BZ,MAAA,CAAAa,gBAAgB,EAAxBC,IAAI;yBATxBhB,mBAAA,CAAAa,SAAA;MAAAf,GAAA,EASoDkB;IAAI,IACpDjB,mBAAA,CAEM,OAFNkB,UAEM,GADLC,YAAA,CAAgEC,2BAAA;MAA7CC,IAAI,EAAElB,MAAA,CAAAmB,YAAY,CAACnB,MAAA,CAAAoB,eAAe,EAAEN,IAAI;yCAG5DjB,mBAAA,CAEM,OAFNwB,UAEM,GADLxB,mBAAA,CAA4C,OAA5CyB,UAA4C,EAAAjB,gBAAA,CAAbS,IAAI,iB,GAGpCjB,mBAAA,CAEM,OAFN0B,UAEM,GADLP,YAAA,CAAgEC,2BAAA;MAA7CC,IAAI,EAAElB,MAAA,CAAAmB,YAAY,CAACnB,MAAA,CAAAwB,eAAe,EAAEV,IAAI;;qDAI9DhB,mBAAA,CAAuD,OAAvD2B,WAAuD,EAAvB,mBAAiB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}