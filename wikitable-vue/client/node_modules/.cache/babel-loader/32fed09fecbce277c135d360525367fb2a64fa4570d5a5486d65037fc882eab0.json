{"ast":null,"code":"import { ref, watch, onMounted } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String,\n    // div1 或 div3\n    linkedOutline: Array // 关联大纲数据\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const buttonStyle = ref({});\n    const outlineStyle = ref({\n      position: \"fixed\",\n      top: \"50px\",\n      width: \"260px\",\n      maxHeight: \"80vh\",\n      overflowY: \"auto\",\n      zIndex: \"1000\",\n      background: \"white\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n      padding: \"15px\"\n    });\n\n    // **存储当前激活的大纲 div**\n    const activeDiv = ref(props.divId);\n\n    // **切换大纲的显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **解析文章，提取 h1-h6 标题**\n    const extractOutline = content => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\n        const id = `heading-${index}-${props.divId}`;\n        heading.id = id; // 确保 HTML 里有 ID\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **监听 content 变化，更新大纲**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent);\n    }, {\n      immediate: true\n    });\n\n    // **监听 divId 变化，确保大纲和按钮在正确位置**\n    watch(() => props.divId, () => {\n      updateOutlinePosition();\n    });\n\n    // **检查是否存在关联章节**\n    const isLinked = item => {\n      if (!props.linkedOutline) return false;\n      return props.linkedOutline.some(linked => linked.leftId === item.id);\n    };\n\n    // **滚动到章节**\n    const scrollToChapter = id => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    };\n\n    // **更新按钮和大纲的位置**\n    const updateOutlinePosition = () => {\n      const isDiv1 = activeDiv.value === \"div1\";\n      buttonStyle.value = {\n        position: \"absolute\",\n        top: \"10px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\"\n      };\n      outlineStyle.value = {\n        ...outlineStyle.value,\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\",\n        [isDiv1 ? \"left\" : \"right\"]: \"auto\" // 确保不会同时有 left 和 right\n      };\n    };\n\n    // **鼠标进入时，更新 activeDiv**\n    const setActiveDiv = () => {\n      activeDiv.value = props.divId;\n      updateOutlinePosition();\n    };\n\n    // **初始化大纲**\n    onMounted(() => {\n      outline.value = extractOutline(props.content);\n      updateOutlinePosition();\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      buttonStyle,\n      outlineStyle,\n      activeDiv,\n      toggleOutline,\n      extractOutline,\n      isLinked,\n      scrollToChapter,\n      updateOutlinePosition,\n      setActiveDiv,\n      ref,\n      watch,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","__props","isVisible","outline","buttonStyle","outlineStyle","position","top","width","maxHeight","overflowY","zIndex","background","borderRadius","boxShadow","padding","activeDiv","divId","toggleOutline","value","extractOutline","content","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","text","textContent","newContent","immediate","updateOutlinePosition","isLinked","item","linkedOutline","some","linked","leftId","scrollToChapter","element","document","getElementById","scrollIntoView","behavior","isDiv1","setActiveDiv"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button\r\n\t\t@click=\"toggleOutline\"\r\n\t\t:class=\"['toggle-btn', divId === 'div1' ? 'right' : 'left']\"\r\n\t\t:style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div\r\n\t\tv-if=\"isVisible\"\r\n\t\tclass=\"outline-container\"\r\n\t\t:style=\"outlineStyle\"\r\n\t\t@mouseenter=\"setActiveDiv\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\thighlight: isLinked(item, index),\r\n\t\t\t\t\t\tlinked: isLinked(item, index)\r\n\t\t\t\t\t}\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String, // div1 或 div3\r\n\t\tlinkedOutline: Array // 关联大纲数据\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({\r\n\t\tposition: \"fixed\",\r\n\t\ttop: \"50px\",\r\n\t\twidth: \"260px\",\r\n\t\tmaxHeight: \"80vh\",\r\n\t\toverflowY: \"auto\",\r\n\t\tzIndex: \"1000\",\r\n\t\tbackground: \"white\",\r\n\t\tborderRadius: \"8px\",\r\n\t\tboxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n\t\tpadding: \"15px\"\r\n\t});\r\n\r\n\t// **存储当前激活的大纲 div**\r\n\tconst activeDiv = ref(props.divId);\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = content => {\r\n\t\tif (!content) return [];\r\n\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\r\n\t\t\tconst id = `heading-${index}-${props.divId}`;\r\n\t\t\theading.id = id; // 确保 HTML 里有 ID\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **监听 divId 变化，确保大纲和按钮在正确位置**\r\n\twatch(\r\n\t\t() => props.divId,\r\n\t\t() => {\r\n\t\t\tupdateOutlinePosition();\r\n\t\t}\r\n\t);\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item => {\r\n\t\tif (!props.linkedOutline) return false;\r\n\t\treturn props.linkedOutline.some(linked => linked.leftId === item.id);\r\n\t};\r\n\r\n\t// **滚动到章节**\r\n\tconst scrollToChapter = id => {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) {\r\n\t\t\telement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t}\r\n\t};\r\n\r\n\t// **更新按钮和大纲的位置**\r\n\tconst updateOutlinePosition = () => {\r\n\t\tconst isDiv1 = activeDiv.value === \"div1\";\r\n\r\n\t\tbuttonStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"10px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\"\r\n\t\t};\r\n\r\n\t\toutlineStyle.value = {\r\n\t\t\t...outlineStyle.value,\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\",\r\n\t\t\t[isDiv1 ? \"left\" : \"right\"]: \"auto\" // 确保不会同时有 left 和 right\r\n\t\t};\r\n\t};\r\n\r\n\t// **鼠标进入时，更新 activeDiv**\r\n\tconst setActiveDiv = () => {\r\n\t\tactiveDiv.value = props.divId;\r\n\t\tupdateOutlinePosition();\r\n\t};\r\n\r\n\t// **初始化大纲**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t\tupdateOutlinePosition();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* **大纲样式** */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t\tposition: fixed; /* 让大纲在滚动时保持在视口 */\r\n\t\ttop: 50px;\r\n\t}\r\n\r\n\t.outline h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **高亮和关联章节样式** */\r\n\t.outline li.highlight a {\r\n\t\tbackground-color: #ffff00;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\r\n\t.outline li.linked a {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":"AA0CC,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;;;;;;;IAE3C,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,SAAS,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMM,OAAO,GAAGN,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMO,WAAW,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMQ,YAAY,GAAGR,GAAG,CAAC;MACxBS,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,MAAM;MACdC,UAAU,EAAE,OAAO;MACnBC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE,gCAAgC;MAC3CC,OAAO,EAAE;IACV,CAAC,CAAC;;IAEF;IACA,MAAMC,SAAS,GAAGnB,GAAG,CAACG,KAAK,CAACiB,KAAK,CAAC;;IAElC;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC3BhB,SAAS,CAACiB,KAAK,GAAG,CAACjB,SAAS,CAACiB,KAAK;IACnC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGC,OAAO,IAAI;MACjC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;MAEvB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMK,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAE/D,OAAOC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnD,MAAMC,KAAK,GAAGC,QAAQ,CAACH,OAAO,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,MAAMC,EAAE,GAAG,WAAWL,KAAK,IAAIhC,KAAK,CAACiB,KAAK,EAAE;QAC5Cc,OAAO,CAACM,EAAE,GAAGA,EAAE,CAAC,CAAC;QACjB,OAAO;UAAEA,EAAE;UAAEC,IAAI,EAAEP,OAAO,CAACQ,WAAW;UAAEN;QAAM,CAAC;MAChD,CAAC,CAAC;IACH,CAAC;;IAED;IACAnC,KAAK,CACJ,MAAME,KAAK,CAACqB,OAAO,EACnBmB,UAAU,IAAI;MACbrC,OAAO,CAACgB,KAAK,GAAGC,cAAc,CAACoB,UAAU,CAAC;IAC3C,CAAC,EACD;MAAEC,SAAS,EAAE;IAAK,CACnB,CAAC;;IAED;IACA3C,KAAK,CACJ,MAAME,KAAK,CAACiB,KAAK,EACjB,MAAM;MACLyB,qBAAqB,CAAC,CAAC;IACxB,CACD,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGC,IAAI,IAAI;MACxB,IAAI,CAAC5C,KAAK,CAAC6C,aAAa,EAAE,OAAO,KAAK;MACtC,OAAO7C,KAAK,CAAC6C,aAAa,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAKJ,IAAI,CAACP,EAAE,CAAC;IACrE,CAAC;;IAED;IACA,MAAMY,eAAe,GAAGZ,EAAE,IAAI;MAC7B,MAAMa,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACf,EAAE,CAAC;MAC3C,IAAIa,OAAO,EAAE;QACZA,OAAO,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MAC/C;IACD,CAAC;;IAED;IACA,MAAMZ,qBAAqB,GAAGA,CAAA,KAAM;MACnC,MAAMa,MAAM,GAAGvC,SAAS,CAACG,KAAK,KAAK,MAAM;MAEzCf,WAAW,CAACe,KAAK,GAAG;QACnBb,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,MAAM;QACX,CAACgD,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG;MAC9B,CAAC;MAEDlD,YAAY,CAACc,KAAK,GAAG;QACpB,GAAGd,YAAY,CAACc,KAAK;QACrB,CAACoC,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM;QACnC,CAACA,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;MACrC,CAAC;IACF,CAAC;;IAED;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MAC1BxC,SAAS,CAACG,KAAK,GAAGnB,KAAK,CAACiB,KAAK;MAC7ByB,qBAAqB,CAAC,CAAC;IACxB,CAAC;;IAED;IACA3C,SAAS,CAAC,MAAM;MACfI,OAAO,CAACgB,KAAK,GAAGC,cAAc,CAACpB,KAAK,CAACqB,OAAO,CAAC;MAC7CqB,qBAAqB,CAAC,CAAC;IACxB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}