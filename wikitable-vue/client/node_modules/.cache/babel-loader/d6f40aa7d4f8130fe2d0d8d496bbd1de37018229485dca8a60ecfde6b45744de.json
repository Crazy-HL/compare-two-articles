{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62c843dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoadingSpinner = _resolveComponent(\"LoadingSpinner\");\n  const _component_ErrorDisplay = _resolveComponent(\"ErrorDisplay\");\n  const _component_WikipediaContent = _resolveComponent(\"WikipediaContent\");\n  const _component_TextPopup = _resolveComponent(\"TextPopup\");\n  const _component_ArticleOutline = _resolveComponent(\"ArticleOutline\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($setup.props.pageTitle), 1 /* TEXT */), $setup.loading ? (_openBlock(), _createBlock(_component_LoadingSpinner, {\n    key: 0\n  })) : $setup.error ? (_openBlock(), _createBlock(_component_ErrorDisplay, {\n    key: 1,\n    message: $setup.error,\n    onRetry: $setup.fetchWikipediaContent\n  }, null, 8 /* PROPS */, [\"message\", \"onRetry\"])) : (_openBlock(), _createBlock(_component_WikipediaContent, {\n    key: 2,\n    content: $setup.pageHtml,\n    onSelect: $setup.handleSelection\n  }, null, 8 /* PROPS */, [\"content\", \"onSelect\"])), _createVNode(_component_TextPopup, {\n    visible: $setup.showPopup[$props.divId],\n    content: $setup.selectedText[$props.divId],\n    containerClass: $props.divId === 'div1' ? 'chart-container1' : 'chart-container2',\n    containerRef: $setup.divRef,\n    onClose: $setup.closePopup\n  }, null, 8 /* PROPS */, [\"visible\", \"content\", \"containerClass\", \"containerRef\", \"onClose\"]), _createVNode(_component_ArticleOutline, {\n    content: $setup.pageHtml,\n    divId: $props.divId\n  }, null, 8 /* PROPS */, [\"content\", \"divId\"])], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","selectContentClass","id","divId","ref","_createElementVNode","_toDisplayString","$setup","props","pageTitle","loading","_createBlock","_component_LoadingSpinner","key","error","_component_ErrorDisplay","message","onRetry","fetchWikipediaContent","_component_WikipediaContent","content","pageHtml","onSelect","handleSelection","_createVNode","_component_TextPopup","visible","showPopup","selectedText","containerClass","containerRef","divRef","onClose","closePopup","_component_ArticleOutline","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ props.pageTitle }}</h1>\r\n\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ref, onMounted, onUnmounted, nextTick, watch } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport { parseInfoboxForComparison } from \"@/js/wikiInfoboxParser\";\r\n\r\n\texport default {\r\n\t\tcomponents: {\r\n\t\t\tLoadingSpinner,\r\n\t\t\tErrorDisplay,\r\n\t\t\tWikipediaContent,\r\n\t\t\tTextPopup,\r\n\t\t\tArticleOutline\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tpageTitle: String,\r\n\t\t\tdivId: String,\r\n\t\t\tselectContentClass: String,\r\n\t\t\tlinkedOutline: Array\r\n\t\t},\r\n\t\tsetup(props) {\r\n\t\t\tconst pageHtml = ref(\"\");\r\n\t\t\tconst loading = ref(true);\r\n\t\t\tconst error = ref(\"\");\r\n\t\t\tconst selectedText = ref({});\r\n\t\t\tconst showPopup = ref({});\r\n\t\t\tconst divRef = ref(null);\r\n\t\t\tconst MainTextContent = ref(\"\");\r\n\t\t\tconst highlightMap = ref({}); // 存储高亮文本 {divId: [texts]}\r\n\t\t\tconst highlightedElements = ref({}); // 存储高亮DOM元素\r\n\r\n\t\t\t// 原有fetchWikipediaContent函数保持不变\r\n\t\t\tconst fetchWikipediaContent = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\t\t\tprops.pageTitle\r\n\t\t\t\t\t)}`;\r\n\t\t\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\t\t\tconst html = await response.text();\r\n\t\t\t\t\tMainTextContent.value = cleanWikipediaContent(html);\r\n\t\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t\t\tconst infobox = doc.querySelector(\".infobox, .sidebar, .toccolours\");\r\n\t\t\t\t\tconst comparisonData = parseInfoboxForComparison(infobox);\r\n\r\n\t\t\t\t\tconst sidebar = doc.querySelector(\".sidebar\");\r\n\t\t\t\t\tif (sidebar) sidebar.remove();\r\n\r\n\t\t\t\t\tbus.emit(`${props.divId}_InfoboxData`, comparisonData);\r\n\r\n\t\t\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\t\t\tconst uniqueId = `heading-${index}-${props.divId}`;\r\n\t\t\t\t\t\theading.id = uniqueId;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst tables = doc.querySelectorAll(\"table\");\r\n\t\t\t\t\ttables.forEach(table => {\r\n\t\t\t\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst styles = Array.from(\r\n\t\t\t\t\t\tdoc.querySelectorAll('link[rel=\"stylesheet\"]')\r\n\t\t\t\t\t);\r\n\t\t\t\t\tstyles.forEach(link => {\r\n\t\t\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\t\t\tinjectWikipediaStyles();\r\n\r\n\t\t\t\t\tbus.emit(`${props.divId}_FullContent`, {\r\n\t\t\t\t\t\tcontent: pageHtml.value,\r\n\t\t\t\t\t\ttitle: props.pageTitle\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t\t\t\tconsole.error(\"获取维基百科内容失败:\", err);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tloading.value = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 原有cleanWikipediaContent函数保持不变\r\n\t\t\tconst cleanWikipediaContent = html => {\r\n\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t\tconst selectorsToRemove = [\r\n\t\t\t\t\t\".infobox\",\r\n\t\t\t\t\t\".sidebar\",\r\n\t\t\t\t\t\".toc\",\r\n\t\t\t\t\t\".reflist\",\r\n\t\t\t\t\t\".hatnote\",\r\n\t\t\t\t\t\".navbox\",\r\n\t\t\t\t\t\".mw-editsection\",\r\n\t\t\t\t\t\"table.ambox\",\r\n\t\t\t\t\t\".shortdescription\",\r\n\t\t\t\t\t\"img\",\r\n\t\t\t\t\t\"figure\"\r\n\t\t\t\t];\r\n\r\n\t\t\t\tselectorsToRemove.forEach(selector => {\r\n\t\t\t\t\tdoc.querySelectorAll(selector).forEach(el => el.remove());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst bodyContent =\r\n\t\t\t\t\tdoc.querySelector(\"#bodyContent, #mw-content-text\") || doc.body;\r\n\r\n\t\t\t\tlet plainText = bodyContent.textContent || bodyContent.innerText;\r\n\r\n\t\t\t\tplainText = plainText\r\n\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t\t\t.replace(/\\[\\d+\\]/g, \"\")\r\n\t\t\t\t\t.trim();\r\n\r\n\t\t\t\treturn plainText;\r\n\t\t\t};\r\n\r\n\t\t\t// 原有injectWikipediaStyles函数保持不变\r\n\t\t\tconst injectWikipediaStyles = () => {\r\n\t\t\t\tconst wikipediaStyles = [\r\n\t\t\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t\t\t];\r\n\r\n\t\t\t\twikipediaStyles.forEach(url => {\r\n\t\t\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\t\tstyleTag.href = url;\r\n\t\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t// 新增：精确高亮匹配函数\r\n\t\t\tconst highlightExactMatches = () => {\r\n\t\t\t\tif (!divRef.value || !highlightMap.value[props.divId]) return;\r\n\r\n\t\t\t\tclearHighlights(props.divId);\r\n\r\n\t\t\t\tconst doc = new DOMParser().parseFromString(\r\n\t\t\t\t\t`<div>${pageHtml.value}</div>`,\r\n\t\t\t\t\t\"text/html\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\thighlightMap.value[props.divId].forEach(text => {\r\n\t\t\t\t\tconst normalizedText = text\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t\t\t\t.replace(/\\n/g, \"\");\r\n\r\n\t\t\t\t\tconst walker = doc.createTreeWalker(\r\n\t\t\t\t\t\tdoc.body,\r\n\t\t\t\t\t\tNodeFilter.SHOW_TEXT,\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\twhile (walker.nextNode()) {\r\n\t\t\t\t\t\tconst node = walker.currentNode;\r\n\t\t\t\t\t\tconst parent = node.parentNode;\r\n\r\n\t\t\t\t\t\tconst nodeText = node.textContent\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t\t\t\t\t.replace(/\\n/g, \"\");\r\n\r\n\t\t\t\t\t\tif (nodeText.includes(normalizedText)) {\r\n\t\t\t\t\t\t\tconst startIdx = nodeText.indexOf(normalizedText);\r\n\t\t\t\t\t\t\tconst endIdx = startIdx + normalizedText.length;\r\n\r\n\t\t\t\t\t\t\tconst before = node.splitText(startIdx);\r\n\t\t\t\t\t\t\tconst highlightText = before.splitText(normalizedText.length);\r\n\r\n\t\t\t\t\t\t\tconst span = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\tspan.className = \"exact-text-highlight\";\r\n\t\t\t\t\t\t\tspan.dataset.highlightId = props.divId;\r\n\t\t\t\t\t\t\tspan.appendChild(before.cloneNode(true));\r\n\r\n\t\t\t\t\t\t\tparent.replaceChild(span, before);\r\n\t\t\t\t\t\t\tparent.insertBefore(highlightText, span.nextSibling);\r\n\r\n\t\t\t\t\t\t\thighlightedElements.value[props.divId] =\r\n\t\t\t\t\t\t\t\thighlightedElements.value[props.divId] || [];\r\n\t\t\t\t\t\t\thighlightedElements.value[props.divId].push(span);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpageHtml.value = doc.body.innerHTML;\r\n\t\t\t};\r\n\r\n\t\t\t// 新增：设置高亮内容\r\n\t\t\tconst setHighlightedTexts = (texts, targetDivId) => {\r\n\t\t\t\thighlightMap.value[targetDivId] = texts;\r\n\t\t\t\tif (props.divId === targetDivId && pageHtml.value) {\r\n\t\t\t\t\tnextTick(highlightExactMatches);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 新增：清除高亮\r\n\t\t\tconst clearHighlights = targetDivId => {\r\n\t\t\t\tif (!divRef.value) return;\r\n\r\n\t\t\t\tconst highlights = divRef.value.querySelectorAll(\r\n\t\t\t\t\t`.exact-text-highlight[data-highlight-id=\"${targetDivId}\"]`\r\n\t\t\t\t);\r\n\r\n\t\t\t\thighlights.forEach(el => {\r\n\t\t\t\t\tconst parent = el.parentNode;\r\n\t\t\t\t\tparent.replaceChild(document.createTextNode(el.textContent), el);\r\n\t\t\t\t});\r\n\r\n\t\t\t\thighlightedElements.value[targetDivId] = [];\r\n\t\t\t};\r\n\r\n\t\t\t// 原有handleHoverInfobox等函数保持不变\r\n\t\t\tconst handleHoverInfobox = ({ fieldKey, infoboxTitle }) => {\r\n\t\t\t\tif (props.pageTitle !== infoboxTitle) return;\r\n\r\n\t\t\t\tconst infobox = divRef.value.querySelector(\r\n\t\t\t\t\t\".infobox, .sidebar, .toccolours\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!infobox) return;\r\n\r\n\t\t\t\tclearInfoboxHighlights();\r\n\r\n\t\t\t\tconst rows = infobox.querySelectorAll(\"tr\");\r\n\t\t\t\tfor (const row of rows) {\r\n\t\t\t\t\tconst th = row.querySelector(\"th\");\r\n\t\t\t\t\tif (th && th.textContent.trim() === fieldKey) {\r\n\t\t\t\t\t\trow.classList.add(\"infobox-highlight\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// 其他原有函数保持不变...\r\n\t\t\t// (包括handleUnhoverInfobox, handleSelection, closePopup等)\r\n\r\n\t\t\t// 监听内容变化\r\n\t\t\twatch(\r\n\t\t\t\t() => pageHtml.value,\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (highlightMap.value[props.divId]) {\r\n\t\t\t\t\t\tnextTick(highlightExactMatches);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tfetchWikipediaContent();\r\n\r\n\t\t\t\tif (divRef.value) {\r\n\t\t\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hoverEvent = `hover-${\r\n\t\t\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t\t\t}-infobox`;\r\n\t\t\t\tconst unhoverEvent = `unhover-${\r\n\t\t\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t\t\t}-infobox`;\r\n\r\n\t\t\t\tbus.on(hoverEvent, handleHoverInfobox);\r\n\t\t\t\tbus.on(unhoverEvent, handleUnhoverInfobox);\r\n\r\n\t\t\t\tbus.on(`${props.divId}Event`, ({ content, sourceId }) => {\r\n\t\t\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\tupdatePopupPosition();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbus.on(\"highlight-infobox\", highlightInfoboxFields);\r\n\t\t\t\tbus.on(\"unhighlight-infobox\", clearInfoboxHighlights);\r\n\t\t\t});\r\n\r\n\t\t\tonUnmounted(() => {\r\n\t\t\t\tif (divRef.value) {\r\n\t\t\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hoverEvent = `hover-${\r\n\t\t\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t\t\t}-infobox`;\r\n\t\t\t\tconst unhoverEvent = `unhover-${\r\n\t\t\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t\t\t}-infobox`;\r\n\r\n\t\t\t\tbus.off(hoverEvent, handleHoverInfobox);\r\n\t\t\t\tbus.off(unhoverEvent, handleUnhoverInfobox);\r\n\t\t\t\tbus.off(`${props.divId}Event`);\r\n\r\n\t\t\t\tbus.off(\"highlight-infobox\", highlightInfoboxFields);\r\n\t\t\t\tbus.off(\"unhighlight-infobox\", clearInfoboxHighlights);\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprops,\r\n\t\t\t\tpageHtml,\r\n\t\t\t\tloading,\r\n\t\t\t\terror,\r\n\t\t\t\tselectedText,\r\n\t\t\t\tshowPopup,\r\n\t\t\t\tdivRef,\r\n\t\t\t\tsetHighlightedTexts, // 暴露新方法\r\n\t\t\t\tfetchWikipediaContent,\r\n\t\t\t\thandleSelection,\r\n\t\t\t\tclosePopup,\r\n\t\t\t\tupdatePopupPosition\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t::selection {\r\n\t\tbackground-color: rgba(255, 255, 0, 0.3);\r\n\t\tcolor: inherit;\r\n\t}\r\n</style>\r\n\r\n<style>\r\n\t/* 新增高亮样式 */\r\n\t.exact-text-highlight {\r\n\t\tbackground-color: rgba(255, 241, 118, 0.5);\r\n\t\tpadding: 0 2px;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 2px rgba(255, 213, 79, 0.3);\r\n\t\tposition: relative;\r\n\t\tdisplay: inline;\r\n\t}\r\n\r\n\t.exact-text-highlight::after {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tbottom: -2px;\r\n\t\twidth: 100%;\r\n\t\theight: 2px;\r\n\t\tbackground: linear-gradient(90deg, #ffc107, #ff9800);\r\n\t}\r\n\r\n\t/* 原有infobox高亮样式保持不变 */\r\n\t.infobox tr.infobox-highlight th,\r\n\t.infobox tr.infobox-highlight td,\r\n\t.sidebar tr.infobox-highlight th,\r\n\t.sidebar tr.infobox-highlight td,\r\n\t.toccolours tr.infobox-highlight th,\r\n\t.toccolours tr.infobox-highlight td {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\tbox-shadow: 0 0 8px rgba(255, 235, 59, 0.8) !important;\r\n\t\ttransition: all 0.15s ease !important;\r\n\t}\r\n\r\n\t.infobox tr.step-highlight-left th,\r\n\t.infobox tr.step-highlight-left td,\r\n\t.sidebar tr.step-highlight-left th,\r\n\t.sidebar tr.step-highlight-left td {\r\n\t\tbackground-color: rgba(26, 115, 232, 0.1) !important;\r\n\t\tbox-shadow: 0 0 0 2px rgba(26, 115, 232, 0.3) !important;\r\n\t\ttransition: all 0.2s ease;\r\n\t}\r\n\r\n\t.infobox tr.chain-highlight-left th,\r\n\t.infobox tr.chain-highlight-left td,\r\n\t.sidebar tr.chain-highlight-left th,\r\n\t.sidebar tr.chain-highlight-left td {\r\n\t\tbackground-color: rgba(26, 115, 232, 0.2) !important;\r\n\t\tbox-shadow: 0 0 0 3px rgba(26, 115, 232, 0.5) !important;\r\n\t\ttransition: all 0.2s ease;\r\n\t}\r\n\r\n\t.infobox tr.step-highlight-right th,\r\n\t.infobox tr.step-highlight-right td,\r\n\t.sidebar tr.step-highlight-right th,\r\n\t.sidebar tr.step-highlight-right td {\r\n\t\tbackground-color: rgba(156, 39, 176, 0.1) !important;\r\n\t\tbox-shadow: 0 0 0 2px rgba(156, 39, 176, 0.3) !important;\r\n\t\ttransition: all 0.2s ease;\r\n\t}\r\n\r\n\t.infobox tr.chain-highlight-right th,\r\n\t.infobox tr.chain-highlight-right td,\r\n\t.sidebar tr.chain-highlight-right th,\r\n\t.sidebar tr.chain-highlight-right td {\r\n\t\tbackground-color: rgba(156, 39, 176, 0.2) !important;\r\n\t\tbox-shadow: 0 0 0 3px rgba(156, 39, 176, 0.5) !important;\r\n\t\ttransition: all 0.2s ease;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;;;;;;uBACCA,mBAAA,CAsBM;IAtBAC,KAAK,EADZC,eAAA,UACuBC,MAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DC,mBAAA,CAA8B,YAAAC,gBAAA,CAAvBC,MAAA,CAAAC,KAAK,CAACC,SAAS,kBAEAF,MAAA,CAAAG,OAAO,I,cAA7BC,YAAA,CAAiCC,yBAAA;IAJnCC,GAAA;EAAA,MAOcN,MAAA,CAAAO,KAAK,I,cADjBH,YAAA,CAGkCI,uBAAA;IATpCF,GAAA;IAQIG,OAAO,EAAET,MAAA,CAAAO,KAAK;IACdG,OAAK,EAAEV,MAAA,CAAAW;oEAETP,YAAA,CAAyEQ,2BAAA;IAX3EN,GAAA;IAW4BO,OAAO,EAAEb,MAAA,CAAAc,QAAQ;IAAGC,QAAM,EAAEf,MAAA,CAAAgB;qDAEtDC,YAAA,CAOuBC,oBAAA;IANrBC,OAAO,EAAEnB,MAAA,CAAAoB,SAAS,CAAC3B,MAAA,CAAAG,KAAK;IACxBiB,OAAO,EAAEb,MAAA,CAAAqB,YAAY,CAAC5B,MAAA,CAAAG,KAAK;IAC3B0B,cAAc,EAAQ7B,MAAA,CAAAG,KAAK;IAG3B2B,YAAY,EAAEvB,MAAA,CAAAwB,MAAM;IACpBC,OAAK,EAAEzB,MAAA,CAAA0B;gGAETT,YAAA,CAAqDU,yBAAA;IAApCd,OAAO,EAAEb,MAAA,CAAAc,QAAQ;IAAGlB,KAAK,EAAEH,MAAA,CAAAG;yEAtB9CgC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}