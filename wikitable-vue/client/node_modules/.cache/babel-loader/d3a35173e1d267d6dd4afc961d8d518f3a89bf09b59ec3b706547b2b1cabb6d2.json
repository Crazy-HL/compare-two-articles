{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, renderList as _renderList, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a89cbc96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"simple-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"simple-pie-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"pie-slice-bg\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"pie-tooltip\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"simple-bars-container\"\n};\nconst _hoisted_9 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"bar-tooltip\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"simple-line-container\"\n};\nconst _hoisted_13 = [\"points\", \"stroke-width\"];\nconst _hoisted_14 = [\"cx\", \"cy\", \"r\", \"stroke\", \"onMouseenter\", \"onClick\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"line-tooltip\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: $setup.handleTextClick,\n    onMouseenter: $setup.handleTextHover,\n    onMouseleave: $setup.resetHover\n  }, _toDisplayString($setup.formatSimpleText($props.field)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 饼图 \"), $setup.hasData && $setup.isValidPieData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"simple-pie\",\n    onMouseleave: $setup.resetHover\n  }, [_hoisted_4, $setup.pieData.length === 1 ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"pie-slice\", {\n      'pie-slice-hover': $setup.hoveredIndex === 0,\n      'pie-slice-active': $setup.activeIndex === 0\n    }]),\n    onMouseenter: _cache[0] || (_cache[0] = $event => $setup.handlePieHover(0)),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.handlePieClick(0)),\n    style: _normalizeStyle({\n      backgroundColor: $setup.pieColors[0],\n      clipPath: $setup.singleValueClipPath\n    })\n  }, null, 38 /* CLASS, STYLE, NEED_HYDRATION */)) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($setup.pieSlices, (slice, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'slice-' + index,\n      class: _normalizeClass([\"pie-slice\", {\n        'pie-slice-hover': $setup.hoveredIndex === index,\n        'pie-slice-active': $setup.activeIndex === index\n      }]),\n      onMouseenter: $event => $setup.handlePieHover(index),\n      onClick: $event => $setup.handlePieClick(index),\n      style: _normalizeStyle(slice.style)\n    }, null, 46 /* CLASS, STYLE, PROPS, NEED_HYDRATION */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 32 /* NEED_HYDRATION */), $setup.hoveredIndex !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($setup.pieData[$setup.hoveredIndex].name) + \": \" + _toDisplayString($setup.pieData[$setup.hoveredIndex].value.toFixed(1)) + _toDisplayString($props.type === \"percentage\" ? \"%\" : \"\"), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 柱状图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n    class: \"simple-bars\",\n    onMouseleave: $setup.resetHover\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.simpleBarData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"simple-bar\", {\n        'bar-hover': $setup.hoveredIndex === index,\n        'bar-active': $setup.activeIndex === index\n      }]),\n      onMouseenter: $event => $setup.handleBarHover(index),\n      onClick: $event => $setup.handleBarClick(index),\n      style: _normalizeStyle({\n        height: item.height + '%',\n        backgroundColor: $setup.barColors[index],\n        width: $setup.barWidth + '%'\n      })\n    }, null, 46 /* CLASS, STYLE, PROPS, NEED_HYDRATION */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 32 /* NEED_HYDRATION */), $setup.hoveredIndex !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($setup.formatNumber($setup.simpleBarData[$setup.hoveredIndex].value, $props.fieldKey)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 折线图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(), _createElementBlock(\"svg\", {\n    viewBox: \"0 0 100 50\",\n    class: \"line-svg\",\n    onMouseleave: $setup.resetHover\n  }, [_createElementVNode(\"polyline\", {\n    points: $setup.linePoints,\n    fill: \"none\",\n    stroke: \"#3498db\",\n    \"stroke-width\": $setup.isLineHovered ? 3 : 2,\n    class: \"line-path\",\n    onMouseenter: $setup.handleLineHover\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.linePointsArray, (point, index) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: index,\n      cx: point.x,\n      cy: point.y,\n      r: $setup.hoveredIndex === index ? 4 : 2,\n      fill: \"#3498db\",\n      stroke: $setup.hoveredIndex === index ? 'white' : 'none',\n      \"stroke-width\": \"1\",\n      class: \"line-point\",\n      onMouseenter: $event => $setup.handlePointHover(index),\n      onClick: $event => $setup.handlePointClick(index)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))], 32 /* NEED_HYDRATION */)), $setup.hoveredIndex !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString($setup.lineData[$setup.hoveredIndex].raw || $setup.formatNumber($setup.lineData[$setup.hoveredIndex].y, $props.fieldKey)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \"-\"))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: $setup.handleTextClick,\n    onMouseenter: $setup.handleTextHover,\n    onMouseleave: $setup.resetHover\n  }, _toDisplayString($setup.formatSimpleText($props.field)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$props","visualization","_Fragment","onClick","$setup","handleTextClick","onMouseenter","handleTextHover","onMouseleave","resetHover","formatSimpleText","field","isTextHovered","_hoisted_2","hasData","isValidPieData","_hoisted_3","_hoisted_4","pieData","length","_normalizeClass","hoveredIndex","activeIndex","_cache","$event","handlePieHover","handlePieClick","style","_normalizeStyle","pieColors","singleValueClipPath","_renderList","pieSlices","slice","index","_hoisted_5","_hoisted_6","_toDisplayString","name","value","toFixed","type","_hoisted_7","_hoisted_8","simpleBarData","item","handleBarHover","handleBarClick","height","barColors","barWidth","_hoisted_9","_hoisted_10","formatNumber","fieldKey","_hoisted_11","_hoisted_12","viewBox","points","linePoints","fill","stroke","isLineHovered","handleLineHover","_hoisted_13","linePointsArray","point","cx","x","cy","y","r","handlePointHover","handlePointClick","_hoisted_14","_hoisted_15","lineData","raw","_hoisted_16","_hoisted_17"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData && isValidPieData\" class=\"simple-pie-container\">\r\n\t\t\t\t<div class=\"simple-pie\" @mouseleave=\"resetHover\">\r\n\t\t\t\t\t<div class=\"pie-slice-bg\"></div>\r\n\t\t\t\t\t<template v-if=\"pieData.length === 1\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t\t\t'pie-slice-hover': hoveredIndex === 0,\r\n\t\t\t\t\t\t\t\t'pie-slice-active': activeIndex === 0\r\n\t\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t\t@mouseenter=\"handlePieHover(0)\"\r\n\t\t\t\t\t\t\t@click=\"handlePieClick(0)\"\r\n\t\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\t\tbackgroundColor: pieColors[0],\r\n\t\t\t\t\t\t\t\tclipPath: singleValueClipPath\r\n\t\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tv-for=\"(slice, index) in pieSlices\"\r\n\t\t\t\t\t\t\t:key=\"'slice-' + index\"\r\n\t\t\t\t\t\t\tclass=\"pie-slice\"\r\n\t\t\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t\t\t'pie-slice-hover': hoveredIndex === index,\r\n\t\t\t\t\t\t\t\t'pie-slice-active': activeIndex === index\r\n\t\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t\t@mouseenter=\"handlePieHover(index)\"\r\n\t\t\t\t\t\t\t@click=\"handlePieClick(index)\"\r\n\t\t\t\t\t\t\t:style=\"slice.style\"></div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"hoveredIndex !== null\" class=\"pie-tooltip\">\r\n\t\t\t\t\t{{ pieData[hoveredIndex].name }}:\r\n\t\t\t\t\t{{ pieData[hoveredIndex].value.toFixed(1)\r\n\t\t\t\t\t}}{{ type === \"percentage\" ? \"%\" : \"\" }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-bars-container\">\r\n\t\t\t\t<div class=\"simple-bars\" @mouseleave=\"resetHover\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in simpleBarData\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"simple-bar\"\r\n\t\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t\t'bar-hover': hoveredIndex === index,\r\n\t\t\t\t\t\t\t'bar-active': activeIndex === index\r\n\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t@mouseenter=\"handleBarHover(index)\"\r\n\t\t\t\t\t\t@click=\"handleBarClick(index)\"\r\n\t\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\t\theight: item.height + '%',\r\n\t\t\t\t\t\t\tbackgroundColor: barColors[index],\r\n\t\t\t\t\t\t\twidth: barWidth + '%'\r\n\t\t\t\t\t\t}\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"hoveredIndex !== null\" class=\"bar-tooltip\">\r\n\t\t\t\t\t{{ formatNumber(simpleBarData[hoveredIndex].value, fieldKey) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"simple-line-container\">\r\n\t\t\t\t<svg viewBox=\"0 0 100 50\" class=\"line-svg\" @mouseleave=\"resetHover\">\r\n\t\t\t\t\t<polyline\r\n\t\t\t\t\t\t:points=\"linePoints\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"#3498db\"\r\n\t\t\t\t\t\t:stroke-width=\"isLineHovered ? 3 : 2\"\r\n\t\t\t\t\t\tclass=\"line-path\"\r\n\t\t\t\t\t\t@mouseenter=\"handleLineHover\" />\r\n\t\t\t\t\t<circle\r\n\t\t\t\t\t\tv-for=\"(point, index) in linePointsArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\t:cx=\"point.x\"\r\n\t\t\t\t\t\t:cy=\"point.y\"\r\n\t\t\t\t\t\t:r=\"hoveredIndex === index ? 4 : 2\"\r\n\t\t\t\t\t\tfill=\"#3498db\"\r\n\t\t\t\t\t\t:stroke=\"hoveredIndex === index ? 'white' : 'none'\"\r\n\t\t\t\t\t\tstroke-width=\"1\"\r\n\t\t\t\t\t\tclass=\"line-point\"\r\n\t\t\t\t\t\t@mouseenter=\"handlePointHover(index)\"\r\n\t\t\t\t\t\t@click=\"handlePointClick(index)\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<div v-if=\"hoveredIndex !== null\" class=\"line-tooltip\">\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t\tlineData[hoveredIndex].raw ||\r\n\t\t\t\t\t\tformatNumber(lineData[hoveredIndex].y, fieldKey)\r\n\t\t\t\t\t}}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(field) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed, ref } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"chartClick\"]);\r\n\r\n\tconst hoveredIndex = ref(null);\r\n\tconst activeIndex = ref(null);\r\n\tconst isLineHovered = ref(false);\r\n\tconst isTextHovered = ref(false);\r\n\r\n\t// 颜色定义\r\n\tconst pieColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst barColors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\r\n\t// 柱状图宽度计算\r\n\tconst barWidth = computed(() => {\r\n\t\tconst count = simpleBarData.value.length;\r\n\t\tif (count <= 1) return 30; // 单个柱子宽度限制为30%\r\n\t\treturn Math.min(30, 100 / count); // 多个柱子时均分宽度，最大不超过30%\r\n\t});\r\n\r\n\t// 交互处理函数\r\n\tconst handlePieHover = index => {\r\n\t\thoveredIndex.value = index;\r\n\t};\r\n\r\n\tconst handleBarHover = index => {\r\n\t\thoveredIndex.value = index;\r\n\t};\r\n\r\n\tconst handlePointHover = index => {\r\n\t\thoveredIndex.value = index;\r\n\t};\r\n\r\n\tconst handleLineHover = () => {\r\n\t\tisLineHovered.value = true;\r\n\t};\r\n\r\n\tconst handleTextHover = () => {\r\n\t\tisTextHovered.value = true;\r\n\t};\r\n\r\n\tconst resetHover = () => {\r\n\t\thoveredIndex.value = null;\r\n\t\tisLineHovered.value = false;\r\n\t\tisTextHovered.value = false;\r\n\t};\r\n\r\n\tconst handlePieClick = index => {\r\n\t\tactiveIndex.value = index;\r\n\t\temit(\"chartClick\", {\r\n\t\t\ttype: \"pie\",\r\n\t\t\tindex,\r\n\t\t\tdata: pieData.value[index],\r\n\t\t\tvalue: pieData.value[index].value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleBarClick = index => {\r\n\t\tactiveIndex.value = index;\r\n\t\temit(\"chartClick\", {\r\n\t\t\ttype: \"bar\",\r\n\t\t\tindex,\r\n\t\t\tdata: simpleBarData.value[index],\r\n\t\t\tvalue: simpleBarData.value[index].value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handlePointClick = index => {\r\n\t\tactiveIndex.value = index;\r\n\t\temit(\"chartClick\", {\r\n\t\t\ttype: \"line\",\r\n\t\t\tindex,\r\n\t\t\tdata: lineData.value[index],\r\n\t\t\tvalue: lineData.value[index].y\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleTextClick = () => {\r\n\t\temit(\"chartClick\", {\r\n\t\t\ttype: \"text\",\r\n\t\t\tdata: props.field,\r\n\t\t\tvalue: props.field\r\n\t\t});\r\n\t};\r\n\r\n\t// 单位转换因子\r\n\tconst getUnitFactor = fieldKey => {\r\n\t\tswitch (fieldKey) {\r\n\t\t\tcase \"GDP\":\r\n\t\t\t\treturn 1e12;\r\n\t\t\tcase \"Population\":\r\n\t\t\t\treturn 1e8;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 1;\r\n\t\t}\r\n\t};\r\n\r\n\t// 检查是否是时间格式\r\n\tconst isTimeFormat = value => {\r\n\t\treturn typeof value === \"string\" && /^\\d{1,2}:\\d{2}(:\\d{2})?$/.test(value);\r\n\t};\r\n\r\n\t// 检查是否是年份条目\r\n\tconst isYearEntry = value => {\r\n\t\tif (typeof value !== \"string\") return false;\r\n\t\tconst trimmedValue = value.trim();\r\n\t\treturn (\r\n\t\t\t/^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t/^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) ||\r\n\t\t\t/^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t/^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue)\r\n\t\t);\r\n\t};\r\n\r\n\t// 安全转换为数字\r\n\tconst safeToNumber = (value, fieldKey) => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (isTimeFormat(value)) return null;\r\n\t\tif (isYearEntry(value)) return null;\r\n\t\tif (typeof value === \"number\") return value / getUnitFactor(fieldKey);\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst percentMatch = value.match(/(\\d+\\.?\\d*)%/);\r\n\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num / getUnitFactor(fieldKey);\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 格式化数值\r\n\tconst formatNumber = (value, fieldKey) => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\treturn num.toFixed(1) + \"%\";\r\n\t\t}\r\n\t\tif (fieldKey === \"GDP\") {\r\n\t\t\treturn num.toFixed(2) + \"T\";\r\n\t\t}\r\n\t\tif (fieldKey === \"Population\") {\r\n\t\t\treturn num.toFixed(2) + \"亿\";\r\n\t\t}\r\n\t\treturn num.toFixed(2);\r\n\t};\r\n\r\n\t// 格式化文本\r\n\tconst formatSimpleText = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tconst items = value.map(item => item.raw || item.value || item);\r\n\t\t\treturn items.length > 2\r\n\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t: items.join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || \"-\";\r\n\t\t}\r\n\t\treturn value.toString().length > 50\r\n\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t: value.toString();\r\n\t};\r\n\r\n\t// 检查是否是有效饼图数据\r\n\tconst isValidPieData = computed(() => {\r\n\t\tif (!pieData.value.length) return false;\r\n\t\treturn pieData.value.every(\r\n\t\t\titem => !isYearEntry(item.name) && !isYearEntry(item.value)\r\n\t\t);\r\n\t});\r\n\r\n\t// 饼图数据处理\r\n\tconst pieData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tconst processItem = item => {\r\n\t\t\tconst rawValue = item?.value || item?.raw || item;\r\n\t\t\tif (isYearEntry(rawValue)) return null;\r\n\r\n\t\t\tconst value = safeToNumber(rawValue, props.fieldKey);\r\n\t\t\tif (value === null) return null;\r\n\r\n\t\t\tlet name =\r\n\t\t\t\ttypeof item === \"object\"\r\n\t\t\t\t\t? (item.raw || \"\").replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t: \"项目\";\r\n\r\n\t\t\tif (isYearEntry(name)) return null;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tvalue: Math.min(100, Math.max(0, value)),\r\n\t\t\t\tname: name.trim() || \"项目\"\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.map(processItem)\r\n\t\t\t\t.filter(item => item !== null && !isYearEntry(item.name));\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst result = processItem(props.field);\r\n\t\t\treturn result ? [result] : [];\r\n\t\t}\r\n\r\n\t\tif (isYearEntry(props.field)) return [];\r\n\t\tconst numValue = safeToNumber(props.field, props.fieldKey);\r\n\t\treturn numValue !== null && !isYearEntry(props.field)\r\n\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: Math.min(100, Math.max(0, numValue)),\r\n\t\t\t\t\t\tname: \"数值\"\r\n\t\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t: [];\r\n\t});\r\n\r\n\t// 单个数值的扇形计算（修正后的实现）\r\n\tconst singleValueClipPath = computed(() => {\r\n\t\tif (pieData.value.length !== 1) return \"\";\r\n\t\tconst value = Math.min(100, Math.max(0, pieData.value[0].value));\r\n\t\tconst degrees = (value / 100) * 360;\r\n\r\n\t\t// 修正：确保扇形角度与实际值比例一致\r\n\t\tif (degrees >= 360) return \"circle(50% at 50% 50%)\";\r\n\r\n\t\tconst startAngle = -90;\r\n\t\tconst endAngle = startAngle + degrees;\r\n\r\n\t\tconst startRad = (startAngle * Math.PI) / 180;\r\n\t\tconst endRad = (endAngle * Math.PI) / 180;\r\n\r\n\t\tconst x1 = 50 + 50 * Math.cos(startRad);\r\n\t\tconst y1 = 50 + 50 * Math.sin(startRad);\r\n\t\tconst x2 = 50 + 50 * Math.cos(endRad);\r\n\t\tconst y2 = 50 + 50 * Math.sin(endRad);\r\n\r\n\t\tconst largeArcFlag = degrees <= 180 ? 0 : 1;\r\n\r\n\t\treturn `path(\"M 50 50 L ${x1} ${y1} A 50 50 0 ${largeArcFlag} 1 ${x2} ${y2} Z\")`;\r\n\t});\r\n\r\n\t// 饼图切片计算（修正后的实现）\r\n\tconst pieSlices = computed(() => {\r\n\t\tif (pieData.value.length <= 1) return [];\r\n\r\n\t\tconst total = pieData.value.reduce((sum, item) => sum + item.value, 0);\r\n\t\tif (total <= 0) return [];\r\n\r\n\t\tlet accumulated = 0;\r\n\t\treturn pieData.value.map((item, index) => {\r\n\t\t\tconst startAngle = (accumulated / total) * 360 - 90;\r\n\t\t\taccumulated += item.value;\r\n\t\t\tconst endAngle = (accumulated / total) * 360 - 90;\r\n\r\n\t\t\t// 修正：确保每个扇形有最小1度的角度，避免不可见\r\n\t\t\tconst visibleEndAngle = Math.max(startAngle + 1, endAngle);\r\n\r\n\t\t\tconst startRad = (startAngle * Math.PI) / 180;\r\n\t\t\tconst endRad = (visibleEndAngle * Math.PI) / 180;\r\n\r\n\t\t\tconst x1 = 50 + 50 * Math.cos(startRad);\r\n\t\t\tconst y1 = 50 + 50 * Math.sin(startRad);\r\n\t\t\tconst x2 = 50 + 50 * Math.cos(endRad);\r\n\t\t\tconst y2 = 50 + 50 * Math.sin(endRad);\r\n\r\n\t\t\tconst largeArcFlag = visibleEndAngle - startAngle <= 180 ? 0 : 1;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: pieColors[index % pieColors.length],\r\n\t\t\t\t\tclipPath: `path(\"M 50 50 L ${x1} ${y1} A 50 50 0 ${largeArcFlag} 1 ${x2} ${y2} Z\")`\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\t// 柱状图数据\r\n\tconst simpleBarData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tlet values = [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\tvalues = props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null && !isYearEntry(value);\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => safeToNumber(item.value || item.raw, props.fieldKey));\r\n\t\t} else if (typeof props.field === \"object\") {\r\n\t\t\tvalues = [\r\n\t\t\t\tsafeToNumber(props.field.value || props.field.raw, props.fieldKey)\r\n\t\t\t].filter(v => v !== null);\r\n\t\t} else {\r\n\t\t\tvalues = [safeToNumber(props.field, props.fieldKey)].filter(\r\n\t\t\t\tv => v !== null\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (values.length === 0) return [];\r\n\r\n\t\tconst max = Math.max(...values, 1);\r\n\t\treturn values.map((v, index) => ({\r\n\t\t\tvalue: v,\r\n\t\t\theight: (v / max) * 100,\r\n\t\t\tcolor: barColors[index % barColors.length]\r\n\t\t}));\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null && !isYearEntry(value);\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = safeToNumber(item.value || item.raw, props.fieldKey);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: index,\r\n\t\t\t\t\t\ty: value,\r\n\t\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = safeToNumber(\r\n\t\t\t\tprops.field.value || props.field.raw,\r\n\t\t\t\tprops.fieldKey\r\n\t\t\t);\r\n\t\t\treturn value !== null\r\n\t\t\t\t? [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: value,\r\n\t\t\t\t\t\t\traw: props.field.raw || props.field.value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t  ]\r\n\t\t\t\t: [];\r\n\t\t}\r\n\r\n\t\tconst value = safeToNumber(props.field, props.fieldKey);\r\n\t\treturn value !== null\r\n\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: value,\r\n\t\t\t\t\t\traw: props.field\r\n\t\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t: [];\r\n\t});\r\n\r\n\t// 折线图点\r\n\tconst linePointsArray = computed(() => {\r\n\t\tif (lineData.value.length === 0) return [];\r\n\r\n\t\tconst maxY = Math.max(...lineData.value.map(p => p.y), 1);\r\n\t\tconst minY = Math.min(...lineData.value.map(p => p.y), 0);\r\n\t\tconst rangeY = maxY - minY;\r\n\r\n\t\treturn lineData.value.map(point => {\r\n\t\t\tconst x = (point.x / (lineData.value.length - 1)) * 100;\r\n\t\t\tconst y = rangeY > 0 ? 50 - ((point.y - minY) / rangeY) * 50 : 25;\r\n\t\t\treturn { x, y };\r\n\t\t});\r\n\t});\r\n\r\n\tconst linePoints = computed(() => {\r\n\t\treturn linePointsArray.value.map(p => `${p.x},${p.y}`).join(\" \");\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return props.field.length > 0;\r\n\t\tif (typeof props.field === \"object\")\r\n\t\t\treturn Object.keys(props.field).length > 0;\r\n\t\treturn String(props.field).trim().length > 0;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t/* 文本样式 */\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -25px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t/* 饼图样式 */\r\n\t.simple-pie-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t\twidth: 100%;\r\n\t\tposition: relative;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.simple-pie {\r\n\t\twidth: 80px;\r\n\t\theight: 80px;\r\n\t\tborder-radius: 50%;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t\tcursor: pointer;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\ttransition: transform 0.3s ease;\r\n\t}\r\n\r\n\t.simple-pie:hover {\r\n\t\ttransform: scale(1.05);\r\n\t}\r\n\r\n\t.pie-slice-bg {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tz-index: 0;\r\n\t}\r\n\r\n\t.pie-slice {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\ttransform-origin: center;\r\n\t\tz-index: 1;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.pie-slice-hover {\r\n\t\ttransform: scale(1.1);\r\n\t\topacity: 0.9;\r\n\t\tz-index: 2;\r\n\t\tfilter: brightness(1.1);\r\n\t}\r\n\r\n\t.pie-slice-active {\r\n\t\tfilter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\r\n\t.pie-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -30px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n\r\n\t/* 柱状图样式 */\r\n\t.simple-bars-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t\twidth: 100%;\r\n\t\tposition: relative;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.simple-bars {\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-end;\r\n\t\theight: 80px;\r\n\t\tgap: 6px;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 15px;\r\n\t\tcursor: pointer;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.simple-bar {\r\n\t\tmin-width: 8px;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tborder-radius: 4px 4px 0 0;\r\n\t\tposition: relative;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\r\n\t.bar-hover {\r\n\t\ttransform: translateY(-5px);\r\n\t\topacity: 0.9;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\tfilter: brightness(1.1);\r\n\t}\r\n\r\n\t.bar-active {\r\n\t\tfilter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\r\n\t.bar-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -30px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n\r\n\t/* 折线图样式 */\r\n\t.simple-line-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t\twidth: 100%;\r\n\t\tposition: relative;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.line-svg {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.line-path {\r\n\t\ttransition: all 0.3s ease;\r\n\t\tstroke-linecap: round;\r\n\t\tstroke-linejoin: round;\r\n\t}\r\n\r\n\t.line-point {\r\n\t\ttransition: all 0.3s ease;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.line-point:hover {\r\n\t\tr: 5;\r\n\t\tstroke-width: 1.5;\r\n\t}\r\n\r\n\t.line-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -30px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t}\r\n\r\n\t/* 无数据样式 */\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes pulse {\r\n\t\t0% {\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform: scale(1.05);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n\r\n\t@keyframes bounce {\r\n\t\t0%,\r\n\t\t100% {\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform: translateY(-5px);\r\n\t\t}\r\n\t}\r\n\r\n\t.pie-slice-hover,\r\n\t.bar-hover {\r\n\t\tanimation: pulse 1.5s infinite;\r\n\t}\r\n\r\n\t.line-point:hover {\r\n\t\tanimation: bounce 0.5s ease infinite;\r\n\t}\r\n\r\n\t/* 响应式调整 */\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-pie {\r\n\t\t\twidth: 60px;\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.simple-bars {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.line-svg {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}