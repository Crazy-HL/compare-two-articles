{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n    const isInitializing = ref(false);\n    const hasAutoCompared = ref(false);\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n\n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    };\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n\n    // 自动对比首个属性\n    const autoCompareFirstAttribute = () => {\n      if (hasAutoCompared.value || !div1RawData.value || !div3RawData.value) return;\n      isInitializing.value = true;\n      hasAutoCompared.value = true;\n      const firstKey = Object.keys(div1RawData.value)[0];\n      if (!firstKey) {\n        isInitializing.value = false;\n        return;\n      }\n      chatHistory.value.push({\n        role: \"assistant\",\n        content: \"正在自动对比第一个属性...\",\n        timestamp: new Date().toLocaleString()\n      });\n      handleAttributeComparison({\n        fieldKey: firstKey,\n        leftData: div1RawData.value,\n        rightData: div3RawData.value,\n        leftTitle: \"数据集1\",\n        rightTitle: \"数据集2\",\n        fieldType: typeof div1RawData.value[firstKey],\n        fieldLabel: firstKey\n      }).finally(() => {\n        isInitializing.value = false;\n      });\n    };\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n\n      // 设置初始自动对比检查\n      setTimeout(autoCompareFirstAttribute, 500);\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n\n      // 数据变化时检查是否需要自动对比\n      autoCompareFirstAttribute();\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n      text = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n      return text;\n    };\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"问题不能为空\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      const question = userQuestion.value;\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      isLoading.value = true;\n      try {\n        await api.post(\"gpt_ask_chart\", {\n          question: question,\n          chartData: currentChartData.value,\n          chartType: currentChartType.value\n        }, response => {\n          const formattedAnswer = formatAnalysisResult(response.answer);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formattedAnswer,\n            timestamp: new Date().toLocaleString()\n          });\n          scrollToBottom();\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `请求失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n    const handleAttributeComparison = async _ref2 => {\n      let {\n        fieldKey,\n        leftData,\n        rightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref2;\n      if (!leftData || !rightData) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请先选择要对比的数据\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      isLoading.value = true;\n      try {\n        await api.post(\"analyze_chart\", {\n          chartData: {\n            leftData,\n            rightData,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType\n          },\n          chartType: \"comparison\"\n        }, response => {\n          if (response?.analysis) {\n            const formattedAnalysis = formatAnalysisResult(response.analysis);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnalysis,\n              timestamp: new Date().toLocaleString()\n            });\n          } else {\n            throw new Error(\"无效的响应格式\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `对比分析失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      currentChartData,\n      currentChartType,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      isInitializing,\n      hasAutoCompared,\n      loadChatHistory,\n      scrollToBottom,\n      handleDiv1Event,\n      handleDiv3Event,\n      autoCompareFirstAttribute,\n      handleSelection,\n      getPlainTextFromSelection,\n      formatAnalysisResult,\n      askQuestion,\n      handleAttributeComparison,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","userQuestion","chatHistory","selectText2","selectText3","currentChartData","currentChartType","div1RawData","div3RawData","isLoading","isInitializing","hasAutoCompared","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","handleDiv1Event","data","handleSelection","handleDiv3Event","autoCompareFirstAttribute","firstKey","Object","keys","push","role","content","timestamp","Date","toLocaleString","handleAttributeComparison","fieldKey","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","finally","on","setTimeout","off","source","plainText","getPlainTextFromSelection","htmlContent","createElement","innerHTML","innerText","textContent","formatAnalysisResult","text","replace","askQuestion","trim","question","api","post","chartData","chartType","response","formattedAnswer","answer","message","_ref2","analysis","formattedAnalysis","Error"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading || isInitializing\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading || isInitializing\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"isInitializing\" class=\"initial-loading-overlay\">\r\n\t\t\t<div class=\"initial-loading-content\">\r\n\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t<p>正在初始化数据对比...</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst isInitializing = ref(false);\r\n\tconst hasAutoCompared = ref(false);\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 滚动到底部\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\t// 自动对比首个属性\r\n\tconst autoCompareFirstAttribute = () => {\r\n\t\tif (hasAutoCompared.value || !div1RawData.value || !div3RawData.value)\r\n\t\t\treturn;\r\n\r\n\t\tisInitializing.value = true;\r\n\t\thasAutoCompared.value = true;\r\n\r\n\t\tconst firstKey = Object.keys(div1RawData.value)[0];\r\n\t\tif (!firstKey) {\r\n\t\t\tisInitializing.value = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: \"正在自动对比第一个属性...\",\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\r\n\t\thandleAttributeComparison({\r\n\t\t\tfieldKey: firstKey,\r\n\t\t\tleftData: div1RawData.value,\r\n\t\t\trightData: div3RawData.value,\r\n\t\t\tleftTitle: \"数据集1\",\r\n\t\t\trightTitle: \"数据集2\",\r\n\t\t\tfieldType: typeof div1RawData.value[firstKey],\r\n\t\t\tfieldLabel: firstKey\r\n\t\t}).finally(() => {\r\n\t\t\tisInitializing.value = false;\r\n\t\t});\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\r\n\t\t// 设置初始自动对比检查\r\n\t\tsetTimeout(autoCompareFirstAttribute, 500);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\r\n\t\t// 数据变化时检查是否需要自动对比\r\n\t\tautoCompareFirstAttribute();\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"gpt_ask_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tquestion: question,\r\n\t\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\t\tchartType: currentChartType.value\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!leftData || !rightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"analyze_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.message-meta {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #999;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tposition: sticky;\r\n\t\tbottom: 0;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.initial-loading-overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.initial-loading-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px 30px;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 15px;\r\n\t}\r\n\r\n\t.initial-loading-content p {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:disabled {\r\n\t\tbackground-color: #eee;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\tbackground-color: #45a049;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\tbutton:active:not(:disabled) {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}