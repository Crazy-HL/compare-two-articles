{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport * as d3 from \"d3\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\n\n// 状态管理\n\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const debugMode = ref(true); // 开发时设为true，生产环境设为false\n\n    // 接收到的内容存储（增强版）\n    const receivedContents = ref({\n      div1: {\n        primary: null,\n        // 主内容\n        linked: null // 关联内容\n      },\n      div3: {\n        primary: null,\n        linked: null\n      }\n    });\n\n    // 调试函数\n    const showReceivedData = () => {\n      console.log(\"当前接收内容:\", JSON.parse(JSON.stringify(receivedContents.value)));\n      alert(`\n    Div1内容: ${receivedContents.value.div1.primary ? \"已接收\" : \"未接收\"}\n    Div3内容: ${receivedContents.value.div3.primary ? \"已接收\" : \"未接收\"}\n  `);\n    };\n\n    // 事件处理函数（兼容新旧版本）\n    const handleDiv1Event = data => {\n      console.log(\"[Div2] 收到Div1事件:\", data);\n\n      // 统一处理逻辑\n      if (data.type === \"linked\") {\n        receivedContents.value.div1.linked = data.content;\n      } else {\n        // 主内容或旧版数据\n        receivedContents.value.div1.primary = data.content;\n\n        // 同时更新selectText2（兼容旧代码）\n        selectText2.value = getPlainTextFromSelection(data.content);\n      }\n    };\n    const handleDiv3Event = data => {\n      console.log(\"[Div2] 收到Div3事件:\", data);\n      if (data.type === \"linked\") {\n        receivedContents.value.div3.linked = data.content;\n      } else {\n        receivedContents.value.div3.primary = data.content;\n        selectText3.value = getPlainTextFromSelection(data.content);\n      }\n    };\n\n    // 兼容旧版代码（保留selectText引用）\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n\n    // 从HTML内容提取纯文本\n    const getPlainTextFromSelection = htmlContent => {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    };\n\n    // 图表拖拽相关\n    const handleDragStart = event => {\n      event.dataTransfer.setData(\"application/json\", JSON.stringify({\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }));\n      console.log(\"拖拽数据已设置:\", currentChartData.value);\n    };\n    const handleDrop = event => {\n      event.preventDefault();\n      const data = event.dataTransfer.getData(\"application/json\");\n      if (data) {\n        try {\n          const {\n            chartData,\n            chartType\n          } = JSON.parse(data);\n          currentChartData.value = chartData;\n          currentChartType.value = chartType;\n          analyzeChart(chartData, chartType);\n        } catch (error) {\n          console.error(\"解析拖拽数据失败:\", error);\n        }\n      }\n    };\n\n    // 图表分析\n    const analyzeChart = (chartData, chartType) => {\n      api.post(\"analyze_chart\", {\n        chartData,\n        chartType\n      }, response => {\n        if (response?.analysis) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatAnalysisResult(response.analysis)\n          });\n        }\n      }, error => {\n        console.error(\"图表分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"图表分析失败，请稍后重试。\"\n        });\n      });\n    };\n\n    // 格式化分析结果\n    const formatAnalysisResult = text => {\n      return text.replace(/### (.*)/g, \"<h3>$1</h3>\").replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\n/g, \"<br>\").replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\").replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n    };\n\n    // 提问功能\n    const askQuestion = () => {\n      if (!userQuestion.value.trim()) {\n        alert(\"请输入问题！\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      api.post(\"gpt_ask_chart\", {\n        question: userQuestion.value,\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }, response => {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formatAnalysisResult(response.answer)\n        });\n      }, error => {\n        console.error(\"请求失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请求失败，请稍后重试。\"\n        });\n      });\n      userQuestion.value = \"\";\n    };\n\n    // 文本对比\n    const compareTexts = async () => {\n      if (!receivedContents.value.div1.primary || !receivedContents.value.div3.primary) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        api.post(\"gpt_compare\", {\n          text1: getPlainTextFromSelection(receivedContents.value.div1.primary),\n          text2: getPlainTextFromSelection(receivedContents.value.div3.primary)\n        }, data => {\n          if (data) {\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: data.result\n            });\n          }\n        });\n      } catch (error) {\n        console.error(\"对比失败:\", error);\n      }\n    };\n\n    // 合并可视化\n    const mergedJson = async () => {\n      const {\n        div1,\n        div3\n      } = receivedContents.value;\n      if (!div1.primary || !div3.primary) {\n        alert(\"请先在两篇文章中选择内容！\");\n        return;\n      }\n      try {\n        api.post(\"merged_json\", {\n          text1: div1.primary,\n          text2: div3.primary,\n          text1Plain: getPlainTextFromSelection(div1.primary),\n          text2Plain: getPlainTextFromSelection(div3.primary)\n        }, data => {\n          if (data.error) {\n            console.error(\"后端错误:\", data.error);\n            return;\n          }\n          currentChartData.value = data.json_data;\n          currentChartType.value = data.chart_classification;\n          if (data.yes_no === \"no\") {\n            renderNonVisualChart(\".chart-container\", data, {\n              message: \"当前数据无法合并\"\n            });\n            return;\n          }\n          renderChart(data.json_data, data.chart_classification);\n\n          // 更新两侧图表\n          if (data.div1_json) {\n            bus.emit(\"updateChart1\", {\n              jsonData: data.div1_json,\n              chartType: data.chart_classification\n            });\n          }\n          if (data.div3_json) {\n            bus.emit(\"updateChart3\", {\n              jsonData: data.div3_json,\n              chartType: data.chart_classification\n            });\n          }\n        });\n      } catch (error) {\n        console.error(\"合并失败:\", error);\n        alert(\"合并数据时出错，请稍后重试\");\n      }\n    };\n\n    // 图表渲染\n    const renderChart = (rawJsonData, chartType) => {\n      const container = document.querySelector(\".chart-container\");\n      if (!container) return;\n      container.innerHTML = \"\";\n      if (!rawJsonData || typeof rawJsonData !== \"object\") {\n        renderNonVisualChart(container, rawJsonData, {\n          message: \"JSON数据无效\"\n        });\n        return;\n      }\n      const data = rawJsonData.data || rawJsonData;\n      const options = rawJsonData.options || {};\n      switch (chartType) {\n        case \"Line Chart\":\n          renderLineChart(container, data, options);\n          break;\n        case \"Bar Chart\":\n          renderBarChart(container, rawJsonData);\n          break;\n        case \"Pie Chart\":\n          renderPieChart(container, data, options);\n          break;\n        case \"Stacked Bar Chart\":\n          renderStackedBarChart(container, data, options);\n          break;\n        case \"Radar Chart\":\n          renderRadarChart(container, rawJsonData);\n          break;\n        case \"Scatter Chart\":\n          renderScatterChart(container, rawJsonData);\n          break;\n        default:\n          console.error(\"未知图表类型:\", chartType);\n      }\n    };\n\n    // 生命周期\n    onMounted(() => {\n      // 监听所有可能的事件格式\n      bus.on(\"div1Event\", handleDiv1Event);\n      bus.on(\"div3Event\", handleDiv3Event);\n      bus.on(\"div1_Event\", handleDiv1Event); // 兼容带下划线版本\n      bus.on(\"div3_Event\", handleDiv3Event);\n      console.log(\"Div2已挂载，监听事件:\", {\n        div1: bus._events[\"div1Event\"]?.length,\n        div3: bus._events[\"div3Event\"]?.length\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1Event\", handleDiv1Event);\n      bus.off(\"div3Event\", handleDiv3Event);\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n    });\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      currentChartData,\n      currentChartType,\n      debugMode,\n      receivedContents,\n      showReceivedData,\n      handleDiv1Event,\n      handleDiv3Event,\n      selectText2,\n      selectText3,\n      getPlainTextFromSelection,\n      handleDragStart,\n      handleDrop,\n      analyzeChart,\n      formatAnalysisResult,\n      askQuestion,\n      compareTexts,\n      mergedJson,\n      renderChart,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      get d3() {\n        return d3;\n      },\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","d3","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","userQuestion","chatHistory","currentChartData","currentChartType","debugMode","receivedContents","div1","primary","linked","div3","showReceivedData","console","log","JSON","parse","stringify","value","alert","handleDiv1Event","data","type","content","selectText2","getPlainTextFromSelection","handleDiv3Event","selectText3","htmlContent","container","document","createElement","innerHTML","innerText","textContent","handleDragStart","event","dataTransfer","setData","chartData","chartType","handleDrop","preventDefault","getData","analyzeChart","error","api","post","response","analysis","push","role","formatAnalysisResult","text","replace","askQuestion","trim","question","answer","compareTexts","text1","text2","result","mergedJson","text1Plain","text2Plain","json_data","chart_classification","yes_no","message","renderChart","div1_json","emit","jsonData","div3_json","rawJsonData","querySelector","options","on","_events","length","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 图表容器 -->\r\n\t\t\t<div\r\n\t\t\t\tref=\"chart\"\r\n\t\t\t\tclass=\"chart-container\"\r\n\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t@dragstart=\"handleDragStart\"></div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"submit-btn\">合并数据可视化</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 调试信息（开发时可显示） -->\r\n\t\t<div v-if=\"debugMode\" class=\"debug-info\">\r\n\t\t\t<h3>接收状态</h3>\r\n\t\t\t<p>Div1内容: {{ receivedContents.div1.primary ? \"已接收\" : \"未接收\" }}</p>\r\n\t\t\t<p>Div3内容: {{ receivedContents.div3.primary ? \"已接收\" : \"未接收\" }}</p>\r\n\t\t\t<button @click=\"showReceivedData\">显示接收数据</button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\t// 状态管理\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst debugMode = ref(true); // 开发时设为true，生产环境设为false\r\n\r\n\t// 接收到的内容存储（增强版）\r\n\tconst receivedContents = ref({\r\n\t\tdiv1: {\r\n\t\t\tprimary: null, // 主内容\r\n\t\t\tlinked: null // 关联内容\r\n\t\t},\r\n\t\tdiv3: {\r\n\t\t\tprimary: null,\r\n\t\t\tlinked: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 调试函数\r\n\tconst showReceivedData = () => {\r\n\t\tconsole.log(\r\n\t\t\t\"当前接收内容:\",\r\n\t\t\tJSON.parse(JSON.stringify(receivedContents.value))\r\n\t\t);\r\n\t\talert(`\r\n    Div1内容: ${receivedContents.value.div1.primary ? \"已接收\" : \"未接收\"}\r\n    Div3内容: ${receivedContents.value.div3.primary ? \"已接收\" : \"未接收\"}\r\n  `);\r\n\t};\r\n\r\n\t// 事件处理函数（兼容新旧版本）\r\n\tconst handleDiv1Event = data => {\r\n\t\tconsole.log(\"[Div2] 收到Div1事件:\", data);\r\n\r\n\t\t// 统一处理逻辑\r\n\t\tif (data.type === \"linked\") {\r\n\t\t\treceivedContents.value.div1.linked = data.content;\r\n\t\t} else {\r\n\t\t\t// 主内容或旧版数据\r\n\t\t\treceivedContents.value.div1.primary = data.content;\r\n\r\n\t\t\t// 同时更新selectText2（兼容旧代码）\r\n\t\t\tselectText2.value = getPlainTextFromSelection(data.content);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDiv3Event = data => {\r\n\t\tconsole.log(\"[Div2] 收到Div3事件:\", data);\r\n\r\n\t\tif (data.type === \"linked\") {\r\n\t\t\treceivedContents.value.div3.linked = data.content;\r\n\t\t} else {\r\n\t\t\treceivedContents.value.div3.primary = data.content;\r\n\t\t\tselectText3.value = getPlainTextFromSelection(data.content);\r\n\t\t}\r\n\t};\r\n\r\n\t// 兼容旧版代码（保留selectText引用）\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\r\n\t// 从HTML内容提取纯文本\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\t// 图表拖拽相关\r\n\tconst handleDragStart = event => {\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(\"拖拽数据已设置:\", currentChartData.value);\r\n\t};\r\n\r\n\tconst handleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst data = event.dataTransfer.getData(\"application/json\");\r\n\r\n\t\tif (data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { chartData, chartType } = JSON.parse(data);\r\n\t\t\t\tcurrentChartData.value = chartData;\r\n\t\t\t\tcurrentChartType.value = chartType;\r\n\t\t\t\tanalyzeChart(chartData, chartType);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"解析拖拽数据失败:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 图表分析\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t\tapi.post(\r\n\t\t\t\"analyze_chart\",\r\n\t\t\t{ chartData, chartType },\r\n\t\t\tresponse => {\r\n\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formatAnalysisResult(response.analysis)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"图表分析失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"图表分析失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\treturn text\r\n\t\t\t.replace(/### (.*)/g, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\")\r\n\t\t\t.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t};\r\n\r\n\t// 提问功能\r\n\tconst askQuestion = () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\tapi.post(\r\n\t\t\t\"gpt_ask_chart\",\r\n\t\t\t{\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(response.answer)\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"请求失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tuserQuestion.value = \"\";\r\n\t};\r\n\r\n\t// 文本对比\r\n\tconst compareTexts = async () => {\r\n\t\tif (\r\n\t\t\t!receivedContents.value.div1.primary ||\r\n\t\t\t!receivedContents.value.div3.primary\r\n\t\t) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{\r\n\t\t\t\t\ttext1: getPlainTextFromSelection(receivedContents.value.div1.primary),\r\n\t\t\t\t\ttext2: getPlainTextFromSelection(receivedContents.value.div3.primary)\r\n\t\t\t\t},\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: data.result\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比失败:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\t// 合并可视化\r\n\tconst mergedJson = async () => {\r\n\t\tconst { div1, div3 } = receivedContents.value;\r\n\r\n\t\tif (!div1.primary || !div3.primary) {\r\n\t\t\talert(\"请先在两篇文章中选择内容！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{\r\n\t\t\t\t\ttext1: div1.primary,\r\n\t\t\t\t\ttext2: div3.primary,\r\n\t\t\t\t\ttext1Plain: getPlainTextFromSelection(div1.primary),\r\n\t\t\t\t\ttext2Plain: getPlainTextFromSelection(div3.primary)\r\n\t\t\t\t},\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端错误:\", data.error);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentChartData.value = data.json_data;\r\n\t\t\t\t\tcurrentChartType.value = data.chart_classification;\r\n\r\n\t\t\t\t\tif (data.yes_no === \"no\") {\r\n\t\t\t\t\t\trenderNonVisualChart(\".chart-container\", data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法合并\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trenderChart(data.json_data, data.chart_classification);\r\n\r\n\t\t\t\t\t// 更新两侧图表\r\n\t\t\t\t\tif (data.div1_json) {\r\n\t\t\t\t\t\tbus.emit(\"updateChart1\", {\r\n\t\t\t\t\t\t\tjsonData: data.div1_json,\r\n\t\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.div3_json) {\r\n\t\t\t\t\t\tbus.emit(\"updateChart3\", {\r\n\t\t\t\t\t\t\tjsonData: data.div3_json,\r\n\t\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"合并失败:\", error);\r\n\t\t\talert(\"合并数据时出错，请稍后重试\");\r\n\t\t}\r\n\t};\r\n\r\n\t// 图表渲染\r\n\tconst renderChart = (rawJsonData, chartType) => {\r\n\t\tconst container = document.querySelector(\".chart-container\");\r\n\t\tif (!container) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\trenderNonVisualChart(container, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON数据无效\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = rawJsonData.data || rawJsonData;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\tswitch (chartType) {\r\n\t\t\tcase \"Line Chart\":\r\n\t\t\t\trenderLineChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bar Chart\":\r\n\t\t\t\trenderBarChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Pie Chart\":\r\n\t\t\t\trenderPieChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stacked Bar Chart\":\r\n\t\t\t\trenderStackedBarChart(container, data, options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Radar Chart\":\r\n\t\t\t\trenderRadarChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Scatter Chart\":\r\n\t\t\t\trenderScatterChart(container, rawJsonData);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(\"未知图表类型:\", chartType);\r\n\t\t}\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\t// 监听所有可能的事件格式\r\n\t\tbus.on(\"div1Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event); // 兼容带下划线版本\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\r\n\t\tconsole.log(\"Div2已挂载，监听事件:\", {\r\n\t\t\tdiv1: bus._events[\"div1Event\"]?.length,\r\n\t\t\tdiv3: bus._events[\"div3Event\"]?.length\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t/* 调试信息样式 */\r\n\t.debug-info {\r\n\t\tposition: fixed;\r\n\t\tbottom: 10px;\r\n\t\tright: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 5px;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tfont-size: 12px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}