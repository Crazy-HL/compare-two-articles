{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-201e19b8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"full-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"full-text\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_9 = {\n  class: \"full-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.formattedText, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 完整饼图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode($setup[\"PieChart\"], {\n    data: $setup.pieChartData\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 完整柱状图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode($setup[\"BarChart\"], {\n    data: $setup.barChartData\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 完整折线图 \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode($setup[\"LineChart\"], {\n    data: $setup.lineChartData\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"无可用数据\"))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.formattedText, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$props","visualization","_hoisted_2","_Fragment","_renderList","$setup","formattedText","item","index","hasData","_hoisted_3","_createVNode","data","pieChartData","_hoisted_4","_hoisted_5","barChartData","_hoisted_6","_hoisted_7","lineChartData","_hoisted_8","_createElementVNode","_hoisted_9"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FullChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"full-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedText\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ item }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<PieChart :data=\"pieChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<BarChart :data=\"barChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<LineChart :data=\"lineChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedText\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ item }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport PieChart from \"./charts/PieChart.vue\";\r\n\timport BarChart from \"./charts/BarChart.vue\";\r\n\timport LineChart from \"./charts/LineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String\r\n\t});\r\n\r\n\t// 安全转换为数字\r\n\tconst safeToNumber = value => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (typeof value === \"number\") return value;\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 格式化文本\r\n\tconst formattedText = computed(() => {\r\n\t\tif (!props.field) return [\"-\"];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field.map(item => {\r\n\t\t\t\tif (typeof item === \"object\") {\r\n\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\tif (item.raw) text = item.raw;\r\n\t\t\t\t\telse if (item.value) text = item.value;\r\n\t\t\t\t\telse text = JSON.stringify(item);\r\n\r\n\t\t\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\treturn item.toString();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tlet text = \"\";\r\n\t\t\tif (props.field.raw) text = props.field.raw;\r\n\t\t\telse if (props.field.value) text = props.field.value;\r\n\t\t\telse text = JSON.stringify(props.field);\r\n\r\n\t\t\tif (props.field.unit) text += ` ${props.field.unit}`;\r\n\t\t\tif (props.field.year) text += ` (${props.field.year})`;\r\n\t\t\treturn [text];\r\n\t\t}\r\n\r\n\t\treturn [props.field.toString()];\r\n\t});\r\n\r\n\t// 饼图数据\r\n\tconst pieChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tlet value = safeToNumber(item.value || item.raw);\r\n\t\t\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t...(item.unit ? { unit: item.unit } : {}),\r\n\t\t\t\t\t\t...(item.year ? { year: item.year } : {})\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tlet value = safeToNumber(props.field.value || props.field.raw);\r\n\t\t\tvalue = Math.min(100, Math.max(0, value));\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\t...(props.field.unit ? { unit: props.field.unit } : {}),\r\n\t\t\t\t\t...(props.field.year ? { year: props.field.year } : {})\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 柱状图数据\r\n\tconst barChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = safeToNumber(item.value || item.raw);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t...(item.unit ? { unit: item.unit } : {}),\r\n\t\t\t\t\t\t...(item.year ? { year: item.year } : {})\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = safeToNumber(props.field.value || props.field.raw);\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\t...(props.field.unit ? { unit: props.field.unit } : {}),\r\n\t\t\t\t\t...(props.field.year ? { year: props.field.year } : {})\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tconst value = safeToNumber(props.field);\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tname: \"值\",\r\n\t\t\t\tvalue\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item?.value || item?.raw;\r\n\t\t\t\t\treturn value !== undefined && value !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = safeToNumber(item.value || item.raw);\r\n\t\t\t\t\tconst year = item.year || index + 1;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tyear,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t...(item.unit ? { unit: item.unit } : {})\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.sort((a, b) => a.year - b.year);\r\n\t\t}\r\n\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = safeToNumber(props.field.value || props.field.raw);\r\n\t\t\tconst year = props.field.year || 1;\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\t...(props.field.unit ? { unit: props.field.unit } : {})\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tconst value = safeToNumber(props.field);\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tyear: 1,\r\n\t\t\t\tvalue\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return props.field.length > 0;\r\n\t\tif (typeof props.field === \"object\")\r\n\t\t\treturn Object.keys(props.field).length > 0;\r\n\t\treturn String(props.field).trim().length > 0;\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.full-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.full-text {\r\n\t\tpadding: 10px;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin-bottom: 8px;\r\n\t\tpadding: 5px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 300px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAY;;EADxBC,GAAA;EAIQD,KAAK,EAAC;;;EAJdC,GAAA;EAgBuBD,KAAK,EAAC;;;EAhB7BC,GAAA;EAmBeD,KAAK,EAAC;;;EAnBrBC,GAAA;EAwBuBD,KAAK,EAAC;;;EAxB7BC,GAAA;EA2BeD,KAAK,EAAC;;;EA3BrBC,GAAA;EAgCuBD,KAAK,EAAC;;;EAhC7BC,GAAA;EAmCeD,KAAK,EAAC;;;EAKbA,KAAK,EAAC;AAAW;;uBAvCxBE,mBAAA,CAgDM,OAhDNC,UAgDM,GA/CLC,mBAAA,UAAa,EACGC,MAAA,CAAAC,aAAa,oB,cAC5BJ,mBAAA,CAOM,OAPNK,UAOM,I,kBANLL,mBAAA,CAKMM,SAAA,QAVVC,WAAA,CAM6BC,MAAA,CAAAC,aAAa,EAN1C,CAMaC,IAAI,EAAEC,KAAK;yBADpBX,mBAAA,CAKM;MAHJD,GAAG,EAAEY,KAAK;MACXb,KAAK,EAAC;wBACHY,IAAI;sCAMWP,MAAA,CAAAC,aAAa,oB,cAAlCJ,mBAAA,CAKWM,SAAA;IApBbP,GAAA;EAAA,IAcEG,mBAAA,UAAa,EAEDM,MAAA,CAAAI,OAAO,I,cAAlBZ,mBAAA,CAEM,OAFNa,UAEM,GADLC,YAAA,CAAiCN,MAAA;IAAtBO,IAAI,EAAEP,MAAA,CAAAQ;EAAY,kC,oBAE9BhB,mBAAA,CAAuC,OAAvCiB,UAAuC,EAAX,OAAK,G,+BAIbd,MAAA,CAAAC,aAAa,oB,cAAlCJ,mBAAA,CAKWM,SAAA;IA5BbP,GAAA;EAAA,IAsBEG,mBAAA,WAAc,EAEFM,MAAA,CAAAI,OAAO,I,cAAlBZ,mBAAA,CAEM,OAFNkB,UAEM,GADLJ,YAAA,CAAiCN,MAAA;IAAtBO,IAAI,EAAEP,MAAA,CAAAW;EAAY,kC,oBAE9BnB,mBAAA,CAAuC,OAAvCoB,UAAuC,EAAX,OAAK,G,+BAIbjB,MAAA,CAAAC,aAAa,qB,cAAlCJ,mBAAA,CAKWM,SAAA;IApCbP,GAAA;EAAA,IA8BEG,mBAAA,WAAc,EAEFM,MAAA,CAAAI,OAAO,I,cAAlBZ,mBAAA,CAEM,OAFNqB,UAEM,GADLP,YAAA,CAAmCN,MAAA;IAAvBO,IAAI,EAAEP,MAAA,CAAAc;EAAa,kC,oBAEhCtB,mBAAA,CAAuC,OAAvCuB,UAAuC,EAAX,OAAK,G,8CAIlCvB,mBAAA,CASWM,SAAA;IAhDbP,GAAA;EAAA,IAsCEG,mBAAA,UAAa,EAEZsB,mBAAA,CAOM,OAPNC,UAOM,I,kBANLzB,mBAAA,CAKMM,SAAA,QA9CVC,WAAA,CA0C6BC,MAAA,CAAAC,aAAa,EA1C1C,CA0CaC,IAAI,EAAEC,KAAK;yBADpBX,mBAAA,CAKM;MAHJD,GAAG,EAAEY,KAAK;MACXb,KAAK,EAAC;wBACHY,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}