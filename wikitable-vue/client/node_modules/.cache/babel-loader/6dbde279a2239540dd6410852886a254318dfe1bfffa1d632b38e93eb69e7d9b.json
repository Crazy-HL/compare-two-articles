{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { computed } from \"vue\";\nexport default {\n  __name: 'WikiComparison',\n  props: {\n    leftTitle: {\n      type: String,\n      required: true\n    },\n    rightTitle: {\n      type: String,\n      required: true\n    },\n    leftData: {\n      type: Object,\n      default: () => ({})\n    },\n    rightData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 分类顺序\n    const orderedCategories = [\"identifiers\", \"temporal\", \"quantitative\", \"categorical\", \"relational\", \"other\"];\n\n    // 分类标签\n    const categoryLabels = {\n      identifiers: \"标识信息\",\n      temporal: \"时间信息\",\n      quantitative: \"量化数据\",\n      categorical: \"分类信息\",\n      relational: \"关联信息\",\n      other: \"其他信息\"\n    };\n\n    // 获取两个数据源共有的字段\n    const getCommonFields = category => {\n      const leftFields = Object.keys(props.leftData?.[category] || {});\n      const rightFields = Object.keys(props.rightData?.[category] || {});\n      return [...new Set([...leftFields, ...rightFields])].sort();\n    };\n\n    // 检查字段值是否不同\n    const isDifferent = (category, field) => {\n      const leftVal = props.leftData?.[category]?.[field];\n      const rightVal = props.rightData?.[category]?.[field];\n      if (!leftVal || !rightVal) return false;\n\n      // 处理对象类型的值\n      if (typeof leftVal === \"object\" && typeof rightVal === \"object\") {\n        return leftVal.normalized !== rightVal.normalized;\n      }\n      return leftVal !== rightVal;\n    };\n\n    // 格式化显示值\n    const formatValue = value => {\n      if (!value) return \"-\";\n      if (typeof value === \"object\") {\n        // 显示量化值的解析结果\n        if (value.normalized) {\n          return `${value.original} (${value.normalized})`;\n        }\n        return value.original || \"-\";\n      }\n      return value;\n    };\n    const __returned__ = {\n      props,\n      orderedCategories,\n      categoryLabels,\n      getCommonFields,\n      isDifferent,\n      formatValue,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","orderedCategories","categoryLabels","identifiers","temporal","quantitative","categorical","relational","other","getCommonFields","category","leftFields","Object","keys","leftData","rightFields","rightData","Set","sort","isDifferent","field","leftVal","rightVal","normalized","formatValue","value","original"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/WikiComparison.vue"],"sourcesContent":["<template>\r\n\t<div class=\"wiki-comparison\">\r\n\t\t<h2 class=\"comparison-title\">{{ leftTitle }} ↔ {{ rightTitle }}</h2>\r\n\r\n\t\t<div\r\n\t\t\tv-for=\"category in orderedCategories\"\r\n\t\t\t:key=\"category\"\r\n\t\t\tclass=\"comparison-category\">\r\n\t\t\t<h3 class=\"category-title\">{{ categoryLabels[category] }}</h3>\r\n\r\n\t\t\t<div class=\"comparison-table\">\r\n\t\t\t\t<div class=\"table-header\">\r\n\t\t\t\t\t<div class=\"header-cell\">属性</div>\r\n\t\t\t\t\t<div class=\"header-cell\">{{ leftTitle }}</div>\r\n\t\t\t\t\t<div class=\"header-cell\">{{ rightTitle }}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"field in getCommonFields(category)\"\r\n\t\t\t\t\t:key=\"field\"\r\n\t\t\t\t\tclass=\"table-row\">\r\n\t\t\t\t\t<div class=\"row-cell field-name\">{{ field }}</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"row-cell\"\r\n\t\t\t\t\t\t:class=\"{ 'diff-cell': isDifferent(category, field) }\">\r\n\t\t\t\t\t\t{{ formatValue(leftData[category]?.[field]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"row-cell\"\r\n\t\t\t\t\t\t:class=\"{ 'diff-cell': isDifferent(category, field) }\">\r\n\t\t\t\t\t\t{{ formatValue(rightData[category]?.[field]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tleftTitle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\trightTitle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tleftData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\trightData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\t// 分类顺序\r\n\tconst orderedCategories = [\r\n\t\t\"identifiers\",\r\n\t\t\"temporal\",\r\n\t\t\"quantitative\",\r\n\t\t\"categorical\",\r\n\t\t\"relational\",\r\n\t\t\"other\"\r\n\t];\r\n\r\n\t// 分类标签\r\n\tconst categoryLabels = {\r\n\t\tidentifiers: \"标识信息\",\r\n\t\ttemporal: \"时间信息\",\r\n\t\tquantitative: \"量化数据\",\r\n\t\tcategorical: \"分类信息\",\r\n\t\trelational: \"关联信息\",\r\n\t\tother: \"其他信息\"\r\n\t};\r\n\r\n\t// 获取两个数据源共有的字段\r\n\tconst getCommonFields = category => {\r\n\t\tconst leftFields = Object.keys(props.leftData?.[category] || {});\r\n\t\tconst rightFields = Object.keys(props.rightData?.[category] || {});\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t};\r\n\r\n\t// 检查字段值是否不同\r\n\tconst isDifferent = (category, field) => {\r\n\t\tconst leftVal = props.leftData?.[category]?.[field];\r\n\t\tconst rightVal = props.rightData?.[category]?.[field];\r\n\r\n\t\tif (!leftVal || !rightVal) return false;\r\n\r\n\t\t// 处理对象类型的值\r\n\t\tif (typeof leftVal === \"object\" && typeof rightVal === \"object\") {\r\n\t\t\treturn leftVal.normalized !== rightVal.normalized;\r\n\t\t}\r\n\r\n\t\treturn leftVal !== rightVal;\r\n\t};\r\n\r\n\t// 格式化显示值\r\n\tconst formatValue = value => {\r\n\t\tif (!value) return \"-\";\r\n\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\t// 显示量化值的解析结果\r\n\t\t\tif (value.normalized) {\r\n\t\t\t\treturn `${value.original} (${value.normalized})`;\r\n\t\t\t}\r\n\t\t\treturn value.original || \"-\";\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.wiki-comparison {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tmax-width: 1000px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.comparison-title {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 30px;\r\n\t\tcolor: #24292e;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t\tpadding-bottom: 10px;\r\n\t}\r\n\r\n\t.comparison-category {\r\n\t\tmargin-bottom: 30px;\r\n\t}\r\n\r\n\t.category-title {\r\n\t\tmargin: 0 0 12px 0;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #0366d6;\r\n\t\tpadding-bottom: 6px;\r\n\t\tborder-bottom: 1px dashed #dfe2e5;\r\n\t}\r\n\r\n\t.comparison-table {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tborder: 1px solid #e1e4e8;\r\n\t\tborder-radius: 6px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.table-header {\r\n\t\tdisplay: contents;\r\n\t}\r\n\r\n\t.header-cell {\r\n\t\tpadding: 10px 12px;\r\n\t\tbackground-color: #f6f8fa;\r\n\t\tfont-weight: 600;\r\n\t\ttext-align: center;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t}\r\n\r\n\t.table-row {\r\n\t\tdisplay: contents;\r\n\t}\r\n\r\n\t.row-cell {\r\n\t\tpadding: 10px 12px;\r\n\t\tborder-bottom: 1px solid #eaecef;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: #fafbfc;\r\n\t}\r\n\r\n\t.diff-cell {\r\n\t\tbackground-color: #fffbdd;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t/* 最后一行去掉底部边框 */\r\n\t.table-row:last-child .row-cell {\r\n\t\tborder-bottom: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;;;;;AAuCC,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAiBZ;;IAEF;IACA,MAAMC,iBAAiB,GAAG,CACzB,aAAa,EACb,UAAU,EACV,cAAc,EACd,aAAa,EACb,YAAY,EACZ,OAAO,CACP;;IAED;IACA,MAAMC,cAAc,GAAG;MACtBC,WAAW,EAAE,MAAM;MACnBC,QAAQ,EAAE,MAAM;MAChBC,YAAY,EAAE,MAAM;MACpBC,WAAW,EAAE,MAAM;MACnBC,UAAU,EAAE,MAAM;MAClBC,KAAK,EAAE;IACR,CAAC;;IAED;IACA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;MACnC,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACd,KAAK,CAACe,QAAQ,GAAGJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChE,MAAMK,WAAW,GAAGH,MAAM,CAACC,IAAI,CAACd,KAAK,CAACiB,SAAS,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAClE,OAAO,CAAC,GAAG,IAAIO,GAAG,CAAC,CAAC,GAAGN,UAAU,EAAE,GAAGI,WAAW,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC;IAC5D,CAAC;;IAED;IACA,MAAMC,WAAW,GAAGA,CAACT,QAAQ,EAAEU,KAAK,KAAK;MACxC,MAAMC,OAAO,GAAGtB,KAAK,CAACe,QAAQ,GAAGJ,QAAQ,CAAC,GAAGU,KAAK,CAAC;MACnD,MAAME,QAAQ,GAAGvB,KAAK,CAACiB,SAAS,GAAGN,QAAQ,CAAC,GAAGU,KAAK,CAAC;MAErD,IAAI,CAACC,OAAO,IAAI,CAACC,QAAQ,EAAE,OAAO,KAAK;;MAEvC;MACA,IAAI,OAAOD,OAAO,KAAK,QAAQ,IAAI,OAAOC,QAAQ,KAAK,QAAQ,EAAE;QAChE,OAAOD,OAAO,CAACE,UAAU,KAAKD,QAAQ,CAACC,UAAU;MAClD;MAEA,OAAOF,OAAO,KAAKC,QAAQ;IAC5B,CAAC;;IAED;IACA,MAAME,WAAW,GAAGC,KAAK,IAAI;MAC5B,IAAI,CAACA,KAAK,EAAE,OAAO,GAAG;MAEtB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC9B;QACA,IAAIA,KAAK,CAACF,UAAU,EAAE;UACrB,OAAO,GAAGE,KAAK,CAACC,QAAQ,KAAKD,KAAK,CAACF,UAAU,GAAG;QACjD;QACA,OAAOE,KAAK,CAACC,QAAQ,IAAI,GAAG;MAC7B;MAEA,OAAOD,KAAK;IACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}