{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"initial-loading\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ê≠£Âú®ÂáÜÂ§áÊï∞ÊçÆÂØπÊØî...\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_7 = {\n  class: \"header left-column\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"ÂØπÊØîÂ±ûÊÄß\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"header right-column\"\n};\nconst _hoisted_10 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_11 = [\"onMouseover\"];\nconst _hoisted_12 = {\n  class: \"field-name\"\n};\nconst _hoisted_13 = {\n  class: \"field-type\"\n};\nconst _hoisted_14 = {\n  class: \"icon-actions\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_18 = {\n  class: \"modal-content\"\n};\nconst _hoisted_19 = {\n  class: \"chart-container\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"chart-legend\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Âä†ËΩΩÁä∂ÊÄÅÊèêÁ§∫ \"), $setup.isInitializing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ‰∏ªÂØπÊØîË°®Ê†º \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_8, _createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.leftInfobox, field.key, 'left'),\n      onMouseout: _cache[0] || (_cache[0] = $event => $setup.unhoverInfobox('left')),\n      onClick: $event => $setup.showFullChart($setup.leftInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], _mergeProps({\n      ref_for: true\n    }, $setup.getChartProps($setup.leftInfobox, field)), null, 16 /* FULL_PROPS */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), _createElementVNode(\"div\", {\n      class: \"cell middle-column\",\n      onMouseover: $event => $setup.hoverBothInfoboxes(field.key),\n      onMouseout: _cache[1] || (_cache[1] = $event => $setup.unhoverBothInfoboxes())\n    }, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(field.typeLabel), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", {\n      class: \"icon-btn compare\",\n      title: \"ÂØπÊØîÂàÜÊûê\",\n      onClick: $event => $setup.handleMiddleColumnClick(field)\n    }, \" ‚öñÔ∏è \", 8 /* PROPS */, _hoisted_15), _createElementVNode(\"span\", {\n      class: \"icon-btn merge\",\n      title: \"ÂêàÂπ∂ÂõæË°®\",\n      onClick: $event => $setup.showCombinedChart(field)\n    }, \" üìä \", 8 /* PROPS */, _hoisted_16)])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.rightInfobox, field.key, 'right'),\n      onMouseout: _cache[2] || (_cache[2] = $event => $setup.unhoverInfobox('right')),\n      onClick: $event => $setup.showFullChart($setup.rightInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], _mergeProps({\n      ref_for: true\n    }, $setup.getChartProps($setup.rightInfobox, field)), null, 16 /* FULL_PROPS */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_17)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" ÂÖ®Â±èÂõæË°®Ê®°ÊÄÅÊ°Ü \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.closeFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.closeFullChart\n  }, \"√ó\"), _createElementVNode(\"h3\", null, _toDisplayString($setup.currentChart.title) + \" - \" + _toDisplayString($setup.currentChart.field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_19, [_createVNode($setup[\"FullChart\"], {\n    field: $setup.currentChart.data,\n    type: $setup.currentChart.field.type,\n    visualization: $setup.currentChart.field.visualization\n  }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])]), $setup.currentChart.field.legend ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _toDisplayString($setup.currentChart.field.legend), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_3","_hoisted_4","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","isInitializing","_hoisted_2","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","leftInfobox","title","_hoisted_8","_hoisted_9","rightInfobox","_Fragment","_renderList","sortedFields","field","onMouseover","$event","hoverInfobox","onMouseout","_cache","unhoverInfobox","onClick","showFullChart","_createVNode","_mergeProps","ref_for","getChartProps","_hoisted_10","hoverBothInfoboxes","unhoverBothInfoboxes","_hoisted_12","_hoisted_13","typeLabel","_hoisted_14","handleMiddleColumnClick","_hoisted_15","showCombinedChart","_hoisted_16","_hoisted_11","_hoisted_17","showFullChartModal","_withModifiers","closeFullChart","_hoisted_18","currentChart","_hoisted_19","data","type","visualization","legend","_hoisted_20"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- Âä†ËΩΩÁä∂ÊÄÅÊèêÁ§∫ -->\r\n\t\t<div v-if=\"isInitializing\" class=\"initial-loading\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<p>Ê≠£Âú®ÂáÜÂ§áÊï∞ÊçÆÂØπÊØî...</p>\r\n\t\t</div>\r\n\r\n\t\t<!-- ‰∏ªÂØπÊØîË°®Ê†º -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">ÂØπÊØîÂ±ûÊÄß</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart v-bind=\"getChartProps(leftInfobox, field)\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"ÂØπÊØîÂàÜÊûê\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t‚öñÔ∏è\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"ÂêàÂπ∂ÂõæË°®\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\tüìä\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart v-bind=\"getChartProps(rightInfobox, field)\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- ÂÖ®Â±èÂõæË°®Ê®°ÊÄÅÊ°Ü -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">√ó</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\t// Áä∂ÊÄÅÂèòÈáè\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst isInitializing = ref(true);\r\n\tconst hasAutoCompared = ref(false);\r\n\tconst leftDataLoaded = ref(false);\r\n\tconst rightDataLoaded = ref(false);\r\n\tconst sortedFieldsWithScores = ref([]);\r\n\r\n\t// ÂèØÊØîËæÉÂ≠óÊÆµÈÖçÁΩÆ\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(ÁæéÂÖÉ)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"ÂõΩÂÜÖÁîü‰∫ßÊÄªÂÄºÔºàÂçï‰ΩçÔºö‰∏á‰∫øÁæéÂÖÉÔºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(‰∫∫)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"‰∫∫Âè£Êï∞ÈáèÔºàÂçï‰ΩçÔºö‰∫ø‰∫∫Ôºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDPÂπ¥Â¢ûÈïøÁéáÔºà%Ôºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"Ê∂àË¥πËÄÖ‰ª∑Ê†ºÊåáÊï∞ÂèòÂåñ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"ÊñáÊú¨\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"ÂÖ®ÁêÉGDPÊéíÂêç\"\r\n\t\t}\r\n\t];\r\n\r\n\t// ËÆ°ÁÆóÁªü‰∏ÄÁöÑÊúÄÂ§ßÂÄº\r\n\tconst getUnifiedMaxValue = fieldKey => {\r\n\t\tconst leftValues = getField(leftInfobox.value, fieldKey)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tconst rightValues = getField(rightInfobox.value, fieldKey)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tconst leftMax = leftValues.length ? Math.max(...leftValues) : 0;\r\n\t\tconst rightMax = rightValues.length ? Math.max(...rightValues) : 0;\r\n\r\n\t\t// ËøîÂõû‰∏§ËæπÊúÄÂ§ßÂÄº‰∏≠ÁöÑËæÉÂ§ßËÄÖÔºåÂπ∂Â¢ûÂä†10%ÁöÑÁºìÂÜ≤Á©∫Èó¥\r\n\t\treturn Math.max(leftMax, rightMax) * 1.1 || 1; // ÈÅøÂÖçÈô§‰ª•0\r\n\t};\r\n\r\n\t// Ëé∑ÂèñÂõæË°®props\r\n\tconst getChartProps = (infobox, field) => {\r\n\t\treturn {\r\n\t\t\tfield: getField(infobox, field.key),\r\n\t\t\ttype: field.type,\r\n\t\t\tvisualization: field.visualization,\r\n\t\t\tunifiedMax: getUnifiedMaxValue(field.key), // ‰º†ÈÄíÁªü‰∏ÄÁöÑÊúÄÂ§ßÂÄº\r\n\t\t\tfieldKey: field.key\r\n\t\t};\r\n\t};\r\n\r\n\t// Ëá™Âä®ÂØπÊØîÊñπÊ≥ï\r\n\tconst tryAutoCompare = () => {\r\n\t\tif (\r\n\t\t\thasAutoCompared.value ||\r\n\t\t\t!leftDataLoaded.value ||\r\n\t\t\t!rightDataLoaded.value\r\n\t\t)\r\n\t\t\treturn;\r\n\r\n\t\tisInitializing.value = true;\r\n\t\thasAutoCompared.value = true;\r\n\r\n\t\t// ÊâæÂà∞ÂàÜÊï∞ÊúÄÈ´òÁöÑÂ≠óÊÆµËøõË°åËá™Âä®ÂØπÊØî\r\n\t\tconst mostSignificantField = sortedFieldsWithScores.value[0];\r\n\t\tif (mostSignificantField) {\r\n\t\t\temit(\"compareAttribute\", {\r\n\t\t\t\tfieldKey: mostSignificantField.key,\r\n\t\t\t\tleftData: getField(leftInfobox.value, mostSignificantField.key),\r\n\t\t\t\trightData: getField(rightInfobox.value, mostSignificantField.key),\r\n\t\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\t\tfieldType: mostSignificantField.type,\r\n\t\t\t\tfieldLabel: mostSignificantField.typeLabel\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tisInitializing.value = false;\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tconsole.log(\"infobox:\", infobox);\r\n\t\tif (!infobox?.data) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\tconst fieldData = section[fieldKey];\r\n\r\n\t\t\t\tif (Array.isArray(fieldData)) {\r\n\t\t\t\t\treturn fieldData.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\t// ÊèêÂèñÂπ¥‰ªΩ‰ø°ÊÅØ - ‰ªérawÂ≠óÊÆµ‰∏≠Ëß£Êûê\r\n\t\t\t\t\t\t\tlet year = item.year;\r\n\t\t\t\t\t\t\tif (!year && item.raw) {\r\n\t\t\t\t\t\t\t\tconst yearMatch = item.raw.match(/\\((\\d{4})\\)/);\r\n\t\t\t\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: item.value ?? item.raw ?? item,\r\n\t\t\t\t\t\t\t\traw: item.raw ?? String(item.value ?? item),\r\n\t\t\t\t\t\t\t\tunit: item.unit ?? null,\r\n\t\t\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\t\t\tcurrency: item.currency ?? null,\r\n\t\t\t\t\t\t\t\textracted: item.extracted ?? false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tvalue: item,\r\n\t\t\t\t\t\t\traw: String(item),\r\n\t\t\t\t\t\t\tyear: null,\r\n\t\t\t\t\t\t\tunit: null,\r\n\t\t\t\t\t\t\tcurrency: null,\r\n\t\t\t\t\t\t\textracted: false\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof fieldData === \"object\" && fieldData !== null) {\r\n\t\t\t\t\t// Â§ÑÁêÜÂçïÂØπË±°ÊÉÖÂÜµ\r\n\t\t\t\t\tlet year = fieldData.year;\r\n\t\t\t\t\tif (!year && fieldData.raw) {\r\n\t\t\t\t\t\tconst yearMatch = fieldData.raw.match(/\\((\\d{4})\\)/);\r\n\t\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: fieldData.value ?? fieldData.raw ?? fieldData,\r\n\t\t\t\t\t\t\traw: fieldData.raw ?? String(fieldData.value ?? fieldData),\r\n\t\t\t\t\t\t\tunit: fieldData.unit ?? null,\r\n\t\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\t\tcurrency: fieldData.currency ?? null,\r\n\t\t\t\t\t\t\textracted: fieldData.extracted ?? false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: fieldData,\r\n\t\t\t\t\t\traw: String(fieldData),\r\n\t\t\t\t\t\tyear: null,\r\n\t\t\t\t\t\tunit: null,\r\n\t\t\t\t\t\tcurrency: null,\r\n\t\t\t\t\t\textracted: false\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst calculateDifferenceScore = field => {\r\n\t\tconst leftValues = getField(leftInfobox.value, field.key)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tconst rightValues = getField(rightInfobox.value, field.key)\r\n\t\t\t.map(v => (typeof v === \"object\" ? v.value ?? v.raw : v))\r\n\t\t\t.map(Number)\r\n\t\t\t.filter(n => !isNaN(n));\r\n\r\n\t\tif (leftValues.length === 0 || rightValues.length === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet maxScore = 0;\r\n\t\tconst comparedPairs = [];\r\n\r\n\t\tleftValues.forEach(leftNum => {\r\n\t\t\trightValues.forEach(rightNum => {\r\n\t\t\t\tconst isOpposite =\r\n\t\t\t\t\t(leftNum > 0 && rightNum < 0) || (leftNum < 0 && rightNum > 0);\r\n\r\n\t\t\t\tconst absDiff = Math.abs(leftNum - rightNum);\r\n\t\t\t\tconst avg = (Math.abs(leftNum) + Math.abs(rightNum)) / 2;\r\n\t\t\t\tconst relativeDiff = avg > 0 ? absDiff / avg : 0;\r\n\r\n\t\t\t\tlet score;\r\n\t\t\t\tif (isOpposite) {\r\n\t\t\t\t\tscore = 90 + 10 * relativeDiff;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscore = 10 + 40 * relativeDiff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcomparedPairs.push({\r\n\t\t\t\t\tleftNum,\r\n\t\t\t\t\trightNum,\r\n\t\t\t\t\tisOpposite,\r\n\t\t\t\t\trelativeDiff,\r\n\t\t\t\t\tscore\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (score > maxScore) maxScore = score;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst weight = field.key.toLowerCase().includes(\"gdp growth\") ? 3 : 1;\r\n\t\tconst finalScore = Math.min(100, Math.round(maxScore * weight));\r\n\r\n\t\treturn finalScore;\r\n\t};\r\n\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 1.5,\r\n\t\t\tPopulation: 1.3,\r\n\t\t\t\"GDP growth\": 2.0,\r\n\t\t\tInflation: 1.8,\r\n\t\t\tLabor: 1.2\r\n\t\t};\r\n\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1.0;\r\n\t};\r\n\r\n\tconst getHeatmapColor = score => {\r\n\t\tconst maxScore = 100;\r\n\t\tconst ratio = Math.min(score / maxScore, 1);\r\n\t\tconst hue = (1 - ratio) * 120;\r\n\t\treturn `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\r\n\t};\r\n\r\n\tconst sortedFields = computed(() => {\r\n\t\treturn sortedFieldsWithScores.value;\r\n\t});\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\tconst tryCalculateScores = () => {\r\n\t\tif (leftDataLoaded.value && rightDataLoaded.value) {\r\n\t\t\tsortedFieldsWithScores.value = comparableFields.value\r\n\t\t\t\t.map(field => ({\r\n\t\t\t\t\t...field,\r\n\t\t\t\t\tscore: calculateDifferenceScore(field)\r\n\t\t\t\t}))\r\n\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\tif (a.type !== \"text\" && b.type === \"text\") return -1;\r\n\t\t\t\t\tif (a.type === \"text\" && b.type !== \"text\") return 1;\r\n\t\t\t\t\treturn b.score - a.score;\r\n\t\t\t\t});\r\n\r\n\t\t\t// ËÆ°ÁÆóÂÆåÊàêÂêéÂ∞ùËØïËá™Âä®ÂØπÊØî\r\n\t\t\ttryAutoCompare();\r\n\t\t}\r\n\t};\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tconsole.log(\"data:\", getField(infobox, field.key));\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `ÂêàÂπ∂ÂõæË°® - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) {\r\n\t\t\tconsole.warn(\"Êé•Êî∂Âà∞Á©∫InfoboxÊï∞ÊçÆ\");\r\n\t\t\treturn { title: \"\", type: \"\", data: {} };\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"Êó†Ê†áÈ¢ò\",\r\n\t\t\ttype: data.type || \"Êú™Áü•Á±ªÂûã\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tleftDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\trightDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\t});\r\n\r\n\twatch(\r\n\t\t[() => leftDataLoaded.value, () => rightDataLoaded.value],\r\n\t\t([leftLoaded, rightLoaded]) => {\r\n\t\t\tif (leftLoaded && rightLoaded) {\r\n\t\t\t\ttryCalculateScores();\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.initial-loading {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.initial-loading p {\r\n\t\tmargin-top: 10px;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\tborder: 3px solid #f3f3f3;\r\n\t\tborder-top: 3px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\tbackdrop-filter: blur(8px);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t\tanimation: fadeIn 0.3s ease-out;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAmB;;EAD/BC,GAAA;EAG6BD,KAAK,EAAC;;gEAChCE,mBAAA,CAAmC;EAA9BF,KAAK,EAAC;AAAiB;gEAC5BE,mBAAA,CAAkB,WAAf,aAAW;oBADdC,UAAmC,EACnCC,UAAkB,C;;EAIdJ,KAAK,EAAC;AAAiB;;EACtBA,KAAK,EAAC;AAAoB;gEAG/BE,mBAAA,CAA4C;EAAvCF,KAAK,EAAC;AAAsB,GAAC,MAAI;;EACjCA,KAAK,EAAC;AAAqB;oBAdnC;oBAAA;;EA8BUA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAc;oBAhC9B;oBAAA;oBAAA;;EA8DQA,KAAK,EAAC;AAAe;;EAGpBA,KAAK,EAAC;AAAiB;;EAjEhCC,GAAA;EAuESD,KAAK,EAAC;;;uBAtEdK,mBAAA,CA2EM,OA3ENC,UA2EM,GA1ELC,mBAAA,YAAe,EACJC,MAAA,CAAAC,cAAc,I,cAAzBJ,mBAAA,CAGM,OAHNK,UAGM,EANR,IAAAC,UAAA,MAAAJ,mBAAA,gBAQEA,mBAAA,WAAc,EACdL,mBAAA,CA8CM,OA9CNU,UA8CM,GA7CLV,mBAAA,CAEM,OAFNW,UAEM,EAAAC,gBAAA,CADFN,MAAA,CAAAO,WAAW,CAACC,KAAK,kBAErBC,UAA4C,EAC5Cf,mBAAA,CAEM,OAFNgB,UAEM,EAAAJ,gBAAA,CADFN,MAAA,CAAAW,YAAY,CAACH,KAAK,mB,kBAGtBX,mBAAA,CAoCWe,SAAA,QAtDdC,WAAA,CAkB6Bb,MAAA,CAAAc,YAAY,EAArBC,KAAK;yBAlBzBlB,mBAAA,CAAAe,SAAA;MAAAnB,GAAA,EAkBiDsB,KAAK,CAACtB;QACnDC,mBAAA,CAMM;MALLF,KAAK,EAAC,kBAAkB;MACvBwB,WAAS,EAAAC,MAAA,IAAEjB,MAAA,CAAAkB,YAAY,CAAClB,MAAA,CAAAO,WAAW,EAAEQ,KAAK,CAACtB,GAAG;MAC9C0B,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEjB,MAAA,CAAAqB,cAAc;MACxBC,OAAK,EAAAL,MAAA,IAAEjB,MAAA,CAAAuB,aAAa,CAACvB,MAAA,CAAAO,WAAW,EAAEQ,KAAK;QACxCS,YAAA,CAA0DxB,MAAA,iBAA1DyB,WAAA,CAA0D;MAxB/DC,OAAA;IAAA,GAwB0B1B,MAAA,CAAA2B,aAAa,CAAC3B,MAAA,CAAAO,WAAW,EAAEQ,KAAK,+B,kCAxB1Da,WAAA,GA0BIlC,mBAAA,CAoBM;MAnBLF,KAAK,EAAC,oBAAoB;MACzBwB,WAAS,EAAAC,MAAA,IAAEjB,MAAA,CAAA6B,kBAAkB,CAACd,KAAK,CAACtB,GAAG;MACvC0B,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEjB,MAAA,CAAA8B,oBAAoB;QAC/BpC,mBAAA,CAA6C,OAA7CqC,WAA6C,EAAAzB,gBAAA,CAAlBS,KAAK,CAACtB,GAAG,kBACpCC,mBAAA,CAAmD,OAAnDsC,WAAmD,EAAA1B,gBAAA,CAAxBS,KAAK,CAACkB,SAAS,kBAC1CvC,mBAAA,CAaM,OAbNwC,WAaM,GAZLxC,mBAAA,CAKO;MAJNF,KAAK,EAAC,kBAAkB;MACxBgB,KAAK,EAAC,MAAM;MACXc,OAAK,EAAAL,MAAA,IAAEjB,MAAA,CAAAmC,uBAAuB,CAACpB,KAAK;OAAG,MAEzC,iBAtCNqB,WAAA,GAuCM1C,mBAAA,CAKO;MAJNF,KAAK,EAAC,gBAAgB;MACtBgB,KAAK,EAAC,MAAM;MACXc,OAAK,EAAAL,MAAA,IAAEjB,MAAA,CAAAqC,iBAAiB,CAACtB,KAAK;OAAG,MAEnC,iBA5CNuB,WAAA,E,oCAAAC,WAAA,GA+CI7C,mBAAA,CAMM;MALLF,KAAK,EAAC,mBAAmB;MACxBwB,WAAS,EAAAC,MAAA,IAAEjB,MAAA,CAAAkB,YAAY,CAAClB,MAAA,CAAAW,YAAY,EAAEI,KAAK,CAACtB,GAAG;MAC/C0B,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEjB,MAAA,CAAAqB,cAAc;MACxBC,OAAK,EAAAL,MAAA,IAAEjB,MAAA,CAAAuB,aAAa,CAACvB,MAAA,CAAAW,YAAY,EAAEI,KAAK;QACzCS,YAAA,CAA2DxB,MAAA,iBAA3DyB,WAAA,CAA2D;MApDhEC,OAAA;IAAA,GAoD0B1B,MAAA,CAAA2B,aAAa,CAAC3B,MAAA,CAAAW,YAAY,EAAEI,KAAK,+B,kCApD3DyB,WAAA,E;oCAyDEzC,mBAAA,aAAgB,EAETC,MAAA,CAAAyC,kBAAkB,I,cADzB5C,mBAAA,CAiBM;IA3ERJ,GAAA;IA4DGD,KAAK,EAAC,kBAAkB;IACvB8B,OAAK,EA7DToB,cAAA,CA6DgB1C,MAAA,CAAA2C,cAAc;MAC3BjD,mBAAA,CAYM,OAZNkD,WAYM,GAXLlD,mBAAA,CAA4D;IAApDF,KAAK,EAAC,WAAW;IAAE8B,OAAK,EAAEtB,MAAA,CAAA2C;KAAgB,GAAC,GACnDjD,mBAAA,CAAgE,YAAAY,gBAAA,CAAzDN,MAAA,CAAA6C,YAAY,CAACrC,KAAK,IAAG,KAAG,GAAAF,gBAAA,CAAGN,MAAA,CAAA6C,YAAY,CAAC9B,KAAK,CAACtB,GAAG,kBACxDC,mBAAA,CAKM,OALNoD,WAKM,GAJLtB,YAAA,CAGqDxB,MAAA;IAFnDe,KAAK,EAAEf,MAAA,CAAA6C,YAAY,CAACE,IAAI;IACxBC,IAAI,EAAEhD,MAAA,CAAA6C,YAAY,CAAC9B,KAAK,CAACiC,IAAI;IAC7BC,aAAa,EAAEjD,MAAA,CAAA6C,YAAY,CAAC9B,KAAK,CAACkC;iEAELjD,MAAA,CAAA6C,YAAY,CAAC9B,KAAK,CAACmC,MAAM,I,cAAzDrD,mBAAA,CAEM,OAFNsD,WAEM,EAAA7C,gBAAA,CADFN,MAAA,CAAA6C,YAAY,CAAC9B,KAAK,CAACmC,MAAM,oBAxEjCnD,mBAAA,e,OAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}