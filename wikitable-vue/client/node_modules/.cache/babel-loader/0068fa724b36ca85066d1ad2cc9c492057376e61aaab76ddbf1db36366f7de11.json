{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"mode-toggle\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"table-grid\"\n};\nconst _hoisted_4 = {\n  class: \"header left-column\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"header right-column\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_10 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_11 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_15 = {\n  class: \"infobox-grid\"\n};\nconst _hoisted_16 = {\n  class: \"header left-column\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"header right-column\"\n};\nconst _hoisted_19 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_20 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_21 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_22 = {\n  class: \"cell right-column\"\n};\nconst _hoisted_23 = {\n  class: \"modal-content\"\n};\nconst _hoisted_24 = {\n  class: \"modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 模式切换按钮 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.viewMode === 'chart'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.viewMode = 'chart')\n  }, \" 图表对比模式 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.viewMode === 'infobox'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.viewMode = 'infobox')\n  }, \" 信息框对比模式 \", 2 /* CLASS */)]), _createCommentVNode(\" 图表对比模式 \"), $setup.viewMode === 'chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 原有图表对比内容 \"), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.processedTable1.title || \"表格1\"), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.processedTable2.title || \"表格2\"), 1 /* TEXT */), $setup.hasData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: attr\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.showFullChart(attr, 'left')\n    }, [$setup.hasDataForAttribute($setup.processedTable1, attr) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode($setup[\"SparklineChart\"], {\n      ref_for: true,\n      ref: \"leftCharts\",\n      data: $setup.processedTable1.timeSeriesData[attr],\n      \"compare-data\": $setup.processedTable2.timeSeriesData[attr],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.leftChartColor,\n      onChartMounted: chart => $setup.chartRefs1[attr] = chart\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\", \"onChartMounted\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"无数据\"))], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString(attr), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.showFullChart(attr, 'right')\n    }, [$setup.hasDataForAttribute($setup.processedTable2, attr) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode($setup[\"SparklineChart\"], {\n      ref_for: true,\n      ref: \"rightCharts\",\n      data: $setup.processedTable2.timeSeriesData[attr],\n      \"compare-data\": $setup.processedTable1.timeSeriesData[attr],\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": $setup.rightChartColor,\n      onChartMounted: chart => $setup.chartRefs2[attr] = chart\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\", \"onChartMounted\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \"无数据\"))], 8 /* PROPS */, _hoisted_12)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 信息框对比模式 \"), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.leftInfobox.title || \"信息框1\"), 1 /* TEXT */), _hoisted_17, _createElementVNode(\"div\", _hoisted_18, _toDisplayString($setup.rightInfobox.title || \"信息框2\"), 1 /* TEXT */), $setup.hasInfoboxData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.commonInfoboxFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field\n    }, [_createElementVNode(\"div\", _hoisted_19, [_createVNode($setup[\"InfoboxField\"], {\n      value: $setup.leftInfobox.data[field]\n    }, null, 8 /* PROPS */, [\"value\"])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString(field), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_22, [_createVNode($setup[\"InfoboxField\"], {\n      value: $setup.rightInfobox.data[field]\n    }, null, 8 /* PROPS */, [\"value\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 完整图表弹窗 \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.hideFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"h3\", null, _toDisplayString($setup.currentAttribute), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.hideFullChart,\n    class: \"close-button\"\n  }, \"×\")]), _createVNode($setup[\"FullChart\"], {\n    data: $setup.currentChartData,\n    title: $setup.currentAttribute,\n    side: $setup.currentSide\n  }, null, 8 /* PROPS */, [\"data\", \"title\", \"side\"])])])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_normalizeClass","active","$setup","viewMode","onClick","_cache","$event","_hoisted_3","_hoisted_4","_toDisplayString","processedTable1","title","_hoisted_5","_hoisted_6","processedTable2","hasData","_Fragment","_renderList","commonAttributes","attr","showFullChart","hasDataForAttribute","_hoisted_8","_createVNode","ref_for","data","timeSeriesData","chartMaxWidth","chartMaxHeight","leftChartColor","onChartMounted","chart","chartRefs1","_hoisted_9","_hoisted_7","_hoisted_10","_hoisted_11","_hoisted_13","rightChartColor","chartRefs2","_hoisted_14","_hoisted_12","_hoisted_15","_hoisted_16","leftInfobox","_hoisted_17","_hoisted_18","rightInfobox","hasInfoboxData","commonInfoboxFields","field","_hoisted_19","value","_hoisted_20","_hoisted_21","_hoisted_22","showFullChartModal","_withModifiers","hideFullChart","_hoisted_23","_hoisted_24","currentAttribute","currentChartData","side","currentSide"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<!-- 模式切换按钮 -->\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 图表对比模式 -->\r\n\t\t<div v-if=\"viewMode === 'chart'\" class=\"table-grid\">\r\n\t\t\t<!-- 原有图表对比内容 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\tref=\"leftCharts\"\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\"\r\n\t\t\t\t\t\t\t\t\t@chart-mounted=\"chart => (chartRefs1[attr] = chart)\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\tref=\"rightCharts\"\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\"\r\n\t\t\t\t\t\t\t\t\t@chart-mounted=\"chart => (chartRefs2[attr] = chart)\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 信息框对比模式 -->\r\n\t\t<div v-else class=\"infobox-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"field in commonInfoboxFields\" :key=\"field\">\r\n\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"leftInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"rightInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:side=\"currentSide\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 视图模式：chart(图表) 或 infobox(信息框)\r\n\tconst viewMode = ref(\"chart\");\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 表格数据处理\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"表格1\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"表格2\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\r\n\t// 信息框数据处理\r\n\tconst leftInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\tdata: {},\r\n\t\ttype: \"\"\r\n\t});\r\n\tconst rightInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\tdata: {},\r\n\t\ttype: \"\"\r\n\t});\r\n\r\n\t// 图表引用\r\n\tconst chartRefs1 = ref({});\r\n\tconst chartRefs2 = ref({});\r\n\r\n\t// 完整图表弹窗相关状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentChartData = ref({ type: \"line\", data: [] });\r\n\tconst currentSide = ref(\"left\");\r\n\r\n\t// 更新图表尺寸\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tconst containerWidth = containerRef.value.clientWidth;\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerWidth * 0.3);\r\n\t\t\tchartMaxHeight.value = 80;\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 初始化尺寸和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t});\r\n\r\n\t// 显示/隐藏完整图表\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tconst chartRef =\r\n\t\t\tside === \"left\" ? chartRefs1.value[attr] : chartRefs2.value[attr];\r\n\t\tconst chartType = chartRef?.chartType || \"line\";\r\n\r\n\t\tcurrentChartData.value = {\r\n\t\t\ttype: chartType,\r\n\t\t\tdata:\r\n\t\t\t\tside === \"left\"\r\n\t\t\t\t\t? processedTable1.value.timeSeriesData[attr] || []\r\n\t\t\t\t\t: processedTable2.value.timeSeriesData[attr] || []\r\n\t\t};\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 计算属性\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.div1RawData &&\r\n\t\t\tprops.div3RawData &&\r\n\t\t\tprocessedTable1.value.columns.length > 0 &&\r\n\t\t\tprocessedTable2.value.columns.length > 0\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasInfoboxData = computed(() => {\r\n\t\treturn (\r\n\t\t\tObject.keys(leftInfobox.value.data).length > 0 ||\r\n\t\t\tObject.keys(rightInfobox.value.data).length > 0\r\n\t\t);\r\n\t});\r\n\r\n\tconst commonAttributes = computed(() => {\r\n\t\tconst attrs1 = processedTable1.value.rows || [];\r\n\t\tconst attrs2 = processedTable2.value.rows || [];\r\n\t\treturn attrs1.filter(\r\n\t\t\tattr =>\r\n\t\t\t\tattrs2.includes(attr) &&\r\n\t\t\t\t(hasDataForAttribute(processedTable1.value, attr) ||\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr))\r\n\t\t);\r\n\t});\r\n\r\n\tconst commonInfoboxFields = computed(() => {\r\n\t\tconst fields1 = Object.keys(leftInfobox.value.data || {});\r\n\t\tconst fields2 = Object.keys(rightInfobox.value.data || {});\r\n\t\treturn [...new Set([...fields1, ...fields2])].sort();\r\n\t});\r\n\r\n\t// 辅助函数\r\n\tfunction hasDataForAttribute(table, attr) {\r\n\t\treturn table.timeSeriesData[attr]?.length > 0;\r\n\t}\r\n\r\n\tfunction parseTableToStandardJSON(html, defaultTitle = \"未命名表格\") {\r\n\t\t// ...原有表格解析逻辑保持不变...\r\n\t}\r\n\r\n\tfunction parseInfoboxData(html) {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst infobox = doc.querySelector(\r\n\t\t\t\t\".infobox, .infobox_v2, .infobox_v3, .toccolours\"\r\n\t\t\t);\r\n\r\n\t\t\tif (!infobox) return { title: \"\", data: {}, type: \"\" };\r\n\r\n\t\t\tconst result = {\r\n\t\t\t\ttitle: extractTitleFromInfobox(infobox),\r\n\t\t\t\tdata: {},\r\n\t\t\t\ttype: detectInfoboxType(infobox)\r\n\t\t\t};\r\n\r\n\t\t\t// 提取所有行\r\n\t\t\tconst rows = infobox.querySelectorAll(\"tr:has(th):has(td)\");\r\n\r\n\t\t\trows.forEach(row => {\r\n\t\t\t\tconst th = row.querySelector(\"th\");\r\n\t\t\t\tconst td = row.querySelector(\"td\");\r\n\r\n\t\t\t\tif (th && td) {\r\n\t\t\t\t\tconst label = normalizeFieldLabel(th.textContent);\r\n\t\t\t\t\tconst value = extractFieldValue(td);\r\n\r\n\t\t\t\t\tif (label && value) {\r\n\t\t\t\t\t\tresult.data[label] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"信息框解析错误:\", error);\r\n\t\t\treturn { title: \"\", data: {}, type: \"\" };\r\n\t\t}\r\n\t}\r\n\r\n\tfunction extractTitleFromInfobox(infobox) {\r\n\t\treturn (\r\n\t\t\tinfobox.querySelector(\"caption\")?.textContent.trim() ||\r\n\t\t\tinfobox.previousElementSibling?.textContent.trim() ||\r\n\t\t\t\"\"\r\n\t\t);\r\n\t}\r\n\r\n\tfunction detectInfoboxType(infobox) {\r\n\t\tconst classNames = infobox.className.toLowerCase();\r\n\t\tconst content = infobox.textContent.toLowerCase();\r\n\r\n\t\tif (classNames.includes(\"country\") || content.includes(\"country\"))\r\n\t\t\treturn \"国家\";\r\n\t\tif (classNames.includes(\"person\") || content.includes(\"birth\"))\r\n\t\t\treturn \"人物\";\r\n\t\tif (classNames.includes(\"company\") || content.includes(\"revenue\"))\r\n\t\t\treturn \"公司\";\r\n\t\tif (content.includes(\"event\") || content.includes(\"date\")) return \"事件\";\r\n\r\n\t\treturn \"通用\";\r\n\t}\r\n\r\n\tfunction normalizeFieldLabel(label) {\r\n\t\treturn label\r\n\t\t\t.trim()\r\n\t\t\t.replace(/[:：]\\s*$/, \"\")\r\n\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t.replace(/[[\\]]/g, \"\")\r\n\t\t\t.replace(/\\(.*\\)/g, \"\");\r\n\t}\r\n\r\n\tfunction extractFieldValue(tdElement) {\r\n\t\tconst td = tdElement.cloneNode(true);\r\n\t\ttd.querySelectorAll(\".reference, .mw-editsection, sup\").forEach(el =>\r\n\t\t\tel.remove()\r\n\t\t);\r\n\r\n\t\tconst textValue = td.textContent\r\n\t\t\t.trim()\r\n\t\t\t.replace(/\\[\\d+\\]/g, \"\")\r\n\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t.replace(/^[:：]\\s*/, \"\");\r\n\r\n\t\tconst links = Array.from(td.querySelectorAll(\"a\"))\r\n\t\t\t.filter(a => a.href)\r\n\t\t\t.map(a => ({\r\n\t\t\t\ttext: a.textContent.trim(),\r\n\t\t\t\thref: a.href,\r\n\t\t\t\tisWikiLink: a.href.includes(\"wikipedia.org/wiki/\")\r\n\t\t\t}));\r\n\r\n\t\tconst image = td.querySelector(\"img\");\r\n\t\tconst imageData = image\r\n\t\t\t? {\r\n\t\t\t\t\tsrc: image.src,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image\r\n\t\t\t\t\t\t.closest(\"figure\")\r\n\t\t\t\t\t\t?.querySelector(\"figcaption\")\r\n\t\t\t\t\t\t?.textContent.trim()\r\n\t\t\t  }\r\n\t\t\t: null;\r\n\r\n\t\treturn {\r\n\t\t\ttext: textValue,\r\n\t\t\thtml: td.innerHTML.trim(),\r\n\t\t\tlinks,\r\n\t\t\timage: imageData,\r\n\t\t\tdataType: detectValueType(textValue)\r\n\t\t};\r\n\t}\r\n\r\n\tfunction detectValueType(value) {\r\n\t\tif (!value) return \"text\";\r\n\r\n\t\tif (\r\n\t\t\t/(\\d{4}[年\\-]\\d{1,2}[月\\-]\\d{1,2}日?)|(\\d{1,2}[月\\/]\\d{1,2}[日\\/]\\d{4})/.test(\r\n\t\t\t\tvalue\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn \"date\";\r\n\t\t}\r\n\r\n\t\tif (/^\\d{4}年?$/.test(value)) {\r\n\t\t\treturn \"year\";\r\n\t\t}\r\n\r\n\t\tif (/[\\d,\\.]+\\s*[^\\d\\s,\\.]+/.test(value)) {\r\n\t\t\treturn \"measurement\";\r\n\t\t}\r\n\r\n\t\tif (/^(是|否|有|无|存在|不存在)$/.test(value)) {\r\n\t\t\treturn \"boolean\";\r\n\t\t}\r\n\r\n\t\tif (/^参见：|^见：|^链接：/.test(value)) {\r\n\t\t\treturn \"link\";\r\n\t\t}\r\n\r\n\t\treturn \"text\";\r\n\t}\r\n\r\n\t// 监听数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t\t\tleftInfobox.value = parseInfoboxData(html);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t\t\trightInfobox.value = parseInfoboxData(html);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.mode-toggle {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.mode-toggle button {\r\n\t\tpadding: 8px 16px;\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.mode-toggle button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.table-grid,\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.infobox-grid .cell {\r\n\t\tmin-height: 80px;\r\n\t\tjustify-content: flex-start;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0, 0, 0, 0.5);\r\n\t\tz-index: 1000;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 90%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 90vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid,\r\n\t\t.infobox-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,mBAAmB;EAACC,GAAG,EAAC;;;EAE7BD,KAAK,EAAC;AAAa;;EAH1BE,GAAA;EAiBmCF,KAAK,EAAC;;;EAEjCA,KAAK,EAAC;AAAoB;gEAG/BG,mBAAA,CAA4C;EAAvCH,KAAK,EAAC;AAAsB,GAAC,MAAI;;EACjCA,KAAK,EAAC;AAAqB;mBAvBnC;;EAAAE,GAAA;EA+BYF,KAAK,EAAC;;;EA/BlBE,GAAA;EA2CkBF,KAAK,EAAC;;;EAGdA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAgB;oBA/CjC;;EAAAE,GAAA;EAoDYF,KAAK,EAAC;;;EApDlBE,GAAA;EAgEkBF,KAAK,EAAC;;;EAOVA,KAAK,EAAC;AAAc;;EAC1BA,KAAK,EAAC;AAAoB;iEAG/BG,mBAAA,CAA0C;EAArCH,KAAK,EAAC;AAAsB,GAAC,IAAE;;EAC/BA,KAAK,EAAC;AAAqB;;EAMzBA,KAAK,EAAC;AAAkB;;EAGxBA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAgB;;EAEvBA,KAAK,EAAC;AAAmB;;EAY3BA,KAAK,EAAC;AAAe;;EACpBA,KAAK,EAAC;AAAc;;uBApG5BI,mBAAA,CA8GM,OA9GNC,UA8GM,GA7GLC,mBAAA,YAAe,EACfH,mBAAA,CAWM,OAXNI,UAWM,GAVLJ,mBAAA,CAIS;IAHPH,KAAK,EALVQ,eAAA;MAAAC,MAAA,EAKsBC,MAAA,CAAAC,QAAQ;IAAA;IACzBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAC,QAAQ;KAAY,UAE7B,kBACAR,mBAAA,CAIS;IAHPH,KAAK,EAVVQ,eAAA;MAAAC,MAAA,EAUsBC,MAAA,CAAAC,QAAQ;IAAA;IACzBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAC,QAAQ;KAAc,WAE/B,iB,GAGDL,mBAAA,YAAe,EACJI,MAAA,CAAAC,QAAQ,gB,cAAnBP,mBAAA,CAmDM,OAnDNW,UAmDM,GAlDLT,mBAAA,cAAiB,EACjBH,mBAAA,CAEM,OAFNa,UAEM,EAAAC,gBAAA,CADFP,MAAA,CAAAQ,eAAe,CAACC,KAAK,2BAEzBC,UAA4C,EAC5CjB,mBAAA,CAEM,OAFNkB,UAEM,EAAAJ,gBAAA,CADFP,MAAA,CAAAY,eAAe,CAACH,KAAK,2BAGTT,MAAA,CAAAa,OAAO,I,kBACtBnB,mBAAA,CAsCWoB,SAAA;IAlEftB,GAAA;EAAA,GAAAuB,WAAA,CA4B6Bf,MAAA,CAAAgB,gBAAgB,EAAxBC,IAAI;yBA5BzBvB,mBAAA,CAAAoB,SAAA;MAAAtB,GAAA,EA4BqDyB;IAAI,IACpDxB,mBAAA,CAeM;MAfDH,KAAK,EAAC,kBAAkB;MAAEY,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAkB,aAAa,CAACD,IAAI;QACvCjB,MAAA,CAAAmB,mBAAmB,CAACnB,MAAA,CAAAQ,eAAe,EAAES,IAAI,K,cACxDvB,mBAAA,CAUM,OAVN0B,UAUM,GATLC,YAAA,CAQwDrB,MAAA;MAxChEsB,OAAA;MAiCS/B,GAAG,EAAC,YAAY;MACfgC,IAAI,EAAEvB,MAAA,CAAAQ,eAAe,CAACgB,cAAc,CAACP,IAAI;MACzC,cAAY,EAAEjB,MAAA,CAAAY,eAAe,CAACY,cAAc,CAACP,IAAI;MACjD,WAAS,EAAEjB,MAAA,CAAAyB,aAAa;MACxB,YAAU,EAAEzB,MAAA,CAAA0B,cAAc;MAC1B,mBAAiB,EAAE,IAAI;MACvB,YAAU,EAAE1B,MAAA,CAAA2B,cAAc;MAC1BC,cAAa,EAAEC,KAAK,IAAK7B,MAAA,CAAA8B,UAAU,CAACb,IAAI,IAAIY;qIAGhDnC,mBAAA,CAAqC,OAArCqC,UAAqC,EAAT,KAAG,G,iBA3CrCC,UAAA,GA8CKvC,mBAAA,CAEM,OAFNwC,WAEM,GADLxC,mBAAA,CAA4C,OAA5CyC,WAA4C,EAAA3B,gBAAA,CAAbU,IAAI,iB,GAGpCxB,mBAAA,CAeM;MAfDH,KAAK,EAAC,mBAAmB;MAAEY,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAkB,aAAa,CAACD,IAAI;QACxCjB,MAAA,CAAAmB,mBAAmB,CAACnB,MAAA,CAAAY,eAAe,EAAEK,IAAI,K,cACxDvB,mBAAA,CAUM,OAVNyC,WAUM,GATLd,YAAA,CAQwDrB,MAAA;MA7DhEsB,OAAA;MAsDS/B,GAAG,EAAC,aAAa;MAChBgC,IAAI,EAAEvB,MAAA,CAAAY,eAAe,CAACY,cAAc,CAACP,IAAI;MACzC,cAAY,EAAEjB,MAAA,CAAAQ,eAAe,CAACgB,cAAc,CAACP,IAAI;MACjD,WAAS,EAAEjB,MAAA,CAAAyB,aAAa;MACxB,YAAU,EAAEzB,MAAA,CAAA0B,cAAc;MAC1B,mBAAiB,EAAE,IAAI;MACvB,YAAU,EAAE1B,MAAA,CAAAoC,eAAe;MAC3BR,cAAa,EAAEC,KAAK,IAAK7B,MAAA,CAAAqC,UAAU,CAACpB,IAAI,IAAIY;qIAGhDnC,mBAAA,CAAqC,OAArC4C,WAAqC,EAAT,KAAG,G,iBAhErCC,WAAA,E;mCAAA3C,mBAAA,e,oBAuEEF,mBAAA,CAsBMoB,SAAA;IA7FRtB,GAAA;EAAA,IAsEEI,mBAAA,aAAgB,EAChBH,mBAAA,CAsBM,OAtBN+C,WAsBM,GArBL/C,mBAAA,CAEM,OAFNgD,WAEM,EAAAlC,gBAAA,CADFP,MAAA,CAAA0C,WAAW,CAACjC,KAAK,4BAErBkC,WAA0C,EAC1ClD,mBAAA,CAEM,OAFNmD,WAEM,EAAArC,gBAAA,CADFP,MAAA,CAAA6C,YAAY,CAACpC,KAAK,4BAGNT,MAAA,CAAA8C,cAAc,I,kBAC7BpD,mBAAA,CAUWoB,SAAA;IA3FftB,GAAA;EAAA,GAAAuB,WAAA,CAiF8Bf,MAAA,CAAA+C,mBAAmB,EAA5BC,KAAK;yBAjF1BtD,mBAAA,CAAAoB,SAAA;MAAAtB,GAAA,EAiFyDwD;IAAK,IACzDvD,mBAAA,CAEM,OAFNwD,WAEM,GADL5B,YAAA,CAAiDrB,MAAA;MAAlCkD,KAAK,EAAElD,MAAA,CAAA0C,WAAW,CAACnB,IAAI,CAACyB,KAAK;0CAE7CvD,mBAAA,CAEM,OAFN0D,WAEM,GADL1D,mBAAA,CAA6C,OAA7C2D,WAA6C,EAAA7C,gBAAA,CAAdyC,KAAK,iB,GAErCvD,mBAAA,CAEM,OAFN4D,WAEM,GADLhC,YAAA,CAAkDrB,MAAA;MAAnCkD,KAAK,EAAElD,MAAA,CAAA6C,YAAY,CAACtB,IAAI,CAACyB,KAAK;;mCAzFnDpD,mBAAA,e,qDA+FEA,mBAAA,YAAe,EAERI,MAAA,CAAAsD,kBAAkB,I,cADzB5D,mBAAA,CAcM;IA9GRF,GAAA;IAkGGF,KAAK,EAAC,kBAAkB;IACvBY,OAAK,EAnGTqD,cAAA,CAmGgBvD,MAAA,CAAAwD,aAAa;MAC1B/D,mBAAA,CASM,OATNgE,WASM,GARLhE,mBAAA,CAGM,OAHNiE,WAGM,GAFLjE,mBAAA,CAA+B,YAAAc,gBAAA,CAAxBP,MAAA,CAAA2D,gBAAgB,kBACvBlE,mBAAA,CAA8D;IAArDS,OAAK,EAAEF,MAAA,CAAAwD,aAAa;IAAElE,KAAK,EAAC;KAAe,GAAC,E,GAEtD+B,YAAA,CAGuBrB,MAAA;IAFrBuB,IAAI,EAAEvB,MAAA,CAAA4D,gBAAgB;IACtBnD,KAAK,EAAET,MAAA,CAAA2D,gBAAgB;IACvBE,IAAI,EAAE7D,MAAA,CAAA8D;4DA5GZlE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}