{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from \"vue\";\nexport default {\n  __name: 'CausalDiagram',\n  props: {\n    steps: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const processedSteps = computed(() => {\n      return props.steps.map(step => {\n        // 将长文本分割成多行，每行最多15个字符\n        const words = step.split(/\\s+/);\n        const lines = [];\n        let currentLine = \"\";\n        words.forEach(word => {\n          if ((currentLine + word).length <= 15) {\n            currentLine += (currentLine ? \" \" : \"\") + word;\n          } else {\n            if (currentLine) lines.push(currentLine);\n            currentLine = word;\n          }\n        });\n        if (currentLine) lines.push(currentLine);\n        return {\n          original: step,\n          lines: lines\n        };\n      });\n    });\n    const __returned__ = {\n      props,\n      processedSteps,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","processedSteps","steps","map","step","words","split","lines","currentLine","forEach","word","length","push","original"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CausalDiagram.vue"],"sourcesContent":["<template>\r\n\t<div class=\"causal-flow\">\r\n\t\t<div class=\"flow-container\">\r\n\t\t\t<div\r\n\t\t\t\tv-for=\"(step, index) in processedSteps\"\r\n\t\t\t\t:key=\"index\"\r\n\t\t\t\tclass=\"flow-step\">\r\n\t\t\t\t<div class=\"node\">\r\n\t\t\t\t\t<div v-for=\"(line, i) in step.lines\" :key=\"i\" class=\"line\">\r\n\t\t\t\t\t\t{{ line }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"index < processedSteps.length - 1\" class=\"arrow\">\r\n\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\" fill=\"#666\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tsteps: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t});\r\n\r\n\tconst processedSteps = computed(() => {\r\n\t\treturn props.steps.map(step => {\r\n\t\t\t// 将长文本分割成多行，每行最多15个字符\r\n\t\t\tconst words = step.split(/\\s+/);\r\n\t\t\tconst lines = [];\r\n\t\t\tlet currentLine = \"\";\r\n\r\n\t\t\twords.forEach(word => {\r\n\t\t\t\tif ((currentLine + word).length <= 15) {\r\n\t\t\t\t\tcurrentLine += (currentLine ? \" \" : \"\") + word;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentLine) lines.push(currentLine);\r\n\t\t\t\t\tcurrentLine = word;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (currentLine) lines.push(currentLine);\r\n\r\n\t\t\treturn {\r\n\t\t\t\toriginal: step,\r\n\t\t\t\tlines: lines\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.causal-flow {\r\n\t\tmargin: 20px 0;\r\n\t\toverflow-x: auto;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\r\n\t.flow-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px 0;\r\n\t\tmin-width: min-content;\r\n\t}\r\n\r\n\t.flow-step {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmin-width: 120px;\r\n\t}\r\n\r\n\t.node {\r\n\t\tbackground: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);\r\n\t\tpadding: 12px 15px;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #90caf9;\r\n\t\tbox-shadow: 0 2px 8px rgba(66, 133, 244, 0.1);\r\n\t\tmin-height: 80px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.node:hover {\r\n\t\ttransform: translateY(-3px);\r\n\t\tbox-shadow: 0 4px 12px rgba(66, 133, 244, 0.2);\r\n\t}\r\n\r\n\t.line {\r\n\t\tline-height: 1.4;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #2c3e50;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.arrow {\r\n\t\tpadding: 0 8px;\r\n\t\tcolor: #666;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.arrow svg {\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.flow-step:hover .arrow svg {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t/* 响应式调整 */\r\n\t@media (max-width: 768px) {\r\n\t\t.flow-container {\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: flex-start;\r\n\t\t}\r\n\r\n\t\t.flow-step {\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tmargin-bottom: 12px;\r\n\t\t}\r\n\r\n\t\t.arrow {\r\n\t\t\tpadding: 8px 0;\r\n\t\t\ttransform: rotate(90deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";AAuBC,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,cAAc,GAAGH,QAAQ,CAAC,MAAM;MACrC,OAAOC,KAAK,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;QAC9B;QACA,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,KAAK,CAAC;QAC/B,MAAMC,KAAK,GAAG,EAAE;QAChB,IAAIC,WAAW,GAAG,EAAE;QAEpBH,KAAK,CAACI,OAAO,CAACC,IAAI,IAAI;UACrB,IAAI,CAACF,WAAW,GAAGE,IAAI,EAAEC,MAAM,IAAI,EAAE,EAAE;YACtCH,WAAW,IAAI,CAACA,WAAW,GAAG,GAAG,GAAG,EAAE,IAAIE,IAAI;UAC/C,CAAC,MAAM;YACN,IAAIF,WAAW,EAAED,KAAK,CAACK,IAAI,CAACJ,WAAW,CAAC;YACxCA,WAAW,GAAGE,IAAI;UACnB;QACD,CAAC,CAAC;QAEF,IAAIF,WAAW,EAAED,KAAK,CAACK,IAAI,CAACJ,WAAW,CAAC;QAExC,OAAO;UACNK,QAAQ,EAAET,IAAI;UACdG,KAAK,EAAEA;QACR,CAAC;MACF,CAAC,CAAC;IACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}