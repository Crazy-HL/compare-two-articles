{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d881255\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartContainer\",\n  class: \"pie-chart-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasValidData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"无数据\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","key","_createElementBlock","_hoisted_1","$setup","hasValidData","_hoisted_2","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\PieChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"pie-chart-container\">\r\n\t\t<div v-if=\"!hasValidData\" class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => value.every(item => \"name\" in item && \"value\" in item)\r\n\t\t},\r\n\t\tshowRemainder: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"itemClick\"]);\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst colors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst remainderColor = \"#f0f0f0\";\r\n\r\n\tconst hasValidData = computed(() => props.data.length > 0);\r\n\r\n\tonMounted(() => {\r\n\t\tif (chartContainer.value) {\r\n\t\t\tinitChart();\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => props.data,\r\n\t\t() => {\r\n\t\t\tif (chartContainer.value) {\r\n\t\t\t\tinitChart();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst initChart = () => {\r\n\t\tconst width = chartContainer.value.clientWidth;\r\n\t\tconst height = chartContainer.value.clientHeight;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\td3.select(chartContainer.value).select(\"svg\").remove();\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(chartContainer.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst pie = d3\r\n\t\t\t.pie()\r\n\t\t\t.value(d => d.value)\r\n\t\t\t.sort(null);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tconst processedData = computed(() => {\r\n\t\t\tconst total = d3.sum(props.data, d => d.value);\r\n\t\t\tconst remainder = props.showRemainder\r\n\t\t\t\t? 1 - d3.sum(props.data, d => d.value / total)\r\n\t\t\t\t: 0;\r\n\t\t\treturn [...props.data, { name: \"其他\", value: remainder * total }];\r\n\t\t});\r\n\r\n\t\tconst path = svg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(pie(processedData.value))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"fill\", (d, i) => (i < colors.length ? colors[i] : remainderColor))\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.on(\"mouseover\", (event, d) => {\r\n\t\t\t\tshowTooltip(event, d.data.name, d.data.value);\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", () => {\r\n\t\t\t\thideTooltip();\r\n\t\t\t})\r\n\t\t\t.on(\"click\", (event, d) => {\r\n\t\t\t\temit(\"itemClick\", d.data);\r\n\t\t\t});\r\n\r\n\t\tconst legendWidth = 120;\r\n\t\tconst legendGroup = svg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"transform\",\r\n\t\t\t\t`translate(${width / 2 - radius - legendWidth - 20},${\r\n\t\t\t\t\t-height / 2 + radius\r\n\t\t\t\t})`\r\n\t\t\t);\r\n\r\n\t\tconst legendItem = legendGroup\r\n\t\t\t.selectAll(\".legend-item\")\r\n\t\t\t.data(processedData.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"legend-item\")\r\n\t\t\t.attr(\"transform\", (d, i) => `translate(0, ${i * 24})`)\r\n\t\t\t.on(\"click\", (event, d) => {\r\n\t\t\t\temit(\"itemClick\", d);\r\n\t\t\t});\r\n\r\n\t\tlegendItem\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"width\", 14)\r\n\t\t\t.attr(\"height\", 14)\r\n\t\t\t.attr(\"rx\", 3)\r\n\t\t\t.attr(\"ry\", 3)\r\n\t\t\t.attr(\"fill\", (d, i) => (i < colors.length ? colors[i] : remainderColor));\r\n\r\n\t\tlegendItem\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", 18)\r\n\t\t\t.attr(\"y\", 12)\r\n\t\t\t.text(d => d.name);\r\n\r\n\t\tconst tooltip = d3\r\n\t\t\t.select(chartContainer.value)\r\n\t\t\t.append(\"div\")\r\n\t\t\t.attr(\"class\", \"chart-tooltip\")\r\n\t\t\t.style(\"opacity\", 0);\r\n\r\n\t\tconst showTooltip = (event, name, value) => {\r\n\t\t\ttooltip\r\n\t\t\t\t.html(\r\n\t\t\t\t\t`\r\n      <div class=\"tooltip-title\">${name}</div>\r\n      <div class=\"tooltip-value\">${value}</div>\r\n    `\r\n\t\t\t\t)\r\n\t\t\t\t.style(\"left\", `${event.pageX + 10}px`)\r\n\t\t\t\t.style(\"top\", `${event.pageY + 10}px`)\r\n\t\t\t\t.style(\"opacity\", 1);\r\n\t\t};\r\n\r\n\t\tconst hideTooltip = () => {\r\n\t\t\ttooltip.style(\"opacity\", 0);\r\n\t\t};\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.pie-chart-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #999;\r\n\t}\r\n\r\n\t.legend-item:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t.legend-item text {\r\n\t\tfont-size: 12px;\r\n\t\tfill: #333;\r\n\t}\r\n\r\n\t.legend-item rect {\r\n\t\twidth: 14px;\r\n\t\theight: 14px;\r\n\t\trx: 3;\r\n\t\try: 3;\r\n\t\tfill: #3498db;\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t.legend-item + .legend-item {\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.chart-tooltip {\r\n\t\tposition: absolute;\r\n\t\tpadding: 10px 12px;\r\n\t\tbackground: rgba(0, 0, 0, 0.85);\r\n\t\tcolor: white;\r\n\t\tborder-radius: 8px;\r\n\t\tfont-size: 13px;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t\ttransition: all 0.2s;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmax-width: 200px;\r\n\t\tline-height: 1.5;\r\n\t\topacity: 0;\r\n\t}\r\n\r\n\t.tooltip-title {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t.tooltip-value {\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #f0f0f0;\r\n\t}\r\n\r\n\t:deep(.legend-item text) {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tuser-select: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;EADjCC,GAAA;EAE4BD,KAAK,EAAC;;;uBADjCE,mBAAA,CAEM,OAFNC,UAEM,G,CADOC,MAAA,CAAAC,YAAY,I,cAAxBH,mBAAA,CAAmD,OAAnDI,UAAmD,EAAT,KAAG,KAF/CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}