{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport InfoboxField from \"./InfoboxField.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const viewMode = ref(\"infobox\"); // 默认显示信息框对比模式\n\n    // 信息框数据结构\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      sections: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      sections: {}\n    });\n\n    // 处理接收到的信息框数据\n    const processInfoboxData = data => {\n      try {\n        if (!data) return {\n          title: \"\",\n          type: \"none\",\n          sections: {}\n        };\n\n        // 标准化sections结构\n        const sections = {};\n        if (data.sections) {\n          for (const [sectionName, sectionData] of Object.entries(data.sections)) {\n            sections[sectionName] = sectionData || {};\n          }\n        } else if (data.data) {\n          // 兼容旧格式\n          sections[\"基本信息\"] = data.data;\n        }\n        return {\n          title: data.title || \"无标题\",\n          type: data.type || \"未知类型\",\n          sections\n        };\n      } catch (e) {\n        console.error(\"处理信息框数据出错:\", e);\n        return {\n          title: \"数据错误\",\n          type: \"error\",\n          sections: {}\n        };\n      }\n    };\n\n    // 计算属性\n    const hasInfoboxData = computed(() => {\n      return Object.keys(leftInfobox.value.sections).length > 0 || Object.keys(rightInfobox.value.sections).length > 0;\n    });\n\n    // 获取所有共有的sections\n    const commonSections = computed(() => {\n      const leftSections = Object.keys(leftInfobox.value.sections);\n      const rightSections = Object.keys(rightInfobox.value.sections);\n      return [...new Set([...leftSections, ...rightSections])].sort();\n    });\n\n    // 获取某个section中共有的fields\n    const getCommonFieldsInSection = section => {\n      const leftFields = Object.keys(leftInfobox.value.sections[section] || {});\n      const rightFields = Object.keys(rightInfobox.value.sections[section] || {});\n      return [...new Set([...leftFields, ...rightFields])].sort();\n    };\n\n    // 获取字段值\n    const getFieldValue = (infobox, section, field) => {\n      return infobox.sections[section]?.[field] || null;\n    };\n\n    // 获取字段数据类型\n    const getDataType = fieldData => {\n      if (!fieldData) return \"空\";\n      if (Array.isArray(fieldData)) return \"列表\";\n      if (typeof fieldData === \"object\") {\n        if (fieldData.value !== undefined) {\n          if (fieldData.unit === \"%\") return \"百分比\";\n          if (fieldData.unit) return \"数值\";\n          return \"文本\";\n        }\n        return \"对象\";\n      }\n      return typeof fieldData;\n    };\n\n    // 设置事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      viewMode,\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      hasInfoboxData,\n      commonSections,\n      getCommonFieldsInSection,\n      getFieldValue,\n      getDataType,\n      ref,\n      computed,\n      onMounted,\n      InfoboxField,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","InfoboxField","bus","viewMode","leftInfobox","title","type","sections","rightInfobox","processInfoboxData","data","sectionName","sectionData","Object","entries","e","console","error","hasInfoboxData","keys","value","length","commonSections","leftSections","rightSections","Set","sort","getCommonFieldsInSection","section","leftFields","rightFields","getFieldValue","infobox","field","getDataType","fieldData","Array","isArray","undefined","unit","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\"\r\n\t\t\t\t:disabled=\"!hasInfoboxData\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 信息框对比模式 -->\r\n\t\t<div v-if=\"viewMode === 'infobox'\" class=\"infobox-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t\t<div class=\"infobox-type\">{{ leftInfobox.type }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t\t<div class=\"infobox-type\">{{ rightInfobox.type }}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 内容区域 -->\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"section in commonSections\" :key=\"section\">\r\n\t\t\t\t\t<!-- Section标题行 -->\r\n\t\t\t\t\t<div class=\"section-header left-column\">{{ section }}</div>\r\n\t\t\t\t\t<div class=\"section-header middle-column\"></div>\r\n\t\t\t\t\t<div class=\"section-header right-column\">{{ section }}</div>\r\n\r\n\t\t\t\t\t<!-- Section内容 -->\r\n\t\t\t\t\t<template\r\n\t\t\t\t\t\tv-for=\"field in getCommonFieldsInSection(section)\"\r\n\t\t\t\t\t\t:key=\"field\">\r\n\t\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t\t<InfoboxField\r\n\t\t\t\t\t\t\t\t:value=\"getFieldValue(leftInfobox, section, field)\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t\t\t<div class=\"data-type\">\r\n\t\t\t\t\t\t\t\t{{ getDataType(getFieldValue(leftInfobox, section, field)) }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t\t<InfoboxField\r\n\t\t\t\t\t\t\t\t:value=\"getFieldValue(rightInfobox, section, field)\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<div v-else class=\"no-infobox-data\">\r\n\t\t\t\t<div class=\"no-data-message\">未找到可对比的信息框数据</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 图表对比模式 (保持不变) -->\r\n\t\t<div v-else class=\"table-grid\">\r\n\t\t\t<!-- ...原有图表模式代码... -->\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst viewMode = ref(\"infobox\"); // 默认显示信息框对比模式\r\n\r\n\t// 信息框数据结构\r\n\tconst leftInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"\",\r\n\t\tsections: {}\r\n\t});\r\n\r\n\tconst rightInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"\",\r\n\t\tsections: {}\r\n\t});\r\n\r\n\t// 处理接收到的信息框数据\r\n\tconst processInfoboxData = data => {\r\n\t\ttry {\r\n\t\t\tif (!data) return { title: \"\", type: \"none\", sections: {} };\r\n\r\n\t\t\t// 标准化sections结构\r\n\t\t\tconst sections = {};\r\n\t\t\tif (data.sections) {\r\n\t\t\t\tfor (const [sectionName, sectionData] of Object.entries(\r\n\t\t\t\t\tdata.sections\r\n\t\t\t\t)) {\r\n\t\t\t\t\tsections[sectionName] = sectionData || {};\r\n\t\t\t\t}\r\n\t\t\t} else if (data.data) {\r\n\t\t\t\t// 兼容旧格式\r\n\t\t\t\tsections[\"基本信息\"] = data.data;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\t\tsections\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"处理信息框数据出错:\", e);\r\n\t\t\treturn { title: \"数据错误\", type: \"error\", sections: {} };\r\n\t\t}\r\n\t};\r\n\r\n\t// 计算属性\r\n\tconst hasInfoboxData = computed(() => {\r\n\t\treturn (\r\n\t\t\tObject.keys(leftInfobox.value.sections).length > 0 ||\r\n\t\t\tObject.keys(rightInfobox.value.sections).length > 0\r\n\t\t);\r\n\t});\r\n\r\n\t// 获取所有共有的sections\r\n\tconst commonSections = computed(() => {\r\n\t\tconst leftSections = Object.keys(leftInfobox.value.sections);\r\n\t\tconst rightSections = Object.keys(rightInfobox.value.sections);\r\n\t\treturn [...new Set([...leftSections, ...rightSections])].sort();\r\n\t});\r\n\r\n\t// 获取某个section中共有的fields\r\n\tconst getCommonFieldsInSection = section => {\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.sections[section] || {});\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.sections[section] || {});\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t};\r\n\r\n\t// 获取字段值\r\n\tconst getFieldValue = (infobox, section, field) => {\r\n\t\treturn infobox.sections[section]?.[field] || null;\r\n\t};\r\n\r\n\t// 获取字段数据类型\r\n\tconst getDataType = fieldData => {\r\n\t\tif (!fieldData) return \"空\";\r\n\t\tif (Array.isArray(fieldData)) return \"列表\";\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\tif (fieldData.value !== undefined) {\r\n\t\t\t\tif (fieldData.unit === \"%\") return \"百分比\";\r\n\t\t\t\tif (fieldData.unit) return \"数值\";\r\n\t\t\t\treturn \"文本\";\r\n\t\t\t}\r\n\t\t\treturn \"对象\";\r\n\t\t}\r\n\t\treturn typeof fieldData;\r\n\t};\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(150px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.infobox-type {\r\n\t\tfont-size: 0.8em;\r\n\t\tfont-weight: normal;\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t.section-header {\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #f0f4f8;\r\n\t\tfont-weight: bold;\r\n\t\tgrid-column: span 3;\r\n\t\tborder-top: 1px solid #ddd;\r\n\t\tborder-bottom: 1px solid #ddd;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tmin-height: 60px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.data-type {\r\n\t\tfont-size: 0.75em;\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-infobox-data {\r\n\t\tgrid-column: 1 / -1;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #666;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}