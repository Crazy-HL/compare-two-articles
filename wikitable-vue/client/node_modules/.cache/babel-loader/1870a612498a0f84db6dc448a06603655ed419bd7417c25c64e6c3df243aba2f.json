{"ast":null,"code":"import { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    showTrend: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n    const initChart = () => {\n      if (!chartEl.value) return;\n      if (chartInstance) chartInstance.dispose();\n      chartInstance = echarts.init(chartEl.value);\n\n      // 基础配置\n      const baseOption = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.filter(param => param.value != null).map(param => {\n              return `${param.seriesName}<br/>${param.name}: ${param.value}%`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          show: props.isCombined,\n          data: props.isCombined ? props.data.series.map(s => s.name) : []\n        },\n        grid: {\n          top: props.isCombined ? \"20%\" : \"15%\",\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          axisLabel: {\n            interval: 0,\n            rotate: 0\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          },\n          min: value => Math.max(0, value.min - 1)\n        }\n      };\n\n      // 合并图表配置\n      if (props.isCombined) {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: props.data.categories\n          },\n          series: props.data.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: series.color\n            },\n            itemStyle: {\n              color: series.color\n            },\n            label: {\n              show: true,\n              formatter: params => {\n                return params.value !== null ? `${params.value}%` : \"\";\n              },\n              color: \"#333\"\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      }\n      // 普通折线图配置\n      else {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: props.data.map(item => item.year)\n          },\n          series: [{\n            name: \"数据\",\n            data: props.data.map(item => item.value),\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: \"#4e79a7\"\n            },\n            label: {\n              show: true,\n              formatter: params => `${params.value}%`\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n      window.addEventListener(\"resize\", handleResize);\n    };\n    const handleResize = () => chartInstance?.resize();\n    onMounted(initChart);\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n    watch(() => [props.data, props.isCombined], () => initChart(), {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","echarts","props","__props","chartEl","chartInstance","initChart","value","dispose","init","baseOption","tooltip","trigger","formatter","params","filter","param","map","seriesName","name","join","legend","show","isCombined","data","series","s","grid","top","left","right","bottom","containLabel","xAxis","type","axisLabel","interval","rotate","yAxis","min","Math","max","option","categories","symbol","symbolSize","lineStyle","width","color","itemStyle","label","setOption","item","year","window","addEventListener","handleResize","resize","removeEventListener","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowTrend: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tif (chartInstance) chartInstance.dispose();\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t// 基础配置\r\n\t\tconst baseOption = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${param.name}: ${param.value}%`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: props.isCombined,\r\n\t\t\t\tdata: props.isCombined ? props.data.series.map(s => s.name) : []\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: props.isCombined ? \"20%\" : \"15%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"3%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\trotate: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t},\r\n\t\t\t\tmin: value => Math.max(0, value.min - 1)\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 合并图表配置\r\n\t\tif (props.isCombined) {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: props.data.categories\r\n\t\t\t\t},\r\n\t\t\t\tseries: props.data.series.map(series => ({\r\n\t\t\t\t\tname: series.name,\r\n\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\treturn params.value !== null ? `${params.value}%` : \"\";\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcolor: \"#333\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\t\t// 普通折线图配置\r\n\t\telse {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: props.data.map(item => item.year)\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\tcolor: \"#4e79a7\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tformatter: params => `${params.value}%`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\tconst handleResize = () => chartInstance?.resize();\r\n\r\n\tonMounted(initChart);\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined],\r\n\t\t() => initChart(),\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}