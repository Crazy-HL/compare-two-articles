{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"mode-toggle\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"infobox-grid\"\n};\nconst _hoisted_5 = {\n  class: \"header left-column\"\n};\nconst _hoisted_6 = {\n  class: \"infobox-type\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"header right-column\"\n};\nconst _hoisted_9 = {\n  class: \"infobox-type\"\n};\nconst _hoisted_10 = {\n  class: \"section-header left-column\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section-header middle-column\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"section-header right-column\"\n};\nconst _hoisted_13 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_14 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_15 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_16 = {\n  class: \"data-type\"\n};\nconst _hoisted_17 = {\n  class: \"cell right-column\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"no-infobox-data\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-data-message\"\n}, \"未找到可对比的信息框数据\", -1 /* HOISTED */));\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"table-grid\"\n}, [/*#__PURE__*/_createCommentVNode(\" ...原有图表模式代码... \")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.viewMode === 'chart'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.viewMode = 'chart')\n  }, \" 图表对比模式 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.viewMode === 'infobox'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.viewMode = 'infobox'),\n    disabled: !$setup.hasInfoboxData\n  }, \" 信息框对比模式 \", 10 /* CLASS, PROPS */, _hoisted_3)]), _createCommentVNode(\" 信息框对比模式 \"), $setup.viewMode === 'infobox' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 表头 \"), _createElementVNode(\"div\", _hoisted_5, [_createTextVNode(_toDisplayString($setup.leftInfobox.title || \"信息框1\") + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.leftInfobox.type), 1 /* TEXT */)]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createTextVNode(_toDisplayString($setup.rightInfobox.title || \"信息框2\") + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.rightInfobox.type), 1 /* TEXT */)]), _createCommentVNode(\" 内容区域 \"), $setup.hasInfoboxData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.commonSections, section => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: section\n    }, [_createCommentVNode(\" Section标题行 \"), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(section), 1 /* TEXT */), _hoisted_11, _createElementVNode(\"div\", _hoisted_12, _toDisplayString(section), 1 /* TEXT */), _createCommentVNode(\" Section内容 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCommonFieldsInSection(section), field => {\n      return _openBlock(), _createElementBlock(_Fragment, {\n        key: field\n      }, [_createElementVNode(\"div\", _hoisted_13, [_createVNode($setup[\"InfoboxField\"], {\n        value: $setup.getFieldValue($setup.leftInfobox, section, field)\n      }, null, 8 /* PROPS */, [\"value\"])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(field), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.getDataType($setup.getFieldValue($setup.leftInfobox, section, field))), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_createVNode($setup[\"InfoboxField\"], {\n        value: $setup.getFieldValue($setup.rightInfobox, section, field)\n      }, null, 8 /* PROPS */, [\"value\"])])], 64 /* STABLE_FRAGMENT */);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [..._hoisted_20]))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 图表对比模式 (保持不变) \"), _hoisted_21], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementVNode","_hoisted_19","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_normalizeClass","active","$setup","viewMode","onClick","_cache","$event","disabled","hasInfoboxData","_hoisted_3","_hoisted_4","_hoisted_5","_createTextVNode","_toDisplayString","leftInfobox","title","_hoisted_6","type","_hoisted_7","_hoisted_8","rightInfobox","_hoisted_9","_Fragment","_renderList","commonSections","section","_hoisted_10","_hoisted_11","_hoisted_12","getCommonFieldsInSection","field","_hoisted_13","_createVNode","value","getFieldValue","_hoisted_14","_hoisted_15","_hoisted_16","getDataType","_hoisted_17","_hoisted_18","_hoisted_20","_hoisted_21"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\"\r\n\t\t\t\t:disabled=\"!hasInfoboxData\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 信息框对比模式 -->\r\n\t\t<div v-if=\"viewMode === 'infobox'\" class=\"infobox-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t\t<div class=\"infobox-type\">{{ leftInfobox.type }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t\t<div class=\"infobox-type\">{{ rightInfobox.type }}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 内容区域 -->\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"section in commonSections\" :key=\"section\">\r\n\t\t\t\t\t<!-- Section标题行 -->\r\n\t\t\t\t\t<div class=\"section-header left-column\">{{ section }}</div>\r\n\t\t\t\t\t<div class=\"section-header middle-column\"></div>\r\n\t\t\t\t\t<div class=\"section-header right-column\">{{ section }}</div>\r\n\r\n\t\t\t\t\t<!-- Section内容 -->\r\n\t\t\t\t\t<template\r\n\t\t\t\t\t\tv-for=\"field in getCommonFieldsInSection(section)\"\r\n\t\t\t\t\t\t:key=\"field\">\r\n\t\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t\t<InfoboxField\r\n\t\t\t\t\t\t\t\t:value=\"getFieldValue(leftInfobox, section, field)\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t\t\t<div class=\"data-type\">\r\n\t\t\t\t\t\t\t\t{{ getDataType(getFieldValue(leftInfobox, section, field)) }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t\t<InfoboxField\r\n\t\t\t\t\t\t\t\t:value=\"getFieldValue(rightInfobox, section, field)\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<div v-else class=\"no-infobox-data\">\r\n\t\t\t\t<div class=\"no-data-message\">未找到可对比的信息框数据</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 图表对比模式 (保持不变) -->\r\n\t\t<div v-else class=\"table-grid\">\r\n\t\t\t<!-- ...原有图表模式代码... -->\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst viewMode = ref(\"infobox\"); // 默认显示信息框对比模式\r\n\r\n\t// 信息框数据结构\r\n\tconst leftInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"\",\r\n\t\tsections: {}\r\n\t});\r\n\r\n\tconst rightInfobox = ref({\r\n\t\ttitle: \"\",\r\n\t\ttype: \"\",\r\n\t\tsections: {}\r\n\t});\r\n\r\n\t// 处理接收到的信息框数据\r\n\tconst processInfoboxData = data => {\r\n\t\ttry {\r\n\t\t\tif (!data) return { title: \"\", type: \"none\", sections: {} };\r\n\r\n\t\t\t// 标准化sections结构\r\n\t\t\tconst sections = {};\r\n\t\t\tif (data.sections) {\r\n\t\t\t\tfor (const [sectionName, sectionData] of Object.entries(\r\n\t\t\t\t\tdata.sections\r\n\t\t\t\t)) {\r\n\t\t\t\t\tsections[sectionName] = sectionData || {};\r\n\t\t\t\t}\r\n\t\t\t} else if (data.data) {\r\n\t\t\t\t// 兼容旧格式\r\n\t\t\t\tsections[\"基本信息\"] = data.data;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\t\tsections\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"处理信息框数据出错:\", e);\r\n\t\t\treturn { title: \"数据错误\", type: \"error\", sections: {} };\r\n\t\t}\r\n\t};\r\n\r\n\t// 计算属性\r\n\tconst hasInfoboxData = computed(() => {\r\n\t\treturn (\r\n\t\t\tObject.keys(leftInfobox.value.sections).length > 0 ||\r\n\t\t\tObject.keys(rightInfobox.value.sections).length > 0\r\n\t\t);\r\n\t});\r\n\r\n\t// 获取所有共有的sections\r\n\tconst commonSections = computed(() => {\r\n\t\tconst leftSections = Object.keys(leftInfobox.value.sections);\r\n\t\tconst rightSections = Object.keys(rightInfobox.value.sections);\r\n\t\treturn [...new Set([...leftSections, ...rightSections])].sort();\r\n\t});\r\n\r\n\t// 获取某个section中共有的fields\r\n\tconst getCommonFieldsInSection = section => {\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.sections[section] || {});\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.sections[section] || {});\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t};\r\n\r\n\t// 获取字段值\r\n\tconst getFieldValue = (infobox, section, field) => {\r\n\t\treturn infobox.sections[section]?.[field] || null;\r\n\t};\r\n\r\n\t// 获取字段数据类型\r\n\tconst getDataType = fieldData => {\r\n\t\tif (!fieldData) return \"空\";\r\n\t\tif (Array.isArray(fieldData)) return \"列表\";\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\tif (fieldData.value !== undefined) {\r\n\t\t\t\tif (fieldData.unit === \"%\") return \"百分比\";\r\n\t\t\t\tif (fieldData.unit) return \"数值\";\r\n\t\t\t\treturn \"文本\";\r\n\t\t\t}\r\n\t\t\treturn \"对象\";\r\n\t\t}\r\n\t\treturn typeof fieldData;\r\n\t};\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(150px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\t.infobox-type {\r\n\t\tfont-size: 0.8em;\r\n\t\tfont-weight: normal;\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t.section-header {\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #f0f4f8;\r\n\t\tfont-weight: bold;\r\n\t\tgrid-column: span 3;\r\n\t\tborder-top: 1px solid #ddd;\r\n\t\tborder-bottom: 1px solid #ddd;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tmin-height: 60px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.data-type {\r\n\t\tfont-size: 0.75em;\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-infobox-data {\r\n\t\tgrid-column: 1 / -1;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #666;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}