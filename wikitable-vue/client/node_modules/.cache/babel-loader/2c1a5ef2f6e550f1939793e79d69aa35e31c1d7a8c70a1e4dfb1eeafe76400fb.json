{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-476f04b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"root\"\n};\nconst _hoisted_2 = {\n  class: \"div0 selectContent1\",\n  id: \"div1\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"div0\",\n  id: \"div2\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"VisContainer\"\n}, [/*#__PURE__*/_createCommentVNode(\" <div class=\\\"topContainer container\\\">\\r\\n\\t\\t\\t\\t\\t<IO width=\\\"800px\\\" height=\\\"250px\\\" :placeholder=\\\"selectText1\\\"></IO>\\r\\n\\t\\t\\t\\t</div> \"), /*#__PURE__*/_createCommentVNode(\" <div class=\\\"botContainer container\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"io\\\">\\r\\n\\t\\t\\t\\t\\t\\t<IO width=\\\"400px\\\" height=\\\"250px\\\" :placeholder=\\\"selectText1\\\"></IO>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"io\\\">\\r\\n\\t\\t\\t\\t\\t\\t<IO width=\\\"400px\\\" height=\\\"250px\\\" :placeholder=\\\"selectText1\\\"></IO>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div> \")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"div0 selectContent2\",\n  id: \"div3\",\n  ref: \"div3Ref\"\n};\nconst _hoisted_6 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    innerHTML: $setup.div1Content,\n    class: \"showHtml\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 动态插入 HTML 内容 \"), _createElementVNode(\"div\", {\n    innerHTML: $setup.div3Content,\n    class: \"showHtml\"\n  }, null, 8 /* PROPS */, _hoisted_6)], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createCommentVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2","innerHTML","$setup","div1Content","_hoisted_3","_hoisted_4","_hoisted_5","div3Content","_hoisted_6"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\history.vue"],"sourcesContent":["<template>\r\n\t<div id=\"root\">\r\n\t\t<div class=\"div0 selectContent1\" id=\"div1\">\r\n\t\t\t<div v-html=\"div1Content\" class=\"showHtml\"></div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"div0\" id=\"div2\">\r\n\t\t\t<div class=\"VisContainer\">\r\n\t\t\t\t<!-- <div class=\"topContainer container\">\r\n\t\t\t\t\t<IO width=\"800px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t</div> -->\r\n\t\t\t\t<!-- <div class=\"botContainer container\">\r\n\t\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t\t<IO width=\"400px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t\t<IO width=\"400px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"div0 selectContent2\" id=\"div3\" ref=\"div3Ref\">\r\n\t\t\t<!-- 动态插入 HTML 内容 -->\r\n\t\t\t<div v-html=\"div3Content\" class=\"showHtml\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, nextTick } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\t// import axios from \"axios\";\r\n\timport MouseSelection from \"@/js/mouse_selection\";\r\n\r\n\t// 用于存储 HTML 内容\r\n\tconst div1Content = ref(\"\");\r\n\tconst div3Content = ref(\"\");\r\n\tconst div3Ref = ref(null);\r\n\r\n\t// 动态 placeholder\r\n\tconst selectText1 = ref(\"1\"); // 初始为 1\r\n\r\n\t// 页面初始化时加载内容\r\n\tonMounted(async () => {\r\n\t\tconst src1 = \"https://baike.baidu.com/item/%E5%94%90%E6%9C%9D/53699\";\r\n\t\tconst src2 = \"https://zh.wikipedia.org/wiki/%E5%94%90%E6%9C%9D\";\r\n\t\t// 获取并加载内容\r\n\t\tawait showHtml(src1, div3Content);\r\n\t\tawait showHtml(src2, div1Content);\r\n\r\n\t\t// 使用 nextTick 确保 v-html 渲染完成后再启动 MouseSelection\r\n\t\tnextTick(() => {\r\n\t\t\tMouseSelection.start({\r\n\t\t\t\trangeSelector: \".selectContent1\" // 传递范围选择器，支持向下检索\r\n\t\t\t});\r\n\t\t\tMouseSelection.start({\r\n\t\t\t\trangeSelector: \".selectContent2\" // 传递范围选择器，支持向下检索\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 每秒增加数字\r\n\t\tsetInterval(() => {\r\n\t\t\tselectText1.value = (parseInt(selectText1.value) + 1).toString(); // 增加数字\r\n\t\t}, 1000); // 每 1 秒更新一次\r\n\t});\r\n\r\n\t// 获取并展示内容\r\n\tasync function showHtml(src, area) {\r\n\t\ttry {\r\n\t\t\tapi.get(\"html\", { url: src }, data => {\r\n\t\t\t\tarea.value = htmlToDom(data);\r\n\t\t\t});\r\n\t\t\t// const res = await axios.get(src);\r\n\t\t\t// const html = res.data;\r\n\t\t\t// area.value = htmlToDom(html);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"请求失败：\", err.message);\r\n\t\t\tarea.value = \"\"; // 如果请求失败，返回空字符串\r\n\t\t}\r\n\t}\r\n\r\n\t// 将 HTML 内容转化为 DOM\r\n\tfunction htmlToDom(html) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn doc.documentElement.outerHTML;\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#root {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\talign-items: flex-start;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: absolute;\r\n\t\theight: 100vh;\r\n\t\tborder: 2px solid red;\r\n\t}\r\n\r\n\t/* 左 */\r\n\t#div1 {\r\n\t\tleft: 0;\r\n\t\twidth: 30%;\r\n\t}\r\n\r\n\t/* 中 */\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t}\r\n\r\n\t#div2 .VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t}\r\n\r\n\t#div2 .container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid black;\r\n\t\tmargin: 10px 10px;\r\n\t}\r\n\t#div2 .botContainer {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t#div2 .io,\r\n\t#div2 .io {\r\n\t\tflex: 1;\r\n\t\tmargin: 5px, 10px;\r\n\t\tborder: 1px solid blue;\r\n\t\tmargin: 0 20px;\r\n\t\tpadding: 5px 5px;\r\n\t}\r\n\r\n\t/* 右 */\r\n\t#div3 {\r\n\t\twidth: 30%;\r\n\t\tright: 0;\r\n\t}\r\n\t/* 其它 */\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%; /* 确保 iframe 的内容充满容器 */\r\n\t\tborder: 1px solid #ccc;\r\n\t\toverflow: auto; /* 允许滚动 */\r\n\t}\r\n\r\n\t.selection-box {\r\n\t\tposition: absolute;\r\n\t\tborder: 2px dashed rgba(0, 0, 255, 0.7); /* 可见的蓝色虚线 */\r\n\t\tbackground-color: rgba(0, 0, 255, 0.1); /* 半透明蓝色背景 */\r\n\t\tz-index: 9999; /* 确保在最上层显示 */\r\n\t\tpointer-events: none; /* 确保不会影响鼠标事件 */\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,EAAE,EAAC;AAAM;;EACRC,KAAK,EAAC,qBAAqB;EAACD,EAAE,EAAC;;mBAFtC;gEAMEE,mBAAA,CAcM;EAdDD,KAAK,EAAC,MAAM;EAACD,EAAE,EAAC;iBACpBE,mBAAA,CAYM;EAZDD,KAAK,EAAC;AAAc,I,aACxBE,mBAAA,mJAEU,E,aACVA,mBAAA,oVAOU,C;;EAIPF,KAAK,EAAC,qBAAqB;EAACD,EAAE,EAAC,MAAM;EAACI,GAAG,EAAC;;mBAtBjD;;uBACCC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBLJ,mBAAA,CAEM,OAFNK,UAEM,GADLL,mBAAA,CAAiD;IAA5CM,SAAoB,EAAZC,MAAA,CAAAC,WAAW;IAAET,KAAK,EAAC;0BAHnCU,UAAA,E,GAMEC,UAcM,EAENV,mBAAA,CAGM,OAHNW,UAGM,GAFLV,mBAAA,kBAAqB,EACrBD,mBAAA,CAAiD;IAA5CM,SAAoB,EAAZC,MAAA,CAAAK,WAAW;IAAEb,KAAK,EAAC;0BAxBnCc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}