{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 表格处理状态\n    const processedTable1 = ref({\n      data: {},\n      years: [],\n      attributes: []\n    });\n    const processedTable2 = ref({\n      data: {},\n      years: [],\n      attributes: []\n    });\n    const table1Name = ref(\"表格1\");\n    const table2Name = ref(\"表格2\");\n\n    // 计算属性\n    const hasData = computed(() => {\n      return props.div1RawData && props.div3RawData;\n    });\n    const commonAttributes = computed(() => {\n      return processedTable1.value.attributes.filter(attr => processedTable2.value.attributes.includes(attr));\n    });\n\n    // 监听数据变化\n    watch(() => props.div1RawData, html => {\n      if (props.div1RawData && props.div3RawData) table_json();\n      if (html) processedTable1.value = parseTableData(html);\n    }, {\n      immediate: true\n    });\n    watch(() => props.div3RawData, html => {\n      if (html) processedTable2.value = parseTableData(html);\n    }, {\n      immediate: true\n    });\n    async function table_json() {\n      if (!props.div1RawData || !props.div3RawData) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        api.post(\"merged_json\", {\n          table1: props.div1RawData,\n          table2: props.div3RawData\n        }, data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          console.log(\"table_json:\", data);\n        });\n      } catch (error) {\n        console.error(\"处理TABLE_JSON时出错:\", error);\n        alert(\"处理TABLE_JSON时出错，请稍后重试\");\n      }\n    }\n    // 表格解析方法\n    const parseTableData = html => {\n      const result = {\n        data: {},\n        years: [],\n        attributes: []\n      };\n      if (!html) return result;\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n        const table = doc.querySelector(\"table\");\n        if (!table) return result;\n\n        // 提取表头\n        const headers = Array.from(table.querySelectorAll(\"th\")).map(th => {\n          const abbr = th.querySelector(\"abbr\");\n          return abbr ? abbr.title : th.textContent.trim();\n        });\n        result.attributes = headers.slice(2); // 跳过前两列(Year, Team)\n\n        // 初始化数据结构\n        result.attributes.forEach(attr => {\n          result.data[attr] = [];\n        });\n\n        // 提取行数据\n        Array.from(table.querySelectorAll(\"tr:not(:first-child)\")).forEach(tr => {\n          const cells = Array.from(tr.querySelectorAll(\"td\"));\n          if (cells.length < headers.length) return;\n\n          // 提取年份\n          const yearMatch = cells[0].textContent.match(/(\\d{4})/);\n          if (yearMatch) result.years.push(yearMatch[1]);\n\n          // 提取统计数据\n          result.attributes.forEach((attr, idx) => {\n            const value = parseFloat(cells[idx + 2].textContent.replace(/[^\\d.-]/g, \"\"));\n            result.data[attr].push(isNaN(value) ? 0 : value);\n          });\n        });\n        return result;\n      } catch (error) {\n        console.error(\"表格解析错误:\", error);\n        return result;\n      }\n    };\n\n    // 辅助方法\n    const getSparklineData = (table, attr) => {\n      return {\n        values: table.data[attr] || [],\n        labels: table.years || []\n      };\n    };\n    const getAverage = values => {\n      if (!values?.length) return \"N/A\";\n      const sum = values.reduce((a, b) => a + b, 0);\n      return (sum / values.length).toFixed(2);\n    };\n    const getAttributeDesc = attr => {\n      const descMap = {\n        PPG: \"场均得分\",\n        APG: \"场均助攻\",\n        RPG: \"场均篮板\",\n        \"FG%\": \"投篮命中率\",\n        \"3P%\": \"三分命中率\",\n        \"FT%\": \"罚球命中率\"\n      };\n      return descMap[attr] || \"\";\n    };\n    const __returned__ = {\n      props,\n      processedTable1,\n      processedTable2,\n      table1Name,\n      table2Name,\n      hasData,\n      commonAttributes,\n      table_json,\n      parseTableData,\n      getSparklineData,\n      getAverage,\n      getAttributeDesc,\n      ref,\n      computed,\n      watch,\n      SparklineChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","SparklineChart","props","__props","processedTable1","data","years","attributes","processedTable2","table1Name","table2Name","hasData","div1RawData","div3RawData","commonAttributes","value","filter","attr","includes","html","table_json","parseTableData","immediate","alert","api","post","table1","table2","error","console","message","log","result","parser","DOMParser","doc","parseFromString","table","querySelector","headers","Array","from","querySelectorAll","map","th","abbr","title","textContent","trim","slice","forEach","tr","cells","length","yearMatch","match","push","idx","parseFloat","replace","isNaN","getSparklineData","values","labels","getAverage","sum","reduce","a","b","toFixed","getAttributeDesc","descMap","PPG","APG","RPG"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div v-if=\"hasData\" class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">{{ table1Name }}</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">{{ table2Name }}</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<SparklineChart :data=\"getSparklineData(processedTable1, attr)\" />\r\n\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t平均: {{ getAverage(processedTable1.data[attr]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t<div class=\"attribute-desc\">{{ getAttributeDesc(attr) }}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<SparklineChart :data=\"getSparklineData(processedTable2, attr)\" />\r\n\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t平均: {{ getAverage(processedTable2.data[attr]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t\t<div v-else class=\"empty-state\">请先从左/右侧选择两个表格进行对比</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 表格处理状态\r\n\tconst processedTable1 = ref({ data: {}, years: [], attributes: [] });\r\n\tconst processedTable2 = ref({ data: {}, years: [], attributes: [] });\r\n\tconst table1Name = ref(\"表格1\");\r\n\tconst table2Name = ref(\"表格2\");\r\n\r\n\t// 计算属性\r\n\tconst hasData = computed(() => {\r\n\t\treturn props.div1RawData && props.div3RawData;\r\n\t});\r\n\r\n\tconst commonAttributes = computed(() => {\r\n\t\treturn processedTable1.value.attributes.filter(attr =>\r\n\t\t\tprocessedTable2.value.attributes.includes(attr)\r\n\t\t);\r\n\t});\r\n\r\n\t// 监听数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tif (props.div1RawData && props.div3RawData) table_json();\r\n\t\t\tif (html) processedTable1.value = parseTableData(html);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) processedTable2.value = parseTableData(html);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\tasync function table_json() {\r\n\t\tif (!props.div1RawData || !props.div3RawData) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{ table1: props.div1RawData, table2: props.div3RawData },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(\"table_json:\", data);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理TABLE_JSON时出错:\", error);\r\n\t\t\talert(\"处理TABLE_JSON时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\t// 表格解析方法\r\n\tconst parseTableData = html => {\r\n\t\tconst result = { data: {}, years: [], attributes: [] };\r\n\t\tif (!html) return result;\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headers = Array.from(table.querySelectorAll(\"th\")).map(th => {\r\n\t\t\t\tconst abbr = th.querySelector(\"abbr\");\r\n\t\t\t\treturn abbr ? abbr.title : th.textContent.trim();\r\n\t\t\t});\r\n\t\t\tresult.attributes = headers.slice(2); // 跳过前两列(Year, Team)\r\n\r\n\t\t\t// 初始化数据结构\r\n\t\t\tresult.attributes.forEach(attr => {\r\n\t\t\t\tresult.data[attr] = [];\r\n\t\t\t});\r\n\r\n\t\t\t// 提取行数据\r\n\t\t\tArray.from(table.querySelectorAll(\"tr:not(:first-child)\")).forEach(tr => {\r\n\t\t\t\tconst cells = Array.from(tr.querySelectorAll(\"td\"));\r\n\t\t\t\tif (cells.length < headers.length) return;\r\n\r\n\t\t\t\t// 提取年份\r\n\t\t\t\tconst yearMatch = cells[0].textContent.match(/(\\d{4})/);\r\n\t\t\t\tif (yearMatch) result.years.push(yearMatch[1]);\r\n\r\n\t\t\t\t// 提取统计数据\r\n\t\t\t\tresult.attributes.forEach((attr, idx) => {\r\n\t\t\t\t\tconst value = parseFloat(\r\n\t\t\t\t\t\tcells[idx + 2].textContent.replace(/[^\\d.-]/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tresult.data[attr].push(isNaN(value) ? 0 : value);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\r\n\t// 辅助方法\r\n\tconst getSparklineData = (table, attr) => {\r\n\t\treturn {\r\n\t\t\tvalues: table.data[attr] || [],\r\n\t\t\tlabels: table.years || []\r\n\t\t};\r\n\t};\r\n\r\n\tconst getAverage = values => {\r\n\t\tif (!values?.length) return \"N/A\";\r\n\t\tconst sum = values.reduce((a, b) => a + b, 0);\r\n\t\treturn (sum / values.length).toFixed(2);\r\n\t};\r\n\r\n\tconst getAttributeDesc = attr => {\r\n\t\tconst descMap = {\r\n\t\t\tPPG: \"场均得分\",\r\n\t\t\tAPG: \"场均助攻\",\r\n\t\t\tRPG: \"场均篮板\",\r\n\t\t\t\"FG%\": \"投篮命中率\",\r\n\t\t\t\"3P%\": \"三分命中率\",\r\n\t\t\t\"FT%\": \"罚球命中率\"\r\n\t\t};\r\n\t\treturn descMap[attr] || \"\";\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tgap: 1px;\r\n\t\tbackground: #eee;\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #f8f9fa;\r\n\t\tfont-weight: 500;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 16px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.left-column {\r\n\t\tborder-right: 1px solid #eee;\r\n\t}\r\n\r\n\t.right-column {\r\n\t\tborder-left: 1px solid #eee;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 500;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.attribute-desc {\r\n\t\tfont-size: 0.8em;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.stats-summary {\r\n\t\tmargin-top: 8px;\r\n\t\tfont-size: 0.9em;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.empty-state {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}