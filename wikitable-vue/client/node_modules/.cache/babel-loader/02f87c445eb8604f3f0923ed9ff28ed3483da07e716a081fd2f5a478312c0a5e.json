{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"data-viz\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chart-container pie-chart\",\n  ref: \"pieChart\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"chart-container line-chart\",\n  ref: \"lineChart\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"chart-container bar-chart\",\n  ref: \"barChart\"\n};\nconst _hoisted_5 = {\n  class: \"text-display\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"field-visualization\",\n    \"data-viz\": $setup.visualizationType\n  }, [$setup.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createCommentVNode(\" 饼图 \"), $setup.visualizationType === 'pie-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 折线图 \"), $setup.visualizationType === 'line-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 柱状图 \"), $setup.visualizationType === 'bar-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 文本 \"), _createElementVNode(\"div\", _hoisted_5, [$setup.isArray ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.processedArray, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString($setup.formatTextValue(item)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($setup.formatTextValue($props.field)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"无数据\"))], 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","ref","_createElementBlock","$setup","visualizationType","hasData","_Fragment","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","isArray","_renderList","processedArray","item","index","formatTextValue","_createTextVNode","_toDisplayString","$props","field","_hoisted_6","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\" :data-viz=\"visualizationType\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<!-- 折线图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 柱状图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 文本 -->\r\n\t\t\t<div v-else class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String,\r\n\t\tyRange: Array, // 仅柱状图使用\r\n\t\tcompareData: [Object, Array]\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 数据清洗\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\tconst num = parseFloat(String(value).replace(/[^0-9.-]/g, \"\"));\r\n\t\treturn isNaN(num) ? value : num;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tconst rawArray = Array.isArray(props.field) ? props.field : [props.field];\r\n\r\n\t\treturn rawArray\r\n\t\t\t.map(item => {\r\n\t\t\t\tlet year;\r\n\t\t\t\tif (item.year) {\r\n\t\t\t\t\tyear = parseInt(item.year);\r\n\t\t\t\t} else if (item.raw) {\r\n\t\t\t\t\tconst yearMatch = String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null && !isNaN(item.value));\r\n\t});\r\n\r\n\t// 可视化类型判断\r\n\tconst visualizationType = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.visualization ||\r\n\t\t\t(isTimeSeriesData.value\r\n\t\t\t\t? \"line-chart\"\r\n\t\t\t\t: isComparisonData.value\r\n\t\t\t\t? \"bar-chart\"\r\n\t\t\t\t: isSinglePercentage.value\r\n\t\t\t\t? \"pie-chart\"\r\n\t\t\t\t: \"text-only\")\r\n\t\t);\r\n\t});\r\n\r\n\t// 数据类型判断\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(\r\n\t\t\t\titem => item.year && typeof item.value === \"number\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化文本\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString();\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 绘制饼图\r\n\tconst drawPieChart = () => {\r\n\t\tconst container = pieChart.value;\r\n\t\tif (!container) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst value = cleanValue(props.field.value);\r\n\t\tif (isNaN(value)) return;\r\n\r\n\t\tconst data = [value, 100 - value];\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(d3.pie()(data))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", (_, i) => (i === 0 ? \"#4CAF50\" : \"#eee\"));\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(`${value}%`);\r\n\t};\r\n\r\n\t// 绘制柱状图（使用统一Y轴）\r\n\tconst drawBarChart = () => {\r\n\t\tconst container = barChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 10, bottom: 30, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\t// 使用统一Y轴或自动计算\r\n\t\tconst yDomain = props.yRange || [\r\n\t\t\t0,\r\n\t\t\td3.max(processedArray.value, d => d.value) * 1.2\r\n\t\t];\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(processedArray.value.map((_, i) => i))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.4);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(yDomain)\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\t// 绘制柱子\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\t// 数值标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => (props.type === \"percentage\" ? `${d.value}%` : d.value));\r\n\t};\r\n\r\n\t// 绘制折线图（不使用统一Y轴）\r\n\tconst drawLineChart = () => {\r\n\t\tconst container = lineChart.value;\r\n\t\tif (!container || processedArray.value.length < 2) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n\r\n\t\t// 按年份排序\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\t// 独立Y轴范围\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(chartData, d => d.value) * 1.2])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\t// 绘制折线\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5));\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", \"#9C27B0\")\r\n\t\t\t.attr(\"stroke-width\", 3)\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\t// 数据点\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 5)\r\n\t\t\t.attr(\"fill\", \"#9C27B0\")\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 2);\r\n\r\n\t\t// 最新值标签\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 12)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, props.yRange, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t/* 柱状图样式 */\r\n\t.bar-chart rect {\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.bar-chart rect:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t/* 折线图样式 */\r\n\t.line-chart path {\r\n\t\ttransition: stroke-width 0.3s ease;\r\n\t}\r\n\r\n\t.line-chart path:hover {\r\n\t\tstroke-width: 4px;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;EAAAA,GAAA;EAMIC,KAAK,EAAC,2BAA2B;EACjCC,GAAG,EAAC;;;EAPRF,GAAA;EAYIC,KAAK,EAAC,4BAA4B;EAClCC,GAAG,EAAC;;;EAbRF,GAAA;EAkBIC,KAAK,EAAC,2BAA2B;EACjCC,GAAG,EAAC;;;EAGOD,KAAK,EAAC;AAAc;;EAtBnCD,GAAA;EAoCcC,KAAK,EAAC;;;uBAnCnBE,mBAAA,CAoCM;IApCDF,KAAK,EAAC,qBAAqB;IAAE,UAAQ,EAAEG,MAAA,CAAAC;MAC3BD,MAAA,CAAAE,OAAO,I,cAAvBH,mBAAA,CAiCWI,SAAA;IAnCbP,GAAA;EAAA,IAGGQ,mBAAA,QAAW,EAEJJ,MAAA,CAAAC,iBAAiB,oB,cADxBF,mBAAA,CAGsB,OAHtBM,UAGsB,iCAPzBD,mBAAA,gBASGA,mBAAA,SAAY,EAELJ,MAAA,CAAAC,iBAAiB,qB,cADxBF,mBAAA,CAGuB,OAHvBO,UAGuB,iCAb1BF,mBAAA,gBAeGA,mBAAA,SAAY,EAELJ,MAAA,CAAAC,iBAAiB,oB,cADxBF,mBAAA,CAGsB,OAHtBQ,UAGsB,kC,cAGtBR,mBAAA,CAYMI,SAAA;IAlCTP,GAAA;EAAA,IAqBGQ,mBAAA,QAAW,EACXI,mBAAA,CAYM,OAZNC,UAYM,GAXWT,MAAA,CAAAU,OAAO,I,kBACtBX,mBAAA,CAKMI,SAAA;IA7BXP,GAAA;EAAA,GAAAe,WAAA,CAyB8BX,MAAA,CAAAY,cAAc,EAzB5C,CAyBcC,IAAI,EAAEC,KAAK;yBADpBf,mBAAA,CAKM;MAHJH,GAAG,EAAEkB,KAAK;MACXjB,KAAK,EAAC;wBACHG,MAAA,CAAAe,eAAe,CAACF,IAAI;kDAGzBd,mBAAA,CAEWI,SAAA;IAjCfP,GAAA;EAAA,IAAAoB,gBAAA,CAAAC,gBAAA,CAgCQjB,MAAA,CAAAe,eAAe,CAACG,MAAA,CAAAC,KAAK,kB,+HAI3BpB,mBAAA,CAAqC,OAArCqB,UAAqC,EAAT,KAAG,G,iBApCjCC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}