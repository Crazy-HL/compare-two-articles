{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Infobox数据对比\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"titles\"\n};\nconst _hoisted_5 = {\n  class: \"title-box left\"\n};\nconst _hoisted_6 = {\n  class: \"title-box right\"\n};\nconst _hoisted_7 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header left-column\"\n}, \"数据可视化\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header middle-column\"\n}, \"比较属性\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header right-column\"\n}, \"数据可视化\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_12 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_13 = {\n  class: \"field-name\"\n};\nconst _hoisted_14 = {\n  class: \"field-type\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"field-unit\"\n};\nconst _hoisted_16 = {\n  class: \"cell right-column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 表头 \"), _hoisted_8, _hoisted_9, _hoisted_10, _createCommentVNode(\" 内容行 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.leftInfobox.data[field.key],\n      type: field.type\n    }, null, 8 /* PROPS */, [\"field\", \"type\"])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(field.displayName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(field.type), 1 /* TEXT */), field.unit ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(field.unit), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.rightInfobox.data[field.key],\n      type: field.type\n    }, null, 8 /* PROPS */, [\"field\", \"type\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$setup","leftInfobox","title","_hoisted_6","rightInfobox","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","comparableFields","field","_hoisted_11","_createVNode","data","type","_hoisted_12","_hoisted_13","displayName","_hoisted_14","unit","_hoisted_15","_hoisted_16"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据可视化</div>\r\n\t\t\t<div class=\"column-header middle-column\">比较属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据可视化</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"leftInfobox.data[field.key]\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.displayName }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.type }}</div>\r\n\t\t\t\t\t<div class=\"field-unit\" v-if=\"field.unit\">{{ field.unit }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"rightInfobox.data[field.key]\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// Infobox数据\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.data || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义\r\n\tconst FIELD_DEFINITIONS = {\r\n\t\t// 经济指标\r\n\t\tgdp: {\r\n\t\t\tdisplayName: \"GDP\",\r\n\t\t\ttype: \"currency\",\r\n\t\t\tunit: \"美元\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tpopulation: {\r\n\t\t\tdisplayName: \"人口\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tunit: \"人\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\tgdpGrowth: {\r\n\t\t\tdisplayName: \"GDP增长率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tinflation: {\r\n\t\t\tdisplayName: \"通货膨胀率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tunemployment: {\r\n\t\t\tdisplayName: \"失业率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t}\r\n\t\t// 更多字段定义...\r\n\t};\r\n\r\n\t// 获取可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\tconst fields = [];\r\n\r\n\t\t// 检查两个Infobox共有的字段\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.data);\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.data);\r\n\t\tconst commonFields = [...new Set([...leftFields, ...rightFields])];\r\n\r\n\t\tcommonFields.forEach(fieldKey => {\r\n\t\t\t// 检查是否是我们定义的比较字段\r\n\t\t\tconst matchedField = Object.entries(FIELD_DEFINITIONS).find(([key]) =>\r\n\t\t\t\tfieldKey.toLowerCase().includes(key)\r\n\t\t\t);\r\n\r\n\t\t\tif (matchedField) {\r\n\t\t\t\tconst [key, definition] = matchedField;\r\n\r\n\t\t\t\t// 检查数据是否适合可视化\r\n\t\t\t\tconst leftData = leftInfobox.value.data[fieldKey];\r\n\t\t\t\tconst rightData = rightInfobox.value.data[fieldKey];\r\n\r\n\t\t\t\tif (isVisualizable(leftData) && isVisualizable(rightData)) {\r\n\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\tkey: fieldKey,\r\n\t\t\t\t\t\tdisplayName: definition.displayName,\r\n\t\t\t\t\t\ttype: definition.type,\r\n\t\t\t\t\t\tunit: definition.unit,\r\n\t\t\t\t\t\tchartType: definition.chartType\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t});\r\n\r\n\t// 检查数据是否适合可视化\r\n\tconst isVisualizable = fieldData => {\r\n\t\tif (!fieldData) return false;\r\n\r\n\t\t// 如果是数值或带单位的数值\r\n\t\tif (typeof fieldData.value === \"number\") return true;\r\n\r\n\t\t// 如果是时间序列数据\r\n\t\tif (\r\n\t\t\tArray.isArray(fieldData) &&\r\n\t\t\tfieldData.every(item => item.value && item.year)\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// 如果是纯文本数字\r\n\t\tif (\r\n\t\t\ttypeof fieldData.text === \"string\" &&\r\n\t\t\t!isNaN(parseFloat(fieldData.text))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-top: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\twidth: 48%;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 10px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\tmin-height: 120px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.field-unit {\r\n\t\tcolor: #888;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,mBAAmB;EAACC,GAAG,EAAC;;;EAC7BD,KAAK,EAAC;AAAQ;gEAClBE,mBAAA,CAAoB,YAAhB,aAAW;;EACVF,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAgB;;EACtBA,KAAK,EAAC;AAAiB;;EAIzBA,KAAK,EAAC;AAAiB;gEAE3BE,mBAAA,CAAkD;EAA7CF,KAAK,EAAC;AAA2B,GAAC,OAAK;gEAC5CE,mBAAA,CAAmD;EAA9CF,KAAK,EAAC;AAA6B,GAAC,MAAI;iEAC7CE,mBAAA,CAAmD;EAA9CF,KAAK,EAAC;AAA4B,GAAC,OAAK;;EAIvCA,KAAK,EAAC;AAAkB;;EAKxBA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAzB5BG,GAAA;EA0BUH,KAAK,EAAC;;;EAEPA,KAAK,EAAC;AAAmB;;uBA3BjCI,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCLH,mBAAA,CAMM,OANNI,UAMM,GALLC,UAAoB,EACpBL,mBAAA,CAGM,OAHNM,UAGM,GAFLN,mBAAA,CAAyD,OAAzDO,UAAyD,EAAAC,gBAAA,CAA1BC,MAAA,CAAAC,WAAW,CAACC,KAAK,kBAChDX,mBAAA,CAA2D,OAA3DY,UAA2D,EAAAJ,gBAAA,CAA3BC,MAAA,CAAAI,YAAY,CAACF,KAAK,iB,KAIpDX,mBAAA,CAwBM,OAxBNc,UAwBM,GAvBLC,mBAAA,QAAW,EACXC,UAAkD,EAClDC,UAAmD,EACnDC,WAAmD,EAEnDH,mBAAA,SAAY,G,kBACZb,mBAAA,CAgBWiB,SAAA,QAjCdC,WAAA,CAiB6BX,MAAA,CAAAY,gBAAgB,EAAzBC,KAAK;yBAjBzBpB,mBAAA,CAAAiB,SAAA;MAAAlB,GAAA,EAiBqDqB,KAAK,CAACrB;QACvDD,mBAAA,CAIM,OAJNuB,WAIM,GAHLC,YAAA,CAEsBf,MAAA;MADpBa,KAAK,EAAEb,MAAA,CAAAC,WAAW,CAACe,IAAI,CAACH,KAAK,CAACrB,GAAG;MACjCyB,IAAI,EAAEJ,KAAK,CAACI;kDAEf1B,mBAAA,CAIM,OAJN2B,WAIM,GAHL3B,mBAAA,CAAqD,OAArD4B,WAAqD,EAAApB,gBAAA,CAA1Bc,KAAK,CAACO,WAAW,kBAC5C7B,mBAAA,CAA8C,OAA9C8B,WAA8C,EAAAtB,gBAAA,CAAnBc,KAAK,CAACI,IAAI,kBACPJ,KAAK,CAACS,IAAI,I,cAAxC7B,mBAAA,CAAgE,OAAhE8B,WAAgE,EAAAxB,gBAAA,CAAnBc,KAAK,CAACS,IAAI,oBA1B5DhB,mBAAA,e,GA4BIf,mBAAA,CAIM,OAJNiC,WAIM,GAHLT,YAAA,CAEsBf,MAAA;MADpBa,KAAK,EAAEb,MAAA,CAAAI,YAAY,CAACY,IAAI,CAACH,KAAK,CAACrB,GAAG;MAClCyB,IAAI,EAAEJ,KAAK,CAACI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}