{"ast":null,"code":"import { ref, onMounted } from \"vue\";\n\n// 定义变量\n\nexport default {\n  __name: 'WikipediaViewer',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const pageTitle = ref(\"LeBron James\"); // 页面标题\n    const content = ref(\"\"); // 存储页面内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n\n    // 获取维基百科内容\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&titles=${encodeURIComponent(pageTitle.value)}&explaintext=false&origin=*`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const data = await response.json();\n        const pages = data.query.pages;\n        const pageId = Object.keys(pages)[0]; // 获取页面ID\n        content.value = pages[pageId].extract; // 提取页面内容（包含HTML）\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false; // 结束加载状态\n      }\n    };\n\n    // 在组件挂载时调用 API\n    onMounted(() => {\n      fetchWikipediaContent();\n    });\n    const __returned__ = {\n      pageTitle,\n      content,\n      loading,\n      error,\n      fetchWikipediaContent,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","pageTitle","content","loading","error","fetchWikipediaContent","apiUrl","encodeURIComponent","value","response","fetch","ok","Error","data","json","pages","query","pageId","Object","keys","extract","err","message"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/WikipediaViewer.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\t\t<div v-if=\"loading\">Loading...</div>\r\n\t\t<div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n\t\t<div v-else v-html=\"content\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\t// 定义变量\r\n\tconst pageTitle = ref(\"LeBron James\"); // 页面标题\r\n\tconst content = ref(\"\"); // 存储页面内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\r\n\t// 获取维基百科内容\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&titles=${encodeURIComponent(\r\n\t\t\t\tpageTitle.value\r\n\t\t\t)}&explaintext=false&origin=*`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(\"Failed to fetch data\");\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst pages = data.query.pages;\r\n\t\t\tconst pageId = Object.keys(pages)[0]; // 获取页面ID\r\n\t\t\tcontent.value = pages[pageId].extract; // 提取页面内容（包含HTML）\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false; // 结束加载状态\r\n\t\t}\r\n\t};\r\n\r\n\t// 在组件挂载时调用 API\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.error {\r\n\t\tcolor: red;\r\n\t}\r\n</style>\r\n"],"mappings":"AAUC,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;AAEpC;;;;;;;;;IACA,MAAMC,SAAS,GAAGF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACvC,MAAMG,OAAO,GAAGH,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,MAAMI,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,MAAMK,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMM,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH,MAAMC,MAAM,GAAG,oFAAoFC,kBAAkB,CACpHN,SAAS,CAACO,KACX,CAAC,6BAA6B;QAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACxC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACD,KAAK;QAC9B,MAAME,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtCb,OAAO,CAACM,KAAK,GAAGO,KAAK,CAACE,MAAM,CAAC,CAACG,OAAO,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACbjB,KAAK,CAACI,KAAK,GAAG,oCAAoC,GAAGa,GAAG,CAACC,OAAO;MACjE,CAAC,SAAS;QACTnB,OAAO,CAACK,KAAK,GAAG,KAAK,CAAC,CAAC;MACxB;IACD,CAAC;;IAED;IACAR,SAAS,CAAC,MAAM;MACfK,qBAAqB,CAAC,CAAC;IACxB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}