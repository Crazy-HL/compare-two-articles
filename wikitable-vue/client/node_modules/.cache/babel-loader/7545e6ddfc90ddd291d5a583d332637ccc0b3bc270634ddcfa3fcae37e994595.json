{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport HighlightText from \"@/js/highlight\"; // 高亮工具\n\nexport default {\n  __name: 'BaseWikipedia',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const selectedHtml = ref(\"\"); // 选中的 HTML 代码\n    const showPopup = ref(false); // 是否显示弹出框\n\n    // **处理选中内容**\n    const handleSelection = () => {\n      const selection = window.getSelection();\n      if (!selection.rangeCount) return;\n      const range = selection.getRangeAt(0);\n      const clonedRange = range.cloneContents();\n\n      // **判断是否包含表格**\n      const containsTable = clonedRange.querySelector(\"table\") !== null;\n\n      // **保留完整表格结构**\n      const div = document.createElement(\"div\");\n      div.appendChild(clonedRange);\n\n      // **如果选中的是表格，保留原始 HTML 结构**\n      const selectedContent = containsTable ? div.innerHTML : selection.toString().trim();\n\n      // 只有当选中内容不为空时才显示弹出框\n      if (selectedContent) {\n        selectedHtml.value = selectedContent;\n        showPopup.value = true;\n\n        // 触发事件总线\n        bus.emit(`${props.divId}Event`, {\n          content: selectedHtml.value\n        });\n\n        // 触发高亮\n        HighlightText.highlightSelection();\n      }\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value = false;\n      selectedHtml.value = \"\";\n    };\n\n    // **组件挂载**\n    onMounted(() => {\n      document.querySelector(`#${props.divId}`).addEventListener(\"mouseup\", handleSelection);\n    });\n\n    // **组件卸载**\n    onUnmounted(() => {\n      document.querySelector(`#${props.divId}`).removeEventListener(\"mouseup\", handleSelection);\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      selectedHtml,\n      showPopup,\n      handleSelection,\n      closePopup,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      get HighlightText() {\n        return HighlightText;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","HighlightText","props","__props","pageHtml","selectedHtml","showPopup","handleSelection","selection","window","getSelection","rangeCount","range","getRangeAt","clonedRange","cloneContents","containsTable","querySelector","div","document","createElement","appendChild","selectedContent","innerHTML","toString","trim","value","emit","divId","content","highlightSelection","closePopup","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 选中内容弹出框 -->\r\n\t\t<div v-if=\"showPopup\" class=\"text-popup\" @click=\"closePopup\">\r\n\t\t\t<div v-html=\"selectedHtml\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport HighlightText from \"@/js/highlight\"; // 高亮工具\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst selectedHtml = ref(\"\"); // 选中的 HTML 代码\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\r\n\t// **处理选中内容**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection.rangeCount) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst clonedRange = range.cloneContents();\r\n\r\n\t\t// **判断是否包含表格**\r\n\t\tconst containsTable = clonedRange.querySelector(\"table\") !== null;\r\n\r\n\t\t// **保留完整表格结构**\r\n\t\tconst div = document.createElement(\"div\");\r\n\t\tdiv.appendChild(clonedRange);\r\n\r\n\t\t// **如果选中的是表格，保留原始 HTML 结构**\r\n\t\tconst selectedContent = containsTable\r\n\t\t\t? div.innerHTML\r\n\t\t\t: selection.toString().trim();\r\n\r\n\t\t// 只有当选中内容不为空时才显示弹出框\r\n\t\tif (selectedContent) {\r\n\t\t\tselectedHtml.value = selectedContent;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 触发事件总线\r\n\t\t\tbus.emit(`${props.divId}Event`, { content: selectedHtml.value });\r\n\r\n\t\t\t// 触发高亮\r\n\t\t\tHighlightText.highlightSelection();\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedHtml.value = \"\";\r\n\t};\r\n\r\n\t// **组件挂载**\r\n\tonMounted(() => {\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.addEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n\r\n\t// **组件卸载**\r\n\tonUnmounted(() => {\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.removeEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 弹出框 */\r\n\t.text-popup {\r\n\t\tposition: fixed;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tbox-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 8px;\r\n\t\tz-index: 100;\r\n\t\tmax-width: 80%;\r\n\t\tmax-height: 80%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* **选中的表格** */\r\n\t.text-popup table {\r\n\t\tborder-collapse: collapse;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.text-popup th,\r\n\t.text-popup td {\r\n\t\tborder: 1px solid #ddd;\r\n\t\tpadding: 8px;\r\n\t\ttext-align: left;\r\n\t}\r\n</style>\r\n"],"mappings":"AAkBC,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;;IAE5C,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAMQ,YAAY,GAAGR,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,MAAMS,SAAS,GAAGT,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;IAE9B;IACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;MAC7B,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;MACvC,IAAI,CAACF,SAAS,CAACG,UAAU,EAAE;MAE3B,MAAMC,KAAK,GAAGJ,SAAS,CAACK,UAAU,CAAC,CAAC,CAAC;MACrC,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC;;MAEzC;MACA,MAAMC,aAAa,GAAGF,WAAW,CAACG,aAAa,CAAC,OAAO,CAAC,KAAK,IAAI;;MAEjE;MACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCF,GAAG,CAACG,WAAW,CAACP,WAAW,CAAC;;MAE5B;MACA,MAAMQ,eAAe,GAAGN,aAAa,GAClCE,GAAG,CAACK,SAAS,GACbf,SAAS,CAACgB,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;MAE9B;MACA,IAAIH,eAAe,EAAE;QACpBjB,YAAY,CAACqB,KAAK,GAAGJ,eAAe;QACpChB,SAAS,CAACoB,KAAK,GAAG,IAAI;;QAEtB;QACA1B,GAAG,CAAC2B,IAAI,CAAC,GAAGzB,KAAK,CAAC0B,KAAK,OAAO,EAAE;UAAEC,OAAO,EAAExB,YAAY,CAACqB;QAAM,CAAC,CAAC;;QAEhE;QACAzB,aAAa,CAAC6B,kBAAkB,CAAC,CAAC;MACnC;IACD,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACxBzB,SAAS,CAACoB,KAAK,GAAG,KAAK;MACvBrB,YAAY,CAACqB,KAAK,GAAG,EAAE;IACxB,CAAC;;IAED;IACA5B,SAAS,CAAC,MAAM;MACfqB,QAAQ,CACNF,aAAa,CAAC,IAAIf,KAAK,CAAC0B,KAAK,EAAE,CAAC,CAChCI,gBAAgB,CAAC,SAAS,EAAEzB,eAAe,CAAC;IAC/C,CAAC,CAAC;;IAEF;IACAR,WAAW,CAAC,MAAM;MACjBoB,QAAQ,CACNF,aAAa,CAAC,IAAIf,KAAK,CAAC0B,KAAK,EAAE,CAAC,CAChCK,mBAAmB,CAAC,SAAS,EAAE1B,eAAe,CAAC;IAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}