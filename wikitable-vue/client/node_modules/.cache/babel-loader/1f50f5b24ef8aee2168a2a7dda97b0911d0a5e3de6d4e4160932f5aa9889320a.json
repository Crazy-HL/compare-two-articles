{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"field-visualization\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"pie-chart\",\n  ref: \"pieChart\"\n};\nconst _hoisted_3 = {\n  class: \"bar-chart\",\n  ref: \"barChart\"\n};\nconst _hoisted_4 = {\n  class: \"line-chart\",\n  ref: \"lineChart\"\n};\nconst _hoisted_5 = {\n  class: \"simple-value\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"unit\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createCommentVNode(\" 百分比数据 - 饼图 \"), $setup.isPercentage && $props.field?.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)) : $setup.isBarChart ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 3个及以下数据点 - 柱状图 \"), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : $setup.isLineChart ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 时间序列超过3个点 - 折线图 \"), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", _hoisted_5, [_createTextVNode(_toDisplayString($setup.displayValue) + \" \", 1 /* TEXT */), $props.field?.unit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString($props.field.unit), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"无数据\"))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasData","_Fragment","_createCommentVNode","isPercentage","$props","field","value","_hoisted_2","isBarChart","_createElementVNode","_hoisted_3","isLineChart","_hoisted_4","_hoisted_5","_createTextVNode","_toDisplayString","displayValue","unit","_hoisted_6","_hoisted_7"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比数据 - 饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"isPercentage && field?.value\"\r\n\t\t\t\tclass=\"pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<!-- 3个及以下数据点 - 柱状图 -->\r\n\t\t\t<div v-else-if=\"isBarChart\" class=\"bar-chart\" ref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 时间序列超过3个点 - 折线图 -->\r\n\t\t\t<div v-else-if=\"isLineChart\" class=\"line-chart\" ref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 默认显示 -->\r\n\t\t\t<div v-else class=\"simple-value\">\r\n\t\t\t\t{{ displayValue }}\r\n\t\t\t\t<span v-if=\"field?.unit\" class=\"unit\">{{ field.unit }}</span>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: {\r\n\t\t\ttype: [Object, Array],\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"number\"\r\n\t\t}\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return props.field.length > 0;\r\n\t\treturn props.field?.value !== undefined; // 使用可选链\r\n\t});\r\n\r\n\tconst isPercentage = computed(() => {\r\n\t\treturn props.type === \"percentage\" && props.field?.value !== undefined; // 使用可选链\r\n\t});\r\n\r\n\tconst isBarChart = computed(() => {\r\n\t\treturn Array.isArray(props.field) && props.field.length <= 3;\r\n\t});\r\n\r\n\tconst isLineChart = computed(() => {\r\n\t\treturn Array.isArray(props.field) && props.field.length > 3;\r\n\t});\r\n\r\n\tconst displayValue = computed(() => {\r\n\t\tif (!props.field?.value) return \"-\"; // 使用可选链\r\n\t\tconst num = parseFloat(props.field.value);\r\n\t\tif (isPercentage.value) return `${num}%`;\r\n\t\treturn num.toLocaleString();\r\n\t});\r\n\r\n\t// 绘制饼图\r\n\tconst drawPieChart = () => {\r\n\t\tif (!pieChart.value) return;\r\n\r\n\t\tconst percent = Math.min(100, Math.max(0, parseFloat(props.field.value)));\r\n\t\tconst data = [percent, 100 - percent];\r\n\t\tconst color = d3.scaleOrdinal([\"#4CAF50\", \"#eee\"]);\r\n\r\n\t\tconst width = 80;\r\n\t\tconst height = 80;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(pieChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst pie = d3.pie();\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(pie(data))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", d => color(d.index));\r\n\r\n\t\t// 添加中心文本\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(`${percent}%`)\r\n\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t.style(\"font-weight\", \"bold\");\r\n\t};\r\n\r\n\t// 绘制柱状图\r\n\tconst drawBarChart = () => {\r\n\t\tif (!barChart.value) return;\r\n\r\n\t\tconst width = 150;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n\r\n\t\tconst data = props.field.map(item => ({\r\n\t\t\tlabel: item.year || item.name,\r\n\t\t\tvalue: item.value\r\n\t\t}));\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(barChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(data.map(d => d.label))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.2);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(data, d => d.value)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", d => x(d.label))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => y(0) - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\t// 添加数值标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", d => x(d.label) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => d.value)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\t// 绘制折线图\r\n\tconst drawLineChart = () => {\r\n\t\tif (!lineChart.value) return;\r\n\r\n\t\tconst width = 200;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n\r\n\t\tconst data = props.field.map(item => ({\r\n\t\t\tyear: item.year,\r\n\t\t\tvalue: item.value\r\n\t\t}));\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(lineChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(data, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(data, d => d.value)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(data)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"stroke\", \"#9C27B0\")\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"d\", line);\r\n\r\n\t\t// 添加数据点\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.attr(\"fill\", \"#9C27B0\");\r\n\r\n\t\t// 添加最新值标签\r\n\t\tconst lastPoint = data[data.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 10)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(lastPoint.value)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\t// 清理图表\r\n\tconst clearChart = element => {\r\n\t\tif (element.value) {\r\n\t\t\td3.select(element.value).selectAll(\"*\").remove();\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听数据变化重新绘制\r\n\twatch(\r\n\t\t() => props.field,\r\n\t\t() => {\r\n\t\t\tclearChart(pieChart);\r\n\t\t\tclearChart(barChart);\r\n\t\t\tclearChart(lineChart);\r\n\r\n\t\t\tif (isPercentage.value) drawPieChart();\r\n\t\t\telse if (isBarChart.value) drawBarChart();\r\n\t\t\telse if (isLineChart.value) drawLineChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\tif (isPercentage.value) drawPieChart();\r\n\t\telse if (isBarChart.value) drawBarChart();\r\n\t\telse if (isLineChart.value) drawLineChart();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.simple-value {\r\n\t\tfont-size: 18px;\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #333;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.simple-value .unit {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\tmargin-left: 4px;\r\n\t}\r\n\r\n\t.pie-chart,\r\n\t.bar-chart,\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAqB;;EADjCC,GAAA;EAMID,KAAK,EAAC,WAAW;EACjBE,GAAG,EAAC;;;EAGuBF,KAAK,EAAC,WAAW;EAACE,GAAG,EAAC;;;EAGrBF,KAAK,EAAC,YAAY;EAACE,GAAG,EAAC;;;EAGxCF,KAAK,EAAC;AAAc;;EAhBnCC,GAAA;EAkB6BD,KAAK,EAAC;;;EAlBnCC,GAAA;EAqBcD,KAAK,EAAC;;;uBApBnBG,mBAAA,CAqBM,OArBNC,UAqBM,GApBWC,MAAA,CAAAC,OAAO,I,cAAvBH,mBAAA,CAkBWI,SAAA;IApBbN,GAAA;EAAA,IAGGO,mBAAA,gBAAmB,EAEZH,MAAA,CAAAI,YAAY,IAAIC,MAAA,CAAAC,KAAK,EAAEC,KAAK,I,cADnCT,mBAAA,CAGsB,OAHtBU,UAGsB,iCAGNR,MAAA,CAAAS,UAAU,I,cAA1BX,mBAAA,CAAmEI,SAAA;IAVtEN,GAAA;EAAA,IASGO,mBAAA,oBAAuB,EACvBO,mBAAA,CAAmE,OAAnEC,UAAmE,8B,oDAGnDX,MAAA,CAAAY,WAAW,I,cAA3Bd,mBAAA,CAAsEI,SAAA;IAbzEN,GAAA;EAAA,IAYGO,mBAAA,qBAAwB,EACxBO,mBAAA,CAAsE,OAAtEG,UAAsE,8B,mEAGtEf,mBAAA,CAGMI,SAAA;IAnBTN,GAAA;EAAA,IAeGO,mBAAA,UAAa,EACbO,mBAAA,CAGM,OAHNI,UAGM,GAnBTC,gBAAA,CAAAC,gBAAA,CAiBOhB,MAAA,CAAAiB,YAAY,IAAG,GAClB,iBAAYZ,MAAA,CAAAC,KAAK,EAAEY,IAAI,I,cAAvBpB,mBAAA,CAA6D,QAA7DqB,UAA6D,EAAAH,gBAAA,CAApBX,MAAA,CAAAC,KAAK,CAACY,IAAI,oBAlBvDf,mBAAA,e,kGAqBEL,mBAAA,CAAqC,OAArCsB,UAAqC,EAAT,KAAG,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}