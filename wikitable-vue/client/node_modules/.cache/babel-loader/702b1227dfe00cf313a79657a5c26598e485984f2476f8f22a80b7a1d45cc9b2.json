{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-history\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"causal-graph\"\n};\nconst _hoisted_6 = [\"data-msg-index\"];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"graph-legend\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"legend-node cause-node\"\n}), /*#__PURE__*/_createTextVNode(\" 原因因素\")]), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"legend-node effect-node\"\n}), /*#__PURE__*/_createTextVNode(\" 结果影响\")])], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 1,\n  class: \"suggested-question\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"suggestion-text\"\n}, \"建议深入分析的问题：\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"vis-container\"\n};\nconst _hoisted_13 = {\n  class: \"input-area\"\n};\nconst _hoisted_14 = {\n  class: \"input-container\"\n};\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  class: \"button-container\"\n};\nconst _hoisted_17 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role, {\n        error: message.error,\n        'has-graph': message.graphData\n      }])\n    }, [_createElementVNode(\"div\", {\n      class: \"message-content\",\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_4), message.graphData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n      id: \"causal-graph-container\",\n      \"data-msg-index\": index,\n      style: {\n        \"height\": \"500px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_6), _hoisted_7])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createTextVNode(\" 正在处理中... \")])) : _createCommentVNode(\"v-if\", true), $setup.showSuggestedQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"div\", {\n    class: \"suggestion-content\",\n    onClick: $setup.useSuggestedQuestion\n  }, _toDisplayString($setup.suggestedQuestion), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"CompareTable\"], {\n    class: \"compare-table\",\n    \"div1-raw-data\": $setup.div1RawData,\n    \"div3-raw-data\": $setup.div3RawData,\n    onCompareAttribute: $setup.handleAttributeComparison\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\"])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\",\n    disabled: $setup.isLoading\n  }, null, 8 /* PROPS */, _hoisted_15), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion,\n    disabled: $setup.isLoading\n  }, _toDisplayString($setup.isLoading ? \"处理中...\" : \"发送\"), 9 /* TEXT, PROPS */, _hoisted_17)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createTextVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","chatHistory","message","index","_normalizeClass","role","error","graphData","innerHTML","content","_hoisted_4","_hoisted_5","id","style","_hoisted_6","_hoisted_7","_createCommentVNode","isLoading","_hoisted_8","_hoisted_9","showSuggestedQuestion","_hoisted_10","_hoisted_11","onClick","useSuggestedQuestion","suggestedQuestion","_hoisted_12","_createVNode","div1RawData","div3RawData","onCompareAttribute","handleAttributeComparison","_hoisted_13","_hoisted_14","_cache","$event","userQuestion","rows","placeholder","disabled","_hoisted_15","_hoisted_16","askQuestion","_hoisted_17"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"[\r\n\t\t\t\t\t\t'message',\r\n\t\t\t\t\t\tmessage.role,\r\n\t\t\t\t\t\t{ error: message.error, 'has-graph': message.graphData }\r\n\t\t\t\t\t]\">\r\n\t\t\t\t\t<div class=\"message-content\" v-html=\"message.content\"></div>\r\n\t\t\t\t\t<div v-if=\"message.graphData\" class=\"causal-graph\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"causal-graph-container\"\r\n\t\t\t\t\t\t\t:data-msg-index=\"index\"\r\n\t\t\t\t\t\t\tstyle=\"height: 500px\"></div>\r\n\t\t\t\t\t\t<div class=\"graph-legend\">\r\n\t\t\t\t\t\t\t<div><span class=\"legend-node cause-node\"></span> 原因因素</div>\r\n\t\t\t\t\t\t\t<div><span class=\"legend-node effect-node\"></span> 结果影响</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"showSuggestedQuestion\" class=\"suggested-question\">\r\n\t\t\t\t\t<div class=\"suggestion-text\">建议深入分析的问题：</div>\r\n\t\t\t\t\t<div class=\"suggestion-content\" @click=\"useSuggestedQuestion\">\r\n\t\t\t\t\t\t{{ suggestedQuestion }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input-area\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\t// 数据状态\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\tconst showSuggestedQuestion = ref(false);\r\n\tconst suggestedQuestion = ref(\"\");\r\n\tconst currentFieldKey = ref(\"\");\r\n\tconst leftData = ref(null);\r\n\tconst rightData = ref(null);\r\n\r\n\t// 图表相关\r\n\tconst chartInstances = ref(new Map());\r\n\r\n\t// 保留字段配置\r\n\tconst PRESERVED_FIELDS_BY_SECTION = {\r\n\t\tStatistics: [\r\n\t\t\t\"Population\",\r\n\t\t\t\"GDP\",\r\n\t\t\t\"GDP rank\",\r\n\t\t\t\"GDP growth\",\r\n\t\t\t\"GDP per capita\",\r\n\t\t\t\"GDP per capita rank\",\r\n\t\t\t\"GDP by sector\",\r\n\t\t\t\"Inflation (CPI)\",\r\n\t\t\t\"Population below poverty line\",\r\n\t\t\t\"Gini coefficient\",\r\n\t\t\t\"Human Development Index\",\r\n\t\t\t\"Corruption Perceptions Index\",\r\n\t\t\t\"Labor force\",\r\n\t\t\t\"Labor force by occupation\",\r\n\t\t\t\"Unemployment\",\r\n\t\t\t\"Average gross salary\",\r\n\t\t\t\"Average net salary\",\r\n\t\t\t\"Main industries\"\r\n\t\t],\r\n\t\t\"Public finances\": [\r\n\t\t\t\"Government debt\",\r\n\t\t\t\"Foreign reserves\",\r\n\t\t\t\"Budget balance\",\r\n\t\t\t\"Revenues\",\r\n\t\t\t\"Expenses\",\r\n\t\t\t\"Economic aid\",\r\n\t\t\t\"Credit rating\"\r\n\t\t]\r\n\t};\r\n\r\n\t// 方法定义\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst saveChatHistory = () => {\r\n\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(chatHistory.value));\r\n\t};\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst getLastAnalysis = () => {\r\n\t\tconst reversed = [...chatHistory.value].reverse();\r\n\t\tconst lastAssistantMsg = reversed.find(\r\n\t\t\tmsg => msg.role === \"assistant\" && !msg.error\r\n\t\t);\r\n\t\treturn lastAssistantMsg ? lastAssistantMsg.content : \"\";\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tconst handleSelection = (data, source) => {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getPlainTextFromSelection = htmlContent => {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t};\r\n\r\n\tconst formatTextAnalysis = text => {\r\n\t\treturn text\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\r\n\t\t\t.replace(/`(.*?)`/g, \"<code>$1</code>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\");\r\n\t};\r\n\r\n\tconst initChart = index => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\r\n\t\t\t\t`#causal-graph-container[data-msg-index=\"${index}\"]`\r\n\t\t\t);\r\n\t\t\tif (container && !chartInstances.value.get(index)) {\r\n\t\t\t\tconst chart = echarts.init(container);\r\n\t\t\t\tchartInstances.value.set(index, chart);\r\n\r\n\t\t\t\twindow.addEventListener(\"resize\", () => {\r\n\t\t\t\t\tconst instance = chartInstances.value.get(index);\r\n\t\t\t\t\tif (instance) {\r\n\t\t\t\t\t\tinstance.resize();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderCausalGraph = (index, graphData) => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst chart = chartInstances.value.get(index);\r\n\t\t\tif (!chart) {\r\n\t\t\t\tinitChart(index);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst option = {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: \"因果关系网络\",\r\n\t\t\t\t\tleft: \"center\",\r\n\t\t\t\t\ttextStyle: {\r\n\t\t\t\t\t\tcolor: \"#2c3e50\",\r\n\t\t\t\t\t\tfontSize: 16\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tformatter: ({ data }) => `\r\n          <div style=\"padding:8px;background:#fff;border-radius:4px;box-shadow:0 2px 8px rgba(0,0,0,0.1)\">\r\n            <strong style=\"color:#333\">${data.name}</strong>\r\n            <div style=\"color:#666;margin-top:4px\">${data.detail || \"\"}</div>\r\n          </div>\r\n        `\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"graph\",\r\n\t\t\t\t\t\tlayout: \"force\",\r\n\t\t\t\t\t\tforce: {\r\n\t\t\t\t\t\t\trepulsion: 100,\r\n\t\t\t\t\t\t\tedgeLength: 150,\r\n\t\t\t\t\t\t\tgravity: 0.1\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\troam: true,\r\n\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\tdata: graphData.nodes.map(node => ({\r\n\t\t\t\t\t\t\t...node,\r\n\t\t\t\t\t\t\tsymbolSize: Math.min(30 + node.level * 10, 60),\r\n\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\tcolor: node.type === \"cause\" ? \"#5470c6\" : \"#91cc75\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\tposition: \"inside\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t\tedges: graphData.links,\r\n\t\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\t\tfocus: \"adjacency\",\r\n\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\tposition: \"top\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\r\n\t\t\tchart.setOption(option);\r\n\t\t});\r\n\t};\r\n\r\n\tconst extractEssentialData = fieldData => {\r\n\t\tif (!fieldData) return null;\r\n\r\n\t\tconst essential = {\r\n\t\t\tvalue: fieldData.value,\r\n\t\t\ttype: fieldData.type\r\n\t\t};\r\n\r\n\t\tif (fieldData.unit) essential.unit = fieldData.unit;\r\n\t\tif (fieldData.currency) essential.currency = fieldData.currency;\r\n\t\tif (fieldData.extracted) {\r\n\t\t\tessential.raw = fieldData.raw;\r\n\t\t}\r\n\r\n\t\treturn essential;\r\n\t};\r\n\r\n\tconst simplifyInfobox = infobox => {\r\n\t\tif (!infobox) return {};\r\n\r\n\t\tconst result = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\ttype: infobox.type\r\n\t\t};\r\n\r\n\t\tif (infobox.sections) {\r\n\t\t\tresult.sections = {};\r\n\r\n\t\t\tObject.entries(infobox.sections).forEach(([sectionName, sectionData]) => {\r\n\t\t\t\tif (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\r\n\t\t\t\t\tresult.sections[sectionName] = {};\r\n\r\n\t\t\t\t\tPRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\r\n\t\t\t\t\t\tif (sectionData[fieldName]) {\r\n\t\t\t\t\t\t\tif (Array.isArray(sectionData[fieldName])) {\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = sectionData[\r\n\t\t\t\t\t\t\t\t\tfieldName\r\n\t\t\t\t\t\t\t\t].map(item => {\r\n\t\t\t\t\t\t\t\t\treturn extractEssentialData(item);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = extractEssentialData(\r\n\t\t\t\t\t\t\t\t\tsectionData[fieldName]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tshowSuggestedQuestion.value = false;\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tif (\r\n\t\t\t\tcurrentFieldKey.value &&\r\n\t\t\t\tquestion.includes(\"分析\") &&\r\n\t\t\t\tquestion.includes(\"原因\")\r\n\t\t\t) {\r\n\t\t\t\t// 追问分析 - 获取图表数据\r\n\t\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\t\tleftTitle: \"当前选择\",\r\n\t\t\t\t\t\trightTitle: \"对比选择\",\r\n\t\t\t\t\t\tfieldKey: currentFieldKey.value,\r\n\t\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\tfollowUp: true,\r\n\t\t\t\t\tpreviousAnalysis: getLastAnalysis()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst newMsg = {\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatTextAnalysis(\r\n\t\t\t\t\t\tresponse.analysis || \"以下是因果关系分析:\"\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (response.graphData) {\r\n\t\t\t\t\tnewMsg.graphData = response.graphData;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchatHistory.value.push(newMsg);\r\n\r\n\t\t\t\tif (response.graphData) {\r\n\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\trenderCausalGraph(chatHistory.value.length - 1, response.graphData);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (currentFieldKey.value) {\r\n\t\t\t\t// 首次对比 - 只获取文本分析\r\n\t\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\t\tleftTitle: \"当前选择\",\r\n\t\t\t\t\t\trightTitle: \"对比选择\",\r\n\t\t\t\t\t\tfieldKey: currentFieldKey.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\tfollowUp: false\r\n\t\t\t\t});\r\n\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatTextAnalysis(response.analysis),\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsuggestedQuestion.value = `为什么${currentFieldKey.value}存在这些差异？请分析具体原因`;\r\n\t\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t\t} else {\r\n\t\t\t\t// 普通问题处理\r\n\t\t\t\tconst response = await api.post(\"ask_infobox\", {\r\n\t\t\t\t\tquestion: question,\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatTextAnalysis(response.answer),\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\tconst useSuggestedQuestion = () => {\r\n\t\tuserQuestion.value = suggestedQuestion.value;\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tnextTick(() => {\r\n\t\t\tconst textarea = document.querySelector(\".input-container textarea\");\r\n\t\t\tif (textarea) {\r\n\t\t\t\ttextarea.focus();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData: incomingLeftData,\r\n\t\trightData: incomingRightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!incomingLeftData || !incomingRightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tleftData.value = incomingLeftData;\r\n\t\trightData.value = incomingRightData;\r\n\t\tcurrentFieldKey.value = fieldKey;\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tleftTitle,\r\n\t\t\t\t\trightTitle,\r\n\t\t\t\t\tfieldKey\r\n\t\t\t\t},\r\n\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\tfollowUp: false\r\n\t\t\t});\r\n\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: formatTextAnalysis(response.analysis),\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tsuggestedQuestion.value = `为什么${fieldKey}存在这些差异？请分析具体原因`;\r\n\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听聊天记录变化\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tsaveChatHistory();\r\n\t\t\tnewVal.forEach((msg, index) => {\r\n\t\t\t\tif (msg.graphData && !chartInstances.value.get(index)) {\r\n\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\trenderCausalGraph(index, msg.graphData);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 组件生命周期\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\r\n\t\t// 清理所有图表实例\r\n\t\tchartInstances.value.forEach(chart => {\r\n\t\t\tchart.dispose();\r\n\t\t});\r\n\t\tchartInstances.value.clear();\r\n\t\twindow.removeEventListener(\"resize\", () => {});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100vh;\r\n\t\tbackground: #f5f7fa;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\theight: 50vh;\r\n\t\tmin-height: 50vh;\r\n\t\toverflow: hidden;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\tscroll-behavior: smooth;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\theight: 30vh;\r\n\t\tmin-height: 30vh;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tmargin: 0 10px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-area {\r\n\t\theight: 15vh;\r\n\t\tmin-height: 15vh;\r\n\t\tpadding: 15px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-top: 1px solid #e0e0e0;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 15px 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tline-height: 1.6;\r\n\t\tposition: relative;\r\n\t\tmax-width: 85%;\r\n\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.message.user {\r\n\t\tbackground: #e3f2fd;\r\n\t\tmargin-left: auto;\r\n\t\tborder-bottom-right-radius: 4px;\r\n\t\tborder: 1px solid #bbdefb;\r\n\t}\r\n\r\n\t.message.assistant {\r\n\t\tbackground: #f8f9fa;\r\n\t\tmargin-right: auto;\r\n\t\tborder-bottom-left-radius: 4px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.message.error {\r\n\t\tbackground: #ffebee;\r\n\t\tborder-left: 4px solid #f44336;\r\n\t}\r\n\r\n\t.message.has-graph {\r\n\t\tbackground: #f8fafc;\r\n\t\tborder-left: 4px solid #4285f4;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tword-wrap: break-word;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.input-container textarea {\r\n\t\twidth: 100%;\r\n\t\tpadding: 12px 16px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 12px;\r\n\t\tresize: none;\r\n\t\tfont-size: 14px;\r\n\t\toutline: none;\r\n\t\tbackground: #f9f9f9;\r\n\t}\r\n\r\n\t.input-container textarea:focus {\r\n\t\tbackground: #ffffff;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tbackground: #4285f4;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 20px;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.button-container button:hover {\r\n\t\tbackground: #3367d6;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t.button-container button:disabled {\r\n\t\tbackground: #b3c6e0;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 15px;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\tborder: 3px solid rgba(66, 133, 244, 0.2);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top: 3px solid #4285f4;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.suggested-question {\r\n\t\tmargin: 15px 0;\r\n\t\tpadding: 12px;\r\n\t\tbackground-color: #f5f7fa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px dashed #4285f4;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.suggested-question:hover {\r\n\t\tbackground-color: #e8f0fe;\r\n\t}\r\n\r\n\t.suggestion-text {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.suggestion-content {\r\n\t\tcolor: #4285f4;\r\n\t\tfont-weight: 500;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.causal-graph {\r\n\t\tmargin-top: 15px;\r\n\t\tborder: 1px solid #eee;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t#causal-graph-container {\r\n\t\twidth: 100%;\r\n\t\theight: 500px;\r\n\t}\r\n\r\n\t.graph-legend {\r\n\t\tdisplay: flex;\r\n\t\tgap: 15px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f9f9f9;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.legend-node {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tborder-radius: 50%;\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\r\n\t.cause-node {\r\n\t\tbackground: #5470c6;\r\n\t}\r\n\r\n\t.effect-node {\r\n\t\tbackground: #91cc75;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}