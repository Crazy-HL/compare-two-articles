{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e9a8f1f8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"infobox-field\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-content\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"image-content\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"image-caption\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"links-content\"\n};\nconst _hoisted_7 = [\"href\"];\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"empty-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.hasContent ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createCommentVNode(\" 文本内容 \"), $setup.displayText ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.displayText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 图片 \"), $setup.imageSrc ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $setup.imageSrc,\n    alt: $setup.imageAlt,\n    class: \"infobox-image\"\n  }, null, 8 /* PROPS */, _hoisted_4), $setup.imageCaption ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($setup.imageCaption), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 链接 \"), $setup.hasLinks ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.validLinks, (link, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"link-item\"\n    }, [link.isWikiLink ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      href: link.href,\n      target: \"_blank\",\n      class: \"wiki-link\"\n    }, _toDisplayString(link.text), 9 /* TEXT, PROPS */, _hoisted_7)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString(link.text), 1 /* TEXT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"-\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","hasContent","_Fragment","_createCommentVNode","displayText","_hoisted_2","_toDisplayString","imageSrc","_hoisted_3","_createElementVNode","src","alt","imageAlt","_hoisted_4","imageCaption","_hoisted_5","hasLinks","_hoisted_6","_renderList","validLinks","link","index","isWikiLink","href","target","text","_hoisted_7","_hoisted_8","_hoisted_9"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\InfoboxField.vue"],"sourcesContent":["<template>\r\n\t<div class=\"infobox-field\">\r\n\t\t<template v-if=\"hasContent\">\r\n\t\t\t<!-- 文本内容 -->\r\n\t\t\t<div v-if=\"displayText\" class=\"text-content\">\r\n\t\t\t\t{{ displayText }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 图片 -->\r\n\t\t\t<div v-if=\"imageSrc\" class=\"image-content\">\r\n\t\t\t\t<img :src=\"imageSrc\" :alt=\"imageAlt\" class=\"infobox-image\" />\r\n\t\t\t\t<div v-if=\"imageCaption\" class=\"image-caption\">{{ imageCaption }}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 链接 -->\r\n\t\t\t<div v-if=\"hasLinks\" class=\"links-content\">\r\n\t\t\t\t<div v-for=\"(link, index) in validLinks\" :key=\"index\" class=\"link-item\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tv-if=\"link.isWikiLink\"\r\n\t\t\t\t\t\t:href=\"link.href\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\tclass=\"wiki-link\">\r\n\t\t\t\t\t\t{{ link.text }}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<span v-else>{{ link.text }}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"empty-content\">-</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tvalue: {\r\n\t\t\ttype: [Object, String],\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 计算属性\r\n\tconst hasContent = computed(() => {\r\n\t\tif (!props.value) return false;\r\n\t\tif (typeof props.value === \"string\") return props.value.trim().length > 0;\r\n\r\n\t\treturn (\r\n\t\t\t(props.value.text && props.value.text.trim().length > 0) ||\r\n\t\t\t(props.value.html && props.value.html.trim().length > 0) ||\r\n\t\t\t(props.value.links && props.value.links.length > 0) ||\r\n\t\t\tprops.value.image\r\n\t\t);\r\n\t});\r\n\r\n\tconst displayText = computed(() => {\r\n\t\tif (!props.value) return \"\";\r\n\t\tif (typeof props.value === \"string\") return props.value.trim();\r\n\t\treturn props.value.text?.trim() || \"\";\r\n\t});\r\n\r\n\tconst imageSrc = computed(() => {\r\n\t\treturn props.value?.image?.src;\r\n\t});\r\n\r\n\tconst imageAlt = computed(() => {\r\n\t\treturn props.value?.image?.alt || \"\";\r\n\t});\r\n\r\n\tconst imageCaption = computed(() => {\r\n\t\treturn props.value?.image?.caption || \"\";\r\n\t});\r\n\r\n\tconst hasLinks = computed(() => {\r\n\t\treturn props.value?.links?.length > 0;\r\n\t});\r\n\r\n\tconst validLinks = computed(() => {\r\n\t\tif (!hasLinks.value) return [];\r\n\t\treturn props.value.links.filter(\r\n\t\t\tlink => link.text && link.text.trim().length > 0\r\n\t\t);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.infobox-field {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 40px;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.text-content {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.image-content {\r\n\t\tmargin: 5px 0;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.infobox-image {\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 80px;\r\n\t\tdisplay: block;\r\n\t\tmargin: 0 auto;\r\n\t\tborder: 1px solid #eee;\r\n\t}\r\n\r\n\t.image-caption {\r\n\t\tfont-size: 0.8em;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 2px;\r\n\t}\r\n\r\n\t.links-content {\r\n\t\tfont-size: 0.9em;\r\n\t}\r\n\r\n\t.link-item {\r\n\t\tmargin: 3px 0;\r\n\t}\r\n\r\n\t.wiki-link {\r\n\t\tcolor: #06c;\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t.wiki-link:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n\r\n\t.empty-content {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAe;;EAD3BC,GAAA;EAI2BD,KAAK,EAAC;;;EAJjCC,GAAA;EASwBD,KAAK,EAAC;;mBAT9B;;EAAAC,GAAA;EAW6BD,KAAK,EAAC;;;EAXnCC,GAAA;EAewBD,KAAK,EAAC;;mBAf9B;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;EA4BcD,KAAK,EAAC;;;uBA3BnBE,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BWC,MAAA,CAAAC,UAAU,I,cAA1BH,mBAAA,CAyBWI,SAAA;IA3BbL,GAAA;EAAA,IAGGM,mBAAA,UAAa,EACFH,MAAA,CAAAI,WAAW,I,cAAtBN,mBAAA,CAEM,OAFNO,UAEM,EAAAC,gBAAA,CADFN,MAAA,CAAAI,WAAW,oBALlBD,mBAAA,gBAQGA,mBAAA,QAAW,EACAH,MAAA,CAAAO,QAAQ,I,cAAnBT,mBAAA,CAGM,OAHNU,UAGM,GAFLC,mBAAA,CAA6D;IAAvDC,GAAG,EAAEV,MAAA,CAAAO,QAAQ;IAAGI,GAAG,EAAEX,MAAA,CAAAY,QAAQ;IAAEhB,KAAK,EAAC;0BAV/CiB,UAAA,GAWeb,MAAA,CAAAc,YAAY,I,cAAvBhB,mBAAA,CAAuE,OAAvEiB,UAAuE,EAAAT,gBAAA,CAArBN,MAAA,CAAAc,YAAY,oBAXlEX,mBAAA,e,KAAAA,mBAAA,gBAcGA,mBAAA,QAAW,EACAH,MAAA,CAAAgB,QAAQ,I,cAAnBlB,mBAAA,CAWM,OAXNmB,UAWM,I,kBAVLnB,mBAAA,CASMI,SAAA,QAzBVgB,WAAA,CAgBiClB,MAAA,CAAAmB,UAAU,EAhB3C,CAgBiBC,IAAI,EAAEC,KAAK;yBAAxBvB,mBAAA,CASM;MAToCD,GAAG,EAAEwB,KAAK;MAAEzB,KAAK,EAAC;QAEpDwB,IAAI,CAACE,UAAU,I,cADtBxB,mBAAA,CAMI;MAvBTD,GAAA;MAmBO0B,IAAI,EAAEH,IAAI,CAACG,IAAI;MAChBC,MAAM,EAAC,QAAQ;MACf5B,KAAK,EAAC;wBACHwB,IAAI,CAACK,IAAI,wBAtBlBC,UAAA,M,cAwBK5B,mBAAA,CAAmC,QAxBxC6B,UAAA,EAAArB,gBAAA,CAwBqBc,IAAI,CAACK,IAAI,kB;sCAxB9BtB,mBAAA,e,8CA4BEL,mBAAA,CAAyC,OAAzC8B,UAAyC,EAAP,GAAC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}