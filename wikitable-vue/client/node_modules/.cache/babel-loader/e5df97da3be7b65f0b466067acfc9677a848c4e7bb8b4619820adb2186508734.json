{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    sources: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 颜色集合\n    const colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\n\n    // 处理合并数据 - 确保相同年份的数据点共享X轴位置\n    const processedData = computed(() => {\n      if (!props.isCombined || !Array.isArray(props.data)) return props.data;\n\n      // 获取所有唯一年份并排序\n      const allYears = [...new Set(props.data.map(item => item.year))].sort((a, b) => a - b);\n\n      // 按数据源分组\n      const seriesData = props.sources.map((source, index) => {\n        const sourceData = props.data.filter(item => item.source === source);\n        return {\n          name: source,\n          data: allYears.map(year => {\n            // 找到该数据源在当前年份的数据点\n            const point = sourceData.find(item => item.year === year);\n            return point ? {\n              value: point.value,\n              year: point.year,\n              itemStyle: {\n                color: colorPalette[index % colorPalette.length]\n              }\n            } : null;\n          }),\n          color: colorPalette[index % colorPalette.length]\n        };\n      });\n      return {\n        series: seriesData,\n        categories: allYears\n      };\n    });\n    const initChart = () => {\n      if (!chartEl.value) return;\n      chartInstance = echarts.init(chartEl.value);\n      if (props.isCombined) {\n        const option = {\n          tooltip: {\n            trigger: \"axis\",\n            formatter: params => {\n              return params.filter(param => param.value != null).map(param => {\n                return `${param.seriesName}<br/>${param.data.year}: ${param.value.toFixed(2)}%`;\n              }).join(\"<br/>\");\n            }\n          },\n          legend: {\n            data: props.sources\n          },\n          xAxis: {\n            type: \"category\",\n            data: processedData.value.categories,\n            axisLabel: {\n              interval: 0,\n              rotate: 0\n            }\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value}%\"\n            },\n            min: 0 // 确保从0开始\n          },\n          series: processedData.value.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: series.color\n            },\n            label: {\n              show: true,\n              formatter: params => {\n                return params.value ? params.value.toFixed(2) + \"%\" : \"\";\n              }\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      } else {\n        // 普通折线图处理（保持不变）\n        const option = {\n          // ...原有普通图表配置\n        };\n        chartInstance.setOption(option);\n      }\n    };\n\n    // 其他生命周期和监听保持不变\n    onMounted(initChart);\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n    const handleResize = () => chartInstance?.resize();\n    watch(() => [props.data, props.isCombined, props.sources], initChart, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      processedData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","computed","echarts","props","__props","chartEl","chartInstance","colorPalette","processedData","isCombined","Array","isArray","data","allYears","Set","map","item","year","sort","a","b","seriesData","sources","source","index","sourceData","filter","name","point","find","value","itemStyle","color","length","series","categories","initChart","init","option","tooltip","trigger","formatter","params","param","seriesName","toFixed","join","legend","xAxis","type","axisLabel","interval","rotate","yAxis","min","symbol","symbolSize","lineStyle","width","label","show","setOption","dispose","window","removeEventListener","handleResize","resize","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 颜色集合\r\n\tconst colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\r\n\r\n\t// 处理合并数据 - 确保相同年份的数据点共享X轴位置\r\n\tconst processedData = computed(() => {\r\n\t\tif (!props.isCombined || !Array.isArray(props.data)) return props.data;\r\n\r\n\t\t// 获取所有唯一年份并排序\r\n\t\tconst allYears = [...new Set(props.data.map(item => item.year))].sort(\r\n\t\t\t(a, b) => a - b\r\n\t\t);\r\n\r\n\t\t// 按数据源分组\r\n\t\tconst seriesData = props.sources.map((source, index) => {\r\n\t\t\tconst sourceData = props.data.filter(item => item.source === source);\r\n\t\t\treturn {\r\n\t\t\t\tname: source,\r\n\t\t\t\tdata: allYears.map(year => {\r\n\t\t\t\t\t// 找到该数据源在当前年份的数据点\r\n\t\t\t\t\tconst point = sourceData.find(item => item.year === year);\r\n\t\t\t\t\treturn point\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\tvalue: point.value,\r\n\t\t\t\t\t\t\t\tyear: point.year,\r\n\t\t\t\t\t\t\t\titemStyle: { color: colorPalette[index % colorPalette.length] }\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\t}),\r\n\t\t\t\tcolor: colorPalette[index % colorPalette.length]\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tseries: seriesData,\r\n\t\t\tcategories: allYears\r\n\t\t};\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tif (props.isCombined) {\r\n\t\t\tconst option = {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn params\r\n\t\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${\r\n\t\t\t\t\t\t\t\t\tparam.data.year\r\n\t\t\t\t\t\t\t\t}: ${param.value.toFixed(2)}%`;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdata: props.sources\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tdata: processedData.value.categories,\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\t\trotate: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: \"value\",\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmin: 0 // 确保从0开始\r\n\t\t\t\t},\r\n\t\t\t\tseries: processedData.value.series.map(series => ({\r\n\t\t\t\t\tname: series.name,\r\n\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\treturn params.value ? params.value.toFixed(2) + \"%\" : \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t} else {\r\n\t\t\t// 普通折线图处理（保持不变）\r\n\t\t\tconst option = {\r\n\t\t\t\t// ...原有普通图表配置\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\t};\r\n\r\n\t// 其他生命周期和监听保持不变\r\n\tonMounted(initChart);\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\tconst handleResize = () => chartInstance?.resize();\r\n\twatch(() => [props.data, props.isCombined, props.sources], initChart, {\r\n\t\tdeep: true\r\n\t});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}