{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"table-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"field-description\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_10 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_11 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"field-type\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"field-description\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_17 = {\n  class: \"data-source-switcher\"\n};\nconst _hoisted_18 = [\"disabled\"];\nconst _hoisted_19 = [\"disabled\"];\nconst _hoisted_20 = {\n  class: \"modal-content\"\n};\nconst _hoisted_21 = {\n  class: \"modal-header\"\n};\nconst _hoisted_22 = {\n  class: \"modal-chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 表头 \"), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.leftTitle), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.rightTitle), 1 /* TEXT */), _createCommentVNode(\" 数据行 \"), $setup.hasData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.displayFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.showFullChart(field.key, 'left')\n    }, [$setup.hasDataForCurrentSource(field.key, 'left') ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createVNode($setup[\"SparklineChart\"], {\n      data: $setup.getChartData(field.key, 'left'),\n      \"compare-data\": $setup.shouldShowCompare(field.key) ? $setup.getCompareData(field.key, 'left') : null,\n      \"chart-type\": $setup.getChartType(field),\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": !$setup.showInfoboxData,\n      \"line-color\": $setup.leftChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"chart-type\", \"max-width\", \"max-height\", \"show-year-markers\", \"line-color\"])]), $setup.showInfoboxData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($setup.getFieldDescription(field.key, \"left\")), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"无数据\"))], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString(field.key), 1 /* TEXT */), $setup.showInfoboxData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString(field.typeLabel), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.showFullChart(field.key, 'right')\n    }, [$setup.hasDataForCurrentSource(field.key, 'right') ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"div\", _hoisted_14, [_createVNode($setup[\"SparklineChart\"], {\n      data: $setup.getChartData(field.key, 'right'),\n      \"compare-data\": $setup.shouldShowCompare(field.key) ? $setup.getCompareData(field.key, 'right') : null,\n      \"chart-type\": $setup.getChartType(field),\n      \"max-width\": $setup.chartMaxWidth,\n      \"max-height\": $setup.chartMaxHeight,\n      \"show-year-markers\": !$setup.showInfoboxData,\n      \"line-color\": $setup.rightChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"chart-type\", \"max-width\", \"max-height\", \"show-year-markers\", \"line-color\"])]), $setup.showInfoboxData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString($setup.getFieldDescription(field.key, \"right\")), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \"无数据\"))], 8 /* PROPS */, _hoisted_13)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 空状态下的行 \"), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, i => {\n    return _createElementVNode(\"div\", {\n      key: i,\n      class: \"cell left-column empty-cell\"\n    });\n  }), 64 /* STABLE_FRAGMENT */)), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, i => {\n    return _createElementVNode(\"div\", {\n      key: 'm' + i,\n      class: \"cell middle-column empty-cell\"\n    });\n  }), 64 /* STABLE_FRAGMENT */)), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, i => {\n    return _createElementVNode(\"div\", {\n      key: 'r' + i,\n      class: \"cell right-column empty-cell\"\n    });\n  }), 64 /* STABLE_FRAGMENT */))], 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 数据源切换按钮 \"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: $setup.switchToInfoboxData,\n    class: _normalizeClass({\n      active: $setup.showInfoboxData\n    }),\n    disabled: !$setup.infoboxDataReady\n  }, \" Infobox数据 \", 10 /* CLASS, PROPS */, _hoisted_18), _createElementVNode(\"button\", {\n    onClick: $setup.switchToTableData,\n    class: _normalizeClass({\n      active: !$setup.showInfoboxData\n    }),\n    disabled: !$setup.tableDataReady\n  }, \" 表格数据 \", 10 /* CLASS, PROPS */, _hoisted_19)]), _createCommentVNode(\" 完整图表弹窗 \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.hideFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"h3\", null, _toDisplayString($setup.currentAttribute), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.hideFullChart,\n    class: \"close-button\"\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_22, [_createVNode($setup[\"SparklineChart\"], {\n    data: $setup.currentChartData.data,\n    \"compare-data\": $setup.currentChartData.compareData,\n    \"chart-type\": $setup.currentChartData.type,\n    \"show-year-markers\": true,\n    \"line-color\": $setup.currentChartData.side === 'left' ? $setup.leftChartColor : $setup.rightChartColor,\n    \"fullscreen-mode\": \"\"\n  }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"chart-type\", \"line-color\"])])])])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","$setup","leftTitle","_hoisted_4","_hoisted_5","rightTitle","hasData","_Fragment","_renderList","displayFields","field","onClick","$event","showFullChart","hasDataForCurrentSource","_hoisted_7","_createVNode","data","getChartData","shouldShowCompare","getCompareData","getChartType","chartMaxWidth","chartMaxHeight","showInfoboxData","leftChartColor","_hoisted_8","getFieldDescription","_hoisted_9","_hoisted_6","_hoisted_10","_hoisted_11","_hoisted_12","typeLabel","_hoisted_14","rightChartColor","_hoisted_15","_hoisted_16","_hoisted_13","i","_hoisted_17","switchToInfoboxData","_normalizeClass","active","disabled","infoboxDataReady","_hoisted_18","switchToTableData","tableDataReady","_hoisted_19","showFullChartModal","_withModifiers","hideFullChart","_hoisted_20","_hoisted_21","currentAttribute","_hoisted_22","currentChartData","compareData","type","side"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'left')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'left')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"\r\n\t\t\t\t\t\t\t\t\t\tshouldShowCompare(field.key)\r\n\t\t\t\t\t\t\t\t\t\t\t? getCompareData(field.key, 'left')\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t:chart-type=\"getChartType(field)\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"!showInfoboxData\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"left\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'right')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'right')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"\r\n\t\t\t\t\t\t\t\t\t\tshouldShowCompare(field.key)\r\n\t\t\t\t\t\t\t\t\t\t\t? getCompareData(field.key, 'right')\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t:chart-type=\"getChartType(field)\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"!showInfoboxData\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"right\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div v-for=\"i in 3\" :key=\"i\" class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'m' + i\"\r\n\t\t\t\t\tclass=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'r' + i\"\r\n\t\t\t\t\tclass=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToInfoboxData\"\r\n\t\t\t\t:class=\"{ active: showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!infoboxDataReady\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToTableData\"\r\n\t\t\t\t:class=\"{ active: !showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!tableDataReady\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"modal-chart-container\">\r\n\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t:data=\"currentChartData.data\"\r\n\t\t\t\t\t\t:compare-data=\"currentChartData.compareData\"\r\n\t\t\t\t\t\t:chart-type=\"currentChartData.type\"\r\n\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t:line-color=\"\r\n\t\t\t\t\t\t\tcurrentChartData.side === 'left'\r\n\t\t\t\t\t\t\t\t? leftChartColor\r\n\t\t\t\t\t\t\t\t: rightChartColor\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\tfullscreen-mode />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 数据源状态\r\n\tconst showInfoboxData = ref(true);\r\n\tconst infoboxDataReady = ref(false);\r\n\tconst tableDataReady = ref(false);\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 数据存储\r\n\tconst processedTable1 = ref({ title: \"表格1\", timeSeriesData: {} });\r\n\tconst processedTable2 = ref({ title: \"表格2\", timeSeriesData: {} });\r\n\tconst leftInfobox = ref({ title: \"Infobox 1\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"Infobox 2\", data: {} });\r\n\r\n\t// 弹窗状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentSide = ref(\"left\");\r\n\tconst currentChartData = ref({\r\n\t\tdata: [],\r\n\t\tcompareData: [],\r\n\t\ttype: \"line\",\r\n\t\tside: \"left\"\r\n\t});\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tchartType: \"text\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 计算属性\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(\r\n\t\t\t\tfield =>\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"left\") ||\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"right\")\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst commonAttrs = Object.keys(\r\n\t\t\t\tprocessedTable1.value.timeSeriesData || {}\r\n\t\t\t).filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\thasDataForAttribute(processedTable1.value, attr) &&\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr)\r\n\t\t\t);\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\",\r\n\t\t\t\tchartType: commonAttrs.length <= 3 ? \"bar\" : \"line\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn displayFields.value.length > 0;\r\n\t});\r\n\r\n\t// 数据获取方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst getChartType = field => {\r\n\t\t// 如果是表格数据且数据点少于等于3个，使用柱状图\r\n\t\tif (!showInfoboxData.value && getChartData(field.key, \"left\").length <= 3) {\r\n\t\t\treturn \"bar\";\r\n\t\t}\r\n\t\treturn field.chartType || \"line\";\r\n\t};\r\n\r\n\tconst shouldShowCompare = fieldKey => {\r\n\t\t// 只在表格数据模式下显示对比数据\r\n\t\treturn !showInfoboxData.value;\r\n\t};\r\n\r\n\tconst getChartData = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\t\treturn convertToSparklineData(fieldData, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn table.timeSeriesData[fieldKey] || [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCompareData = (fieldKey, side) => {\r\n\t\tconst compareTable =\r\n\t\t\tside === \"left\" ? processedTable2.value : processedTable1.value;\r\n\t\treturn compareTable.timeSeriesData[fieldKey] || [];\r\n\t};\r\n\r\n\tconst getFieldDescription = (fieldKey, side) => {\r\n\t\tif (!showInfoboxData.value) return \"\";\r\n\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\tif (!fieldData) return \"\";\r\n\r\n\t\tif (Array.isArray(fieldData)) {\r\n\t\t\treturn fieldData.map(item => item.text || item.value).join(\", \");\r\n\t\t}\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\treturn fieldData.text || fieldData.value || \"\";\r\n\t\t}\r\n\t\treturn String(fieldData);\r\n\t};\r\n\r\n\t// 数据转换方法\r\n\tconst convertToSparklineData = (data, fieldKey) => {\r\n\t\tif (!data) return [];\r\n\r\n\t\t// 处理百分比数据 (饼图)\r\n\t\tif (\r\n\t\t\tfieldKey.toLowerCase().includes(\"growth\") ||\r\n\t\t\tfieldKey.toLowerCase().includes(\"inflation\") ||\r\n\t\t\tfieldKey.toLowerCase().includes(\"percentage\")\r\n\t\t) {\r\n\t\t\tif (Array.isArray(data)) {\r\n\t\t\t\treturn data.map((item, index) => ({\r\n\t\t\t\t\tyear:\r\n\t\t\t\t\t\titem.year || new Date().getFullYear() - (data.length - index - 1),\r\n\t\t\t\t\tvalue: parseFloat(item.percentage || item.value) || 0,\r\n\t\t\t\t\tname: item.name || item.text || `项目 ${index + 1}`\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\t\tvalue: parseFloat(data.percentage || data.value) || 0,\r\n\t\t\t\t\t\tname: data.name || data.text || \"项目\"\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(data) || 0,\r\n\t\t\t\t\tname: \"项目\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理数组类型数据\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\treturn data\r\n\t\t\t\t.map(item => ({\r\n\t\t\t\t\tyear: item.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(item.value) || 0,\r\n\t\t\t\t\tname: item.name || item.text || \"\"\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\t// 处理对象类型数据\r\n\t\tif (typeof data === \"object\" && data !== null) {\r\n\t\t\tconst value = parseFloat(data.value) || 0;\r\n\t\t\tif (isNaN(value)) return [];\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tname: data.name || data.text || \"\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tconst numericValue = parseFloat(data);\r\n\t\tif (isNaN(numericValue)) return [];\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\tvalue: numericValue,\r\n\t\t\t\tname: \"\"\r\n\t\t\t}\r\n\t\t];\r\n\t};\r\n\r\n\t// 数据检查方法\r\n\tconst hasDataForAttribute = (table, attr) => {\r\n\t\treturn table.timeSeriesData?.[attr]?.length > 0;\r\n\t};\r\n\r\n\tconst hasDataForCurrentSource = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\treturn !!getField(infobox, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn hasDataForAttribute(table, fieldKey);\r\n\t\t}\r\n\t};\r\n\r\n\t// 数据源切换方法\r\n\tconst switchToInfoboxData = () => {\r\n\t\tshowInfoboxData.value = true;\r\n\t};\r\n\r\n\tconst switchToTableData = () => {\r\n\t\tshowInfoboxData.value = false;\r\n\t};\r\n\r\n\t// 图表相关方法\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tconst field = displayFields.value.find(f => f.key === attr) || {};\r\n\r\n\t\tcurrentChartData.value = {\r\n\t\t\tdata: getChartData(attr, side),\r\n\t\t\tcompareData: shouldShowCompare(attr) ? getCompareData(attr, side) : [],\r\n\t\t\ttype: getChartType(field),\r\n\t\t\tside: side\r\n\t\t};\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 数据处理方法\r\n\tconst processInfoboxData = (data, side) => {\r\n\t\tif (!data) return { title: `Infobox ${side}`, data: {} };\r\n\r\n\t\tinfoboxDataReady.value = true;\r\n\t\treturn {\r\n\t\t\ttitle: data.title || `Infobox ${side}`,\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tconst parseTableToStandardJSON = (html, defaultTitle = \"未命名表格\") => {\r\n\t\tconst result = {\r\n\t\t\ttitle: defaultTitle,\r\n\t\t\ttimeSeriesData: {}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headerCells = table.querySelector(\"tr\")?.children || [];\r\n\t\t\tconst headers = Array.from(headerCells).map(cell =>\r\n\t\t\t\tcell.textContent\r\n\t\t\t\t\t.replace(/[\\n†*]/g, \"\")\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t);\r\n\r\n\t\t\t// 检查年份列\r\n\t\t\tconst yearColumnIndex = headers.findIndex(h =>\r\n\t\t\t\th.toLowerCase().includes(\"year\")\r\n\t\t\t);\r\n\t\t\tif (yearColumnIndex === -1) return result;\r\n\r\n\t\t\t// 处理数据行\r\n\t\t\tconst dataRows = Array.from(\r\n\t\t\t\ttable.querySelectorAll(\"tr:not(:first-child)\")\r\n\t\t\t);\r\n\r\n\t\t\tdataRows.forEach(row => {\r\n\t\t\t\tconst cells = Array.from(row.children);\r\n\t\t\t\tif (cells.length <= yearColumnIndex) return;\r\n\r\n\t\t\t\tconst year = parseInt(\r\n\t\t\t\t\tcells[yearColumnIndex].textContent.replace(/\\D/g, \"\")\r\n\t\t\t\t);\r\n\t\t\t\tif (isNaN(year)) return;\r\n\r\n\t\t\t\theaders.forEach((header, index) => {\r\n\t\t\t\t\tif (index === yearColumnIndex || index >= cells.length) return;\r\n\r\n\t\t\t\t\tconst value = parseFloat(\r\n\t\t\t\t\t\tcells[index].textContent.replace(/[^\\d.-]/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (isNaN(value)) return;\r\n\r\n\t\t\t\t\tif (!result.timeSeriesData[header]) {\r\n\t\t\t\t\t\tresult.timeSeriesData[header] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult.timeSeriesData[header].push({\r\n\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tname: cells[0].textContent.trim()\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// 排序\r\n\t\t\tObject.values(result.timeSeriesData).forEach(data => {\r\n\t\t\t\tdata.sort((a, b) => a.year - b.year);\r\n\t\t\t});\r\n\r\n\t\t\t// 提取标题\r\n\t\t\tresult.title = extractTitleFromHTML(html) || defaultTitle;\r\n\t\t\ttableDataReady.value = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst extractTitleFromHTML = html => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn (\r\n\t\t\tdoc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null\r\n\t\t);\r\n\t};\r\n\r\n\t// 生命周期和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data, \"1\");\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data, \"2\");\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-description {\r\n\t\tmargin-top: 5px;\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.empty-cell {\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 12px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.data-source-switcher button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.modal-header h3 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t.modal-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 70vh;\r\n\t\tmin-height: 400px;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.field-description {\r\n\t\t\tfont-size: 11px;\r\n\t\t}\r\n\r\n\t\t.modal-chart-container {\r\n\t\t\theight: 60vh;\r\n\t\t\tmin-height: 300px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}