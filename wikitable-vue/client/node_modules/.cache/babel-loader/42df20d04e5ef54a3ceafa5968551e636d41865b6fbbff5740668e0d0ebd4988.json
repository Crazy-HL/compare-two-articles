{"ast":null,"code":"import { ref, computed, onMounted, watch } from \"vue\";\nimport * as d3 from \"d3\";\nconst debugMode = true; // 设为false关闭调试信息\n\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n\n    // 增强的数据清洗\n    const cleanValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n\n      // 特殊处理常见格式\n      const strVal = String(value).trim();\n      if (strVal === \"NaN ¥\") return \"人民币 (CNY)\";\n\n      // 提取数值\n      const num = parseFloat(strVal.replace(/[^0-9.-]/g, \"\"));\n      return isNaN(num) ? value : num;\n    };\n\n    // 处理后的数据\n    const processedArray = computed(() => {\n      if (!Array.isArray(props.field)) return [];\n      return props.field.map(item => {\n        // 提取年份\n        let year = item.year;\n        if (!year && item.raw) {\n          const match = String(item.raw).match(/(\\d{4})/);\n          year = match ? parseInt(match[1]) : null;\n        }\n        return {\n          value: cleanValue(item.value ?? item.raw),\n          year: year,\n          raw: item.raw || item.value\n        };\n      }).filter(item => item.value !== null);\n    });\n\n    // 可视化类型判断\n    const visualizationType = computed(() => {\n      if (props.visualization) return props.visualization;\n\n      // 自动判断逻辑\n      if (processedArray.value.length >= 2 && processedArray.value.every(i => i.year && typeof i.value === \"number\")) {\n        return \"line-chart\";\n      }\n      if (processedArray.value.length > 0 && processedArray.value.every(i => typeof i.value === \"number\")) {\n        return \"bar-chart\";\n      }\n      if (!Array.isArray(props.field) && props.type === \"percentage\" && typeof cleanValue(props.field?.value) === \"number\") {\n        return \"pie-chart\";\n      }\n      return \"text-only\";\n    });\n\n    // 基础绘图方法\n    const drawBaseChart = (element, type) => {\n      if (!element?.value) return;\n      const svg = d3.select(element.value).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n\n      // 测试绘制\n      svg.append(\"rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"fill\", \"#f0f0f0\");\n      svg.append(\"text\").attr(\"x\", \"50%\").attr(\"y\", \"50%\").attr(\"text-anchor\", \"middle\").text(`${type} chart`);\n      if (debugMode) {\n        console.log(`基本${type}图表测试绘制完成`, element.value);\n      }\n    };\n\n    // 监听变化\n    watch(() => [props.field, visualizationType.value], () => {\n      if (debugMode) {\n        console.log(\"字段变化:\", {\n          key: props.fieldKey,\n          type: visualizationType.value,\n          data: processedArray.value\n        });\n      }\n\n      // 先绘制基础图表测试\n      if (visualizationType.value === \"line-chart\") {\n        drawBaseChart(lineChart, \"line\");\n      } else if (visualizationType.value === \"bar-chart\") {\n        drawBaseChart(barChart, \"bar\");\n      } else if (visualizationType.value === \"pie-chart\") {\n        drawBaseChart(pieChart, \"pie\");\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      debugMode,\n      pieChart,\n      barChart,\n      lineChart,\n      cleanValue,\n      processedArray,\n      visualizationType,\n      drawBaseChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","d3","debugMode","props","__props","pieChart","barChart","lineChart","cleanValue","value","undefined","strVal","String","trim","num","parseFloat","replace","isNaN","processedArray","Array","isArray","field","map","item","year","raw","match","parseInt","filter","visualizationType","visualization","length","every","i","type","drawBaseChart","element","svg","select","append","attr","text","console","log","key","fieldKey","data","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<div v-if=\"debugMode\" class=\"debug-overlay\">\r\n\t\t\t<p>类型: {{ visualizationType }}</p>\r\n\t\t\t<p>数据: {{ JSON.stringify(processedArray) }}</p>\r\n\t\t</div>\r\n\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-else-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-else-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<div v-else class=\"text-display\">\r\n\t\t\t\t<!-- 文本显示内容 -->\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst debugMode = true; // 设为false关闭调试信息\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 增强的数据清洗\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 特殊处理常见格式\r\n\t\tconst strVal = String(value).trim();\r\n\t\tif (strVal === \"NaN ¥\") return \"人民币 (CNY)\";\r\n\r\n\t\t// 提取数值\r\n\t\tconst num = parseFloat(strVal.replace(/[^0-9.-]/g, \"\"));\r\n\t\treturn isNaN(num) ? value : num;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!Array.isArray(props.field)) return [];\r\n\r\n\t\treturn props.field\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 提取年份\r\n\t\t\t\tlet year = item.year;\r\n\t\t\t\tif (!year && item.raw) {\r\n\t\t\t\t\tconst match = String(item.raw).match(/(\\d{4})/);\r\n\t\t\t\t\tyear = match ? parseInt(match[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null);\r\n\t});\r\n\r\n\t// 可视化类型判断\r\n\tconst visualizationType = computed(() => {\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 自动判断逻辑\r\n\t\tif (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(i => i.year && typeof i.value === \"number\")\r\n\t\t) {\r\n\t\t\treturn \"line-chart\";\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tprocessedArray.value.length > 0 &&\r\n\t\t\tprocessedArray.value.every(i => typeof i.value === \"number\")\r\n\t\t) {\r\n\t\t\treturn \"bar-chart\";\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t) {\r\n\t\t\treturn \"pie-chart\";\r\n\t\t}\r\n\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 基础绘图方法\r\n\tconst drawBaseChart = (element, type) => {\r\n\t\tif (!element?.value) return;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(element.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\");\r\n\r\n\t\t// 测试绘制\r\n\t\tsvg\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"fill\", \"#f0f0f0\");\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", \"50%\")\r\n\t\t\t.attr(\"y\", \"50%\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(`${type} chart`);\r\n\r\n\t\tif (debugMode) {\r\n\t\t\tconsole.log(`基本${type}图表测试绘制完成`, element.value);\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tif (debugMode) {\r\n\t\t\t\tconsole.log(\"字段变化:\", {\r\n\t\t\t\t\tkey: props.fieldKey,\r\n\t\t\t\t\ttype: visualizationType.value,\r\n\t\t\t\t\tdata: processedArray.value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// 先绘制基础图表测试\r\n\t\t\tif (visualizationType.value === \"line-chart\") {\r\n\t\t\t\tdrawBaseChart(lineChart, \"line\");\r\n\t\t\t} else if (visualizationType.value === \"bar-chart\") {\r\n\t\t\t\tdrawBaseChart(barChart, \"bar\");\r\n\t\t\t} else if (visualizationType.value === \"pie-chart\") {\r\n\t\t\t\tdrawBaseChart(pieChart, \"pie\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.debug-overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tz-index: 100;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}