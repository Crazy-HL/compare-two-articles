{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, onMounted, onUnmounted } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String // \"div1\" 或 \"div3\"\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const buttonStyle = ref({});\n    const outlineStyle = ref({});\n    const linkedOutline = ref([]); // 存储动态生成的关联关系\n\n    // **切换大纲的显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **解析文章，提取 h1-h6 标题**\n    const extractOutline = (content, containerId) => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1));\n        const id = `heading-${index}-${containerId}`;\n        heading.id = id; // 确保 HTML 中有 ID\n        console.log(\"Generated ID:\", id); // 打印生成的 ID\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **动态生成关联关系**\n    const generateLinkedOutline = (outline1, outline2) => {\n      const linked = [];\n      outline1.forEach(item1 => {\n        outline2.forEach(item2 => {\n          if (item1.text === item2.text) {\n            linked.push({\n              leftId: item1.id,\n              rightId: item2.id\n            });\n          }\n        });\n      });\n      console.log(\"Generated Linked Outline:\", linked); // 打印生成的关联关系\n      return linked;\n    };\n\n    // **监听 content 变化，更新大纲和关联关系**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent, props.divId);\n\n      // 提取另一个容器的大纲数据\n      const otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\n      const otherContainer = document.getElementById(otherContainerId);\n      if (otherContainer) {\n        const otherContent = otherContainer.innerHTML;\n        const otherOutline = extractOutline(otherContent, otherContainerId);\n        linkedOutline.value = generateLinkedOutline(outline.value, otherOutline);\n      }\n    }, {\n      immediate: true\n    });\n\n    // **检查是否存在关联章节**\n    const isLinked = item => linkedOutline.value.some(linked => linked.leftId === item.id || linked.rightId === item.id);\n\n    // **滚动到章节（支持双向跳转）**\n    const scrollToChapter = id => {\n      // 跳转到当前文章的章节\n      const element = document.getElementById(id);\n      if (element) {\n        console.log(\"Scrolling to:\", id); // 打印当前章节 ID\n        element.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n\n      // 找到关联章节并跳转\n      const linkedItem = linkedOutline.value.find(linked => linked.leftId === id || linked.rightId === id);\n      if (linkedItem) {\n        const targetId = linkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\n        console.log(\"Found linked chapter:\", targetId); // 打印关联章节 ID\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          console.log(\"Scrolling to linked chapter:\", targetId); // 打印跳转的章节 ID\n          targetElement.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }\n      }\n    };\n\n    // **更新按钮和大纲的相对位置**\n    const updatePosition = () => {\n      const isDiv1 = props.divId === \"div1\";\n      buttonStyle.value = {\n        position: \"absolute\",\n        top: \"10px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\"\n      };\n      outlineStyle.value = {\n        position: \"absolute\",\n        top: \"50px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\",\n        width: \"260px\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\",\n        zIndex: \"1000\",\n        background: \"white\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n        padding: \"15px\"\n      };\n    };\n\n    // **窗口滚动时更新大纲位置**\n    const handleScroll = () => {\n      const referenceElement = document.getElementById(props.divId);\n      if (!referenceElement) return;\n      const scrollY = referenceElement.scrollTop;\n      buttonStyle.value.top = `${scrollY + 10}px`;\n      outlineStyle.value.top = `${scrollY + 50}px`;\n    };\n\n    // **初始化**\n    onMounted(() => {\n      outline.value = extractOutline(props.content, props.divId);\n      updatePosition();\n      const referenceElement = document.getElementById(props.divId);\n      if (referenceElement) referenceElement.addEventListener(\"scroll\", handleScroll);\n    });\n\n    // **组件销毁时移除事件**\n    onUnmounted(() => {\n      const referenceElement = document.getElementById(props.divId);\n      if (referenceElement) referenceElement.removeEventListener(\"scroll\", handleScroll);\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      buttonStyle,\n      outlineStyle,\n      linkedOutline,\n      toggleOutline,\n      extractOutline,\n      generateLinkedOutline,\n      isLinked,\n      scrollToChapter,\n      updatePosition,\n      handleScroll,\n      ref,\n      watch,\n      onMounted,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","props","__props","isVisible","outline","buttonStyle","outlineStyle","linkedOutline","toggleOutline","value","extractOutline","content","containerId","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","console","log","text","textContent","generateLinkedOutline","outline1","outline2","linked","forEach","item1","item2","push","leftId","rightId","newContent","divId","otherContainerId","otherContainer","document","getElementById","otherContent","innerHTML","otherOutline","immediate","isLinked","item","some","scrollToChapter","element","scrollIntoView","behavior","linkedItem","find","targetId","targetElement","updatePosition","isDiv1","position","top","width","maxHeight","overflowY","zIndex","background","borderRadius","boxShadow","padding","handleScroll","referenceElement","scrollY","scrollTop","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ highlight: isLinked(item), linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String // \"div1\" 或 \"div3\"\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\tconst linkedOutline = ref([]); // 存储动态生成的关联关系\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = (content, containerId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${containerId}`;\r\n\t\t\theading.id = id; // 确保 HTML 中有 ID\r\n\t\t\tconsole.log(\"Generated ID:\", id); // 打印生成的 ID\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **动态生成关联关系**\r\n\tconst generateLinkedOutline = (outline1, outline2) => {\r\n\t\tconst linked = [];\r\n\t\toutline1.forEach(item1 => {\r\n\t\t\toutline2.forEach(item2 => {\r\n\t\t\t\tif (item1.text === item2.text) {\r\n\t\t\t\t\tlinked.push({ leftId: item1.id, rightId: item2.id });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\tconsole.log(\"Generated Linked Outline:\", linked); // 打印生成的关联关系\r\n\t\treturn linked;\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲和关联关系**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent, props.divId);\r\n\r\n\t\t\t// 提取另一个容器的大纲数据\r\n\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\tconst otherContainer = document.getElementById(otherContainerId);\r\n\t\t\tif (otherContainer) {\r\n\t\t\t\tconst otherContent = otherContainer.innerHTML;\r\n\t\t\t\tconst otherOutline = extractOutline(otherContent, otherContainerId);\r\n\t\t\t\tlinkedOutline.value = generateLinkedOutline(\r\n\t\t\t\t\toutline.value,\r\n\t\t\t\t\totherOutline\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item =>\r\n\t\tlinkedOutline.value.some(\r\n\t\t\tlinked => linked.leftId === item.id || linked.rightId === item.id\r\n\t\t);\r\n\r\n\t// **滚动到章节（支持双向跳转）**\r\n\tconst scrollToChapter = id => {\r\n\t\t// 跳转到当前文章的章节\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) {\r\n\t\t\tconsole.log(\"Scrolling to:\", id); // 打印当前章节 ID\r\n\t\t\telement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t}\r\n\r\n\t\t// 找到关联章节并跳转\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\tconst targetId =\r\n\t\t\t\tlinkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\r\n\t\t\tconsole.log(\"Found linked chapter:\", targetId); // 打印关联章节 ID\r\n\t\t\tconst targetElement = document.getElementById(targetId);\r\n\t\t\tif (targetElement) {\r\n\t\t\t\tconsole.log(\"Scrolling to linked chapter:\", targetId); // 打印跳转的章节 ID\r\n\t\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **更新按钮和大纲的相对位置**\r\n\tconst updatePosition = () => {\r\n\t\tconst isDiv1 = props.divId === \"div1\";\r\n\t\tbuttonStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"10px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\"\r\n\t\t};\r\n\t\toutlineStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"50px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\",\r\n\t\t\twidth: \"260px\",\r\n\t\t\tmaxHeight: \"80vh\",\r\n\t\t\toverflowY: \"auto\",\r\n\t\t\tzIndex: \"1000\",\r\n\t\t\tbackground: \"white\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t\tboxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n\t\t\tpadding: \"15px\"\r\n\t\t};\r\n\t};\r\n\r\n\t// **窗口滚动时更新大纲位置**\r\n\tconst handleScroll = () => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (!referenceElement) return;\r\n\r\n\t\tconst scrollY = referenceElement.scrollTop;\r\n\t\tbuttonStyle.value.top = `${scrollY + 10}px`;\r\n\t\toutlineStyle.value.top = `${scrollY + 50}px`;\r\n\t};\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content, props.divId);\r\n\t\tupdatePosition();\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.addEventListener(\"scroll\", handleScroll);\r\n\t});\r\n\r\n\t// **组件销毁时移除事件**\r\n\tonUnmounted(() => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.removeEventListener(\"scroll\", handleScroll);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 样式部分保持不变 */\r\n</style>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* **大纲样式** */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **高亮和关联章节样式** */\r\n\t.outline li.highlight a {\r\n\t\tbackground-color: #ffff00;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\r\n\t.outline li.linked a {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}