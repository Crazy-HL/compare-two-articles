{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"message-content\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"vis-container\"\n};\nconst _hoisted_6 = {\n  class: \"comparison-table\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"table-header\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-cell\"\n}, \"文章1属性可视化\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-cell\"\n}, \"公共属性\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-cell\"\n}, \"文章2属性可视化\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"table-body\"\n};\nconst _hoisted_9 = {\n  class: \"table-cell chart-cell\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"empty-chart\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"table-cell chart-cell\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"empty-chart\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"empty-table\"\n};\nconst _hoisted_15 = {\n  class: \"input-container\"\n};\nconst _hoisted_16 = {\n  class: \"button-container\"\n};\nconst _hoisted_17 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", {\n    class: \"chat-container\",\n    onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: $setup.handleDrop\n  }, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [message && message.content ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_4)])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 视觉内容容器 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 三行对比表格 - 放在视觉内容容器中 \"), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 表头 \"), _hoisted_7, _createCommentVNode(\" 表格内容 - 行数由公共属性数量决定 \"), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.commonAttributes, (attr, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"table-row\"\n    }, [_createCommentVNode(\" 文章1图表 \"), _createElementVNode(\"div\", _hoisted_9, [_ctx.selectedAttribute === attr ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      ref_for: true,\n      ref: \"chart1\",\n      class: \"chart-box\"\n    }, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"点击查看\"))]), _createCommentVNode(\" 公共属性名称 \"), _createElementVNode(\"div\", {\n      class: \"table-cell attr-cell\",\n      onClick: $event => _ctx.selectAttribute(attr)\n    }, _toDisplayString(attr), 9 /* TEXT, PROPS */, _hoisted_11), _createCommentVNode(\" 文章2图表 \"), _createElementVNode(\"div\", _hoisted_12, [_ctx.selectedAttribute === attr ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      ref_for: true,\n      ref: \"chart2\",\n      class: \"chart-box\"\n    }, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"点击查看\"))])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 空状态 \"), _ctx.commonAttributes.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(_ctx.getEmptyTableMessage()), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return _ctx.compareAttributes && _ctx.compareAttributes(...arguments);\n    }),\n    class: \"submit-btn\",\n    disabled: !$setup.selectText2 || !$setup.selectText3\n  }, \" 属性对比可视化 \", 8 /* PROPS */, _hoisted_17)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","onDragover","_cache","_withModifiers","onDrop","$setup","handleDrop","_hoisted_2","_Fragment","_renderList","chatHistory","message","index","_normalizeClass","role","content","_hoisted_3","_toDisplayString","innerHTML","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_ctx","commonAttributes","attr","_hoisted_9","selectedAttribute","ref_for","ref","_hoisted_10","onClick","$event","selectAttribute","_hoisted_11","_hoisted_12","_hoisted_13","length","_hoisted_14","getEmptyTableMessage","_hoisted_15","userQuestion","rows","placeholder","_hoisted_16","askQuestion","compareAttributes","arguments","disabled","selectText2","selectText3","_hoisted_17"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\" v-if=\"message && message.content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 三行对比表格 - 放在视觉内容容器中 -->\r\n\t\t\t<div class=\"comparison-table\">\r\n\t\t\t\t<!-- 表头 -->\r\n\t\t\t\t<div class=\"table-header\">\r\n\t\t\t\t\t<div class=\"header-cell\">文章1属性可视化</div>\r\n\t\t\t\t\t<div class=\"header-cell\">公共属性</div>\r\n\t\t\t\t\t<div class=\"header-cell\">文章2属性可视化</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- 表格内容 - 行数由公共属性数量决定 -->\r\n\t\t\t\t<div class=\"table-body\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(attr, index) in commonAttributes\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"table-row\">\r\n\t\t\t\t\t\t<!-- 文章1图表 -->\r\n\t\t\t\t\t\t<div class=\"table-cell chart-cell\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tref=\"chart1\"\r\n\t\t\t\t\t\t\t\tclass=\"chart-box\"\r\n\t\t\t\t\t\t\t\tv-if=\"selectedAttribute === attr\"></div>\r\n\t\t\t\t\t\t\t<div v-else class=\"empty-chart\">点击查看</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- 公共属性名称 -->\r\n\t\t\t\t\t\t<div class=\"table-cell attr-cell\" @click=\"selectAttribute(attr)\">\r\n\t\t\t\t\t\t\t{{ attr }}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- 文章2图表 -->\r\n\t\t\t\t\t\t<div class=\"table-cell chart-cell\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tref=\"chart2\"\r\n\t\t\t\t\t\t\t\tclass=\"chart-box\"\r\n\t\t\t\t\t\t\t\tv-if=\"selectedAttribute === attr\"></div>\r\n\t\t\t\t\t\t\t<div v-else class=\"empty-chart\">点击查看</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<!-- 空状态 -->\r\n\t\t\t\t\t<div v-if=\"commonAttributes.length === 0\" class=\"empty-table\">\r\n\t\t\t\t\t\t{{ getEmptyTableMessage() }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t@click=\"compareAttributes\"\r\n\t\t\t\t\t\tclass=\"submit-btn\"\r\n\t\t\t\t\t\t:disabled=\"!selectText2 || !selectText3\">\r\n\t\t\t\t\t\t属性对比可视化\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\"); // 用户输入的问题\r\n\tconst chatHistory = ref([]); // 历史对话记录\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\tconst currentChartData = ref(null); // 当前图表数据\r\n\tconst currentChartType = ref(null); // 当前图表类型\r\n\r\n\t// 定义回调函数\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\t// 解绑事件\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconsole.log(\"Received data:\", data); // 调试输出接收到的数据\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\tconsole.log(\"Extracted text:\", container.innerText); // 输出提取的纯文本\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 处理拖拽开始事件\r\n\tconst handleDragStart = event => {\r\n\t\t// 将图表数据传递给拖拽事件\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(\"拖拽数据已设置:\", currentChartData.value); // 调试日志\r\n\t};\r\n\r\n\t// 处理拖拽释放事件\r\n\tconst handleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst data = event.dataTransfer.getData(\"application/json\");\r\n\t\tconsole.log(\"接收到的拖拽数据:\", data); // 调试日志\r\n\r\n\t\tif (data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { chartData, chartType } = JSON.parse(data);\r\n\t\t\t\tconsole.log(\"解析后的图表数据:\", chartData); // 调试日志\r\n\t\t\t\tconsole.log(\"解析后的图表类型:\", chartType); // 调试日志\r\n\r\n\t\t\t\tcurrentChartData.value = chartData;\r\n\t\t\t\tcurrentChartType.value = chartType;\r\n\t\t\t\tanalyzeChart(chartData, chartType); // 调用大模型分析图表\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"解析拖拽数据失败:\", error);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未接收到拖拽数据\");\r\n\t\t}\r\n\t};\r\n\r\n\t// 分析图表\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t\tconsole.log(\"正在调用后端接口...\"); // 调试日志\r\n\r\n\t\t// 调用大模型分析图表\r\n\t\tapi.post(\r\n\t\t\t\"analyze_chart\",\r\n\t\t\t{ chartData, chartType },\r\n\t\t\tresponse => {\r\n\t\t\t\tconsole.log(\"后端接口返回的数据:\", response); // 调试日志\r\n\r\n\t\t\t\t// 检查 response 是否存在且包含 analysis 字段\r\n\t\t\t\tif (response && response.analysis) {\r\n\t\t\t\t\t// 格式化分析结果\r\n\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\r\n\t\t\t\t\t// 将分析结果添加到聊天记录\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedAnalysis // 使用格式化后的 HTML 内容\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"后端返回的数据格式不正确:\", response);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: \"图表分析失败，后端返回的数据格式不正确。\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t// 处理错误\r\n\t\t\t\tconsole.error(\"图表分析失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"图表分析失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\t// 转换 Markdown 标题\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\r\n\t\t// 转换加粗文本\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\r\n\t\t// 处理换行符\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\r\n\t\t// 处理列表项（数字编号和短横线）\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\r\n\t\t// 统一包裹列表项\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 向 GPT 提问\r\n\tconst askQuestion = () => {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 将用户的问题添加到历史记录\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\t// 调用 GPT 提问接口\r\n\t\tapi.post(\r\n\t\t\t\"gpt_ask_chart\",\r\n\t\t\t{\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\t// 成功回调\r\n\t\t\t\tconsole.log(\"后端接口返回的数据:\", response); // 调试日志\r\n\r\n\t\t\t\t// 格式化 GPT 的回答\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\r\n\t\t\t\t// 将 GPT 的回答添加到历史记录\r\n\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: formattedAnswer });\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t// 错误回调\r\n\t\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"请求失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// 清空输入框\r\n\t\tuserQuestion.value = \"\";\r\n\t};\r\n\r\n\t// 对比文章\r\n\tasync function compareTexts() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t// 将对比结果添加到历史记录\r\n\t\t\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.result });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t// 合并数据\r\n\tasync function mergedJson() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\t\tcurrentChartData.value = jsonData;\r\n\t\t\t\t\tcurrentChartType.value = data.chart_classification;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", jsonData);\r\n\t\t\t\t\tif (data.yes_no === \"no\" || !jsonData) {\r\n\t\t\t\t\t\trenderNonVisualChart(\".chart-container\", data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法合并\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderChart(jsonData, data.chart_classification);\r\n\t\t\t\t\t// 通过事件总线将 Div1 和 Div3 的 JSON 数据传递给 TextPopup.vue\r\n\t\t\t\t\tconsole.log(\"触发 updateChart1 事件\");\r\n\t\t\t\t\tbus.emit(\"updateChart1\", {\r\n\t\t\t\t\t\tdivId: \"div1\",\r\n\t\t\t\t\t\tjsonData: data.div1_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\"触发 updateChart3 事件\");\r\n\t\t\t\t\tbus.emit(\"updateChart3\", {\r\n\t\t\t\t\t\tdivId: \"div3\",\r\n\t\t\t\t\t\tjsonData: data.div3_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理JSON时出错:\", error);\r\n\t\t\talert(\"处理JSON时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\t// 渲染图表\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\tconsole.log(\"rawJsonData:\", rawJsonData);\r\n\t\t\tconsole.log(\"type_rawJsonData:\", typeof rawJsonData);\r\n\t\t\trenderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON 数据无效\"\r\n\t\t\t});\r\n\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\t\t// 获取 chart-container 的 DOM 元素\r\n\t\tconst chartContainer = document.querySelector(\".chart-container\");\r\n\r\n\t\t// 根据图表类型渲染\r\n\t\tif (chartType === \"Line Chart\") {\r\n\t\t\trenderLineChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Bar Chart\") {\r\n\t\t\trenderBarChart(chartContainer, rawJsonData);\r\n\t\t} else if (chartType === \"Pie Chart\") {\r\n\t\t\trenderPieChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Stacked Bar Chart\") {\r\n\t\t\trenderStackedBarChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Radar Chart\") {\r\n\t\t\trenderRadarChart(chartContainer, rawJsonData);\r\n\t\t} else if (chartType === \"Scatter Chart\") {\r\n\t\t\trenderScatterChart(chartContainer, rawJsonData);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%; /* 固定宽度 */\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\t/* max-height: 200px; */\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 分析结果的样式 */\r\n\t.message-content p {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 10px 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.message-content br {\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\t/* 视觉内容容器 */\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1; /* 按钮宽度占满容器 */\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\t/* 新增提交按钮样式 */\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t.submit-btn:hover {\r\n\t\tbackground-color: #fb8c00;\r\n\t}\r\n\r\n\t.submit-btn:active {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAAc;;EAL5BC,GAAA;EAUUD,KAAK,EAAC;;mBAVhB;;EAmBOA,KAAK,EAAC;AAAe;;EAEpBA,KAAK,EAAC;AAAkB;gEAE5BE,mBAAA,CAIM;EAJDF,KAAK,EAAC;AAAc,I,aACxBE,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAa,GAAC,UAAQ,G,aACjCE,mBAAA,CAAmC;EAA9BF,KAAK,EAAC;AAAa,GAAC,MAAI,G,aAC7BE,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAa,GAAC,UAAQ,E;;EAI7BA,KAAK,EAAC;AAAY;;EAMhBA,KAAK,EAAC;AAAuB;;EApCxCC,GAAA;EAyCmBD,KAAK,EAAC;;oBAzCzB;;EAkDWA,KAAK,EAAC;AAAuB;;EAlDxCC,GAAA;EAuDmBD,KAAK,EAAC;;;EAvDzBC,GAAA;EA4D+CD,KAAK,EAAC;;;EAO7CA,KAAK,EAAC;AAAiB;;EAKtBA,KAAK,EAAC;AAAkB;oBAxEjC;;uBACCG,mBAAA,CAkFM,OAlFNC,UAkFM,GAjFLC,mBAAA,UAAa,EACbH,mBAAA,CAaM;IAbDF,KAAK,EAAC,gBAAgB;IAAEM,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAHvCC,cAAA,CAG8B,QAAiB;IAAEC,MAAI,EAAEC,MAAA,CAAAC;MACpDN,mBAAA,YAAe,EACfH,mBAAA,CAUM,OAVNU,UAUM,I,kBATLT,mBAAA,CAQMU,SAAA,QAdVC,WAAA,CAOgCJ,MAAA,CAAAK,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBd,mBAAA,CAQM;MANJF,GAAG,EAAEgB,KAAK;MACVjB,KAAK,EATXkB,eAAA,aASyBF,OAAO,CAACG,IAAI;QACGH,OAAO,IAAIA,OAAO,CAACI,OAAO,I,cAA7DjB,mBAAA,CAGM,OAHNkB,UAGM,GAFLnB,mBAAA,CAA8D,gBAAAoB,gBAAA,CAAnDN,OAAO,CAACG,IAAI,8BAA6B,GAAC,iBACrDjB,mBAAA,CAAgC;MAA7BqB,SAAwB,EAAhBP,OAAO,CAACI;4BAZzBI,UAAA,E,KAAAnB,mBAAA,e;+DAkBEA,mBAAA,YAAe,EACfH,mBAAA,CA+DM,OA/DNuB,UA+DM,GA9DLpB,mBAAA,wBAA2B,EAC3BH,mBAAA,CA2CM,OA3CNwB,UA2CM,GA1CLrB,mBAAA,QAAW,EACXsB,UAIM,EAENtB,mBAAA,wBAA2B,EAC3BH,mBAAA,CAiCM,OAjCN0B,UAiCM,I,kBAhCLzB,mBAAA,CA0BMU,SAAA,QAzDXC,WAAA,CAgC8Be,IAAA,CAAAC,gBAAgB,EAhC9C,CAgCcC,IAAI,EAAEd,KAAK;yBADpBd,mBAAA,CA0BM;MAxBJF,GAAG,EAAEgB,KAAK;MACXjB,KAAK,EAAC;QACNK,mBAAA,WAAc,EACdH,mBAAA,CAMM,OANN8B,UAMM,GAFEH,IAAA,CAAAI,iBAAiB,KAAKF,IAAI,I,cAHjC5B,mBAAA,CAGyC;MAxChDF,GAAA;MAAAiC,OAAA;MAsCQC,GAAG,EAAC,QAAQ;MACZnC,KAAK,EAAC;qDAEPG,mBAAA,CAA0C,OAA1CiC,WAA0C,EAAV,MAAI,G,GAGrC/B,mBAAA,YAAe,EACfH,mBAAA,CAEM;MAFDF,KAAK,EAAC,sBAAsB;MAAEqC,OAAK,EAAAC,MAAA,IAAET,IAAA,CAAAU,eAAe,CAACR,IAAI;wBAC1DA,IAAI,wBA9CdS,WAAA,GAiDMnC,mBAAA,WAAc,EACdH,mBAAA,CAMM,OANNuC,WAMM,GAFEZ,IAAA,CAAAI,iBAAiB,KAAKF,IAAI,I,cAHjC5B,mBAAA,CAGyC;MAtDhDF,GAAA;MAAAiC,OAAA;MAoDQC,GAAG,EAAC,QAAQ;MACZnC,KAAK,EAAC;qDAEPG,mBAAA,CAA0C,OAA1CuC,WAA0C,EAAV,MAAI,G;kCAItCrC,mBAAA,SAAY,EACDwB,IAAA,CAAAC,gBAAgB,CAACa,MAAM,U,cAAlCxC,mBAAA,CAEM,OAFNyC,WAEM,EAAAtB,gBAAA,CADFO,IAAA,CAAAgB,oBAAoB,sBA7D7BxC,mBAAA,e,KAkEGA,mBAAA,cAAiB,EACjBH,mBAAA,CAcM,OAdN4C,WAcM,G,gBAbL5C,mBAAA,CAGuC;IAvE3C,uBAAAK,MAAA,QAAAA,MAAA,MAAA+B,MAAA,IAqEc5B,MAAA,CAAAqC,YAAY,GAAAT,MAAA;IACrBU,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHvC,MAAA,CAAAqC,YAAY,E,GAGtB7C,mBAAA,CAQM,OARNgD,WAQM,GAPLhD,mBAAA,CAAwC;IAA/BmC,OAAK,EAAE3B,MAAA,CAAAyC;EAAW,GAAE,IAAE,GAC/BjD,mBAAA,CAKS;IAJPmC,OAAK,EAAA9B,MAAA,QAAAA,MAAA;MAAA,OAAEsB,IAAA,CAAAuB,iBAAA,IAAAvB,IAAA,CAAAuB,iBAAA,IAAAC,SAAA,CAAiB;IAAA;IACzBrD,KAAK,EAAC,YAAY;IACjBsD,QAAQ,GAAG5C,MAAA,CAAA6C,WAAW,KAAK7C,MAAA,CAAA8C;KAAa,WAE1C,iBA/ELC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}