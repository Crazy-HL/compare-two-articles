{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// highlight.js\nexport default {\n  // 高亮选中的文本\n  highlightText(range) {\n    const span = document.createElement('span');\n    span.className = 'highlight';\n    range.surroundContents(span);\n  },\n  // 序列化选区信息\n  serializeRange(range) {\n    return {\n      startContainer: range.startContainer.parentElement.outerHTML,\n      startOffset: range.startOffset,\n      endContainer: range.endContainer.parentElement.outerHTML,\n      endOffset: range.endOffset,\n      text: range.toString()\n    };\n  },\n  // 反序列化选区信息\n  deserializeRange(serialized) {\n    const pageContent = document.getElementById(\"pageContent\");\n    const walker = document.createTreeWalker(pageContent, NodeFilter.SHOW_TEXT);\n    let startNode, endNode;\n    while (walker.nextNode()) {\n      if (walker.currentNode.parentElement.outerHTML === serialized.startContainer) {\n        startNode = walker.currentNode;\n      }\n      if (walker.currentNode.parentElement.outerHTML === serialized.endContainer) {\n        endNode = walker.currentNode;\n      }\n    }\n    if (startNode && endNode) {\n      const range = document.createRange();\n      range.setStart(startNode, serialized.startOffset);\n      range.setEnd(endNode, serialized.endOffset);\n      return range;\n    }\n    return null;\n  },\n  // 保存高亮信息\n  saveHighlights(highlights) {\n    localStorage.setItem('highlights', JSON.stringify(highlights));\n  },\n  // 加载高亮信息\n  loadHighlights() {\n    const savedHighlights = JSON.parse(localStorage.getItem('highlights') || '[]');\n    return savedHighlights;\n  },\n  // 清除所有高亮\n  clearHighlights() {\n    const highlightedElements = document.querySelectorAll('.highlight');\n    highlightedElements.forEach(element => {\n      const parent = element.parentNode;\n      parent.replaceChild(element.firstChild, element);\n      parent.normalize(); // 合并文本节点\n    });\n  },\n  // 处理文本选中事件\n  handleSelection(event, highlights) {\n    const selection = window.getSelection();\n    const selectedText = selection.toString().trim();\n    if (selectedText) {\n      // 高亮选中的文本\n      const range = selection.getRangeAt(0);\n      this.highlightText(range);\n\n      // 提取选中的文本并保存\n      const serializedRange = this.serializeRange(range);\n      highlights.push(serializedRange);\n    }\n  },\n  // 加载并应用高亮\n  applySavedHighlights(highlights) {\n    highlights.forEach(serialized => {\n      const range = this.deserializeRange(serialized);\n      if (range) {\n        this.highlightText(range);\n      }\n    });\n  }\n};","map":{"version":3,"names":["highlightText","range","span","document","createElement","className","surroundContents","serializeRange","startContainer","parentElement","outerHTML","startOffset","endContainer","endOffset","text","toString","deserializeRange","serialized","pageContent","getElementById","walker","createTreeWalker","NodeFilter","SHOW_TEXT","startNode","endNode","nextNode","currentNode","createRange","setStart","setEnd","saveHighlights","highlights","localStorage","setItem","JSON","stringify","loadHighlights","savedHighlights","parse","getItem","clearHighlights","highlightedElements","querySelectorAll","forEach","element","parent","parentNode","replaceChild","firstChild","normalize","handleSelection","event","selection","window","getSelection","selectedText","trim","getRangeAt","serializedRange","push","applySavedHighlights"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/highlight.js"],"sourcesContent":["// highlight.js\r\nexport default {\r\n  // 高亮选中的文本\r\n  highlightText(range) {\r\n    const span = document.createElement('span');\r\n    span.className = 'highlight';\r\n    range.surroundContents(span);\r\n  },\r\n\r\n  // 序列化选区信息\r\n  serializeRange(range) {\r\n    return {\r\n      startContainer: range.startContainer.parentElement.outerHTML,\r\n      startOffset: range.startOffset,\r\n      endContainer: range.endContainer.parentElement.outerHTML,\r\n      endOffset: range.endOffset,\r\n      text: range.toString(),\r\n    };\r\n  },\r\n\r\n  // 反序列化选区信息\r\n  deserializeRange(serialized) {\r\n    const pageContent = document.getElementById(\"pageContent\");\r\n    const walker = document.createTreeWalker(pageContent, NodeFilter.SHOW_TEXT);\r\n    let startNode, endNode;\r\n\r\n    while (walker.nextNode()) {\r\n      if (walker.currentNode.parentElement.outerHTML === serialized.startContainer) {\r\n        startNode = walker.currentNode;\r\n      }\r\n      if (walker.currentNode.parentElement.outerHTML === serialized.endContainer) {\r\n        endNode = walker.currentNode;\r\n      }\r\n    }\r\n\r\n    if (startNode && endNode) {\r\n      const range = document.createRange();\r\n      range.setStart(startNode, serialized.startOffset);\r\n      range.setEnd(endNode, serialized.endOffset);\r\n      return range;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  // 保存高亮信息\r\n  saveHighlights(highlights) {\r\n    localStorage.setItem('highlights', JSON.stringify(highlights));\r\n  },\r\n\r\n  // 加载高亮信息\r\n  loadHighlights() {\r\n    const savedHighlights = JSON.parse(localStorage.getItem('highlights') || '[]');\r\n    return savedHighlights;\r\n  },\r\n\r\n  // 清除所有高亮\r\n  clearHighlights() {\r\n    const highlightedElements = document.querySelectorAll('.highlight');\r\n    highlightedElements.forEach(element => {\r\n      const parent = element.parentNode;\r\n      parent.replaceChild(element.firstChild, element);\r\n      parent.normalize(); // 合并文本节点\r\n    });\r\n  },\r\n\r\n  // 处理文本选中事件\r\n  handleSelection(event, highlights) {\r\n    const selection = window.getSelection();\r\n    const selectedText = selection.toString().trim();\r\n\r\n    if (selectedText) {\r\n      // 高亮选中的文本\r\n      const range = selection.getRangeAt(0);\r\n      this.highlightText(range);\r\n\r\n      // 提取选中的文本并保存\r\n      const serializedRange = this.serializeRange(range);\r\n      highlights.push(serializedRange);\r\n    }\r\n  },\r\n\r\n  // 加载并应用高亮\r\n  applySavedHighlights(highlights) {\r\n    highlights.forEach(serialized => {\r\n      const range = this.deserializeRange(serialized);\r\n      if (range) {\r\n        this.highlightText(range);\r\n      }\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}