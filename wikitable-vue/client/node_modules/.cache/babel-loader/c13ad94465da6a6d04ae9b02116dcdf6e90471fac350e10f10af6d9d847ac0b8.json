{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  data() {\n    return {\n      text: \"\",\n      // 用户输入的文章内容\n      jsonData: null // 后端返回的 JSON 数据\n    };\n  },\n  methods: {\n    // 提交文章内容并获取处理结果\n    async processText() {\n      try {\n        const response = await fetch(\"http://localhost:8888/process_text\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: this.text\n          })\n        });\n        const result = await response.json();\n\n        // 检查是否有错误信息\n        if (result.error) {\n          console.error(\"后端返回的错误:\", result.error);\n          alert(`处理文章内容时出错: ${result.message}`);\n          return;\n        }\n\n        // 处理正常结果\n        this.jsonData = result.json_data;\n        this.renderChart();\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    },\n    // 根据 JSON 数据渲染图表\n    renderChart() {\n      if (!this.jsonData || !this.jsonData.type) {\n        console.error(\"JSON 数据无效:\", this.jsonData);\n        return;\n      }\n      const chartType = this.jsonData.type; // 图表类型（趋势、比例、值）\n      const data = this.jsonData.data; // 数据内容\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n\n      // 根据分类渲染不同的图表\n      if (chartType === \"趋势\") {\n        this.renderLineChart(data);\n      } else if (chartType === \"比例\") {\n        this.renderPieChart(data);\n      } else if (chartType === \"值\") {\n        this.renderBarChart(data);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    },\n    // 渲染折线图（趋势）\n    renderLineChart(data) {\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 30,\n        left: 40\n      };\n      const width = 600 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // 解析数据\n      const parsedData = data.split(\"\\n\").map((line, index) => ({\n        x: index,\n        y: parseFloat(line.replace(/[^0-9.]/g, \"\")) // 提取数字\n      }));\n\n      // 设置比例尺\n      const x = d3.scaleLinear().domain([0, parsedData.length - 1]).range([0, width]);\n      const y = d3.scaleLinear().domain([0, d3.max(parsedData, d => d.y)]).range([height, 0]);\n\n      // 添加折线\n      svg.append(\"path\").datum(parsedData).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(d => x(d.x)).y(d => y(d.y)));\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n    },\n    // 渲染饼图（比例）\n    renderPieChart(data) {\n      const width = 400;\n      const height = 400;\n      const radius = Math.min(width, height) / 2;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n      // 解析数据\n      const parsedData = data.split(\"\\n\").map(line => {\n        const [category, value] = line.split(\":\");\n        return {\n          category,\n          value: parseFloat(value)\n        };\n      });\n\n      // 设置颜色比例尺\n      const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n      // 计算饼图\n      const pie = d3.pie().value(d => d.value);\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n      // 绘制扇形\n      const arcs = svg.selectAll(\"arc\").data(pie(parsedData)).enter().append(\"g\").attr(\"class\", \"arc\");\n      arcs.append(\"path\").attr(\"d\", arc).attr(\"fill\", (d, i) => color(i));\n\n      // 添加标签\n      arcs.append(\"text\").attr(\"transform\", d => `translate(${arc.centroid(d)})`).attr(\"text-anchor\", \"middle\").text(d => d.data.category);\n    },\n    // 渲染柱状图（值）\n    renderBarChart(data) {\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 30,\n        left: 40\n      };\n      const width = 600 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // 解析数据\n      const parsedData = data.split(\"\\n\").map(line => {\n        const [category, value] = line.split(\":\");\n        return {\n          category,\n          value: parseFloat(value)\n        };\n      });\n\n      // 设置比例尺\n      const x = d3.scaleBand().domain(parsedData.map(d => d.category)).range([0, width]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(parsedData, d => d.value)]).range([height, 0]);\n\n      // 绘制柱状图\n      svg.selectAll(\"rect\").data(parsedData).enter().append(\"rect\").attr(\"x\", d => x(d.category)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - y(d.value)).attr(\"fill\", \"steelblue\");\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n    }\n  }\n};","map":{"version":3,"names":["d3","data","text","jsonData","methods","processText","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","alert","message","json_data","renderChart","type","chartType","select","$refs","chart","html","renderLineChart","renderPieChart","renderBarChart","margin","top","right","bottom","left","width","height","svg","append","attr","parsedData","split","map","line","index","x","y","parseFloat","replace","scaleLinear","domain","length","range","max","d","datum","call","axisBottom","axisLeft","radius","Math","min","category","value","color","scaleOrdinal","schemeCategory10","pie","arc","innerRadius","outerRadius","arcs","selectAll","enter","i","centroid","scaleBand","padding","bandwidth"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis2.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<h1>文章内容可视化工具</h1>\r\n\t\t<div class=\"upload-section\">\r\n\t\t\t<textarea v-model=\"text\" placeholder=\"请输入文章内容\"></textarea>\r\n\t\t\t<button @click=\"processText\">提交并可视化</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"jsonData\" class=\"visualization-section\">\r\n\t\t\t<h2>可视化结果</h2>\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttext: \"\", // 用户输入的文章内容\r\n\t\t\t\tjsonData: null // 后端返回的 JSON 数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交文章内容并获取处理结果\r\n\t\t\tasync processText() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({ text: this.text })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst result = await response.json();\r\n\r\n\t\t\t\t\t// 检查是否有错误信息\r\n\t\t\t\t\tif (result.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 处理正常结果\r\n\t\t\t\t\tthis.jsonData = result.json_data;\r\n\t\t\t\t\tthis.renderChart();\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 根据 JSON 数据渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\tif (!this.jsonData || !this.jsonData.type) {\r\n\t\t\t\t\tconsole.error(\"JSON 数据无效:\", this.jsonData);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst chartType = this.jsonData.type; // 图表类型（趋势、比例、值）\r\n\t\t\t\tconst data = this.jsonData.data; // 数据内容\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\t// 根据分类渲染不同的图表\r\n\t\t\t\tif (chartType === \"趋势\") {\r\n\t\t\t\t\tthis.renderLineChart(data);\r\n\t\t\t\t} else if (chartType === \"比例\") {\r\n\t\t\t\t\tthis.renderPieChart(data);\r\n\t\t\t\t} else if (chartType === \"值\") {\r\n\t\t\t\t\tthis.renderBarChart(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染折线图（趋势）\r\n\t\t\trenderLineChart(data) {\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\t\t\t\tconst width = 600 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst parsedData = data.split(\"\\n\").map((line, index) => ({\r\n\t\t\t\t\tx: index,\r\n\t\t\t\t\ty: parseFloat(line.replace(/[^0-9.]/g, \"\")) // 提取数字\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// 设置比例尺\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, parsedData.length - 1])\r\n\t\t\t\t\t.range([0, width]);\r\n\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(parsedData, d => d.y)])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\t// 添加折线\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.datum(parsedData)\r\n\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t.attr(\"stroke\", \"steelblue\")\r\n\t\t\t\t\t.attr(\"stroke-width\", 1.5)\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"d\",\r\n\t\t\t\t\t\td3\r\n\t\t\t\t\t\t\t.line()\r\n\t\t\t\t\t\t\t.x(d => x(d.x))\r\n\t\t\t\t\t\t\t.y(d => y(d.y))\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x));\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染饼图（比例）\r\n\t\t\trenderPieChart(data) {\r\n\t\t\t\tconst width = 400;\r\n\t\t\t\tconst height = 400;\r\n\t\t\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst parsedData = data.split(\"\\n\").map(line => {\r\n\t\t\t\t\tconst [category, value] = line.split(\":\");\r\n\t\t\t\t\treturn { category, value: parseFloat(value) };\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 设置颜色比例尺\r\n\t\t\t\tconst color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n\t\t\t\t// 计算饼图\r\n\t\t\t\tconst pie = d3.pie().value(d => d.value);\r\n\t\t\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\t\t\t// 绘制扇形\r\n\t\t\t\tconst arcs = svg\r\n\t\t\t\t\t.selectAll(\"arc\")\r\n\t\t\t\t\t.data(pie(parsedData))\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"arc\");\r\n\r\n\t\t\t\tarcs\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arc)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => color(i));\r\n\r\n\t\t\t\t// 添加标签\r\n\t\t\t\tarcs\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(d => d.data.category);\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染柱状图（值）\r\n\t\t\trenderBarChart(data) {\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\t\t\t\tconst width = 600 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst parsedData = data.split(\"\\n\").map(line => {\r\n\t\t\t\t\tconst [category, value] = line.split(\":\");\r\n\t\t\t\t\treturn { category, value: parseFloat(value) };\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 设置比例尺\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(parsedData.map(d => d.category))\r\n\t\t\t\t\t.range([0, width])\r\n\t\t\t\t\t.padding(0.1);\r\n\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(parsedData, d => d.value)])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\t// 绘制柱状图\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(parsedData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.category))\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"height\", d => height - y(d.value))\r\n\t\t\t\t\t.attr(\"fill\", \"steelblue\");\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x));\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t#app {\r\n\t\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 60px;\r\n\t}\r\n\r\n\t.upload-section {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 80%;\r\n\t\theight: 150px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}