{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, computed, nextTick, onBeforeUnmount } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'SparklineChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n      validator: value => Array.isArray(value)\n    },\n    compareData: {\n      type: Array,\n      default: null\n    },\n    maxWidth: {\n      type: Number,\n      default: 250\n    },\n    maxHeight: {\n      type: Number,\n      default: 80\n    },\n    margin: {\n      type: Object,\n      default: () => ({\n        top: 5,\n        right: 5,\n        bottom: 5,\n        left: 5\n      })\n    },\n    lineColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    areaColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    dotColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    highlightColor: {\n      type: String,\n      default: \"#FFD700\"\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true\n    },\n    showDots: {\n      type: Boolean,\n      default: true\n    },\n    showArea: {\n      type: Boolean,\n      default: true\n    },\n    showYearMarkers: {\n      type: Boolean,\n      default: true\n    },\n    curveType: {\n      type: String,\n      default: \"curveMonotoneX\"\n    },\n    maxBarWidth: {\n      type: Number,\n      default: 60\n    }\n  },\n  emits: [\"chart-mounted\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    const props = __props;\n    const emit = __emit;\n    const chartContainer = ref(null);\n    const svg = ref(null);\n    const tooltip = ref(null);\n    const resizeObserver = ref(null);\n    const containerSize = ref({\n      width: props.maxWidth,\n      height: props.maxHeight\n    });\n    const updateContainerSize = () => {\n      if (chartContainer.value) {\n        containerSize.value = {\n          width: Math.min(chartContainer.value.clientWidth, props.maxWidth),\n          height: Math.min(chartContainer.value.clientHeight || props.maxHeight, props.maxHeight)\n        };\n      }\n    };\n    const innerWidth = computed(() => {\n      return Math.max(10, containerSize.value.width - props.margin.left - props.margin.right);\n    });\n    const innerHeight = computed(() => {\n      return Math.max(10, containerSize.value.height - props.margin.top - props.margin.bottom);\n    });\n    const sortedData = computed(() => {\n      if (!Array.isArray(props.data)) return [];\n      return [...props.data].filter(item => item && !isNaN(item.year) && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n    });\n    const hasData = computed(() => sortedData.value.length > 0);\n    const showBarChart = computed(() => sortedData.value.length <= 3);\n    const showLineChart = computed(() => sortedData.value.length > 3);\n    const noDataMessage = computed(() => \"无数据\");\n    const chartType = computed(() => showBarChart.value ? \"bar\" : \"line\");\n    const initChart = () => {\n      if (!chartContainer.value) return;\n      updateContainerSize();\n      d3.select(chartContainer.value).selectAll(\"*\").remove();\n      if (!hasData.value) return;\n      svg.value = d3.select(chartContainer.value).append(\"svg\").attr(\"width\", containerSize.value.width).attr(\"height\", containerSize.value.height).attr(\"viewBox\", `0 0 ${containerSize.value.width} ${containerSize.value.height}`).attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n      const chart = svg.value.append(\"g\").attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\n      if (showBarChart.value) {\n        drawBarChart(chart);\n      } else if (showLineChart.value) {\n        drawLineChart(chart);\n      }\n      emit(\"chart-mounted\", {\n        chartType: chartType.value\n      });\n    };\n    const drawBarChart = chart => {\n      const xScale = d3.scaleBand().domain(sortedData.value.map(d => d.year.toString())).range([0, innerWidth.value]).paddingInner(0.4).paddingOuter(0.2);\n      const calculatedWidth = xScale.bandwidth();\n      const barWidth = Math.min(calculatedWidth, props.maxBarWidth);\n      const adjustedPadding = (innerWidth.value - barWidth * sortedData.value.length) / (sortedData.value.length + 1);\n      const adjustedXScale = d3.scaleBand().domain(sortedData.value.map(d => d.year.toString())).range([0, innerWidth.value]).paddingInner(adjustedPadding / barWidth).paddingOuter(adjustedPadding / barWidth);\n      const maxValue = d3.max(sortedData.value, d => d.value);\n      const yScale = d3.scaleLinear().domain([0, maxValue * 1.1]).range([innerHeight.value, 0]);\n      chart.selectAll(\".bar\").data(sortedData.value).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => adjustedXScale(d.year.toString()) + (adjustedXScale.bandwidth() - barWidth) / 2).attr(\"width\", barWidth).attr(\"y\", d => yScale(d.value)).attr(\"height\", d => innerHeight.value - yScale(d.value)).attr(\"fill\", props.lineColor).attr(\"rx\", 2).attr(\"ry\", 2);\n      chart.selectAll(\".bar-label\").data(sortedData.value).enter().append(\"text\").attr(\"class\", \"bar-label\").attr(\"x\", d => adjustedXScale(d.year.toString()) + adjustedXScale.bandwidth() / 2).attr(\"y\", d => yScale(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => formatValue(d.value)).attr(\"font-size\", \"10px\").attr(\"fill\", \"#64748b\").style(\"visibility\", d => innerHeight.value - yScale(d.value) > 20 ? \"visible\" : \"hidden\");\n    };\n    const drawLineChart = chart => {\n      const years = sortedData.value.map(d => d.year);\n      const xScale = d3.scaleLinear().domain(d3.extent(years)).range([0, innerWidth.value]);\n      const values = sortedData.value.map(d => d.value);\n      const minValue = d3.min(values);\n      const maxValue = d3.max(values);\n      const padding = (maxValue - minValue) * 0.1;\n      const yScale = d3.scaleLinear().domain([minValue - padding, maxValue + padding]).range([innerHeight.value, 0]);\n      const lineGenerator = d3.line().x(d => xScale(d.year)).y(d => yScale(d.value)).curve(d3[props.curveType]);\n      chart.append(\"path\").attr(\"class\", \"sparkline-line\").attr(\"d\", lineGenerator(sortedData.value)).attr(\"stroke\", props.lineColor).attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n      if (props.showDots) {\n        chart.selectAll(\".sparkline-dot\").data(sortedData.value).enter().append(\"circle\").attr(\"class\", \"sparkline-dot\").attr(\"cx\", d => xScale(d.year)).attr(\"cy\", d => yScale(d.value)).attr(\"r\", 3).attr(\"fill\", props.dotColor);\n      }\n      if (props.compareData && props.showYearMarkers) {\n        const commonYears = getCommonYears(sortedData.value, props.compareData);\n        commonYears.forEach(year => {\n          const points = sortedData.value.filter(d => d.year === year);\n          points.forEach(point => {\n            chart.append(\"circle\").attr(\"cx\", xScale(point.year)).attr(\"cy\", yScale(point.value)).attr(\"r\", 5).attr(\"fill\", props.highlightColor).attr(\"stroke\", \"#FF8C00\").attr(\"stroke-width\", 1.5).attr(\"class\", \"highlight-point\");\n          });\n        });\n      }\n      if (props.showTooltip) {\n        addTooltip(chart, xScale, yScale);\n      }\n    };\n    const getCommonYears = (data1, data2) => {\n      const years1 = new Set(data1.map(d => d.year));\n      const years2 = new Set(data2.filter(d => d).map(d => d.year));\n      return [...years1].filter(year => years2.has(year));\n    };\n    const formatValue = value => {\n      if (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\n      if (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\n      return value.toLocaleString();\n    };\n    const addTooltip = (chart, xScale, yScale) => {\n      tooltip.value = chart.append(\"g\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).attr(\"pointer-events\", \"none\");\n      tooltip.value.append(\"rect\").attr(\"class\", \"tooltip-box\").attr(\"rx\", 4).attr(\"ry\", 4);\n      tooltip.value.append(\"text\").attr(\"class\", \"tooltip-year\").attr(\"x\", 6).attr(\"y\", 18);\n      tooltip.value.append(\"text\").attr(\"class\", \"tooltip-value\").attr(\"x\", 6).attr(\"y\", 36);\n      const referenceLine = chart.append(\"line\").attr(\"class\", \"reference-line\").attr(\"stroke\", \"#64748b\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"2,2\").attr(\"y1\", 0).attr(\"y2\", innerHeight.value).style(\"opacity\", 0);\n      chart.append(\"rect\").attr(\"class\", \"overlay\").attr(\"width\", innerWidth.value).attr(\"height\", innerHeight.value).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mouseover\", () => tooltip.value.style(\"opacity\", 1)).on(\"mouseout\", () => {\n        tooltip.value.style(\"opacity\", 0);\n        referenceLine.style(\"opacity\", 0);\n      }).on(\"mousemove\", event => {\n        const [mouseX] = d3.pointer(event);\n        const year = xScale.invert(mouseX);\n        const closest = d3.least(sortedData.value, d => Math.abs(xScale(d.year) - mouseX));\n        if (!closest) return;\n        referenceLine.attr(\"x1\", xScale(closest.year)).attr(\"x2\", xScale(closest.year)).style(\"opacity\", 1);\n        tooltip.value.select(\".tooltip-year\").text(`Year: ${closest.year}`);\n        tooltip.value.select(\".tooltip-value\").text(`Value: ${formatValue(closest.value)}`);\n        const tooltipText = tooltip.value.node().querySelectorAll(\"text\");\n        const bbox = tooltipText[0].getBBox();\n        const bbox2 = tooltipText[1].getBBox();\n        const tooltipWidth = Math.max(bbox.width, bbox2.width) + 12;\n        const tooltipHeight = bbox.height + bbox2.height + 16;\n        let x = xScale(closest.year) + 10;\n        let y = yScale(closest.value) - tooltipHeight / 2;\n        if (x + tooltipWidth > innerWidth.value) {\n          x = xScale(closest.year) - tooltipWidth - 10;\n        }\n        y = Math.max(0, Math.min(y, innerHeight.value - tooltipHeight));\n        tooltip.value.select(\".tooltip-box\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", tooltipWidth).attr(\"height\", tooltipHeight);\n        tooltip.value.select(\".tooltip-year\").attr(\"x\", x + 6).attr(\"y\", y + 18);\n        tooltip.value.select(\".tooltip-value\").attr(\"x\", x + 6).attr(\"y\", y + 36);\n      });\n    };\n    const setupResizeObserver = () => {\n      if (resizeObserver.value) {\n        resizeObserver.value.disconnect();\n      }\n      if (chartContainer.value) {\n        resizeObserver.value = new ResizeObserver(() => {\n          nextTick(() => {\n            updateContainerSize();\n            initChart();\n          });\n        });\n        resizeObserver.value.observe(chartContainer.value);\n      }\n    };\n    onMounted(() => {\n      setupResizeObserver();\n      initChart();\n    });\n    onBeforeUnmount(() => {\n      if (resizeObserver.value) {\n        resizeObserver.value.disconnect();\n      }\n    });\n    watch(() => [props.data, props.compareData, props.maxWidth, props.maxHeight, props.margin, props.lineColor, props.highlightColor, props.showTooltip, props.showDots, props.showYearMarkers, props.curveType, props.maxBarWidth], initChart, {\n      deep: true\n    });\n    __expose({\n      chartType\n    });\n    const __returned__ = {\n      props,\n      emit,\n      chartContainer,\n      svg,\n      tooltip,\n      resizeObserver,\n      containerSize,\n      updateContainerSize,\n      innerWidth,\n      innerHeight,\n      sortedData,\n      hasData,\n      showBarChart,\n      showLineChart,\n      noDataMessage,\n      chartType,\n      initChart,\n      drawBarChart,\n      drawLineChart,\n      getCommonYears,\n      formatValue,\n      addTooltip,\n      setupResizeObserver,\n      ref,\n      onMounted,\n      watch,\n      computed,\n      nextTick,\n      onBeforeUnmount,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","nextTick","onBeforeUnmount","d3","props","__props","emit","__emit","chartContainer","svg","tooltip","resizeObserver","containerSize","width","maxWidth","height","maxHeight","updateContainerSize","value","Math","min","clientWidth","clientHeight","innerWidth","max","margin","left","right","innerHeight","top","bottom","sortedData","Array","isArray","data","filter","item","isNaN","year","sort","a","b","hasData","length","showBarChart","showLineChart","noDataMessage","chartType","initChart","select","selectAll","remove","append","attr","chart","drawBarChart","drawLineChart","xScale","scaleBand","domain","map","d","toString","range","paddingInner","paddingOuter","calculatedWidth","bandwidth","barWidth","maxBarWidth","adjustedPadding","adjustedXScale","maxValue","yScale","scaleLinear","enter","lineColor","text","formatValue","style","years","extent","values","minValue","padding","lineGenerator","line","x","y","curve","curveType","showDots","dotColor","compareData","showYearMarkers","commonYears","getCommonYears","forEach","points","point","highlightColor","showTooltip","addTooltip","data1","data2","years1","Set","years2","has","toFixed","toLocaleString","referenceLine","on","event","mouseX","pointer","invert","closest","least","abs","tooltipText","node","querySelectorAll","bbox","getBBox","bbox2","tooltipWidth","tooltipHeight","setupResizeObserver","disconnect","ResizeObserver","observe","deep","__expose"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/SparklineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"sparkline-container\">\r\n\t\t<div v-if=\"!hasData\" class=\"no-data-message\">\r\n\t\t\t{{ noDataMessage }}\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\tonMounted,\r\n\t\twatch,\r\n\t\tcomputed,\r\n\t\tnextTick,\r\n\t\tonBeforeUnmount\r\n\t} from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => Array.isArray(value)\r\n\t\t},\r\n\t\tcompareData: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tmaxWidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 250\r\n\t\t},\r\n\t\tmaxHeight: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 80\r\n\t\t},\r\n\t\tmargin: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ top: 5, right: 5, bottom: 5, left: 5 })\r\n\t\t},\r\n\t\tlineColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\tareaColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\tdotColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\thighlightColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#FFD700\"\r\n\t\t},\r\n\t\tshowTooltip: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowDots: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowArea: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowYearMarkers: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tcurveType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"curveMonotoneX\"\r\n\t\t},\r\n\t\tmaxBarWidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 60\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"chart-mounted\"]);\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst svg = ref(null);\r\n\tconst tooltip = ref(null);\r\n\tconst resizeObserver = ref(null);\r\n\tconst containerSize = ref({\r\n\t\twidth: props.maxWidth,\r\n\t\theight: props.maxHeight\r\n\t});\r\n\r\n\tconst updateContainerSize = () => {\r\n\t\tif (chartContainer.value) {\r\n\t\t\tcontainerSize.value = {\r\n\t\t\t\twidth: Math.min(chartContainer.value.clientWidth, props.maxWidth),\r\n\t\t\t\theight: Math.min(\r\n\t\t\t\t\tchartContainer.value.clientHeight || props.maxHeight,\r\n\t\t\t\t\tprops.maxHeight\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst innerWidth = computed(() => {\r\n\t\treturn Math.max(\r\n\t\t\t10,\r\n\t\t\tcontainerSize.value.width - props.margin.left - props.margin.right\r\n\t\t);\r\n\t});\r\n\r\n\tconst innerHeight = computed(() => {\r\n\t\treturn Math.max(\r\n\t\t\t10,\r\n\t\t\tcontainerSize.value.height - props.margin.top - props.margin.bottom\r\n\t\t);\r\n\t});\r\n\r\n\tconst sortedData = computed(() => {\r\n\t\tif (!Array.isArray(props.data)) return [];\r\n\t\treturn [...props.data]\r\n\t\t\t.filter(item => item && !isNaN(item.year) && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\t});\r\n\r\n\tconst hasData = computed(() => sortedData.value.length > 0);\r\n\tconst showBarChart = computed(() => sortedData.value.length <= 3);\r\n\tconst showLineChart = computed(() => sortedData.value.length > 3);\r\n\tconst noDataMessage = computed(() => \"无数据\");\r\n\tconst chartType = computed(() => (showBarChart.value ? \"bar\" : \"line\"));\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartContainer.value) return;\r\n\r\n\t\tupdateContainerSize();\r\n\r\n\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\t\tif (!hasData.value) return;\r\n\r\n\t\tsvg.value = d3\r\n\t\t\t.select(chartContainer.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", containerSize.value.width)\r\n\t\t\t.attr(\"height\", containerSize.value.height)\r\n\t\t\t.attr(\r\n\t\t\t\t\"viewBox\",\r\n\t\t\t\t`0 0 ${containerSize.value.width} ${containerSize.value.height}`\r\n\t\t\t)\r\n\t\t\t.attr(\"preserveAspectRatio\", \"xMidYMid meet\");\r\n\r\n\t\tconst chart = svg.value\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\r\n\r\n\t\tif (showBarChart.value) {\r\n\t\t\tdrawBarChart(chart);\r\n\t\t} else if (showLineChart.value) {\r\n\t\t\tdrawLineChart(chart);\r\n\t\t}\r\n\r\n\t\temit(\"chart-mounted\", {\r\n\t\t\tchartType: chartType.value\r\n\t\t});\r\n\t};\r\n\r\n\tconst drawBarChart = chart => {\r\n\t\tconst xScale = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(sortedData.value.map(d => d.year.toString()))\r\n\t\t\t.range([0, innerWidth.value])\r\n\t\t\t.paddingInner(0.4)\r\n\t\t\t.paddingOuter(0.2);\r\n\r\n\t\tconst calculatedWidth = xScale.bandwidth();\r\n\t\tconst barWidth = Math.min(calculatedWidth, props.maxBarWidth);\r\n\t\tconst adjustedPadding =\r\n\t\t\t(innerWidth.value - barWidth * sortedData.value.length) /\r\n\t\t\t(sortedData.value.length + 1);\r\n\r\n\t\tconst adjustedXScale = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(sortedData.value.map(d => d.year.toString()))\r\n\t\t\t.range([0, innerWidth.value])\r\n\t\t\t.paddingInner(adjustedPadding / barWidth)\r\n\t\t\t.paddingOuter(adjustedPadding / barWidth);\r\n\r\n\t\tconst maxValue = d3.max(sortedData.value, d => d.value);\r\n\t\tconst yScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, maxValue * 1.1])\r\n\t\t\t.range([innerHeight.value, 0]);\r\n\r\n\t\tchart\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(sortedData.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"x\",\r\n\t\t\t\td =>\r\n\t\t\t\t\tadjustedXScale(d.year.toString()) +\r\n\t\t\t\t\t(adjustedXScale.bandwidth() - barWidth) / 2\r\n\t\t\t)\r\n\t\t\t.attr(\"width\", barWidth)\r\n\t\t\t.attr(\"y\", d => yScale(d.value))\r\n\t\t\t.attr(\"height\", d => innerHeight.value - yScale(d.value))\r\n\t\t\t.attr(\"fill\", props.lineColor)\r\n\t\t\t.attr(\"rx\", 2)\r\n\t\t\t.attr(\"ry\", 2);\r\n\r\n\t\tchart\r\n\t\t\t.selectAll(\".bar-label\")\r\n\t\t\t.data(sortedData.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"bar-label\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"x\",\r\n\t\t\t\td => adjustedXScale(d.year.toString()) + adjustedXScale.bandwidth() / 2\r\n\t\t\t)\r\n\t\t\t.attr(\"y\", d => yScale(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => formatValue(d.value))\r\n\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t.attr(\"fill\", \"#64748b\")\r\n\t\t\t.style(\"visibility\", d =>\r\n\t\t\t\tinnerHeight.value - yScale(d.value) > 20 ? \"visible\" : \"hidden\"\r\n\t\t\t);\r\n\t};\r\n\r\n\tconst drawLineChart = chart => {\r\n\t\tconst years = sortedData.value.map(d => d.year);\r\n\t\tconst xScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(years))\r\n\t\t\t.range([0, innerWidth.value]);\r\n\r\n\t\tconst values = sortedData.value.map(d => d.value);\r\n\t\tconst minValue = d3.min(values);\r\n\t\tconst maxValue = d3.max(values);\r\n\t\tconst padding = (maxValue - minValue) * 0.1;\r\n\r\n\t\tconst yScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([minValue - padding, maxValue + padding])\r\n\t\t\t.range([innerHeight.value, 0]);\r\n\r\n\t\tconst lineGenerator = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => xScale(d.year))\r\n\t\t\t.y(d => yScale(d.value))\r\n\t\t\t.curve(d3[props.curveType]);\r\n\r\n\t\tchart\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"class\", \"sparkline-line\")\r\n\t\t\t.attr(\"d\", lineGenerator(sortedData.value))\r\n\t\t\t.attr(\"stroke\", props.lineColor)\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\tif (props.showDots) {\r\n\t\t\tchart\r\n\t\t\t\t.selectAll(\".sparkline-dot\")\r\n\t\t\t\t.data(sortedData.value)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"circle\")\r\n\t\t\t\t.attr(\"class\", \"sparkline-dot\")\r\n\t\t\t\t.attr(\"cx\", d => xScale(d.year))\r\n\t\t\t\t.attr(\"cy\", d => yScale(d.value))\r\n\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t.attr(\"fill\", props.dotColor);\r\n\t\t}\r\n\r\n\t\tif (props.compareData && props.showYearMarkers) {\r\n\t\t\tconst commonYears = getCommonYears(sortedData.value, props.compareData);\r\n\t\t\tcommonYears.forEach(year => {\r\n\t\t\t\tconst points = sortedData.value.filter(d => d.year === year);\r\n\t\t\t\tpoints.forEach(point => {\r\n\t\t\t\t\tchart\r\n\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t.attr(\"cx\", xScale(point.year))\r\n\t\t\t\t\t\t.attr(\"cy\", yScale(point.value))\r\n\t\t\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t\t\t\t.attr(\"fill\", props.highlightColor)\r\n\t\t\t\t\t\t.attr(\"stroke\", \"#FF8C00\")\r\n\t\t\t\t\t\t.attr(\"stroke-width\", 1.5)\r\n\t\t\t\t\t\t.attr(\"class\", \"highlight-point\");\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (props.showTooltip) {\r\n\t\t\taddTooltip(chart, xScale, yScale);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCommonYears = (data1, data2) => {\r\n\t\tconst years1 = new Set(data1.map(d => d.year));\r\n\t\tconst years2 = new Set(data2.filter(d => d).map(d => d.year));\r\n\t\treturn [...years1].filter(year => years2.has(year));\r\n\t};\r\n\r\n\tconst formatValue = value => {\r\n\t\tif (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\r\n\t\tif (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\r\n\t\treturn value.toLocaleString();\r\n\t};\r\n\r\n\tconst addTooltip = (chart, xScale, yScale) => {\r\n\t\ttooltip.value = chart\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"tooltip\")\r\n\t\t\t.style(\"opacity\", 0)\r\n\t\t\t.attr(\"pointer-events\", \"none\");\r\n\r\n\t\ttooltip.value\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"tooltip-box\")\r\n\t\t\t.attr(\"rx\", 4)\r\n\t\t\t.attr(\"ry\", 4);\r\n\r\n\t\ttooltip.value\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"tooltip-year\")\r\n\t\t\t.attr(\"x\", 6)\r\n\t\t\t.attr(\"y\", 18);\r\n\r\n\t\ttooltip.value\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"tooltip-value\")\r\n\t\t\t.attr(\"x\", 6)\r\n\t\t\t.attr(\"y\", 36);\r\n\r\n\t\tconst referenceLine = chart\r\n\t\t\t.append(\"line\")\r\n\t\t\t.attr(\"class\", \"reference-line\")\r\n\t\t\t.attr(\"stroke\", \"#64748b\")\r\n\t\t\t.attr(\"stroke-width\", 1)\r\n\t\t\t.attr(\"stroke-dasharray\", \"2,2\")\r\n\t\t\t.attr(\"y1\", 0)\r\n\t\t\t.attr(\"y2\", innerHeight.value)\r\n\t\t\t.style(\"opacity\", 0);\r\n\r\n\t\tchart\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"overlay\")\r\n\t\t\t.attr(\"width\", innerWidth.value)\r\n\t\t\t.attr(\"height\", innerHeight.value)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"pointer-events\", \"all\")\r\n\t\t\t.on(\"mouseover\", () => tooltip.value.style(\"opacity\", 1))\r\n\t\t\t.on(\"mouseout\", () => {\r\n\t\t\t\ttooltip.value.style(\"opacity\", 0);\r\n\t\t\t\treferenceLine.style(\"opacity\", 0);\r\n\t\t\t})\r\n\t\t\t.on(\"mousemove\", event => {\r\n\t\t\t\tconst [mouseX] = d3.pointer(event);\r\n\t\t\t\tconst year = xScale.invert(mouseX);\r\n\t\t\t\tconst closest = d3.least(sortedData.value, d =>\r\n\t\t\t\t\tMath.abs(xScale(d.year) - mouseX)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!closest) return;\r\n\r\n\t\t\t\treferenceLine\r\n\t\t\t\t\t.attr(\"x1\", xScale(closest.year))\r\n\t\t\t\t\t.attr(\"x2\", xScale(closest.year))\r\n\t\t\t\t\t.style(\"opacity\", 1);\r\n\r\n\t\t\t\ttooltip.value.select(\".tooltip-year\").text(`Year: ${closest.year}`);\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-value\")\r\n\t\t\t\t\t.text(`Value: ${formatValue(closest.value)}`);\r\n\r\n\t\t\t\tconst tooltipText = tooltip.value.node().querySelectorAll(\"text\");\r\n\t\t\t\tconst bbox = tooltipText[0].getBBox();\r\n\t\t\t\tconst bbox2 = tooltipText[1].getBBox();\r\n\t\t\t\tconst tooltipWidth = Math.max(bbox.width, bbox2.width) + 12;\r\n\t\t\t\tconst tooltipHeight = bbox.height + bbox2.height + 16;\r\n\r\n\t\t\t\tlet x = xScale(closest.year) + 10;\r\n\t\t\t\tlet y = yScale(closest.value) - tooltipHeight / 2;\r\n\r\n\t\t\t\tif (x + tooltipWidth > innerWidth.value) {\r\n\t\t\t\t\tx = xScale(closest.year) - tooltipWidth - 10;\r\n\t\t\t\t}\r\n\t\t\t\ty = Math.max(0, Math.min(y, innerHeight.value - tooltipHeight));\r\n\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-box\")\r\n\t\t\t\t\t.attr(\"x\", x)\r\n\t\t\t\t\t.attr(\"y\", y)\r\n\t\t\t\t\t.attr(\"width\", tooltipWidth)\r\n\t\t\t\t\t.attr(\"height\", tooltipHeight);\r\n\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-year\")\r\n\t\t\t\t\t.attr(\"x\", x + 6)\r\n\t\t\t\t\t.attr(\"y\", y + 18);\r\n\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-value\")\r\n\t\t\t\t\t.attr(\"x\", x + 6)\r\n\t\t\t\t\t.attr(\"y\", y + 36);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst setupResizeObserver = () => {\r\n\t\tif (resizeObserver.value) {\r\n\t\t\tresizeObserver.value.disconnect();\r\n\t\t}\r\n\r\n\t\tif (chartContainer.value) {\r\n\t\t\tresizeObserver.value = new ResizeObserver(() => {\r\n\t\t\t\tnextTick(() => {\r\n\t\t\t\t\tupdateContainerSize();\r\n\t\t\t\t\tinitChart();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tresizeObserver.value.observe(chartContainer.value);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tsetupResizeObserver();\r\n\t\tinitChart();\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tif (resizeObserver.value) {\r\n\t\t\tresizeObserver.value.disconnect();\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [\r\n\t\t\tprops.data,\r\n\t\t\tprops.compareData,\r\n\t\t\tprops.maxWidth,\r\n\t\t\tprops.maxHeight,\r\n\t\t\tprops.margin,\r\n\t\t\tprops.lineColor,\r\n\t\t\tprops.highlightColor,\r\n\t\t\tprops.showTooltip,\r\n\t\t\tprops.showDots,\r\n\t\t\tprops.showYearMarkers,\r\n\t\t\tprops.curveType,\r\n\t\t\tprops.maxBarWidth\r\n\t\t],\r\n\t\tinitChart,\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tdefineExpose({\r\n\t\tchartType\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.sparkline-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-width: 100px;\r\n\t\tmin-height: 60px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #94a3b8;\r\n\t\tfont-size: 12px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.sparkline-container :deep(svg) {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-box) {\r\n\t\tfill: white;\r\n\t\tstroke: #e2e8f0;\r\n\t\tstroke-width: 1;\r\n\t\tfilter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-year) {\r\n\t\tfont-size: 12px;\r\n\t\tfont-weight: bold;\r\n\t\tfill: #334155;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-value) {\r\n\t\tfont-size: 12px;\r\n\t\tfill: #1e40af;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.reference-line) {\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.bar) {\r\n\t\ttransition: height 0.3s ease, y 0.3s ease;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.bar-label) {\r\n\t\tpointer-events: none;\r\n\t\tfont-family: system-ui, -apple-system, sans-serif;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.highlight-point) {\r\n\t\tanimation: pulse 1.5s infinite;\r\n\t}\r\n\r\n\t@keyframes pulse {\r\n\t\t0% {\r\n\t\t\tr: 4;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\tr: 6;\r\n\t\t\topacity: 0.8;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\tr: 4;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}