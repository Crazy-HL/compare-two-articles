{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\nimport DataVisualization from \"./DataVisualization.vue\";\nimport { debounce } from \"lodash-es\";\nimport bus from \"@/js/eventBus.js\";\n\n// 数据源状态\n\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const showInfoboxData = ref(true);\n    const infoboxDataReady = ref(false);\n    const tableDataReady = ref(false);\n\n    // 容器引用\n    const containerRef = ref(null);\n\n    // 图表尺寸控制\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n    const leftChartColor = ref(\"#4a90e2\");\n    const rightChartColor = ref(\"#ef4444\");\n\n    // 数据存储\n    const processedTable1 = ref({\n      title: \"表格1\",\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"表格2\",\n      timeSeriesData: {}\n    });\n    const leftInfobox = ref({\n      title: \"Infobox 1\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"Infobox 2\",\n      data: {}\n    });\n\n    // 弹窗状态\n    const showFullChartModal = ref(false);\n    const currentAttribute = ref(\"\");\n    const currentSide = ref(\"left\");\n    const currentChartData = ref({\n      data: [],\n      type: \"line\",\n      config: {}\n    });\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      chartType: \"bar\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\",\n      chartType: \"bar\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      chartType: \"pie\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      chartType: \"text\"\n    }];\n\n    // 计算属性\n    const leftTitle = computed(() => showInfoboxData.value ? leftInfobox.value.title || \"Infobox 1\" : processedTable1.value.title || \"表格1\");\n    const rightTitle = computed(() => showInfoboxData.value ? rightInfobox.value.title || \"Infobox 2\" : processedTable2.value.title || \"表格2\");\n    const displayFields = computed(() => {\n      if (showInfoboxData.value) {\n        return COMPARABLE_FIELDS.filter(field => hasDataForCurrentSource(field.key, \"left\") || hasDataForCurrentSource(field.key, \"right\"));\n      } else {\n        const commonAttrs = Object.keys(processedTable1.value.timeSeriesData || {}).filter(attr => hasDataForAttribute(processedTable1.value, attr) && hasDataForAttribute(processedTable2.value, attr));\n        return commonAttrs.map(attr => ({\n          key: attr,\n          type: \"number\",\n          typeLabel: \"数值\",\n          chartType: commonAttrs.length <= 3 ? \"bar\" : \"line\"\n        }));\n      }\n    });\n    const hasData = computed(() => {\n      return displayFields.value.length > 0;\n    });\n\n    // 数据获取方法\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) return section[fieldKey];\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n    const getVisualizationData = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        const fieldData = getField(infobox, fieldKey);\n        return convertToVisualizationData(fieldData);\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return table.timeSeriesData[fieldKey] || [];\n      }\n    };\n    const getVisualizationType = field => {\n      return field.chartType || \"line\";\n    };\n    const getVisualizationConfig = (field, side) => {\n      const baseConfig = {\n        color: side === \"left\" ? leftChartColor.value : rightChartColor.value,\n        maxWidth: chartMaxWidth.value,\n        maxHeight: chartMaxHeight.value,\n        showYearMarkers: !showInfoboxData.value\n      };\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        const fieldData = getField(infobox, field.key);\n        return {\n          ...baseConfig,\n          title: field.key,\n          description: getFieldDescription(field.key, side),\n          unit: getFieldUnit(fieldData)\n        };\n      }\n      return baseConfig;\n    };\n    const getFieldDescription = (fieldKey, side) => {\n      if (!showInfoboxData.value) return \"\";\n      const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n      const fieldData = getField(infobox, fieldKey);\n      if (!fieldData) return \"\";\n      if (Array.isArray(fieldData)) {\n        return fieldData.map(item => item.text || item.value).join(\", \");\n      }\n      if (typeof fieldData === \"object\") {\n        return fieldData.text || fieldData.value || \"\";\n      }\n      return String(fieldData);\n    };\n    const getFieldUnit = fieldData => {\n      if (!fieldData) return \"\";\n      if (Array.isArray(fieldData)) {\n        return fieldData[0]?.unit || \"\";\n      }\n      if (typeof fieldData === \"object\") {\n        return fieldData.unit || \"\";\n      }\n      return \"\";\n    };\n\n    // 数据转换方法\n    const convertToVisualizationData = data => {\n      if (!data) return [];\n\n      // 处理百分比数据 (饼图)\n      if (Array.isArray(data) && data.some(item => item.percentage)) {\n        return data.map(item => ({\n          name: item.name || item.category || item.text || \"项目\",\n          value: item.percentage || item.value || 0,\n          color: item.color\n        }));\n      }\n\n      // 处理数组类型数据\n      if (Array.isArray(data)) {\n        return data.map(item => ({\n          year: item.year || new Date().getFullYear(),\n          value: parseFloat(item.value) || 0,\n          name: item.name || item.text || \"\"\n        })).filter(item => !isNaN(item.value));\n      }\n\n      // 处理对象类型数据\n      if (typeof data === \"object\" && data !== null) {\n        if (data.percentage !== undefined) {\n          return [{\n            name: data.name || data.category || data.text || \"项目\",\n            value: parseFloat(data.percentage) || 0,\n            color: data.color\n          }];\n        }\n        const value = parseFloat(data.value) || 0;\n        if (isNaN(value)) return [];\n        return [{\n          year: data.year || new Date().getFullYear(),\n          value: value,\n          name: data.name || data.text || \"\"\n        }];\n      }\n\n      // 处理简单值\n      const numericValue = parseFloat(data);\n      if (isNaN(numericValue)) return [];\n      return [{\n        year: new Date().getFullYear(),\n        value: numericValue,\n        name: \"\"\n      }];\n    };\n\n    // 数据检查方法\n    const hasDataForAttribute = (table, attr) => {\n      return table.timeSeriesData?.[attr]?.length > 0;\n    };\n    const hasDataForCurrentSource = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        return !!getField(infobox, fieldKey);\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return hasDataForAttribute(table, fieldKey);\n      }\n    };\n\n    // 数据源切换方法\n    const switchToInfoboxData = () => {\n      showInfoboxData.value = true;\n    };\n    const switchToTableData = () => {\n      showInfoboxData.value = false;\n    };\n\n    // 图表相关方法\n    const showFullChart = (attr, side) => {\n      currentAttribute.value = attr;\n      currentSide.value = side;\n      const field = displayFields.value.find(f => f.key === attr) || {};\n      currentChartData.value = {\n        data: getVisualizationData(attr, side),\n        type: getVisualizationType(field),\n        config: {\n          ...getVisualizationConfig(field, side),\n          fullscreen: true,\n          title: attr\n        }\n      };\n      showFullChartModal.value = true;\n    };\n    const hideFullChart = () => {\n      showFullChartModal.value = false;\n    };\n\n    // 数据处理方法\n    const processInfoboxData = (data, side) => {\n      if (!data) return {\n        title: `Infobox ${side}`,\n        data: {}\n      };\n      infoboxDataReady.value = true;\n      return {\n        title: data.title || `Infobox ${side}`,\n        data: data.sections || {}\n      };\n    };\n    const parseTableToStandardJSON = function (html) {\n      let defaultTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"未命名表格\";\n      const result = {\n        title: defaultTitle,\n        timeSeriesData: {}\n      };\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n        const table = doc.querySelector(\"table\");\n        if (!table) return result;\n\n        // 提取表头\n        const headerCells = table.querySelector(\"tr\")?.children || [];\n        const headers = Array.from(headerCells).map(cell => cell.textContent.replace(/[\\n†*]/g, \"\").trim().replace(/\\s+/g, \" \"));\n\n        // 检查年份列\n        const yearColumnIndex = headers.findIndex(h => h.toLowerCase().includes(\"year\"));\n        if (yearColumnIndex === -1) return result;\n\n        // 处理数据行\n        const dataRows = Array.from(table.querySelectorAll(\"tr:not(:first-child)\"));\n        dataRows.forEach(row => {\n          const cells = Array.from(row.children);\n          if (cells.length <= yearColumnIndex) return;\n          const year = parseInt(cells[yearColumnIndex].textContent.replace(/\\D/g, \"\"));\n          if (isNaN(year)) return;\n          headers.forEach((header, index) => {\n            if (index === yearColumnIndex || index >= cells.length) return;\n            const value = parseFloat(cells[index].textContent.replace(/[^\\d.-]/g, \"\"));\n            if (isNaN(value)) return;\n            if (!result.timeSeriesData[header]) {\n              result.timeSeriesData[header] = [];\n            }\n            result.timeSeriesData[header].push({\n              year: year,\n              value: value,\n              name: cells[0].textContent.trim()\n            });\n          });\n        });\n\n        // 排序\n        Object.values(result.timeSeriesData).forEach(data => {\n          data.sort((a, b) => a.year - b.year);\n        });\n\n        // 提取标题\n        result.title = extractTitleFromHTML(html) || defaultTitle;\n        tableDataReady.value = true;\n      } catch (error) {\n        console.error(\"表格解析错误:\", error);\n      }\n      return result;\n    };\n    const extractTitleFromHTML = html => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      return doc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null;\n    };\n\n    // 生命周期和监听\n    onMounted(() => {\n      updateChartSize();\n      window.addEventListener(\"resize\", updateChartSize);\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data, \"1\");\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data, \"2\");\n      });\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener(\"resize\", updateChartSize);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const updateChartSize = debounce(() => {\n      if (containerRef.value) {\n        chartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\n      }\n    }, 100);\n\n    // 监听表格数据变化\n    watch(() => props.div1RawData, html => {\n      processedTable1.value = parseTableToStandardJSON(html, \"表格1\");\n    }, {\n      immediate: true\n    });\n    watch(() => props.div3RawData, html => {\n      processedTable2.value = parseTableToStandardJSON(html, \"表格2\");\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      showInfoboxData,\n      infoboxDataReady,\n      tableDataReady,\n      containerRef,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftChartColor,\n      rightChartColor,\n      processedTable1,\n      processedTable2,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentAttribute,\n      currentSide,\n      currentChartData,\n      COMPARABLE_FIELDS,\n      leftTitle,\n      rightTitle,\n      displayFields,\n      hasData,\n      getField,\n      getVisualizationData,\n      getVisualizationType,\n      getVisualizationConfig,\n      getFieldDescription,\n      getFieldUnit,\n      convertToVisualizationData,\n      hasDataForAttribute,\n      hasDataForCurrentSource,\n      switchToInfoboxData,\n      switchToTableData,\n      showFullChart,\n      hideFullChart,\n      processInfoboxData,\n      parseTableToStandardJSON,\n      extractTitleFromHTML,\n      updateChartSize,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      DataVisualization,\n      get debounce() {\n        return debounce;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","DataVisualization","debounce","bus","showInfoboxData","infoboxDataReady","tableDataReady","containerRef","chartMaxWidth","chartMaxHeight","leftChartColor","rightChartColor","processedTable1","title","timeSeriesData","processedTable2","leftInfobox","data","rightInfobox","showFullChartModal","currentAttribute","currentSide","currentChartData","type","config","COMPARABLE_FIELDS","key","typeLabel","chartType","leftTitle","value","rightTitle","displayFields","filter","field","hasDataForCurrentSource","commonAttrs","Object","keys","attr","hasDataForAttribute","map","length","hasData","getField","infobox","fieldKey","section","values","undefined","cleanKey","toLowerCase","replace","matchedKey","find","k","getVisualizationData","side","fieldData","convertToVisualizationData","table","getVisualizationType","getVisualizationConfig","baseConfig","color","maxWidth","maxHeight","showYearMarkers","description","getFieldDescription","unit","getFieldUnit","Array","isArray","item","text","join","String","some","percentage","name","category","year","Date","getFullYear","parseFloat","isNaN","numericValue","switchToInfoboxData","switchToTableData","showFullChart","f","fullscreen","hideFullChart","processInfoboxData","sections","parseTableToStandardJSON","html","defaultTitle","arguments","result","parser","DOMParser","doc","parseFromString","querySelector","headerCells","children","headers","from","cell","textContent","trim","yearColumnIndex","findIndex","h","includes","dataRows","querySelectorAll","forEach","row","cells","parseInt","header","index","push","sort","a","b","extractTitleFromHTML","error","console","updateChartSize","window","addEventListener","on","removeEventListener","off","Math","min","clientWidth","props","div1RawData","immediate","div3RawData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<DataVisualization\r\n\t\t\t\t\t\t\t:data=\"getVisualizationData(field.key, 'left')\"\r\n\t\t\t\t\t\t\t:type=\"getVisualizationType(field)\"\r\n\t\t\t\t\t\t\t:config=\"getVisualizationConfig(field, 'left')\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<DataVisualization\r\n\t\t\t\t\t\t\t:data=\"getVisualizationData(field.key, 'right')\"\r\n\t\t\t\t\t\t\t:type=\"getVisualizationType(field)\"\r\n\t\t\t\t\t\t\t:config=\"getVisualizationConfig(field, 'right')\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div v-for=\"i in 3\" :key=\"i\" class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'m' + i\"\r\n\t\t\t\t\tclass=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'r' + i\"\r\n\t\t\t\t\tclass=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToInfoboxData\"\r\n\t\t\t\t:class=\"{ active: showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!infoboxDataReady\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"switchToTableData\"\r\n\t\t\t\t:class=\"{ active: !showInfoboxData }\"\r\n\t\t\t\t:disabled=\"!tableDataReady\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<DataVisualization\r\n\t\t\t\t\t:data=\"currentChartData.data\"\r\n\t\t\t\t\t:type=\"currentChartData.type\"\r\n\t\t\t\t\t:config=\"currentChartData.config\"\r\n\t\t\t\t\tfullscreen-mode />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport DataVisualization from \"./DataVisualization.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// 数据源状态\r\n\tconst showInfoboxData = ref(true);\r\n\tconst infoboxDataReady = ref(false);\r\n\tconst tableDataReady = ref(false);\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 数据存储\r\n\tconst processedTable1 = ref({ title: \"表格1\", timeSeriesData: {} });\r\n\tconst processedTable2 = ref({ title: \"表格2\", timeSeriesData: {} });\r\n\tconst leftInfobox = ref({ title: \"Infobox 1\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"Infobox 2\", data: {} });\r\n\r\n\t// 弹窗状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentSide = ref(\"left\");\r\n\tconst currentChartData = ref({\r\n\t\tdata: [],\r\n\t\ttype: \"line\",\r\n\t\tconfig: {}\r\n\t});\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tchartType: \"pie\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tchartType: \"text\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 计算属性\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(\r\n\t\t\t\tfield =>\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"left\") ||\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"right\")\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst commonAttrs = Object.keys(\r\n\t\t\t\tprocessedTable1.value.timeSeriesData || {}\r\n\t\t\t).filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\thasDataForAttribute(processedTable1.value, attr) &&\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr)\r\n\t\t\t);\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\",\r\n\t\t\t\tchartType: commonAttrs.length <= 3 ? \"bar\" : \"line\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn displayFields.value.length > 0;\r\n\t});\r\n\r\n\t// 数据获取方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst getVisualizationData = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\t\treturn convertToVisualizationData(fieldData);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn table.timeSeriesData[fieldKey] || [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst getVisualizationType = field => {\r\n\t\treturn field.chartType || \"line\";\r\n\t};\r\n\r\n\tconst getVisualizationConfig = (field, side) => {\r\n\t\tconst baseConfig = {\r\n\t\t\tcolor: side === \"left\" ? leftChartColor.value : rightChartColor.value,\r\n\t\t\tmaxWidth: chartMaxWidth.value,\r\n\t\t\tmaxHeight: chartMaxHeight.value,\r\n\t\t\tshowYearMarkers: !showInfoboxData.value\r\n\t\t};\r\n\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\tconst fieldData = getField(infobox, field.key);\r\n\t\t\treturn {\r\n\t\t\t\t...baseConfig,\r\n\t\t\t\ttitle: field.key,\r\n\t\t\t\tdescription: getFieldDescription(field.key, side),\r\n\t\t\t\tunit: getFieldUnit(fieldData)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn baseConfig;\r\n\t};\r\n\r\n\tconst getFieldDescription = (fieldKey, side) => {\r\n\t\tif (!showInfoboxData.value) return \"\";\r\n\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\tif (!fieldData) return \"\";\r\n\r\n\t\tif (Array.isArray(fieldData)) {\r\n\t\t\treturn fieldData.map(item => item.text || item.value).join(\", \");\r\n\t\t}\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\treturn fieldData.text || fieldData.value || \"\";\r\n\t\t}\r\n\t\treturn String(fieldData);\r\n\t};\r\n\r\n\tconst getFieldUnit = fieldData => {\r\n\t\tif (!fieldData) return \"\";\r\n\t\tif (Array.isArray(fieldData)) {\r\n\t\t\treturn fieldData[0]?.unit || \"\";\r\n\t\t}\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\treturn fieldData.unit || \"\";\r\n\t\t}\r\n\t\treturn \"\";\r\n\t};\r\n\r\n\t// 数据转换方法\r\n\tconst convertToVisualizationData = data => {\r\n\t\tif (!data) return [];\r\n\r\n\t\t// 处理百分比数据 (饼图)\r\n\t\tif (Array.isArray(data) && data.some(item => item.percentage)) {\r\n\t\t\treturn data.map(item => ({\r\n\t\t\t\tname: item.name || item.category || item.text || \"项目\",\r\n\t\t\t\tvalue: item.percentage || item.value || 0,\r\n\t\t\t\tcolor: item.color\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\t// 处理数组类型数据\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\treturn data\r\n\t\t\t\t.map(item => ({\r\n\t\t\t\t\tyear: item.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(item.value) || 0,\r\n\t\t\t\t\tname: item.name || item.text || \"\"\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\t// 处理对象类型数据\r\n\t\tif (typeof data === \"object\" && data !== null) {\r\n\t\t\tif (data.percentage !== undefined) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: data.name || data.category || data.text || \"项目\",\r\n\t\t\t\t\t\tvalue: parseFloat(data.percentage) || 0,\r\n\t\t\t\t\t\tcolor: data.color\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\tconst value = parseFloat(data.value) || 0;\r\n\t\t\tif (isNaN(value)) return [];\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tname: data.name || data.text || \"\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tconst numericValue = parseFloat(data);\r\n\t\tif (isNaN(numericValue)) return [];\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\tvalue: numericValue,\r\n\t\t\t\tname: \"\"\r\n\t\t\t}\r\n\t\t];\r\n\t};\r\n\r\n\t// 数据检查方法\r\n\tconst hasDataForAttribute = (table, attr) => {\r\n\t\treturn table.timeSeriesData?.[attr]?.length > 0;\r\n\t};\r\n\r\n\tconst hasDataForCurrentSource = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\treturn !!getField(infobox, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn hasDataForAttribute(table, fieldKey);\r\n\t\t}\r\n\t};\r\n\r\n\t// 数据源切换方法\r\n\tconst switchToInfoboxData = () => {\r\n\t\tshowInfoboxData.value = true;\r\n\t};\r\n\r\n\tconst switchToTableData = () => {\r\n\t\tshowInfoboxData.value = false;\r\n\t};\r\n\r\n\t// 图表相关方法\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tconst field = displayFields.value.find(f => f.key === attr) || {};\r\n\r\n\t\tcurrentChartData.value = {\r\n\t\t\tdata: getVisualizationData(attr, side),\r\n\t\t\ttype: getVisualizationType(field),\r\n\t\t\tconfig: {\r\n\t\t\t\t...getVisualizationConfig(field, side),\r\n\t\t\t\tfullscreen: true,\r\n\t\t\t\ttitle: attr\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 数据处理方法\r\n\tconst processInfoboxData = (data, side) => {\r\n\t\tif (!data) return { title: `Infobox ${side}`, data: {} };\r\n\r\n\t\tinfoboxDataReady.value = true;\r\n\t\treturn {\r\n\t\t\ttitle: data.title || `Infobox ${side}`,\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tconst parseTableToStandardJSON = (html, defaultTitle = \"未命名表格\") => {\r\n\t\tconst result = {\r\n\t\t\ttitle: defaultTitle,\r\n\t\t\ttimeSeriesData: {}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headerCells = table.querySelector(\"tr\")?.children || [];\r\n\t\t\tconst headers = Array.from(headerCells).map(cell =>\r\n\t\t\t\tcell.textContent\r\n\t\t\t\t\t.replace(/[\\n†*]/g, \"\")\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t);\r\n\r\n\t\t\t// 检查年份列\r\n\t\t\tconst yearColumnIndex = headers.findIndex(h =>\r\n\t\t\t\th.toLowerCase().includes(\"year\")\r\n\t\t\t);\r\n\t\t\tif (yearColumnIndex === -1) return result;\r\n\r\n\t\t\t// 处理数据行\r\n\t\t\tconst dataRows = Array.from(\r\n\t\t\t\ttable.querySelectorAll(\"tr:not(:first-child)\")\r\n\t\t\t);\r\n\r\n\t\t\tdataRows.forEach(row => {\r\n\t\t\t\tconst cells = Array.from(row.children);\r\n\t\t\t\tif (cells.length <= yearColumnIndex) return;\r\n\r\n\t\t\t\tconst year = parseInt(\r\n\t\t\t\t\tcells[yearColumnIndex].textContent.replace(/\\D/g, \"\")\r\n\t\t\t\t);\r\n\t\t\t\tif (isNaN(year)) return;\r\n\r\n\t\t\t\theaders.forEach((header, index) => {\r\n\t\t\t\t\tif (index === yearColumnIndex || index >= cells.length) return;\r\n\r\n\t\t\t\t\tconst value = parseFloat(\r\n\t\t\t\t\t\tcells[index].textContent.replace(/[^\\d.-]/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (isNaN(value)) return;\r\n\r\n\t\t\t\t\tif (!result.timeSeriesData[header]) {\r\n\t\t\t\t\t\tresult.timeSeriesData[header] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult.timeSeriesData[header].push({\r\n\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tname: cells[0].textContent.trim()\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// 排序\r\n\t\t\tObject.values(result.timeSeriesData).forEach(data => {\r\n\t\t\t\tdata.sort((a, b) => a.year - b.year);\r\n\t\t\t});\r\n\r\n\t\t\t// 提取标题\r\n\t\t\tresult.title = extractTitleFromHTML(html) || defaultTitle;\r\n\t\t\ttableDataReady.value = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst extractTitleFromHTML = html => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn (\r\n\t\t\tdoc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null\r\n\t\t);\r\n\t};\r\n\r\n\t// 生命周期和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data, \"1\");\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data, \"2\");\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 样式部分保持不变，与之前相同 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-description {\r\n\t\tmargin-top: 5px;\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.empty-cell {\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 12px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.data-source-switcher button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.modal-header h3 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.field-description {\r\n\t\t\tfont-size: 11px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}