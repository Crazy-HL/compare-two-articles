{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"icon\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"icon close\",\n  viewBox: \"0 0 24 24\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M6 18L18 6M6 6l12 12\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  class: \"outline\"\n};\nconst _hoisted_8 = [\"href\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 大纲切换按钮 \"), _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"toggle-btn\",\n    style: _normalizeStyle($setup.buttonStyle)\n  }, [!$setup.isVisible ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, [..._hoisted_3])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_4, [..._hoisted_6]))], 4 /* STYLE */), _createCommentVNode(\" 大纲内容 \"), $setup.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"outline-container\",\n    style: _normalizeStyle($setup.outlineStyle)\n  }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: _normalizeClass({\n        highlight: $setup.isLinked(item),\n        linked: $setup.isLinked(item)\n      }),\n      style: _normalizeStyle({\n        paddingLeft: `${(item.level - 1) * 15}px`\n      })\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id,\n      onClick: _withModifiers($event => $setup.scrollToChapter(item.id), [\"prevent\"])\n    }, _toDisplayString(item.text), 9 /* TEXT, PROPS */, _hoisted_8)], 6 /* CLASS, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","viewBox","_createElementVNode","fill","d","_hoisted_2","_hoisted_5","_createElementBlock","_Fragment","_createCommentVNode","onClick","$setup","toggleOutline","style","_normalizeStyle","buttonStyle","isVisible","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_6","outlineStyle","_hoisted_7","_renderList","outline","item","index","id","_normalizeClass","highlight","isLinked","linked","paddingLeft","level","href","_withModifiers","$event","scrollToChapter","text","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ highlight: isLinked(item), linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String, // \"div1\" 或 \"div3\"\r\n\t\tlinkedOutline: Array // 关联的大纲数据\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\tconst linkedChapters = ref({}); // 存储两篇文章中匹配的章节\r\n\tconst isSyncing = ref(false); // 避免死循环同步滚动\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = content => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${props.divId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent.trim(), level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **计算两个标题的相似度（Jaccard）**\r\n\tconst calculateSimilarity = (text1, text2) => {\r\n\t\tconst set1 = new Set(text1.toLowerCase().split(/\\s+/));\r\n\t\tconst set2 = new Set(text2.toLowerCase().split(/\\s+/));\r\n\t\tconst intersection = new Set([...set1].filter(x => set2.has(x)));\r\n\t\tconst union = new Set([...set1, ...set2]);\r\n\t\treturn intersection.size / union.size;\r\n\t};\r\n\r\n\t// **匹配两篇文章的相似章节**\r\n\tconst matchChapters = (outline1, outline2) => {\r\n\t\tconst matched = {};\r\n\t\toutline1.forEach(chapter1 => {\r\n\t\t\tlet bestMatch = null;\r\n\t\t\tlet bestScore = 0;\r\n\r\n\t\t\toutline2.forEach(chapter2 => {\r\n\t\t\t\tconst similarity = calculateSimilarity(chapter1.text, chapter2.text);\r\n\t\t\t\tif (similarity > 0.6 && similarity > bestScore) {\r\n\t\t\t\t\t// 设定阈值 0.6\r\n\t\t\t\t\tbestScore = similarity;\r\n\t\t\t\t\tbestMatch = chapter2.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (bestMatch) {\r\n\t\t\t\tmatched[chapter1.id] = bestMatch;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn matched;\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tasync newContent => {\r\n\t\t\toutline.value = extractOutline(newContent);\r\n\t\t\tawait nextTick();\r\n\r\n\t\t\tif (props.divId === \"div1\") {\r\n\t\t\t\tlinkedChapters.value = matchChapters(\r\n\t\t\t\t\toutline.value,\r\n\t\t\t\t\textractOutline(document.getElementById(\"div3\")?.innerHTML)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlinkedChapters.value = matchChapters(\r\n\t\t\t\t\toutline.value,\r\n\t\t\t\t\textractOutline(document.getElementById(\"div1\")?.innerHTML)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item => {\r\n\t\treturn linkedChapters.value[item.id] !== undefined;\r\n\t};\r\n\r\n\t// **滚动到章节，同时同步另一篇文章**\r\n\tconst scrollToChapter = id => {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) {\r\n\t\t\telement.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t\t// 获取关联章节\r\n\t\t\tconst linkedId = linkedChapters.value[id];\r\n\t\t\tif (linkedId) {\r\n\t\t\t\tconst linkedElement = document.getElementById(linkedId);\r\n\t\t\t\tif (linkedElement) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tlinkedElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t\t\t}, 200); // 延迟确保滚动不会冲突\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **监听文章滚动，同步另一篇**\r\n\tconst handleScroll = () => {\r\n\t\tif (isSyncing.value) return;\r\n\t\tisSyncing.value = true;\r\n\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (!referenceElement) return;\r\n\r\n\t\t// 获取当前可见章节\r\n\t\tlet currentChapter = null;\r\n\t\toutline.value.forEach(chapter => {\r\n\t\t\tconst element = document.getElementById(chapter.id);\r\n\t\t\tif (element) {\r\n\t\t\t\tconst rect = element.getBoundingClientRect();\r\n\t\t\t\tif (rect.top >= 0 && rect.top < window.innerHeight / 2) {\r\n\t\t\t\t\tcurrentChapter = chapter.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (currentChapter && linkedChapters.value[currentChapter]) {\r\n\t\t\tconst linkedElement = document.getElementById(\r\n\t\t\t\tlinkedChapters.value[currentChapter]\r\n\t\t\t);\r\n\t\t\tif (linkedElement) {\r\n\t\t\t\tlinkedElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tisSyncing.value = false;\r\n\t\t}, 300);\r\n\t};\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement) {\r\n\t\t\treferenceElement.addEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t});\r\n\r\n\t// **组件销毁时移除事件**\r\n\tonUnmounted(() => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement) {\r\n\t\t\treferenceElement.removeEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t});\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;EAGyBC,KAAK,EAAC,MAAM;EAACC,OAAO,EAAC;;gCAC3CC,mBAAA,CAEyD;EADxDC,IAAI,EAAC,cAAc;EACnBC,CAAC,EAAC;;oBAFHC,UAEyD,C;;EAN5DN,GAAA;EAQcC,KAAK,EAAC,YAAY;EAACC,OAAO,EAAC;;gCACtCC,mBAAA,CAA0D;EAApDC,IAAI,EAAC,cAAc;EAACC,CAAC,EAAC;;oBAA5BE,UAA0D,C;;EAMtDN,KAAK,EAAC;AAAS;mBAftB;;uBAAAO,mBAAA,CAAAC,SAAA,SACCC,mBAAA,YAAe,EACfP,mBAAA,CASS;IATAQ,OAAK,EAAEC,MAAA,CAAAC,aAAa;IAAEZ,KAAK,EAAC,YAAY;IAAEa,KAAK,EAFzDC,eAAA,CAE2DH,MAAA,CAAAI,WAAW;OACxDJ,MAAA,CAAAK,SAAS,I,cAArBT,mBAAA,CAIM,OAJNU,UAIM,EAPR,IAAAC,UAAA,O,cAQEX,mBAAA,CAEM,OAFNY,UAEM,EAVR,IAAAC,UAAA,I,kBAaCX,mBAAA,UAAa,EACFE,MAAA,CAAAK,SAAS,I,cAApBT,mBAAA,CAcM;IA5BPR,GAAA;IAcuBC,KAAK,EAAC,mBAAmB;IAAEa,KAAK,EAdvDC,eAAA,CAcyDH,MAAA,CAAAU,YAAY;MACnEnB,mBAAA,CAYM,OAZNoB,UAYM,GAXLpB,mBAAA,CAUK,c,kBATJK,mBAAA,CAQKC,SAAA,QAzBTe,WAAA,CAkB6BZ,MAAA,CAAAa,OAAO,EAlBpC,CAkBaC,IAAI,EAAEC,KAAK;yBADpBnB,mBAAA,CAQK;MANHR,GAAG,EAAE0B,IAAI,CAACE,EAAE;MACZ3B,KAAK,EApBX4B,eAAA;QAAAC,SAAA,EAoB0BlB,MAAA,CAAAmB,QAAQ,CAACL,IAAI;QAAAM,MAAA,EAAWpB,MAAA,CAAAmB,QAAQ,CAACL,IAAI;MAAA;MACzDZ,KAAK,EArBXC,eAAA;QAAAkB,WAAA,MAqBgCP,IAAI,CAACQ,KAAK;MAAA;QACrC/B,mBAAA,CAEM;MAFFgC,IAAI,QAAQT,IAAI,CAACE,EAAE;MAAGjB,OAAK,EAtBpCyB,cAAA,CAAAC,MAAA,IAsB8CzB,MAAA,CAAA0B,eAAe,CAACZ,IAAI,CAACE,EAAE;wBAC/DF,IAAI,CAACa,IAAI,wBAvBfC,UAAA,E;yDAAA9B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}