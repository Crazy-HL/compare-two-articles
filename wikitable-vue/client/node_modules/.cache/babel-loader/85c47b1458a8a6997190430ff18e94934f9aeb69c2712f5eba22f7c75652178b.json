{"ast":null,"code":"// highlight.js\n\n// 高亮选中的文本\nfunction highlightText(range) {\n  try {\n    const startNode = range.startContainer;\n    const endNode = range.endContainer;\n\n    // 确保选区是纯文本节点\n    if (startNode.nodeType === 3 && endNode.nodeType === 3) {\n      // 处理纯文本节点\n      const span = document.createElement(\"span\");\n      span.classList.add(\"highlight\");\n      range.surroundContents(span);\n    } else {\n      // 选区包含非文本节点，需要调整选区\n      adjustRange(range);\n    }\n  } catch (error) {\n    console.error(\"高亮处理失败:\", error);\n  }\n}\n\n// 调整选区：确保它只覆盖文本节点\nfunction adjustRange(range) {\n  const startContainer = range.startContainer;\n  const endContainer = range.endContainer;\n\n  // 如果起始节点不是文本节点，尝试将范围调整为最近的文本节点\n  if (startContainer.nodeType !== 3) {\n    range.setStart(startContainer, 0); // 设置为该节点的第一个文本节点\n  }\n\n  // 如果结束节点不是文本节点，尝试将范围调整为最近的文本节点\n  if (endContainer.nodeType !== 3) {\n    range.setEnd(endContainer, endContainer.childNodes.length);\n  }\n\n  // 现在可以安全地高亮文本\n  const span = document.createElement(\"span\");\n  span.classList.add(\"highlight\");\n  range.surroundContents(span);\n}\n\n// 序列化选区信息\nfunction serializeRange(range) {\n  return {\n    startContainer: range.startContainer.parentElement.outerHTML,\n    startOffset: range.startOffset,\n    endContainer: range.endContainer.parentElement.outerHTML,\n    endOffset: range.endOffset,\n    text: range.toString()\n  };\n}\n\n// 反序列化选区信息\nfunction deserializeRange(serialized) {\n  const pageContent = document.getElementById(\"pageContent\");\n  const walker = document.createTreeWalker(pageContent, NodeFilter.SHOW_TEXT);\n  let startNode, endNode;\n  while (walker.nextNode()) {\n    if (walker.currentNode.parentElement.outerHTML === serialized.startContainer) {\n      startNode = walker.currentNode;\n    }\n    if (walker.currentNode.parentElement.outerHTML === serialized.endContainer) {\n      endNode = walker.currentNode;\n    }\n  }\n  if (startNode && endNode) {\n    const range = document.createRange();\n    range.setStart(startNode, serialized.startOffset);\n    range.setEnd(endNode, serialized.endOffset);\n    return range;\n  }\n  return null;\n}\n\n// 保存高亮信息\nfunction saveHighlights(highlights) {\n  localStorage.setItem(\"highlights\", JSON.stringify(highlights));\n  console.log(\"高亮已保存！\");\n}\n\n// 加载高亮信息\nfunction loadHighlights() {\n  const savedHighlights = JSON.parse(localStorage.getItem(\"highlights\") || \"[]\");\n  return savedHighlights;\n}\n\n// 导出函数以便在其他地方调用\nexport default {\n  highlightText,\n  serializeRange,\n  deserializeRange,\n  saveHighlights,\n  loadHighlights\n};","map":{"version":3,"names":["highlightText","range","startNode","startContainer","endNode","endContainer","nodeType","span","document","createElement","classList","add","surroundContents","adjustRange","error","console","setStart","setEnd","childNodes","length","serializeRange","parentElement","outerHTML","startOffset","endOffset","text","toString","deserializeRange","serialized","pageContent","getElementById","walker","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","currentNode","createRange","saveHighlights","highlights","localStorage","setItem","JSON","stringify","log","loadHighlights","savedHighlights","parse","getItem"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/highlight.js"],"sourcesContent":["// highlight.js\r\n\r\n// 高亮选中的文本\r\nfunction highlightText(range) {\r\n  try {\r\n    const startNode = range.startContainer;\r\n    const endNode = range.endContainer;\r\n\r\n    // 确保选区是纯文本节点\r\n    if (startNode.nodeType === 3 && endNode.nodeType === 3) {\r\n      // 处理纯文本节点\r\n      const span = document.createElement(\"span\");\r\n      span.classList.add(\"highlight\");\r\n      range.surroundContents(span);\r\n    } else {\r\n      // 选区包含非文本节点，需要调整选区\r\n      adjustRange(range);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"高亮处理失败:\", error);\r\n  }\r\n}\r\n\r\n// 调整选区：确保它只覆盖文本节点\r\nfunction adjustRange(range) {\r\n  const startContainer = range.startContainer;\r\n  const endContainer = range.endContainer;\r\n\r\n  // 如果起始节点不是文本节点，尝试将范围调整为最近的文本节点\r\n  if (startContainer.nodeType !== 3) {\r\n    range.setStart(startContainer, 0); // 设置为该节点的第一个文本节点\r\n  }\r\n\r\n  // 如果结束节点不是文本节点，尝试将范围调整为最近的文本节点\r\n  if (endContainer.nodeType !== 3) {\r\n    range.setEnd(endContainer, endContainer.childNodes.length);\r\n  }\r\n\r\n  // 现在可以安全地高亮文本\r\n  const span = document.createElement(\"span\");\r\n  span.classList.add(\"highlight\");\r\n  range.surroundContents(span);\r\n}\r\n\r\n// 序列化选区信息\r\nfunction serializeRange(range) {\r\n  return {\r\n    startContainer: range.startContainer.parentElement.outerHTML,\r\n    startOffset: range.startOffset,\r\n    endContainer: range.endContainer.parentElement.outerHTML,\r\n    endOffset: range.endOffset,\r\n    text: range.toString()\r\n  };\r\n}\r\n\r\n// 反序列化选区信息\r\nfunction deserializeRange(serialized) {\r\n  const pageContent = document.getElementById(\"pageContent\");\r\n  const walker = document.createTreeWalker(\r\n    pageContent,\r\n    NodeFilter.SHOW_TEXT\r\n  );\r\n\r\n  let startNode, endNode;\r\n  while (walker.nextNode()) {\r\n    if (\r\n      walker.currentNode.parentElement.outerHTML ===\r\n      serialized.startContainer\r\n    ) {\r\n      startNode = walker.currentNode;\r\n    }\r\n    if (\r\n      walker.currentNode.parentElement.outerHTML ===\r\n      serialized.endContainer\r\n    ) {\r\n      endNode = walker.currentNode;\r\n    }\r\n  }\r\n\r\n  if (startNode && endNode) {\r\n    const range = document.createRange();\r\n    range.setStart(startNode, serialized.startOffset);\r\n    range.setEnd(endNode, serialized.endOffset);\r\n    return range;\r\n  }\r\n  return null;\r\n}\r\n\r\n// 保存高亮信息\r\nfunction saveHighlights(highlights) {\r\n  localStorage.setItem(\"highlights\", JSON.stringify(highlights));\r\n  console.log(\"高亮已保存！\");\r\n}\r\n\r\n// 加载高亮信息\r\nfunction loadHighlights() {\r\n  const savedHighlights = JSON.parse(\r\n    localStorage.getItem(\"highlights\") || \"[]\"\r\n  );\r\n  return savedHighlights;\r\n}\r\n\r\n// 导出函数以便在其他地方调用\r\nexport default {\r\n  highlightText,\r\n  serializeRange,\r\n  deserializeRange,\r\n  saveHighlights,\r\n  loadHighlights\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}