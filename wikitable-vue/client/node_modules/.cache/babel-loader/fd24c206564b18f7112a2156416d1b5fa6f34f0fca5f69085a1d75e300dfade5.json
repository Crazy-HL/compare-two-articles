{"ast":null,"code":"import { ref, onMounted, watch, computed } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'SparklineChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n      validator: value => {\n        if (!Array.isArray(value)) return false;\n        return value.every(item => item && typeof item.year !== \"undefined\" && typeof item.value !== \"undefined\");\n      }\n    },\n    width: {\n      type: Number,\n      default: 180\n    },\n    height: {\n      type: Number,\n      default: 80\n    },\n    margin: {\n      type: Object,\n      default: () => ({\n        top: 5,\n        right: 5,\n        bottom: 5,\n        left: 5\n      })\n    },\n    lineColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    dotColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true\n    },\n    showDots: {\n      type: Boolean,\n      default: true\n    },\n    curveType: {\n      type: String,\n      default: \"curveMonotoneX\",\n      validator: value => [\"curveLinear\", \"curveStep\", \"curveBasis\", \"curveCardinal\", \"curveMonotoneX\", \"curveCatmullRom\"].includes(value)\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartContainer = ref(null);\n    const tooltip = ref(null);\n    const innerWidth = computed(() => props.width - props.margin.left - props.margin.right);\n    const innerHeight = computed(() => props.height - props.margin.top - props.margin.bottom);\n    const sortedData = computed(() => {\n      if (!Array.isArray(props.data)) return [];\n      return [...props.data].filter(item => item && !isNaN(item.year) && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n    });\n    const xScale = computed(() => {\n      if (sortedData.value.length < 2) return null;\n      const years = sortedData.value.map(d => d.year);\n      return d3.scaleLinear().domain(d3.extent(years)).range([0, innerWidth.value]);\n    });\n    const yScale = computed(() => {\n      if (sortedData.value.length === 0) return null;\n      const values = sortedData.value.map(d => d.value);\n      const minValue = d3.min(values);\n      const maxValue = d3.max(values);\n      const padding = (maxValue - minValue) * 0.1; // 10% padding\n\n      return d3.scaleLinear().domain([minValue - padding, maxValue + padding]).range([innerHeight.value, 0]);\n    });\n    const lineGenerator = computed(() => {\n      if (!xScale.value || !yScale.value) return null;\n      return d3.line().x(d => xScale.value(d.year)).y(d => yScale.value(d.value)).curve(d3[props.curveType]);\n    });\n    const areaGenerator = computed(() => {\n      if (!xScale.value || !yScale.value) return null;\n      return d3.area().x(d => xScale.value(d.year)).y0(innerHeight.value).y1(d => yScale.value(d.value)).curve(d3[props.curveType]);\n    });\n    const formatValue = value => {\n      if (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\n      if (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\n      return value.toLocaleString();\n    };\n    const initChart = () => {\n      if (!chartContainer.value) return;\n\n      // Clear previous chart\n      d3.select(chartContainer.value).selectAll(\"*\").remove();\n\n      // Create SVG container\n      const svg = d3.select(chartContainer.value).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height).attr(\"viewBox\", `0 0 ${props.width} ${props.height}`).attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n      // Add clip path to prevent drawing outside the chart area\n      svg.append(\"defs\").append(\"clipPath\").attr(\"id\", \"chart-clip\").append(\"rect\").attr(\"width\", innerWidth.value).attr(\"height\", innerHeight.value);\n\n      // Create chart group with margins\n      const chart = svg.append(\"g\").attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\n\n      // Draw area (optional)\n      chart.append(\"path\").attr(\"class\", \"sparkline-area\").attr(\"d\", areaGenerator.value(sortedData.value)).attr(\"fill\", props.lineColor).attr(\"fill-opacity\", 0.1).attr(\"clip-path\", \"url(#chart-clip)\");\n\n      // Draw line\n      chart.append(\"path\").attr(\"class\", \"sparkline-line\").attr(\"d\", lineGenerator.value(sortedData.value)).attr(\"stroke\", props.lineColor).attr(\"stroke-width\", 2).attr(\"fill\", \"none\").attr(\"clip-path\", \"url(#chart-clip)\");\n\n      // Draw dots\n      if (props.showDots) {\n        chart.selectAll(\".sparkline-dot\").data(sortedData.value).enter().append(\"circle\").attr(\"class\", \"sparkline-dot\").attr(\"cx\", d => xScale.value(d.year)).attr(\"cy\", d => yScale.value(d.value)).attr(\"r\", 3).attr(\"fill\", props.dotColor).attr(\"clip-path\", \"url(#chart-clip)\");\n      }\n\n      // Add tooltip container\n      if (props.showTooltip) {\n        tooltip.value = chart.append(\"g\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).attr(\"pointer-events\", \"none\");\n        tooltip.value.append(\"rect\").attr(\"class\", \"tooltip-box\").attr(\"rx\", 4).attr(\"ry\", 4);\n        tooltip.value.append(\"text\").attr(\"class\", \"tooltip-year\").attr(\"x\", 6).attr(\"y\", 18);\n        tooltip.value.append(\"text\").attr(\"class\", \"tooltip-value\").attr(\"x\", 6).attr(\"y\", 36);\n\n        // Add invisible overlay for mouse events\n        chart.append(\"rect\").attr(\"class\", \"overlay\").attr(\"width\", innerWidth.value).attr(\"height\", innerHeight.value).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mouseover\", () => tooltip.value.style(\"opacity\", 1)).on(\"mouseout\", () => tooltip.value.style(\"opacity\", 0)).on(\"mousemove\", mousemove);\n\n        // Add vertical reference line\n        const referenceLine = chart.append(\"line\").attr(\"class\", \"reference-line\").attr(\"stroke\", \"#64748b\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"2,2\").attr(\"y1\", 0).attr(\"y2\", innerHeight.value).style(\"opacity\", 0);\n        function mousemove(event) {\n          const [mouseX] = d3.pointer(event);\n          const year = xScale.value.invert(mouseX);\n\n          // Find closest data point\n          const closest = d3.least(sortedData.value, d => Math.abs(xScale.value(d.year) - mouseX));\n          if (!closest) return;\n\n          // Position reference line\n          referenceLine.attr(\"x1\", xScale.value(closest.year)).attr(\"x2\", xScale.value(closest.year)).style(\"opacity\", 1);\n\n          // Update tooltip content\n          tooltip.value.select(\".tooltip-year\").text(`Year: ${closest.year}`);\n          tooltip.value.select(\".tooltip-value\").text(`Value: ${formatValue(closest.value)}`);\n\n          // Measure tooltip size\n          const tooltipText = tooltip.value.node().querySelectorAll(\"text\");\n          const bbox = tooltipText[0].getBBox();\n          const bbox2 = tooltipText[1].getBBox();\n          const tooltipWidth = Math.max(bbox.width, bbox2.width) + 12;\n          const tooltipHeight = bbox.height + bbox2.height + 16;\n\n          // Position tooltip\n          let x = xScale.value(closest.year) + 10;\n          let y = yScale.value(closest.value) - tooltipHeight / 2;\n\n          // Keep tooltip inside chart bounds\n          if (x + tooltipWidth > innerWidth.value) {\n            x = xScale.value(closest.year) - tooltipWidth - 10;\n          }\n          if (y < 0) y = 0;\n          if (y + tooltipHeight > innerHeight.value) {\n            y = innerHeight.value - tooltipHeight;\n          }\n\n          // Update tooltip position and size\n          tooltip.value.select(\".tooltip-box\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", tooltipWidth).attr(\"height\", tooltipHeight);\n          tooltip.value.select(\".tooltip-year\").attr(\"x\", x + 6).attr(\"y\", y + 18);\n          tooltip.value.select(\".tooltip-value\").attr(\"x\", x + 6).attr(\"y\", y + 36);\n          tooltip.value.attr(\"transform\", `translate(0,0)`);\n        }\n      }\n    };\n\n    // Watch for data changes and redraw\n    watch(() => [props.data, props.width, props.height], () => {\n      initChart();\n    }, {\n      deep: true\n    });\n\n    // Initialize chart on mount\n    onMounted(initChart);\n    const __returned__ = {\n      props,\n      chartContainer,\n      tooltip,\n      innerWidth,\n      innerHeight,\n      sortedData,\n      xScale,\n      yScale,\n      lineGenerator,\n      areaGenerator,\n      formatValue,\n      initChart,\n      ref,\n      onMounted,\n      watch,\n      computed,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","d3","props","__props","chartContainer","tooltip","innerWidth","width","margin","left","right","innerHeight","height","top","bottom","sortedData","Array","isArray","data","filter","item","isNaN","year","value","sort","a","b","xScale","length","years","map","d","scaleLinear","domain","extent","range","yScale","values","minValue","min","maxValue","max","padding","lineGenerator","line","x","y","curve","curveType","areaGenerator","area","y0","y1","formatValue","toFixed","toLocaleString","initChart","select","selectAll","remove","svg","append","attr","chart","lineColor","showDots","enter","dotColor","showTooltip","style","on","mousemove","referenceLine","event","mouseX","pointer","invert","closest","least","Math","abs","text","tooltipText","node","querySelectorAll","bbox","getBBox","bbox2","tooltipWidth","tooltipHeight","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/SparklineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"sparkline-container\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, computed } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => {\r\n\t\t\t\tif (!Array.isArray(value)) return false;\r\n\t\t\t\treturn value.every(\r\n\t\t\t\t\titem =>\r\n\t\t\t\t\t\titem &&\r\n\t\t\t\t\t\ttypeof item.year !== \"undefined\" &&\r\n\t\t\t\t\t\ttypeof item.value !== \"undefined\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\twidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 180\r\n\t\t},\r\n\t\theight: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 80\r\n\t\t},\r\n\t\tmargin: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ top: 5, right: 5, bottom: 5, left: 5 })\r\n\t\t},\r\n\t\tlineColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\tdotColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\tshowTooltip: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tshowDots: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tcurveType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"curveMonotoneX\",\r\n\t\t\tvalidator: value =>\r\n\t\t\t\t[\r\n\t\t\t\t\t\"curveLinear\",\r\n\t\t\t\t\t\"curveStep\",\r\n\t\t\t\t\t\"curveBasis\",\r\n\t\t\t\t\t\"curveCardinal\",\r\n\t\t\t\t\t\"curveMonotoneX\",\r\n\t\t\t\t\t\"curveCatmullRom\"\r\n\t\t\t\t].includes(value)\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst tooltip = ref(null);\r\n\r\n\tconst innerWidth = computed(\r\n\t\t() => props.width - props.margin.left - props.margin.right\r\n\t);\r\n\tconst innerHeight = computed(\r\n\t\t() => props.height - props.margin.top - props.margin.bottom\r\n\t);\r\n\r\n\tconst sortedData = computed(() => {\r\n\t\tif (!Array.isArray(props.data)) return [];\r\n\t\treturn [...props.data]\r\n\t\t\t.filter(item => item && !isNaN(item.year) && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\t});\r\n\r\n\tconst xScale = computed(() => {\r\n\t\tif (sortedData.value.length < 2) return null;\r\n\r\n\t\tconst years = sortedData.value.map(d => d.year);\r\n\t\treturn d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(years))\r\n\t\t\t.range([0, innerWidth.value]);\r\n\t});\r\n\r\n\tconst yScale = computed(() => {\r\n\t\tif (sortedData.value.length === 0) return null;\r\n\r\n\t\tconst values = sortedData.value.map(d => d.value);\r\n\t\tconst minValue = d3.min(values);\r\n\t\tconst maxValue = d3.max(values);\r\n\t\tconst padding = (maxValue - minValue) * 0.1; // 10% padding\r\n\r\n\t\treturn d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([minValue - padding, maxValue + padding])\r\n\t\t\t.range([innerHeight.value, 0]);\r\n\t});\r\n\r\n\tconst lineGenerator = computed(() => {\r\n\t\tif (!xScale.value || !yScale.value) return null;\r\n\r\n\t\treturn d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => xScale.value(d.year))\r\n\t\t\t.y(d => yScale.value(d.value))\r\n\t\t\t.curve(d3[props.curveType]);\r\n\t});\r\n\r\n\tconst areaGenerator = computed(() => {\r\n\t\tif (!xScale.value || !yScale.value) return null;\r\n\r\n\t\treturn d3\r\n\t\t\t.area()\r\n\t\t\t.x(d => xScale.value(d.year))\r\n\t\t\t.y0(innerHeight.value)\r\n\t\t\t.y1(d => yScale.value(d.value))\r\n\t\t\t.curve(d3[props.curveType]);\r\n\t});\r\n\r\n\tconst formatValue = value => {\r\n\t\tif (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\r\n\t\tif (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\r\n\t\treturn value.toLocaleString();\r\n\t};\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartContainer.value) return;\r\n\r\n\t\t// Clear previous chart\r\n\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\t// Create SVG container\r\n\t\tconst svg = d3\r\n\t\t\t.select(chartContainer.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", props.width)\r\n\t\t\t.attr(\"height\", props.height)\r\n\t\t\t.attr(\"viewBox\", `0 0 ${props.width} ${props.height}`)\r\n\t\t\t.attr(\"preserveAspectRatio\", \"xMidYMid meet\");\r\n\r\n\t\t// Add clip path to prevent drawing outside the chart area\r\n\t\tsvg\r\n\t\t\t.append(\"defs\")\r\n\t\t\t.append(\"clipPath\")\r\n\t\t\t.attr(\"id\", \"chart-clip\")\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"width\", innerWidth.value)\r\n\t\t\t.attr(\"height\", innerHeight.value);\r\n\r\n\t\t// Create chart group with margins\r\n\t\tconst chart = svg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\r\n\r\n\t\t// Draw area (optional)\r\n\t\tchart\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"class\", \"sparkline-area\")\r\n\t\t\t.attr(\"d\", areaGenerator.value(sortedData.value))\r\n\t\t\t.attr(\"fill\", props.lineColor)\r\n\t\t\t.attr(\"fill-opacity\", 0.1)\r\n\t\t\t.attr(\"clip-path\", \"url(#chart-clip)\");\r\n\r\n\t\t// Draw line\r\n\t\tchart\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"class\", \"sparkline-line\")\r\n\t\t\t.attr(\"d\", lineGenerator.value(sortedData.value))\r\n\t\t\t.attr(\"stroke\", props.lineColor)\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"clip-path\", \"url(#chart-clip)\");\r\n\r\n\t\t// Draw dots\r\n\t\tif (props.showDots) {\r\n\t\t\tchart\r\n\t\t\t\t.selectAll(\".sparkline-dot\")\r\n\t\t\t\t.data(sortedData.value)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"circle\")\r\n\t\t\t\t.attr(\"class\", \"sparkline-dot\")\r\n\t\t\t\t.attr(\"cx\", d => xScale.value(d.year))\r\n\t\t\t\t.attr(\"cy\", d => yScale.value(d.value))\r\n\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t.attr(\"fill\", props.dotColor)\r\n\t\t\t\t.attr(\"clip-path\", \"url(#chart-clip)\");\r\n\t\t}\r\n\r\n\t\t// Add tooltip container\r\n\t\tif (props.showTooltip) {\r\n\t\t\ttooltip.value = chart\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"tooltip\")\r\n\t\t\t\t.style(\"opacity\", 0)\r\n\t\t\t\t.attr(\"pointer-events\", \"none\");\r\n\r\n\t\t\ttooltip.value\r\n\t\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"class\", \"tooltip-box\")\r\n\t\t\t\t.attr(\"rx\", 4)\r\n\t\t\t\t.attr(\"ry\", 4);\r\n\r\n\t\t\ttooltip.value\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"class\", \"tooltip-year\")\r\n\t\t\t\t.attr(\"x\", 6)\r\n\t\t\t\t.attr(\"y\", 18);\r\n\r\n\t\t\ttooltip.value\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"class\", \"tooltip-value\")\r\n\t\t\t\t.attr(\"x\", 6)\r\n\t\t\t\t.attr(\"y\", 36);\r\n\r\n\t\t\t// Add invisible overlay for mouse events\r\n\t\t\tchart\r\n\t\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"class\", \"overlay\")\r\n\t\t\t\t.attr(\"width\", innerWidth.value)\r\n\t\t\t\t.attr(\"height\", innerHeight.value)\r\n\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t.attr(\"pointer-events\", \"all\")\r\n\t\t\t\t.on(\"mouseover\", () => tooltip.value.style(\"opacity\", 1))\r\n\t\t\t\t.on(\"mouseout\", () => tooltip.value.style(\"opacity\", 0))\r\n\t\t\t\t.on(\"mousemove\", mousemove);\r\n\r\n\t\t\t// Add vertical reference line\r\n\t\t\tconst referenceLine = chart\r\n\t\t\t\t.append(\"line\")\r\n\t\t\t\t.attr(\"class\", \"reference-line\")\r\n\t\t\t\t.attr(\"stroke\", \"#64748b\")\r\n\t\t\t\t.attr(\"stroke-width\", 1)\r\n\t\t\t\t.attr(\"stroke-dasharray\", \"2,2\")\r\n\t\t\t\t.attr(\"y1\", 0)\r\n\t\t\t\t.attr(\"y2\", innerHeight.value)\r\n\t\t\t\t.style(\"opacity\", 0);\r\n\r\n\t\t\tfunction mousemove(event) {\r\n\t\t\t\tconst [mouseX] = d3.pointer(event);\r\n\t\t\t\tconst year = xScale.value.invert(mouseX);\r\n\r\n\t\t\t\t// Find closest data point\r\n\t\t\t\tconst closest = d3.least(sortedData.value, d =>\r\n\t\t\t\t\tMath.abs(xScale.value(d.year) - mouseX)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!closest) return;\r\n\r\n\t\t\t\t// Position reference line\r\n\t\t\t\treferenceLine\r\n\t\t\t\t\t.attr(\"x1\", xScale.value(closest.year))\r\n\t\t\t\t\t.attr(\"x2\", xScale.value(closest.year))\r\n\t\t\t\t\t.style(\"opacity\", 1);\r\n\r\n\t\t\t\t// Update tooltip content\r\n\t\t\t\ttooltip.value.select(\".tooltip-year\").text(`Year: ${closest.year}`);\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-value\")\r\n\t\t\t\t\t.text(`Value: ${formatValue(closest.value)}`);\r\n\r\n\t\t\t\t// Measure tooltip size\r\n\t\t\t\tconst tooltipText = tooltip.value.node().querySelectorAll(\"text\");\r\n\t\t\t\tconst bbox = tooltipText[0].getBBox();\r\n\t\t\t\tconst bbox2 = tooltipText[1].getBBox();\r\n\t\t\t\tconst tooltipWidth = Math.max(bbox.width, bbox2.width) + 12;\r\n\t\t\t\tconst tooltipHeight = bbox.height + bbox2.height + 16;\r\n\r\n\t\t\t\t// Position tooltip\r\n\t\t\t\tlet x = xScale.value(closest.year) + 10;\r\n\t\t\t\tlet y = yScale.value(closest.value) - tooltipHeight / 2;\r\n\r\n\t\t\t\t// Keep tooltip inside chart bounds\r\n\t\t\t\tif (x + tooltipWidth > innerWidth.value) {\r\n\t\t\t\t\tx = xScale.value(closest.year) - tooltipWidth - 10;\r\n\t\t\t\t}\r\n\t\t\t\tif (y < 0) y = 0;\r\n\t\t\t\tif (y + tooltipHeight > innerHeight.value) {\r\n\t\t\t\t\ty = innerHeight.value - tooltipHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update tooltip position and size\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-box\")\r\n\t\t\t\t\t.attr(\"x\", x)\r\n\t\t\t\t\t.attr(\"y\", y)\r\n\t\t\t\t\t.attr(\"width\", tooltipWidth)\r\n\t\t\t\t\t.attr(\"height\", tooltipHeight);\r\n\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-year\")\r\n\t\t\t\t\t.attr(\"x\", x + 6)\r\n\t\t\t\t\t.attr(\"y\", y + 18);\r\n\r\n\t\t\t\ttooltip.value\r\n\t\t\t\t\t.select(\".tooltip-value\")\r\n\t\t\t\t\t.attr(\"x\", x + 6)\r\n\t\t\t\t\t.attr(\"y\", y + 36);\r\n\r\n\t\t\t\ttooltip.value.attr(\"transform\", `translate(0,0)`);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Watch for data changes and redraw\r\n\twatch(\r\n\t\t() => [props.data, props.width, props.height],\r\n\t\t() => {\r\n\t\t\tinitChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// Initialize chart on mount\r\n\tonMounted(initChart);\r\n</script>\r\n\r\n<style scoped>\r\n\t.sparkline-container {\r\n\t\tdisplay: inline-block;\r\n\t\tfont-family: system-ui, -apple-system, sans-serif;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-box) {\r\n\t\tfill: white;\r\n\t\tstroke: #e2e8f0;\r\n\t\tstroke-width: 1;\r\n\t\tfilter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-year) {\r\n\t\tfont-size: 12px;\r\n\t\tfont-weight: bold;\r\n\t\tfill: #334155;\r\n\t}\r\n\r\n\t.sparkline-container :deep(.tooltip-value) {\r\n\t\tfont-size: 12px;\r\n\t\tfill: #1e40af;\r\n\t\tfont-weight: 600;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}