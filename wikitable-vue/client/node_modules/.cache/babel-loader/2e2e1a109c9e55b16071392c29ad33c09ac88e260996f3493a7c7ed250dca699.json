{"ast":null,"code":"import { ref, watch, onMounted } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String,\n    // div1 或 div3\n    otherContent: String // 另一篇文章的 HTML 内容\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const similarChapters = ref([]); // 存储相似章节的标识\n\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **解析文章，提取 h1-h6 标题，并计算缩进级别**\n    const extractOutline = content => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\n        const id = `heading-${index}-${props.divId}`;\n        heading.id = id; // 确保 HTML 里有 ID\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **通过文本相似度计算相似章节**\n    const computeSimilarChapters = () => {\n      const content1 = props.content;\n      const content2 = props.otherContent;\n\n      // 这里可以添加相似度计算函数，例如余弦相似度等\n      // 假设计算结果返回一个数组，其中包含相似章节的ID（从另一篇文章中获得）\n\n      // 示例：将相似章节存储为该章节的ID\n      // 假设章节1和章节5是相似的\n      similarChapters.value = [\"heading-1-div1\", \"heading-5-div1\"]; // 对应 div1 中的相似章节\n    };\n\n    // **将相似章节标记在大纲中**\n    const markSimilarChapters = outline => {\n      return outline.map(item => {\n        // 如果该章节ID出现在相似章节数组中，则标记为相似\n        item.isSimilar = similarChapters.value.includes(item.id);\n        return item;\n      });\n    };\n\n    // **监听 content 变化，更新大纲**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent);\n      outline.value = markSimilarChapters(outline.value);\n    }, {\n      immediate: true\n    });\n\n    // 监听另一个文章内容的变化，计算并标记相似章节\n    watch(() => props.otherContent, newContent => {\n      computeSimilarChapters();\n      outline.value = markSimilarChapters(outline.value);\n    }, {\n      immediate: true\n    });\n    onMounted(() => {\n      outline.value = extractOutline(props.content);\n      outline.value = markSimilarChapters(outline.value);\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      similarChapters,\n      toggleOutline,\n      extractOutline,\n      computeSimilarChapters,\n      markSimilarChapters,\n      ref,\n      watch,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","__props","isVisible","outline","similarChapters","toggleOutline","value","extractOutline","content","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","divId","text","textContent","computeSimilarChapters","content1","content2","otherContent","markSimilarChapters","item","isSimilar","includes","newContent","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮（使用图标） -->\r\n\t<button\r\n\t\t@click=\"toggleOutline\"\r\n\t\t:class=\"['toggle-btn', divId === 'div1' ? 'right' : 'left']\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div\r\n\t\tv-if=\"isVisible\"\r\n\t\t:class=\"['outline-container', divId === 'div1' ? 'right' : 'left']\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<h2>文章大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"item in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t\t<!-- 如果有关联标记，显示关联图标 -->\r\n\t\t\t\t\t\t<span v-if=\"item.isSimilar\" class=\"similar-icon\">🔗</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String, // div1 或 div3\r\n\t\totherContent: String // 另一篇文章的 HTML 内容\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst similarChapters = ref([]); // 存储相似章节的标识\r\n\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题，并计算缩进级别**\r\n\tconst extractOutline = content => {\r\n\t\tif (!content) return [];\r\n\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\r\n\t\t\tconst id = `heading-${index}-${props.divId}`;\r\n\t\t\theading.id = id; // 确保 HTML 里有 ID\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **通过文本相似度计算相似章节**\r\n\tconst computeSimilarChapters = () => {\r\n\t\tconst content1 = props.content;\r\n\t\tconst content2 = props.otherContent;\r\n\r\n\t\t// 这里可以添加相似度计算函数，例如余弦相似度等\r\n\t\t// 假设计算结果返回一个数组，其中包含相似章节的ID（从另一篇文章中获得）\r\n\r\n\t\t// 示例：将相似章节存储为该章节的ID\r\n\t\t// 假设章节1和章节5是相似的\r\n\t\tsimilarChapters.value = [\"heading-1-div1\", \"heading-5-div1\"]; // 对应 div1 中的相似章节\r\n\t};\r\n\r\n\t// **将相似章节标记在大纲中**\r\n\tconst markSimilarChapters = outline => {\r\n\t\treturn outline.map(item => {\r\n\t\t\t// 如果该章节ID出现在相似章节数组中，则标记为相似\r\n\t\t\titem.isSimilar = similarChapters.value.includes(item.id);\r\n\t\t\treturn item;\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent);\r\n\t\t\toutline.value = markSimilarChapters(outline.value);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// 监听另一个文章内容的变化，计算并标记相似章节\r\n\twatch(\r\n\t\t() => props.otherContent,\r\n\t\tnewContent => {\r\n\t\t\tcomputeSimilarChapters();\r\n\t\t\toutline.value = markSimilarChapters(outline.value);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t\toutline.value = markSimilarChapters(outline.value);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.toggle-btn.right {\r\n\t\tright: 10px;\r\n\t}\r\n\r\n\t.toggle-btn.left {\r\n\t\tleft: 10px;\r\n\t}\r\n\r\n\t/* **鼠标悬停效果** */\r\n\t.toggle-btn:hover {\r\n\t\tbackground-color: #005f8a;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t/* **SVG 图标样式** */\r\n\t.icon {\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tfill: white;\r\n\t}\r\n\r\n\t.close {\r\n\t\twidth: 24px;\r\n\t\theight: 24px;\r\n\t}\r\n\r\n\t/* **大纲内容框** */\r\n\t.outline-container {\r\n\t\tposition: absolute;\r\n\t\ttop: 50px;\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline-container.right {\r\n\t\tright: 10px;\r\n\t}\r\n\r\n\t.outline-container.left {\r\n\t\tleft: 10px;\r\n\t}\r\n\r\n\t.outline h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **缩进不同级别的标题** */\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n\r\n\t/* **相似章节标记** */\r\n\t.similar-icon {\r\n\t\tcolor: #ff9800; /* 你可以选择其他颜色 */\r\n\t\tfont-size: 16px;\r\n\t\tmargin-left: 8px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAsCC,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;;;;;;;IAE3C,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,SAAS,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMM,OAAO,GAAGN,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMO,eAAe,GAAGP,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEjC,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MAC3BH,SAAS,CAACI,KAAK,GAAG,CAACJ,SAAS,CAACI,KAAK;IACnC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGC,OAAO,IAAI;MACjC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;MAEvB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMK,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAE/D,OAAOC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnD,MAAMC,KAAK,GAAGC,QAAQ,CAACH,OAAO,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,MAAMC,EAAE,GAAG,WAAWL,KAAK,IAAInB,KAAK,CAACyB,KAAK,EAAE;QAC5CP,OAAO,CAACM,EAAE,GAAGA,EAAE,CAAC,CAAC;QACjB,OAAO;UAAEA,EAAE;UAAEE,IAAI,EAAER,OAAO,CAACS,WAAW;UAAEP;QAAM,CAAC;MAChD,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;MACpC,MAAMC,QAAQ,GAAG7B,KAAK,CAACQ,OAAO;MAC9B,MAAMsB,QAAQ,GAAG9B,KAAK,CAAC+B,YAAY;;MAEnC;MACA;;MAEA;MACA;MACA3B,eAAe,CAACE,KAAK,GAAG,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC/D,CAAC;;IAED;IACA,MAAM0B,mBAAmB,GAAG7B,OAAO,IAAI;MACtC,OAAOA,OAAO,CAACc,GAAG,CAACgB,IAAI,IAAI;QAC1B;QACAA,IAAI,CAACC,SAAS,GAAG9B,eAAe,CAACE,KAAK,CAAC6B,QAAQ,CAACF,IAAI,CAACT,EAAE,CAAC;QACxD,OAAOS,IAAI;MACZ,CAAC,CAAC;IACH,CAAC;;IAED;IACAnC,KAAK,CACJ,MAAME,KAAK,CAACQ,OAAO,EACnB4B,UAAU,IAAI;MACbjC,OAAO,CAACG,KAAK,GAAGC,cAAc,CAAC6B,UAAU,CAAC;MAC1CjC,OAAO,CAACG,KAAK,GAAG0B,mBAAmB,CAAC7B,OAAO,CAACG,KAAK,CAAC;IACnD,CAAC,EACD;MAAE+B,SAAS,EAAE;IAAK,CACnB,CAAC;;IAED;IACAvC,KAAK,CACJ,MAAME,KAAK,CAAC+B,YAAY,EACxBK,UAAU,IAAI;MACbR,sBAAsB,CAAC,CAAC;MACxBzB,OAAO,CAACG,KAAK,GAAG0B,mBAAmB,CAAC7B,OAAO,CAACG,KAAK,CAAC;IACnD,CAAC,EACD;MAAE+B,SAAS,EAAE;IAAK,CACnB,CAAC;IAEDtC,SAAS,CAAC,MAAM;MACfI,OAAO,CAACG,KAAK,GAAGC,cAAc,CAACP,KAAK,CAACQ,OAAO,CAAC;MAC7CL,OAAO,CAACG,KAAK,GAAG0B,mBAAmB,CAAC7B,OAAO,CAACG,KAAK,CAAC;IACnD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}