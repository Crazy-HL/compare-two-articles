{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    sources: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 颜色集合\n    const colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\", \"#edc948\", \"#b07aa1\", \"#ff9da7\", \"#9c755f\", \"#bab0ac\"];\n\n    // 格式化数值显示\n    const formatNumber = function (value) {\n      let isPercentage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      const num = Number(value);\n      if (isNaN(num)) return \"0\";\n      return isPercentage ? num.toFixed(2) + \"%\" : num.toLocaleString();\n    };\n\n    // 处理合并数据\n    const processedData = computed(() => {\n      if (!props.isCombined || !Array.isArray(props.data)) return props.data;\n\n      // 获取所有唯一年份并排序\n      const allYears = [...new Set(props.data.map(item => item.year))].sort((a, b) => a - b);\n\n      // 按数据源分组\n      const seriesData = props.sources.map((source, index) => {\n        const sourceData = props.data.filter(item => item.source === source);\n        return {\n          name: source,\n          data: allYears.map(year => {\n            const point = sourceData.find(item => item.year === year);\n            return point ? {\n              value: point.value,\n              unit: point.unit || \"%\",\n              year: point.year\n            } : null;\n          }),\n          color: colorPalette[index % colorPalette.length]\n        };\n      });\n      return {\n        categories: allYears,\n        series: seriesData\n      };\n    });\n    const initChart = () => {\n      if (!chartEl.value) return;\n      chartInstance = echarts.init(chartEl.value);\n\n      // 处理合并图表数据\n      if (props.isCombined && processedData.value.categories) {\n        const option = {\n          tooltip: {\n            trigger: \"axis\",\n            formatter: params => {\n              return params.filter(param => param.value != null).map(param => {\n                const value = param.value?.value || param.value;\n                return `${param.seriesName}<br/>${param.axisValueLabel}: ${formatNumber(value)}`;\n              }).join(\"<br/>\");\n            }\n          },\n          legend: {\n            data: props.sources\n          },\n          xAxis: {\n            type: \"category\",\n            data: processedData.value.categories,\n            axisLabel: {\n              interval: 0,\n              rotate: processedData.value.categories.length > 5 ? 30 : 0\n            }\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value}%\"\n            }\n          },\n          series: processedData.value.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            smooth: true,\n            symbol: \"circle\",\n            symbolSize: 8,\n            itemStyle: {\n              color: series.color\n            },\n            lineStyle: {\n              width: 3\n            },\n            label: {\n              show: true,\n              formatter: params => {\n                return params.value ? formatNumber(params.value.value || params.value) : \"\";\n              }\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      }\n      // 处理普通折线图数据\n      else if (Array.isArray(props.data)) {\n        const option = {\n          tooltip: {\n            trigger: \"axis\",\n            formatter: params => {\n              return params.map(param => {\n                let tip = `${param.seriesName}<br/>${param.axisValueLabel}: ${formatNumber(param.value, true)}`;\n                if (param.data?.unit) tip += ` ${param.data.unit}`;\n                return tip;\n              }).join(\"<br/>\");\n            }\n          },\n          xAxis: {\n            type: \"category\",\n            data: [...new Set(props.data.map(item => item.year))],\n            // 去重年份\n            axisLabel: {\n              interval: 0,\n              rotate: props.data.length > 5 ? 30 : 0\n            }\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value}%\"\n            }\n          },\n          series: [{\n            name: \"数据\",\n            data: props.data.map(item => ({\n              value: Number(item.value) || 0,\n              unit: item.unit || \"%\",\n              isPercentage: true\n            })),\n            type: \"line\",\n            smooth: true,\n            symbol: \"circle\",\n            symbolSize: 8,\n            itemStyle: {\n              color: \"#3498db\"\n            },\n            lineStyle: {\n              width: 3\n            },\n            label: {\n              show: true,\n              formatter: params => {\n                return formatNumber(params.value);\n              }\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n\n      // 添加窗口大小变化监听\n      window.addEventListener(\"resize\", handleResize);\n    };\n    const handleResize = () => {\n      if (chartInstance) {\n        chartInstance.resize();\n      }\n    };\n    onMounted(() => {\n      initChart();\n    });\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n    watch(() => [props.data, props.isCombined, props.sources], () => {\n      if (chartInstance) {\n        initChart();\n      }\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      formatNumber,\n      processedData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","computed","echarts","props","__props","chartEl","chartInstance","colorPalette","formatNumber","value","isPercentage","arguments","length","undefined","num","Number","isNaN","toFixed","toLocaleString","processedData","isCombined","Array","isArray","data","allYears","Set","map","item","year","sort","a","b","seriesData","sources","source","index","sourceData","filter","name","point","find","unit","color","categories","series","initChart","init","option","tooltip","trigger","formatter","params","param","seriesName","axisValueLabel","join","legend","xAxis","type","axisLabel","interval","rotate","yAxis","smooth","symbol","symbolSize","itemStyle","lineStyle","width","label","show","setOption","tip","window","addEventListener","handleResize","resize","dispose","removeEventListener","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 颜色集合\r\n\tconst colorPalette = [\r\n\t\t\"#4e79a7\",\r\n\t\t\"#e15759\",\r\n\t\t\"#76b7b2\",\r\n\t\t\"#f28e2b\",\r\n\t\t\"#59a14f\",\r\n\t\t\"#edc948\",\r\n\t\t\"#b07aa1\",\r\n\t\t\"#ff9da7\",\r\n\t\t\"#9c755f\",\r\n\t\t\"#bab0ac\"\r\n\t];\r\n\r\n\t// 格式化数值显示\r\n\tconst formatNumber = (value, isPercentage = true) => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\t\treturn isPercentage ? num.toFixed(2) + \"%\" : num.toLocaleString();\r\n\t};\r\n\r\n\t// 处理合并数据\r\n\tconst processedData = computed(() => {\r\n\t\tif (!props.isCombined || !Array.isArray(props.data)) return props.data;\r\n\r\n\t\t// 获取所有唯一年份并排序\r\n\t\tconst allYears = [...new Set(props.data.map(item => item.year))].sort(\r\n\t\t\t(a, b) => a - b\r\n\t\t);\r\n\r\n\t\t// 按数据源分组\r\n\t\tconst seriesData = props.sources.map((source, index) => {\r\n\t\t\tconst sourceData = props.data.filter(item => item.source === source);\r\n\t\t\treturn {\r\n\t\t\t\tname: source,\r\n\t\t\t\tdata: allYears.map(year => {\r\n\t\t\t\t\tconst point = sourceData.find(item => item.year === year);\r\n\t\t\t\t\treturn point\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\tvalue: point.value,\r\n\t\t\t\t\t\t\t\tunit: point.unit || \"%\",\r\n\t\t\t\t\t\t\t\tyear: point.year\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\t}),\r\n\t\t\t\tcolor: colorPalette[index % colorPalette.length]\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tcategories: allYears,\r\n\t\t\tseries: seriesData\r\n\t\t};\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t// 处理合并图表数据\r\n\t\tif (props.isCombined && processedData.value.categories) {\r\n\t\t\tconst option = {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn params\r\n\t\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\t\tconst value = param.value?.value || param.value;\r\n\t\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${\r\n\t\t\t\t\t\t\t\t\tparam.axisValueLabel\r\n\t\t\t\t\t\t\t\t}: ${formatNumber(value)}`;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdata: props.sources\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tdata: processedData.value.categories,\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\t\trotate: processedData.value.categories.length > 5 ? 30 : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: \"value\",\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tseries: processedData.value.series.map(series => ({\r\n\t\t\t\t\tname: series.name,\r\n\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\treturn params.value\r\n\t\t\t\t\t\t\t\t? formatNumber(params.value.value || params.value)\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\t\t// 处理普通折线图数据\r\n\t\telse if (Array.isArray(props.data)) {\r\n\t\t\tconst option = {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn params\r\n\t\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\t\tlet tip = `${param.seriesName}<br/>${\r\n\t\t\t\t\t\t\t\t\tparam.axisValueLabel\r\n\t\t\t\t\t\t\t\t}: ${formatNumber(param.value, true)}`;\r\n\t\t\t\t\t\t\t\tif (param.data?.unit) tip += ` ${param.data.unit}`;\r\n\t\t\t\t\t\t\t\treturn tip;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tdata: [...new Set(props.data.map(item => item.year))], // 去重年份\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\t\trotate: props.data.length > 5 ? 30 : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: \"value\",\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\tdata: props.data.map(item => ({\r\n\t\t\t\t\t\t\tvalue: Number(item.value) || 0,\r\n\t\t\t\t\t\t\tunit: item.unit || \"%\",\r\n\t\t\t\t\t\t\tisPercentage: true\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tcolor: \"#3498db\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\twidth: 3\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\t\treturn formatNumber(params.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\r\n\t\t// 添加窗口大小变化监听\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\tconst handleResize = () => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.resize();\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined, props.sources],\r\n\t\t() => {\r\n\t\t\tif (chartInstance) {\r\n\t\t\t\tinitChart();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 300px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}