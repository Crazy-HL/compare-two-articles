{"ast":null,"code":"import { computed } from \"vue\";\nimport PieChart from \"./charts/PieChart.vue\";\nimport BarChart from \"./charts/BarChart.vue\";\nimport LineChart from \"./charts/LineChart.vue\";\nexport default {\n  __name: 'FullChart',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 数据预处理（统一数据结构）\n    const normalizedData = computed(() => {\n      if (!props.field) return [];\n\n      // 处理数组数据\n      if (Array.isArray(props.field)) {\n        return props.field.map(item => normalizeItem(item));\n      }\n\n      // 处理单条数据\n      return [normalizeItem(props.field)];\n    });\n\n    // 统一数据结构\n    const normalizeItem = item => {\n      // 已经是标准格式\n      if (typeof item === \"object\" && item !== null && (\"value\" in item || \"raw\" in item)) {\n        return {\n          value: item.value ?? null,\n          raw: item.raw ?? String(item.value) ?? \"\",\n          unit: item.unit ?? null,\n          year: item.year ?? null,\n          currency: item.currency ?? null,\n          extracted: item.extracted ?? false\n        };\n      }\n\n      // 原始值处理\n      return {\n        value: typeof item === \"number\" ? item : null,\n        raw: String(item),\n        unit: null,\n        year: null,\n        currency: null,\n        extracted: false\n      };\n    };\n\n    // 格式化显示值（带单位）\n    const formatDisplayValue = item => {\n      if (!item) return \"-\";\n\n      // 优先使用raw字段\n      if (item.raw) {\n        let text = item.raw;\n        if (item.unit) text += ` ${item.unit}`;\n        if (item.year) text += ` (${item.year})`;\n        return text;\n      }\n\n      // 数值格式化\n      if (item.value !== null) {\n        let num = item.value;\n        let text = \"\";\n\n        // 百分比处理\n        if (props.type === \"percentage\") {\n          return `${num > 0 ? \"+\" : \"\"}${num.toFixed(1)}%`;\n        }\n\n        // 大数值格式化\n        if (Math.abs(num) >= 100000000) {\n          text = (num / 100000000).toFixed(2) + \"亿\";\n        } else if (Math.abs(num) >= 10000) {\n          text = (num / 10000).toFixed(1) + \"万\";\n        } else {\n          text = num.toLocaleString();\n        }\n        if (item.unit) text += ` ${item.unit}`;\n        if (item.year) text += ` (${item.year})`;\n        return text;\n      }\n      return \"-\";\n    };\n\n    // 饼图数据\n    const pieChartData = computed(() => {\n      return normalizedData.value.filter(item => item.value !== null).map((item, index) => ({\n        name: item.raw || `项目${index + 1}`,\n        value: Math.min(100, Math.max(0, item.value)),\n        raw: item.raw,\n        unit: item.unit\n      }));\n    });\n\n    // 柱状图数据\n    const barChartData = computed(() => {\n      return normalizedData.value.map((item, index) => ({\n        name: item.raw || `项目${index + 1}`,\n        value: item.value !== null ? item.value : 0,\n        raw: item.raw,\n        unit: item.unit,\n        year: item.year\n      }));\n    });\n\n    // 折线图数据\n    const lineChartData = computed(() => {\n      return normalizedData.value.filter(item => item.value !== null).map((item, index) => ({\n        year: item.year || index + 1,\n        value: item.value,\n        raw: item.raw,\n        unit: item.unit\n      })).sort((a, b) => a.year - b.year);\n    });\n\n    // 文本显示数据\n    const formattedData = computed(() => {\n      return normalizedData.value;\n    });\n    const hasData = computed(() => {\n      return normalizedData.value.length > 0 && normalizedData.value.some(item => item.value !== null || item.raw && item.raw.trim() !== \"\");\n    });\n    const __returned__ = {\n      props,\n      normalizedData,\n      normalizeItem,\n      formatDisplayValue,\n      pieChartData,\n      barChartData,\n      lineChartData,\n      formattedData,\n      hasData,\n      computed,\n      PieChart,\n      BarChart,\n      LineChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","PieChart","BarChart","LineChart","props","__props","normalizedData","field","Array","isArray","map","item","normalizeItem","value","raw","String","unit","year","currency","extracted","formatDisplayValue","text","num","type","toFixed","Math","abs","toLocaleString","pieChartData","filter","index","name","min","max","barChartData","lineChartData","sort","a","b","formattedData","hasData","length","some","trim"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FullChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"full-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedData\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ formatDisplayValue(item) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<PieChart :data=\"pieChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\t:data=\"barChartData\"\r\n\t\t\t\t\t:field-key=\"fieldKey\"\r\n\t\t\t\t\t:show-value=\"true\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 完整折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"chart-container\">\r\n\t\t\t\t<LineChart :data=\"lineChartData\" :show-trend=\"true\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"full-text\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(item, index) in formattedData\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t{{ formatDisplayValue(item) }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport PieChart from \"./charts/PieChart.vue\";\r\n\timport BarChart from \"./charts/BarChart.vue\";\r\n\timport LineChart from \"./charts/LineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\t// 数据预处理（统一数据结构）\r\n\tconst normalizedData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field.map(item => normalizeItem(item));\r\n\t\t}\r\n\r\n\t\t// 处理单条数据\r\n\t\treturn [normalizeItem(props.field)];\r\n\t});\r\n\r\n\t// 统一数据结构\r\n\tconst normalizeItem = item => {\r\n\t\t// 已经是标准格式\r\n\t\tif (\r\n\t\t\ttypeof item === \"object\" &&\r\n\t\t\titem !== null &&\r\n\t\t\t(\"value\" in item || \"raw\" in item)\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: item.value ?? null,\r\n\t\t\t\traw: item.raw ?? String(item.value) ?? \"\",\r\n\t\t\t\tunit: item.unit ?? null,\r\n\t\t\t\tyear: item.year ?? null,\r\n\t\t\t\tcurrency: item.currency ?? null,\r\n\t\t\t\textracted: item.extracted ?? false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// 原始值处理\r\n\t\treturn {\r\n\t\t\tvalue: typeof item === \"number\" ? item : null,\r\n\t\t\traw: String(item),\r\n\t\t\tunit: null,\r\n\t\t\tyear: null,\r\n\t\t\tcurrency: null,\r\n\t\t\textracted: false\r\n\t\t};\r\n\t};\r\n\r\n\t// 格式化显示值（带单位）\r\n\tconst formatDisplayValue = item => {\r\n\t\tif (!item) return \"-\";\r\n\r\n\t\t// 优先使用raw字段\r\n\t\tif (item.raw) {\r\n\t\t\tlet text = item.raw;\r\n\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\t// 数值格式化\r\n\t\tif (item.value !== null) {\r\n\t\t\tlet num = item.value;\r\n\t\t\tlet text = \"\";\r\n\r\n\t\t\t// 百分比处理\r\n\t\t\tif (props.type === \"percentage\") {\r\n\t\t\t\treturn `${num > 0 ? \"+\" : \"\"}${num.toFixed(1)}%`;\r\n\t\t\t}\r\n\r\n\t\t\t// 大数值格式化\r\n\t\t\tif (Math.abs(num) >= 100000000) {\r\n\t\t\t\ttext = (num / 100000000).toFixed(2) + \"亿\";\r\n\t\t\t} else if (Math.abs(num) >= 10000) {\r\n\t\t\t\ttext = (num / 10000).toFixed(1) + \"万\";\r\n\t\t\t} else {\r\n\t\t\t\ttext = num.toLocaleString();\r\n\t\t\t}\r\n\r\n\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\treturn \"-\";\r\n\t};\r\n\r\n\t// 饼图数据\r\n\tconst pieChartData = computed(() => {\r\n\t\treturn normalizedData.value\r\n\t\t\t.filter(item => item.value !== null)\r\n\t\t\t.map((item, index) => ({\r\n\t\t\t\tname: item.raw || `项目${index + 1}`,\r\n\t\t\t\tvalue: Math.min(100, Math.max(0, item.value)),\r\n\t\t\t\traw: item.raw,\r\n\t\t\t\tunit: item.unit\r\n\t\t\t}));\r\n\t});\r\n\r\n\t// 柱状图数据\r\n\tconst barChartData = computed(() => {\r\n\t\treturn normalizedData.value.map((item, index) => ({\r\n\t\t\tname: item.raw || `项目${index + 1}`,\r\n\t\t\tvalue: item.value !== null ? item.value : 0,\r\n\t\t\traw: item.raw,\r\n\t\t\tunit: item.unit,\r\n\t\t\tyear: item.year\r\n\t\t}));\r\n\t});\r\n\r\n\t// 折线图数据\r\n\tconst lineChartData = computed(() => {\r\n\t\treturn normalizedData.value\r\n\t\t\t.filter(item => item.value !== null)\r\n\t\t\t.map((item, index) => ({\r\n\t\t\t\tyear: item.year || index + 1,\r\n\t\t\t\tvalue: item.value,\r\n\t\t\t\traw: item.raw,\r\n\t\t\t\tunit: item.unit\r\n\t\t\t}))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\t});\r\n\r\n\t// 文本显示数据\r\n\tconst formattedData = computed(() => {\r\n\t\treturn normalizedData.value;\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tnormalizedData.value.length > 0 &&\r\n\t\t\tnormalizedData.value.some(\r\n\t\t\t\titem => item.value !== null || (item.raw && item.raw.trim() !== \"\")\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.full-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 16px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.full-text {\r\n\t\tmax-height: 400px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin-bottom: 8px;\r\n\t\tpadding: 8px;\r\n\t\tbackground: #f8f9fa;\r\n\t\tborder-radius: 4px;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}