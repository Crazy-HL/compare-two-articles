{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick, watch } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref({}); // 存储每个 div 的选中内容\n    const showPopup = ref({}); // 存储每个 div 的弹窗显示状态\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n    const sections = ref([]); // 存储章节信息\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 动态注入 Wikipedia 样式\n        const styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\n        styles.forEach(link => {\n          if (!document.querySelector(`link[href=\"${link.href}\"]`)) {\n            const styleTag = document.createElement(\"link\");\n            styleTag.rel = \"stylesheet\";\n            styleTag.href = link.href;\n            document.head.appendChild(styleTag);\n          }\n        });\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n\n        // 手动引入 Wikipedia CSS\n        injectWikipediaStyles();\n\n        // 提取章节信息\n        extractSections(contentElement);\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **提取章节信息**\n    const extractSections = contentElement => {\n      const headings = contentElement.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      sections.value = Array.from(headings).map(heading => ({\n        id: heading.id,\n        text: heading.innerText,\n        element: heading\n      }));\n    };\n\n    // **监听滚动事件**\n    const handleScroll = () => {\n      if (!divRef.value) return;\n      const scrollTop = divRef.value.scrollTop;\n      const currentSection = findCurrentSection(scrollTop);\n      if (currentSection) {\n        bus.emit(\"scrollToSection\", {\n          sectionText: currentSection.text\n        });\n      }\n    };\n\n    // **查找当前章节**\n    const findCurrentSection = scrollTop => {\n      for (let i = sections.value.length - 1; i >= 0; i--) {\n        const section = sections.value[i];\n        if (section.element.offsetTop <= scrollTop + 100) {\n          return section;\n        }\n      }\n      return null;\n    };\n\n    // **滚动到指定章节**\n    const scrollToSection = sectionText => {\n      const section = sections.value.find(s => s.text === sectionText);\n      if (section && divRef.value) {\n        divRef.value.scrollTo({\n          top: section.element.offsetTop,\n          behavior: \"smooth\"\n        });\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(() => {\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", handleScroll);\n      }\n      fetchWikipediaContent();\n\n      // 监听滚动到章节事件\n      bus.on(\"scrollToSection\", scrollToSection);\n    });\n\n    // **组件卸载时解绑事件**\n    onUnmounted(() => {\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", handleScroll);\n      }\n      bus.off(\"scrollToSection\", scrollToSection);\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      sections,\n      fetchWikipediaContent,\n      extractSections,\n      handleScroll,\n      findCurrentSection,\n      scrollToSection,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      watch,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","watch","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","d3","bus","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","sections","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","styles","Array","from","querySelectorAll","forEach","link","document","querySelector","href","styleTag","createElement","rel","head","appendChild","contentElement","value","innerHTML","injectWikipediaStyles","extractSections","err","message","headings","map","heading","id","innerText","element","handleScroll","scrollTop","currentSection","findCurrentSection","emit","sectionText","i","length","section","offsetTop","scrollToSection","find","s","scrollTo","top","behavior","addEventListener","on","removeEventListener","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick, watch } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\tconst sections = ref([]); // 存储章节信息\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 动态注入 Wikipedia 样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\r\n\t\t\t// 提取章节信息\r\n\t\t\textractSections(contentElement);\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **提取章节信息**\r\n\tconst extractSections = contentElement => {\r\n\t\tconst headings = contentElement.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tsections.value = Array.from(headings).map(heading => ({\r\n\t\t\tid: heading.id,\r\n\t\t\ttext: heading.innerText,\r\n\t\t\telement: heading\r\n\t\t}));\r\n\t};\r\n\r\n\t// **监听滚动事件**\r\n\tconst handleScroll = () => {\r\n\t\tif (!divRef.value) return;\r\n\r\n\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\tconst currentSection = findCurrentSection(scrollTop);\r\n\r\n\t\tif (currentSection) {\r\n\t\t\tbus.emit(\"scrollToSection\", { sectionText: currentSection.text });\r\n\t\t}\r\n\t};\r\n\r\n\t// **查找当前章节**\r\n\tconst findCurrentSection = scrollTop => {\r\n\t\tfor (let i = sections.value.length - 1; i >= 0; i--) {\r\n\t\t\tconst section = sections.value[i];\r\n\t\t\tif (section.element.offsetTop <= scrollTop + 100) {\r\n\t\t\t\treturn section;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// **滚动到指定章节**\r\n\tconst scrollToSection = sectionText => {\r\n\t\tconst section = sections.value.find(s => s.text === sectionText);\r\n\t\tif (section && divRef.value) {\r\n\t\t\tdivRef.value.scrollTo({\r\n\t\t\t\ttop: section.element.offsetTop,\r\n\t\t\t\tbehavior: \"smooth\"\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 监听滚动到章节事件\r\n\t\tbus.on(\"scrollToSection\", scrollToSection);\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t\tbus.off(\"scrollToSection\", scrollToSection);\r\n\t});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}