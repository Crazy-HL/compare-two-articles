{"ast":null,"code":"import { computed } from \"vue\";\nimport { extractInfoboxData, classifyInfoboxData } from \"@/js/wikiInfoboxParser.js\";\nexport default {\n  __name: 'WikiInfoboxViewer',\n  props: {\n    infoboxElement: {\n      type: HTMLElement,\n      default: null\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 分类标签映射\n    const categoryLabels = {\n      identifiers: \"标识信息\",\n      temporal: \"时间信息\",\n      quantitative: \"量化数据\",\n      relational: \"关联信息\",\n      categorical: \"分类信息\",\n      other: \"其他信息\"\n    };\n\n    // 提取并分类数据\n    const classifiedData = computed(() => {\n      if (!props.infoboxElement) return null;\n      const rawData = extractInfoboxData(props.infoboxElement);\n      return classifyInfoboxData(rawData);\n    });\n    const __returned__ = {\n      props,\n      categoryLabels,\n      classifiedData,\n      computed,\n      get extractInfoboxData() {\n        return extractInfoboxData;\n      },\n      get classifyInfoboxData() {\n        return classifyInfoboxData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","extractInfoboxData","classifyInfoboxData","props","__props","categoryLabels","identifiers","temporal","quantitative","relational","categorical","other","classifiedData","infoboxElement","rawData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/WikiInfoboxViewer.vue"],"sourcesContent":["<template>\r\n\t<div class=\"infobox-viewer\">\r\n\t\t<div\r\n\t\t\tv-if=\"classifiedData\"\r\n\t\t\tclass=\"data-section\"\r\n\t\t\tv-for=\"(data, category) in classifiedData\"\r\n\t\t\t:key=\"category\">\r\n\t\t\t<h3>{{ categoryLabels[category] }}</h3>\r\n\t\t\t<div class=\"data-grid\">\r\n\t\t\t\t<div v-for=\"(value, key) in data\" :key=\"key\" class=\"data-item\">\r\n\t\t\t\t\t<span class=\"data-label\">{{ key }}:</span>\r\n\t\t\t\t\t<span class=\"data-value\">\r\n\t\t\t\t\t\t<template v-if=\"value && typeof value === 'object'\">\r\n\t\t\t\t\t\t\t{{ value.original }}\r\n\t\t\t\t\t\t\t<span v-if=\"value.value\" class=\"data-parsed\">\r\n\t\t\t\t\t\t\t\t({{ value.value }} {{ value.unit }})\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t{{ value || \"-\" }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else class=\"no-data\">未找到可提取的信息框数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport {\r\n\t\textractInfoboxData,\r\n\t\tclassifyInfoboxData\r\n\t} from \"@/js/wikiInfoboxParser.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tinfoboxElement: {\r\n\t\t\ttype: HTMLElement,\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t});\r\n\r\n\t// 分类标签映射\r\n\tconst categoryLabels = {\r\n\t\tidentifiers: \"标识信息\",\r\n\t\ttemporal: \"时间信息\",\r\n\t\tquantitative: \"量化数据\",\r\n\t\trelational: \"关联信息\",\r\n\t\tcategorical: \"分类信息\",\r\n\t\tother: \"其他信息\"\r\n\t};\r\n\r\n\t// 提取并分类数据\r\n\tconst classifiedData = computed(() => {\r\n\t\tif (!props.infoboxElement) return null;\r\n\t\tconst rawData = extractInfoboxData(props.infoboxElement);\r\n\t\treturn classifyInfoboxData(rawData);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.infobox-viewer {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.5;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.data-section {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #e1e4e8;\r\n\t\tborder-radius: 6px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.data-section h3 {\r\n\t\tmargin: 0;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground-color: #f6f8fa;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 600;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t}\r\n\r\n\t.data-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n\t\tgap: 12px;\r\n\t\tpadding: 12px;\r\n\t}\r\n\r\n\t.data-item {\r\n\t\tdisplay: flex;\r\n\t\tmin-width: 0;\r\n\t}\r\n\r\n\t.data-label {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-right: 8px;\r\n\t\tflex-shrink: 0;\r\n\t\tcolor: #24292e;\r\n\t}\r\n\r\n\t.data-value {\r\n\t\tflex-grow: 1;\r\n\t\tmin-width: 0;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.data-parsed {\r\n\t\tcolor: #6a737d;\r\n\t\tfont-size: 0.9em;\r\n\t\tmargin-left: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tpadding: 16px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #6a737d;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"AA8BC,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SACCC,kBAAkB,EAClBC,mBAAmB,QACb,2BAA2B;;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAKZ;;IAEF;IACA,MAAMC,cAAc,GAAG;MACtBC,WAAW,EAAE,MAAM;MACnBC,QAAQ,EAAE,MAAM;MAChBC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE,MAAM;MAClBC,WAAW,EAAE,MAAM;MACnBC,KAAK,EAAE;IACR,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGZ,QAAQ,CAAC,MAAM;MACrC,IAAI,CAACG,KAAK,CAACU,cAAc,EAAE,OAAO,IAAI;MACtC,MAAMC,OAAO,GAAGb,kBAAkB,CAACE,KAAK,CAACU,cAAc,CAAC;MACxD,OAAOX,mBAAmB,CAACY,OAAO,CAAC;IACpC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}