{"ast":null,"code":"import { ref, watch, onMounted, onUnmounted, nextTick } from \"vue\";\nimport eventBus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String,\n    // \"div1\" 或 \"div3\"\n    linkedOutline: {\n      type: Array,\n      required: true,\n      default: () => [] // 确保默认值为空数组\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const buttonStyle = ref({});\n    const outlineStyle = ref({});\n\n    // **自定义关联数组**\n    // const linkedOutline = ref([\n    // \t{ leftId: \"heading-0-div1\", rightId: \"heading-0-div3\" },\n    // \t{ leftId: \"heading-3-div1\", rightId: \"heading-3-div3\" },\n    // \t{ leftId: \"heading-9-div1\", rightId: \"heading-12-div3\" },\n    // \t{ leftId: \"heading-23-div1\", rightId: \"heading-13-div3\" },\n    // \t{ leftId: \"heading-24-div1\", rightId: \"heading-14-div3\" },\n    // \t{ leftId: \"heading-25-div1\", rightId: \"heading-19-div3\" },\n    // \t{ leftId: \"heading-26-div1\", rightId: \"heading-15-div3\" },\n    // \t{ leftId: \"heading-28-div1\", rightId: \"heading-16-div3\" },\n    // \t{ leftId: \"heading-30-div1\", rightId: \"heading-17-div3\" },\n    // \t{ leftId: \"heading-32-div1\", rightId: \"heading-32-div3\" },\n    // \t{ leftId: \"heading-33-div1\", rightId: \"heading-33-div3\" },\n    // \t{ leftId: \"heading-34-div1\", rightId: \"heading-35-div3\" },\n    // \t{ leftId: \"heading-35-div1\", rightId: \"heading-37-div3\" }\n    // ]);\n\n    // 添加章节验证方法\n    // 修改后的安全代码\n    const validateLinkedChapters = () => {\n      if (!props.linkedOutline?.length) {\n        console.warn(\"No linked chapters found\");\n        return;\n      }\n      props.linkedOutline.forEach(pair => {\n        const leftExists = !!document.getElementById(pair.leftId);\n        const rightExists = !!document.getElementById(pair.rightId);\n        if (!leftExists || !rightExists) {\n          console.warn(\"Invalid chapter link:\", pair);\n        }\n      });\n    };\n\n    // **切换大纲的显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **解析文章，提取 h1-h6 标题**\n    const extractOutline = (content, containerId) => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1));\n        const id = `heading-${index}-${containerId}`;\n        heading.id = id;\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **监听 content 变化，更新大纲**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent, props.divId);\n\n      // 提取另一个容器的大纲数据\n      const otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\n      const otherContainer = document.getElementById(otherContainerId);\n      if (otherContainer) {\n        // const otherContent = otherContainer.innerHTML;\n        // const otherOutline = extractOutline(otherContent, otherContainerId);\n\n        // 通过 eventBus 通知另一个大纲组件\n        eventBus.emit(\"update-linked-outline\", linkedOutline.value);\n      }\n    }, {\n      immediate: true\n    });\n\n    // **监听 eventBus，确保两边大纲同步**\n    eventBus.on(\"update-linked-outline\", newLinkedOutline => {\n      linkedOutline.value = newLinkedOutline;\n    });\n\n    // **检查是否存在关联章节**\n    const isLinked = item => linkedOutline.value.some(linked => linked.leftId === item.id || linked.rightId === item.id);\n\n    // **生成不同关联章节的边框颜色**\n    const getBorderColor = id => {\n      const linkedItem = linkedOutline.value.find(linked => linked.leftId === id || linked.rightId === id);\n      if (linkedItem) {\n        // 根据关联章节的索引生成不同的颜色\n        const index = linkedOutline.value.indexOf(linkedItem);\n        const colors = [\"#FF6B6B\", \"#4ECDC4\", \"#FFD166\", \"#06D6A0\", \"#118AB2\", \"#073B4C\"];\n        return colors[index % colors.length];\n      }\n      return \"transparent\";\n    };\n\n    // **滚动到章节**\n    const scrollToChapter = id => {\n      // 跳转到当前文章的章节\n      const element = document.getElementById(id);\n      if (element) element.scrollIntoView({\n        behavior: \"smooth\"\n      });\n\n      // 找到关联章节并跳转\n      const linkedItem = linkedOutline.value.find(linked => linked.leftId === id || linked.rightId === id);\n      if (linkedItem) {\n        const targetId = linkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\n        eventBus.emit(\"scroll-to-chapter\", targetId);\n      }\n    };\n\n    // **监听 eventBus，确保两个组件同步跳转**\n    eventBus.on(\"scroll-to-chapter\", targetId => {\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) targetElement.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    // **更新按钮和大纲的相对位置**\n    const updatePosition = () => {\n      const isDiv1 = props.divId === \"div1\";\n      buttonStyle.value = {\n        position: \"absolute\",\n        top: \"10px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\"\n      };\n      outlineStyle.value = {\n        position: \"absolute\",\n        top: \"50px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\",\n        width: \"260px\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\",\n        zIndex: \"1000\",\n        background: \"white\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n        padding: \"15px\"\n      };\n    };\n\n    // **窗口滚动时更新大纲位置**\n    const handleScroll = () => {\n      const referenceElement = document.getElementById(props.divId);\n      if (!referenceElement) return;\n      const scrollY = referenceElement.scrollTop;\n      buttonStyle.value.top = `${scrollY + 10}px`;\n      outlineStyle.value.top = `${scrollY + 50}px`;\n    };\n\n    // **初始化**\n    onMounted(() => {\n      outline.value = extractOutline(props.content, props.divId);\n      updatePosition();\n      const referenceElement = document.getElementById(props.divId);\n      if (referenceElement) referenceElement.addEventListener(\"scroll\", handleScroll);\n      console.log(\"Received linkedOutline:\", props.linkedOutline);\n      console.log(\"Typeof linkedOutline:\", typeof props.linkedOutline);\n      nextTick(() => {\n        setTimeout(validateLinkedChapters, 1000);\n      });\n    });\n\n    // **组件销毁时移除事件**\n    onUnmounted(() => {\n      const referenceElement = document.getElementById(props.divId);\n      if (referenceElement) referenceElement.removeEventListener(\"scroll\", handleScroll);\n      eventBus.off(\"update-linked-outline\");\n      eventBus.off(\"scroll-to-chapter\");\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      buttonStyle,\n      outlineStyle,\n      validateLinkedChapters,\n      toggleOutline,\n      extractOutline,\n      isLinked,\n      getBorderColor,\n      scrollToChapter,\n      updatePosition,\n      handleScroll,\n      ref,\n      watch,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","nextTick","eventBus","props","__props","isVisible","outline","buttonStyle","outlineStyle","validateLinkedChapters","linkedOutline","length","console","warn","forEach","pair","leftExists","document","getElementById","leftId","rightExists","rightId","toggleOutline","value","extractOutline","content","containerId","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","text","textContent","newContent","divId","otherContainerId","otherContainer","emit","immediate","on","newLinkedOutline","isLinked","item","some","linked","getBorderColor","linkedItem","find","indexOf","colors","scrollToChapter","element","scrollIntoView","behavior","targetId","targetElement","updatePosition","isDiv1","position","top","width","maxHeight","overflowY","zIndex","background","borderRadius","boxShadow","padding","handleScroll","referenceElement","scrollY","scrollTop","addEventListener","log","setTimeout","removeEventListener","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{\r\n\t\t\t\t\t\tpaddingLeft: `${(item.level - 1) * 15}px`,\r\n\t\t\t\t\t\tborderLeft: isLinked(item)\r\n\t\t\t\t\t\t\t? `4px solid ${getBorderColor(item.id)}`\r\n\t\t\t\t\t\t\t: 'none'\r\n\t\t\t\t\t}\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport eventBus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String, // \"div1\" 或 \"div3\"\r\n\t\tlinkedOutline: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: () => [] // 确保默认值为空数组\r\n\t\t}\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\r\n\t// **自定义关联数组**\r\n\t// const linkedOutline = ref([\r\n\t// \t{ leftId: \"heading-0-div1\", rightId: \"heading-0-div3\" },\r\n\t// \t{ leftId: \"heading-3-div1\", rightId: \"heading-3-div3\" },\r\n\t// \t{ leftId: \"heading-9-div1\", rightId: \"heading-12-div3\" },\r\n\t// \t{ leftId: \"heading-23-div1\", rightId: \"heading-13-div3\" },\r\n\t// \t{ leftId: \"heading-24-div1\", rightId: \"heading-14-div3\" },\r\n\t// \t{ leftId: \"heading-25-div1\", rightId: \"heading-19-div3\" },\r\n\t// \t{ leftId: \"heading-26-div1\", rightId: \"heading-15-div3\" },\r\n\t// \t{ leftId: \"heading-28-div1\", rightId: \"heading-16-div3\" },\r\n\t// \t{ leftId: \"heading-30-div1\", rightId: \"heading-17-div3\" },\r\n\t// \t{ leftId: \"heading-32-div1\", rightId: \"heading-32-div3\" },\r\n\t// \t{ leftId: \"heading-33-div1\", rightId: \"heading-33-div3\" },\r\n\t// \t{ leftId: \"heading-34-div1\", rightId: \"heading-35-div3\" },\r\n\t// \t{ leftId: \"heading-35-div1\", rightId: \"heading-37-div3\" }\r\n\t// ]);\r\n\r\n\t// 添加章节验证方法\r\n\t// 修改后的安全代码\r\n\tconst validateLinkedChapters = () => {\r\n\t\tif (!props.linkedOutline?.length) {\r\n\t\t\tconsole.warn(\"No linked chapters found\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tprops.linkedOutline.forEach(pair => {\r\n\t\t\tconst leftExists = !!document.getElementById(pair.leftId);\r\n\t\t\tconst rightExists = !!document.getElementById(pair.rightId);\r\n\r\n\t\t\tif (!leftExists || !rightExists) {\r\n\t\t\t\tconsole.warn(\"Invalid chapter link:\", pair);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = (content, containerId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${containerId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent, props.divId);\r\n\r\n\t\t\t// 提取另一个容器的大纲数据\r\n\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\tconst otherContainer = document.getElementById(otherContainerId);\r\n\t\t\tif (otherContainer) {\r\n\t\t\t\t// const otherContent = otherContainer.innerHTML;\r\n\t\t\t\t// const otherOutline = extractOutline(otherContent, otherContainerId);\r\n\r\n\t\t\t\t// 通过 eventBus 通知另一个大纲组件\r\n\t\t\t\teventBus.emit(\"update-linked-outline\", linkedOutline.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **监听 eventBus，确保两边大纲同步**\r\n\teventBus.on(\"update-linked-outline\", newLinkedOutline => {\r\n\t\tlinkedOutline.value = newLinkedOutline;\r\n\t});\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item =>\r\n\t\tlinkedOutline.value.some(\r\n\t\t\tlinked => linked.leftId === item.id || linked.rightId === item.id\r\n\t\t);\r\n\r\n\t// **生成不同关联章节的边框颜色**\r\n\tconst getBorderColor = id => {\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\t// 根据关联章节的索引生成不同的颜色\r\n\t\t\tconst index = linkedOutline.value.indexOf(linkedItem);\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#FF6B6B\",\r\n\t\t\t\t\"#4ECDC4\",\r\n\t\t\t\t\"#FFD166\",\r\n\t\t\t\t\"#06D6A0\",\r\n\t\t\t\t\"#118AB2\",\r\n\t\t\t\t\"#073B4C\"\r\n\t\t\t];\r\n\t\t\treturn colors[index % colors.length];\r\n\t\t}\r\n\t\treturn \"transparent\";\r\n\t};\r\n\r\n\t// **滚动到章节**\r\n\tconst scrollToChapter = id => {\r\n\t\t// 跳转到当前文章的章节\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t// 找到关联章节并跳转\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\tconst targetId =\r\n\t\t\t\tlinkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\r\n\t\t\teventBus.emit(\"scroll-to-chapter\", targetId);\r\n\t\t}\r\n\t};\r\n\r\n\t// **监听 eventBus，确保两个组件同步跳转**\r\n\teventBus.on(\"scroll-to-chapter\", targetId => {\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\tif (targetElement) targetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t});\r\n\r\n\t// **更新按钮和大纲的相对位置**\r\n\tconst updatePosition = () => {\r\n\t\tconst isDiv1 = props.divId === \"div1\";\r\n\t\tbuttonStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"10px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\"\r\n\t\t};\r\n\t\toutlineStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"50px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\",\r\n\t\t\twidth: \"260px\",\r\n\t\t\tmaxHeight: \"80vh\",\r\n\t\t\toverflowY: \"auto\",\r\n\t\t\tzIndex: \"1000\",\r\n\t\t\tbackground: \"white\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t\tboxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n\t\t\tpadding: \"15px\"\r\n\t\t};\r\n\t};\r\n\r\n\t// **窗口滚动时更新大纲位置**\r\n\tconst handleScroll = () => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (!referenceElement) return;\r\n\r\n\t\tconst scrollY = referenceElement.scrollTop;\r\n\t\tbuttonStyle.value.top = `${scrollY + 10}px`;\r\n\t\toutlineStyle.value.top = `${scrollY + 50}px`;\r\n\t};\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content, props.divId);\r\n\t\tupdatePosition();\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.addEventListener(\"scroll\", handleScroll);\r\n\r\n\t\tconsole.log(\"Received linkedOutline:\", props.linkedOutline);\r\n\t\tconsole.log(\"Typeof linkedOutline:\", typeof props.linkedOutline);\r\n\t\tnextTick(() => {\r\n\t\t\tsetTimeout(validateLinkedChapters, 1000);\r\n\t\t});\r\n\t});\r\n\r\n\t// **组件销毁时移除事件**\r\n\tonUnmounted(() => {\r\n\t\tconst referenceElement = document.getElementById(props.divId);\r\n\t\tif (referenceElement)\r\n\t\t\treferenceElement.removeEventListener(\"scroll\", handleScroll);\r\n\t\teventBus.off(\"update-linked-outline\");\r\n\t\teventBus.off(\"scroll-to-chapter\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* **大纲样式** */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **关联章节样式** */\r\n\t.outline li.linked {\r\n\t\tborder-left: 4px solid;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":"AAqCC,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAK;AAClE,OAAOC,QAAQ,MAAM,kBAAkB;;;;;;;;;;;;;;;;;;;IAEvC,MAAMC,KAAK,GAAGC,OAQZ;IAEF,MAAMC,SAAS,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMS,OAAO,GAAGT,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMU,WAAW,GAAGV,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMW,YAAY,GAAGX,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;MACpC,IAAI,CAACN,KAAK,CAACO,aAAa,EAAEC,MAAM,EAAE;QACjCC,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;QACxC;MACD;MAEAV,KAAK,CAACO,aAAa,CAACI,OAAO,CAACC,IAAI,IAAI;QACnC,MAAMC,UAAU,GAAG,CAAC,CAACC,QAAQ,CAACC,cAAc,CAACH,IAAI,CAACI,MAAM,CAAC;QACzD,MAAMC,WAAW,GAAG,CAAC,CAACH,QAAQ,CAACC,cAAc,CAACH,IAAI,CAACM,OAAO,CAAC;QAE3D,IAAI,CAACL,UAAU,IAAI,CAACI,WAAW,EAAE;UAChCR,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAEE,IAAI,CAAC;QAC5C;MACD,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMO,aAAa,GAAGA,CAAA,KAAM;MAC3BjB,SAAS,CAACkB,KAAK,GAAG,CAAClB,SAAS,CAACkB,KAAK;IACnC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGA,CAACC,OAAO,EAAEC,WAAW,KAAK;MAChD,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACvB,MAAME,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACL,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMM,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAE/D,OAAOC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnD,MAAMC,KAAK,GAAGC,QAAQ,CAACH,OAAO,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpD,MAAMC,EAAE,GAAG,WAAWL,KAAK,IAAIX,WAAW,EAAE;QAC5CU,OAAO,CAACM,EAAE,GAAGA,EAAE;QACf,OAAO;UAAEA,EAAE;UAAEC,IAAI,EAAEP,OAAO,CAACQ,WAAW;UAAEN;QAAM,CAAC;MAChD,CAAC,CAAC;IACH,CAAC;;IAED;IACAxC,KAAK,CACJ,MAAMK,KAAK,CAACsB,OAAO,EACnBoB,UAAU,IAAI;MACbvC,OAAO,CAACiB,KAAK,GAAGC,cAAc,CAACqB,UAAU,EAAE1C,KAAK,CAAC2C,KAAK,CAAC;;MAEvD;MACA,MAAMC,gBAAgB,GAAG5C,KAAK,CAAC2C,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;MACjE,MAAME,cAAc,GAAG/B,QAAQ,CAACC,cAAc,CAAC6B,gBAAgB,CAAC;MAChE,IAAIC,cAAc,EAAE;QACnB;QACA;;QAEA;QACA9C,QAAQ,CAAC+C,IAAI,CAAC,uBAAuB,EAAEvC,aAAa,CAACa,KAAK,CAAC;MAC5D;IACD,CAAC,EACD;MAAE2B,SAAS,EAAE;IAAK,CACnB,CAAC;;IAED;IACAhD,QAAQ,CAACiD,EAAE,CAAC,uBAAuB,EAAEC,gBAAgB,IAAI;MACxD1C,aAAa,CAACa,KAAK,GAAG6B,gBAAgB;IACvC,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGC,IAAI,IACpB5C,aAAa,CAACa,KAAK,CAACgC,IAAI,CACvBC,MAAM,IAAIA,MAAM,CAACrC,MAAM,KAAKmC,IAAI,CAACZ,EAAE,IAAIc,MAAM,CAACnC,OAAO,KAAKiC,IAAI,CAACZ,EAChE,CAAC;;IAEF;IACA,MAAMe,cAAc,GAAGf,EAAE,IAAI;MAC5B,MAAMgB,UAAU,GAAGhD,aAAa,CAACa,KAAK,CAACoC,IAAI,CAC1CH,MAAM,IAAIA,MAAM,CAACrC,MAAM,KAAKuB,EAAE,IAAIc,MAAM,CAACnC,OAAO,KAAKqB,EACtD,CAAC;MACD,IAAIgB,UAAU,EAAE;QACf;QACA,MAAMrB,KAAK,GAAG3B,aAAa,CAACa,KAAK,CAACqC,OAAO,CAACF,UAAU,CAAC;QACrD,MAAMG,MAAM,GAAG,CACd,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACT;QACD,OAAOA,MAAM,CAACxB,KAAK,GAAGwB,MAAM,CAAClD,MAAM,CAAC;MACrC;MACA,OAAO,aAAa;IACrB,CAAC;;IAED;IACA,MAAMmD,eAAe,GAAGpB,EAAE,IAAI;MAC7B;MACA,MAAMqB,OAAO,GAAG9C,QAAQ,CAACC,cAAc,CAACwB,EAAE,CAAC;MAC3C,IAAIqB,OAAO,EAAEA,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;;MAE3D;MACA,MAAMP,UAAU,GAAGhD,aAAa,CAACa,KAAK,CAACoC,IAAI,CAC1CH,MAAM,IAAIA,MAAM,CAACrC,MAAM,KAAKuB,EAAE,IAAIc,MAAM,CAACnC,OAAO,KAAKqB,EACtD,CAAC;MACD,IAAIgB,UAAU,EAAE;QACf,MAAMQ,QAAQ,GACbR,UAAU,CAACvC,MAAM,KAAKuB,EAAE,GAAGgB,UAAU,CAACrC,OAAO,GAAGqC,UAAU,CAACvC,MAAM;QAClEjB,QAAQ,CAAC+C,IAAI,CAAC,mBAAmB,EAAEiB,QAAQ,CAAC;MAC7C;IACD,CAAC;;IAED;IACAhE,QAAQ,CAACiD,EAAE,CAAC,mBAAmB,EAAEe,QAAQ,IAAI;MAC5C,MAAMC,aAAa,GAAGlD,QAAQ,CAACC,cAAc,CAACgD,QAAQ,CAAC;MACvD,IAAIC,aAAa,EAAEA,aAAa,CAACH,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACxE,CAAC,CAAC;;IAEF;IACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;MAC5B,MAAMC,MAAM,GAAGlE,KAAK,CAAC2C,KAAK,KAAK,MAAM;MACrCvC,WAAW,CAACgB,KAAK,GAAG;QACnB+C,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,MAAM;QACX,CAACF,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG;MAC9B,CAAC;MACD7D,YAAY,CAACe,KAAK,GAAG;QACpB+C,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,MAAM;QACX,CAACF,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM;QACnCG,KAAK,EAAE,OAAO;QACdC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,MAAM;QACjBC,MAAM,EAAE,MAAM;QACdC,UAAU,EAAE,OAAO;QACnBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,gCAAgC;QAC3CC,OAAO,EAAE;MACV,CAAC;IACF,CAAC;;IAED;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MAC1B,MAAMC,gBAAgB,GAAGhE,QAAQ,CAACC,cAAc,CAACf,KAAK,CAAC2C,KAAK,CAAC;MAC7D,IAAI,CAACmC,gBAAgB,EAAE;MAEvB,MAAMC,OAAO,GAAGD,gBAAgB,CAACE,SAAS;MAC1C5E,WAAW,CAACgB,KAAK,CAACgD,GAAG,GAAG,GAAGW,OAAO,GAAG,EAAE,IAAI;MAC3C1E,YAAY,CAACe,KAAK,CAACgD,GAAG,GAAG,GAAGW,OAAO,GAAG,EAAE,IAAI;IAC7C,CAAC;;IAED;IACAnF,SAAS,CAAC,MAAM;MACfO,OAAO,CAACiB,KAAK,GAAGC,cAAc,CAACrB,KAAK,CAACsB,OAAO,EAAEtB,KAAK,CAAC2C,KAAK,CAAC;MAC1DsB,cAAc,CAAC,CAAC;MAChB,MAAMa,gBAAgB,GAAGhE,QAAQ,CAACC,cAAc,CAACf,KAAK,CAAC2C,KAAK,CAAC;MAC7D,IAAImC,gBAAgB,EACnBA,gBAAgB,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;MAE1DpE,OAAO,CAACyE,GAAG,CAAC,yBAAyB,EAAElF,KAAK,CAACO,aAAa,CAAC;MAC3DE,OAAO,CAACyE,GAAG,CAAC,uBAAuB,EAAE,OAAOlF,KAAK,CAACO,aAAa,CAAC;MAChET,QAAQ,CAAC,MAAM;QACdqF,UAAU,CAAC7E,sBAAsB,EAAE,IAAI,CAAC;MACzC,CAAC,CAAC;IACH,CAAC,CAAC;;IAEF;IACAT,WAAW,CAAC,MAAM;MACjB,MAAMiF,gBAAgB,GAAGhE,QAAQ,CAACC,cAAc,CAACf,KAAK,CAAC2C,KAAK,CAAC;MAC7D,IAAImC,gBAAgB,EACnBA,gBAAgB,CAACM,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;MAC7D9E,QAAQ,CAACsF,GAAG,CAAC,uBAAuB,CAAC;MACrCtF,QAAQ,CAACsF,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}