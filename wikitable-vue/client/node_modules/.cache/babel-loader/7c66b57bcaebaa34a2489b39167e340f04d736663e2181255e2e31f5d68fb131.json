{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-sort\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"icon-reset\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"header left-column\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"ÂØπÊØîÂ±ûÊÄß\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"header right-column\"\n};\nconst _hoisted_7 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_8 = [\"onMouseover\"];\nconst _hoisted_9 = {\n  class: \"field-name\"\n};\nconst _hoisted_10 = {\n  class: \"field-type\"\n};\nconst _hoisted_11 = {\n  class: \"icon-actions\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"difference-score\"\n};\nconst _hoisted_15 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_16 = {\n  class: \"modal-content\"\n};\nconst _hoisted_17 = {\n  class: \"chart-container\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"chart-legend\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"sort-controls\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.sortByDifference,\n    class: \"sort-btn\"\n  }, [_hoisted_2, _createTextVNode(\" ÊåâÂ∑ÆÂºÇÊéíÂ∫è \")]), _createElementVNode(\"button\", {\n    onClick: $setup.resetSort,\n    class: \"sort-btn\"\n  }, [_hoisted_3, _createTextVNode(\" ÈáçÁΩÆÊéíÂ∫è \")])]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"comparison-grid\", {\n      'is-sorted': $setup.isSortedByDifference\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.leftInfobox, field.key, 'left'),\n      onMouseout: _cache[0] || (_cache[0] = $event => $setup.unhoverInfobox('left')),\n      onClick: $event => $setup.showFullChart($setup.leftInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), _createElementVNode(\"div\", {\n      class: \"cell middle-column\",\n      onMouseover: $event => $setup.hoverBothInfoboxes(field.key),\n      onMouseout: _cache[1] || (_cache[1] = $event => $setup.unhoverBothInfoboxes())\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(field.typeLabel), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", {\n      class: \"icon-btn compare\",\n      title: \"ÂØπÊØîÂàÜÊûê\",\n      onClick: $event => $setup.handleMiddleColumnClick(field)\n    }, \" ‚öñÔ∏è \", 8 /* PROPS */, _hoisted_12), _createElementVNode(\"span\", {\n      class: \"icon-btn merge\",\n      title: \"ÂêàÂπ∂ÂõæË°®\",\n      onClick: $event => $setup.showCombinedChart(field)\n    }, \" üìä \", 8 /* PROPS */, _hoisted_13)]), $setup.isSortedByDifference ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \" Â∑ÆÂºÇÂ∫¶: \" + _toDisplayString($setup.calculateDifferenceScore($setup.getField($setup.leftInfobox, field.key), $setup.getField($setup.rightInfobox, field.key), field.type, field.key).toFixed(1)) + \"% \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.rightInfobox, field.key, 'right'),\n      onMouseout: _cache[2] || (_cache[2] = $event => $setup.unhoverInfobox('right')),\n      onClick: $event => $setup.showFullChart($setup.rightInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_15)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.closeFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.closeFullChart\n  }, \"√ó\"), _createElementVNode(\"h3\", null, _toDisplayString($setup.currentChart.title) + \" - \" + _toDisplayString($setup.currentChart.field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_17, [_createVNode($setup[\"FullChart\"], {\n    field: $setup.currentChart.data,\n    type: $setup.currentChart.field.type,\n    visualization: $setup.currentChart.field.visualization\n  }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])]), $setup.currentChart.field.legend ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString($setup.currentChart.field.legend), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","onClick","$setup","sortByDifference","_hoisted_2","_createTextVNode","resetSort","_hoisted_3","_normalizeClass","isSortedByDifference","_hoisted_4","_toDisplayString","leftInfobox","title","_hoisted_5","_hoisted_6","rightInfobox","_Fragment","_renderList","comparableFields","field","onMouseover","$event","hoverInfobox","onMouseout","_cache","unhoverInfobox","showFullChart","_createVNode","getField","type","visualization","_hoisted_7","hoverBothInfoboxes","unhoverBothInfoboxes","_hoisted_9","_hoisted_10","typeLabel","_hoisted_11","handleMiddleColumnClick","_hoisted_12","showCombinedChart","_hoisted_13","_hoisted_14","calculateDifferenceScore","toFixed","_createCommentVNode","_hoisted_8","_hoisted_15","showFullChartModal","_withModifiers","closeFullChart","_hoisted_16","currentChart","_hoisted_17","data","legend","_hoisted_18"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"sort-controls\">\r\n\t\t\t<button @click=\"sortByDifference\" class=\"sort-btn\">\r\n\t\t\t\t<i class=\"icon-sort\"></i> ÊåâÂ∑ÆÂºÇÊéíÂ∫è\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"resetSort\" class=\"sort-btn\">\r\n\t\t\t\t<i class=\"icon-reset\"></i> ÈáçÁΩÆÊéíÂ∫è\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\" :class=\"{ 'is-sorted': isSortedByDifference }\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">ÂØπÊØîÂ±ûÊÄß</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"ÂØπÊØîÂàÜÊûê\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t‚öñÔ∏è\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"ÂêàÂπ∂ÂõæË°®\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\tüìä\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"isSortedByDifference\" class=\"difference-score\">\r\n\t\t\t\t\t\tÂ∑ÆÂºÇÂ∫¶:\r\n\t\t\t\t\t\t{{\r\n\t\t\t\t\t\t\tcalculateDifferenceScore(\r\n\t\t\t\t\t\t\t\tgetField(leftInfobox, field.key),\r\n\t\t\t\t\t\t\t\tgetField(rightInfobox, field.key),\r\n\t\t\t\t\t\t\t\tfield.type,\r\n\t\t\t\t\t\t\t\tfield.key\r\n\t\t\t\t\t\t\t).toFixed(1)\r\n\t\t\t\t\t\t}}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">√ó</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst originalFieldsOrder = ref([]);\r\n\tconst isSortedByDifference = ref(false);\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(‰∏á‰∫øÁæéÂÖÉ)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"ÂõΩÂÜÖÁîü‰∫ßÊÄªÂÄºÔºàÂçï‰ΩçÔºö‰∏á‰∫øÁæéÂÖÉÔºâ\",\r\n\t\t\timportance: 1.5\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(‰∫∫)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"‰∫∫Âè£Êï∞ÈáèÔºàÂçï‰ΩçÔºö‰∫ø‰∫∫Ôºâ\",\r\n\t\t\timportance: 1.3\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP per capita\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(ÁæéÂÖÉ)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"‰∫∫ÂùáGDPÔºàÂçï‰ΩçÔºöÁæéÂÖÉÔºâ\",\r\n\t\t\timportance: 1.4\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDPÂπ¥Â¢ûÈïøÁéáÔºà%Ôºâ\",\r\n\t\t\timportance: 1.2\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"Ê∂àË¥πËÄÖ‰ª∑Ê†ºÊåáÊï∞ÂèòÂåñ\",\r\n\t\t\timportance: 1.1\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"Âä≥Âä®ÂäõÂàÜÂ∏ÉÊØî‰æã\",\r\n\t\t\timportance: 1.0\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"ÊñáÊú¨\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"ÂÖ®ÁêÉGDPÊéíÂêç\",\r\n\t\t\timportance: 0.8\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Government type\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"ÊñáÊú¨\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"ÊîøÂ∫úÁ±ªÂûã\",\r\n\t\t\timportance: 0.9\r\n\t\t}\r\n\t];\r\n\r\n\tconst calculateDifferenceScore = (\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tfieldType,\r\n\t\tfieldKey\r\n\t) => {\r\n\t\tif (!leftData?.length || !rightData?.length) return 0;\r\n\r\n\t\t// Ëé∑ÂèñÂ≠óÊÆµÈáçË¶ÅÊÄßÊùÉÈáç\r\n\t\tconst fieldConfig = COMPARABLE_FIELDS.find(f => f.key === fieldKey);\r\n\t\tconst importanceWeight = fieldConfig?.importance || 1.0;\r\n\r\n\t\t// 1. Â§ÑÁêÜÊñáÊú¨Á±ªÂûã\r\n\t\tif (fieldType === \"text\") {\r\n\t\t\tconst leftText = leftData[0]?.toString().trim() || \"\";\r\n\t\t\tconst rightText = rightData[0]?.toString().trim() || \"\";\r\n\r\n\t\t\t// ÂÆåÂÖ®Áõ∏ÂêåÁöÑÊñáÊú¨\r\n\t\t\tif (leftText === rightText) return 5 * importanceWeight;\r\n\r\n\t\t\t// ÂÆåÂÖ®‰∏çÂêåÁöÑÊñáÊú¨\r\n\t\t\tconst similarity = calculateTextSimilarity(leftText, rightText);\r\n\t\t\treturn (100 - similarity * 100) * importanceWeight;\r\n\t\t}\r\n\r\n\t\t// 2. Â§ÑÁêÜÊï∞ÂÄºÁ±ªÂûã\r\n\t\tconst leftValue = parseFloat(leftData[0]) || 0;\r\n\t\tconst rightValue = parseFloat(rightData[0]) || 0;\r\n\r\n\t\t// 3. ËÆ°ÁÆóÂü∫Á°ÄÂ∑ÆÂºÇÂàÜÊï∞\r\n\t\tlet baseScore = 0;\r\n\r\n\t\t// Ë∂ãÂäøÁõ∏ÂèçÁöÑÊÉÖÂÜµÔºà‰∏Ä‰∏™Ê≠£‰∏Ä‰∏™Ë¥üÔºâ\r\n\t\tif (leftValue * rightValue < 0) {\r\n\t\t\tbaseScore = 100; // ÊúÄÈ´ò‰ºòÂÖàÁ∫ß\r\n\t\t}\r\n\t\t// ÊôÆÈÄöÊï∞ÂÄºÂ∑ÆÂºÇ\r\n\t\telse {\r\n\t\t\tconst maxValue = Math.max(Math.abs(leftValue), Math.abs(rightValue), 1);\r\n\t\t\tconst difference = Math.abs(leftValue - rightValue);\r\n\t\t\tbaseScore = (difference / maxValue) * 100;\r\n\r\n\t\t\t// ÂØπÁâπÂà´Â§ßÁöÑÊï∞ÂÄºÁªô‰∫àÈ¢ùÂ§ñÊùÉÈáç\r\n\t\t\tif (maxValue > 1000) baseScore = Math.min(baseScore * 1.2, 100);\r\n\t\t}\r\n\r\n\t\t// 4. Â§ÑÁêÜÊï∞ÁªÑÊï∞ÊçÆÔºàË∂ãÂäøÂàÜÊûêÔºâ\r\n\t\tif (\r\n\t\t\tArray.isArray(leftData) &&\r\n\t\t\tArray.isArray(rightData) &&\r\n\t\t\tleftData.length > 1\r\n\t\t) {\r\n\t\t\tconst leftTrend = calculateTrend(leftData);\r\n\t\t\tconst rightTrend = calculateTrend(rightData);\r\n\r\n\t\t\t// Ë∂ãÂäøÁõ∏Âèç\r\n\t\t\tif (leftTrend * rightTrend < 0) {\r\n\t\t\t\tbaseScore = Math.max(baseScore, 100); // Ë∂ãÂäøÁõ∏ÂèçÊúÄÈ´ò‰ºòÂÖàÁ∫ß\r\n\t\t\t}\r\n\t\t\t// Ë∂ãÂäøÁõ∏Âêå‰ΩÜÂ∑ÆÂºÇÂ§ß\r\n\t\t\telse {\r\n\t\t\t\tconst trendDiff = Math.abs(leftTrend - rightTrend);\r\n\t\t\t\tbaseScore = Math.max(baseScore, trendDiff * 15);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Math.min(baseScore * importanceWeight, 100);\r\n\t};\r\n\r\n\tconst calculateTextSimilarity = (text1, text2) => {\r\n\t\tif (!text1 || !text2) return 0;\r\n\r\n\t\t// ÁÆÄÂçïÁõ∏‰ººÂ∫¶ËÆ°ÁÆóÔºöÂü∫‰∫éÂÖ±ÂêåËØçÊ±áÁöÑÊØî‰æã\r\n\t\tconst words1 = text1.toLowerCase().split(/\\s+/);\r\n\t\tconst words2 = text2.toLowerCase().split(/\\s+/);\r\n\r\n\t\tconst commonWords = words1.filter(word => words2.includes(word));\r\n\t\tconst maxLength = Math.max(words1.length, words2.length);\r\n\r\n\t\treturn maxLength > 0 ? commonWords.length / maxLength : 0;\r\n\t};\r\n\r\n\tconst calculateTrend = values => {\r\n\t\tconst numericValues = values.map(v => parseFloat(v)).filter(v => !isNaN(v));\r\n\t\tif (numericValues.length < 2) return 0;\r\n\r\n\t\tconst x = numericValues.map((_, i) => i);\r\n\t\tconst y = numericValues;\r\n\r\n\t\t// ÁÆÄÂçïÁ∫øÊÄßÂõûÂΩíËÆ°ÁÆóÊñúÁéá\r\n\t\tconst n = x.length;\r\n\t\tconst sumX = x.reduce((a, b) => a + b, 0);\r\n\t\tconst sumY = y.reduce((a, b) => a + b, 0);\r\n\t\tconst sumXY = x.reduce((a, _, i) => a + x[i] * y[i], 0);\r\n\t\tconst sumXX = x.reduce((a, b) => a + b * b, 0);\r\n\r\n\t\tconst slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\r\n\t\treturn slope;\r\n\t};\r\n\r\n\tconst sortByDifference = () => {\r\n\t\tif (isSortedByDifference.value) return;\r\n\r\n\t\tconst fieldsWithDifference = comparableFields.value.map(field => {\r\n\t\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...field,\r\n\t\t\t\tdifferenceScore: calculateDifferenceScore(\r\n\t\t\t\t\tleftData,\r\n\t\t\t\t\trightData,\r\n\t\t\t\t\tfield.type,\r\n\t\t\t\t\tfield.key\r\n\t\t\t\t),\r\n\t\t\t\tleftData,\r\n\t\t\t\trightData\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// Êõ¥Á≤æÁªÜÁöÑÊéíÂ∫èËßÑÂàô\r\n\t\tfieldsWithDifference.sort((a, b) => {\r\n\t\t\t// 1. È¶ñÂÖàÊåâÂ∑ÆÂºÇÂàÜÊï∞ÊéíÂ∫è\r\n\t\t\tif (Math.abs(b.differenceScore - a.differenceScore) > 5) {\r\n\t\t\t\treturn b.differenceScore - a.differenceScore;\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Áõ∏‰ººÂàÜÊï∞Êó∂ÔºåÈáçË¶ÅÂ≠óÊÆµ‰ºòÂÖà\r\n\t\t\tif (b.importance !== a.importance) {\r\n\t\t\t\treturn b.importance - a.importance;\r\n\t\t\t}\r\n\r\n\t\t\t// 3. Áõ∏ÂêåÈáçË¶ÅÊÄßÊó∂ÔºåÊåâÂ≠óÊÆµÂêçÁß∞ÊéíÂ∫è\r\n\t\t\treturn a.key.localeCompare(b.key);\r\n\t\t});\r\n\r\n\t\tcomparableFields.value = fieldsWithDifference;\r\n\t\tisSortedByDifference.value = true;\r\n\t};\r\n\r\n\tconst resetSort = () => {\r\n\t\tif (!isSortedByDifference.value) return;\r\n\r\n\t\tcomparableFields.value = [...originalFieldsOrder.value];\r\n\t\tisSortedByDifference.value = false;\r\n\t};\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `ÂêàÂπ∂ÂõæË°® - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\tconst fields = COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\r\n\t\tif (!originalFieldsOrder.value.length) {\r\n\t\t\toriginalFieldsOrder.value = [...fields];\r\n\t\t}\r\n\r\n\t\treturn fields;\r\n\t});\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"Êó†Ê†áÈ¢ò\",\r\n\t\t\ttype: data.type || \"Êú™Áü•Á±ªÂûã\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.sort-controls {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tpadding: 0 8px;\r\n\t}\r\n\r\n\t.sort-btn {\r\n\t\tpadding: 6px 12px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 13px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 5px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.sort-btn:hover {\r\n\t\tbackground-color: #e0e0e0;\r\n\t\tborder-color: #ccc;\r\n\t}\r\n\r\n\t.sort-btn i {\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.icon-sort::before {\r\n\t\tcontent: \"‚áÖ\";\r\n\t}\r\n\r\n\t.icon-reset::before {\r\n\t\tcontent: \"‚Ü∫\";\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.comparison-grid.is-sorted .cell {\r\n\t\topacity: 0.9;\r\n\t\ttransition: opacity 0.3s ease, transform 0.3s ease;\r\n\t}\r\n\r\n\t.comparison-grid.is-sorted .cell:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: translateY(-2px);\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.difference-score {\r\n\t\tfont-size: 10px;\r\n\t\tcolor: #d32f2f;\r\n\t\tfont-weight: bold;\r\n\t\tmargin-top: 4px;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: #ffebee;\r\n\t\tpadding: 2px;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}