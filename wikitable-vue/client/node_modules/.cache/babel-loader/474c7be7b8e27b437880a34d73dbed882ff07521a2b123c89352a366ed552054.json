{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport * as d3 from \"d3\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\"); // 用户输入的问题\n    const chatHistory = ref([]); // 历史对话记录\n    const selectText2 = ref(\"\"); // 左侧选中文本\n    const selectText3 = ref(\"\"); // 右侧选中文本\n\n    onMounted(() => {\n      // 监听来自 Div1 和 Div3 的图表交互事件\n      bus.on(\"chartInteraction\", eventData => {\n        if (eventData.source === \"div1\" || eventData.source === \"div3\") {\n          // 根据 eventData.data 更新 Div2 的图表\n          updateChart(eventData.data);\n        }\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"chartInteraction\");\n    });\n\n    // 更新图表\n    function updateChart(data) {\n      const chartContainer = document.querySelector(\".chart-container\");\n      if (!chartContainer) return;\n\n      // 高亮对应的数据点\n      const bars = chartContainer.querySelectorAll(\".bar\");\n      bars.forEach(bar => {\n        if (bar.__data__ === data) {\n          bar.style.fill = \"orange\"; // 高亮颜色\n        } else {\n          bar.style.fill = \"steelblue\"; // 默认颜色\n        }\n      });\n    }\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      updateChart,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      get d3() {\n        return d3;\n      },\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","d3","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","userQuestion","chatHistory","selectText2","selectText3","on","eventData","source","updateChart","data","off","chartContainer","document","querySelector","bars","querySelectorAll","forEach","bar","__data__","style","fill"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 图表容器 -->\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\" class=\"submit-btn\">合并数据可视化</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\"); // 用户输入的问题\r\n\tconst chatHistory = ref([]); // 历史对话记录\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\r\n\tonMounted(() => {\r\n\t\t// 监听来自 Div1 和 Div3 的图表交互事件\r\n\t\tbus.on(\"chartInteraction\", eventData => {\r\n\t\t\tif (eventData.source === \"div1\" || eventData.source === \"div3\") {\r\n\t\t\t\t// 根据 eventData.data 更新 Div2 的图表\r\n\t\t\t\tupdateChart(eventData.data);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"chartInteraction\");\r\n\t});\r\n\r\n\t// 更新图表\r\n\tfunction updateChart(data) {\r\n\t\tconst chartContainer = document.querySelector(\".chart-container\");\r\n\t\tif (!chartContainer) return;\r\n\r\n\t\t// 高亮对应的数据点\r\n\t\tconst bars = chartContainer.querySelectorAll(\".bar\");\r\n\t\tbars.forEach(bar => {\r\n\t\t\tif (bar.__data__ === data) {\r\n\t\t\t\tbar.style.fill = \"orange\"; // 高亮颜色\r\n\t\t\t} else {\r\n\t\t\t\tbar.style.fill = \"steelblue\"; // 默认颜色\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%; /* 固定宽度 */\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\t/* max-height: 200px; */\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 视觉内容容器 */\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1; /* 按钮宽度占满容器 */\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\t/* 新增提交按钮样式 */\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t.submit-btn:hover {\r\n\t\tbackground-color: #fb8c00;\r\n\t}\r\n\r\n\t.submit-btn:active {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n</style>\r\n"],"mappings":"AAwCC,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SACCC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,oBAAoB,EACpBC,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,QACZ,iBAAiB;;;;;;;;IAExB,MAAMC,YAAY,GAAGZ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,MAAMa,WAAW,GAAGb,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,MAAMc,WAAW,GAAGd,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,MAAMe,WAAW,GAAGf,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE7BC,SAAS,CAAC,MAAM;MACf;MACAE,GAAG,CAACa,EAAE,CAAC,kBAAkB,EAAEC,SAAS,IAAI;QACvC,IAAIA,SAAS,CAACC,MAAM,KAAK,MAAM,IAAID,SAAS,CAACC,MAAM,KAAK,MAAM,EAAE;UAC/D;UACAC,WAAW,CAACF,SAAS,CAACG,IAAI,CAAC;QAC5B;MACD,CAAC,CAAC;IACH,CAAC,CAAC;IAEFlB,WAAW,CAAC,MAAM;MACjBC,GAAG,CAACkB,GAAG,CAAC,kBAAkB,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,SAASF,WAAWA,CAACC,IAAI,EAAE;MAC1B,MAAME,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;MACjE,IAAI,CAACF,cAAc,EAAE;;MAErB;MACA,MAAMG,IAAI,GAAGH,cAAc,CAACI,gBAAgB,CAAC,MAAM,CAAC;MACpDD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAI;QACnB,IAAIA,GAAG,CAACC,QAAQ,KAAKT,IAAI,EAAE;UAC1BQ,GAAG,CAACE,KAAK,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;QAC5B,CAAC,MAAM;UACNH,GAAG,CAACE,KAAK,CAACC,IAAI,GAAG,WAAW,CAAC,CAAC;QAC/B;MACD,CAAC,CAAC;IACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}