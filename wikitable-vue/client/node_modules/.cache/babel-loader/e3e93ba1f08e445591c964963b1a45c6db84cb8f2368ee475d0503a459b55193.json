{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\n\n// 定义需要保留的关键字段（按section分类）\n\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const PRESERVED_FIELDS_BY_SECTION = {\n      Statistics: [\"Population\", \"GDP\", \"GDP rank\", \"GDP growth\", \"GDP per capita\", \"GDP per capita rank\", \"GDP by sector\", \"Inflation (CPI)\", \"Population below poverty line\", \"Gini coefficient\", \"Human Development Index\", \"Corruption Perceptions Index\", \"Labor force\", \"Labor force by occupation\", \"Unemployment\", \"Average gross salary\", \"Average net salary\", \"Main industries\"],\n      \"Public finances\": [\"Government debt\", \"Foreign reserves\", \"Budget balance\", \"Revenues\", \"Expenses\", \"Economic aid\", \"Credit rating\"]\n    };\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n    const div1InfoboxData = ref(null);\n    const div3InfoboxData = ref(null);\n    const showSuggestedQuestion = ref(false);\n    const suggestedQuestion = ref(\"\");\n    const currentFieldKey = ref(\"\");\n    const leftData = ref(null);\n    const rightData = ref(null);\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n\n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    };\n    const getLastAnalysis = () => {\n      const reversed = [...chatHistory.value].reverse();\n      const lastAssistantMsg = reversed.find(msg => msg.role === \"assistant\" && !msg.error);\n      return lastAssistantMsg ? lastAssistantMsg.content : \"\";\n    };\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n      bus.on(\"div1_InfoboxData\", data => {\n        div1InfoboxData.value = data;\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        div3InfoboxData.value = data;\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n\n      // 增强的Markdown转换\n      text = text.replace(/^# (.*$)/gm, \"<h1>$1</h1>\").replace(/^## (.*$)/gm, \"<h2>$1</h2>\").replace(/^### (.*$)/gm, \"<h3>$1</h3>\").replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\*(.*?)\\*/g, \"<em>$1</em>\").replace(/`(.*?)`/g, \"<code>$1</code>\").replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">').replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>').replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\").replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\").replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\").replace(/\\n\\n/g, \"<br><br>\").replace(/\\n/g, \"<br>\");\n      return `<div class=\"markdown-content\">${text}</div>`;\n    };\n\n    // 提取字段中的核心数据\n    const extractEssentialData = fieldData => {\n      if (!fieldData) return null;\n      const essential = {\n        value: fieldData.value,\n        type: fieldData.type\n      };\n\n      // 保留额外有用的属性\n      if (fieldData.unit) essential.unit = fieldData.unit;\n      if (fieldData.currency) essential.currency = fieldData.currency;\n\n      // 对于提取过的数据，保留raw值作为参考\n      if (fieldData.extracted) {\n        essential.raw = fieldData.raw;\n      }\n      return essential;\n    };\n\n    // 优化后的infobox简化函数\n    const simplifyInfobox = infobox => {\n      if (!infobox) return {};\n      const result = {\n        title: infobox.title,\n        type: infobox.type\n      };\n\n      // 处理每个section\n      if (infobox.sections) {\n        result.sections = {};\n        Object.entries(infobox.sections).forEach(_ref2 => {\n          let [sectionName, sectionData] = _ref2;\n          // 只处理我们关心的section\n          if (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\n            result.sections[sectionName] = {};\n            PRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\n              if (sectionData[fieldName]) {\n                // 处理字段值\n                if (Array.isArray(sectionData[fieldName])) {\n                  // 处理数组类型的字段\n                  result.sections[sectionName][fieldName] = sectionData[fieldName].map(item => {\n                    return extractEssentialData(item);\n                  });\n                } else {\n                  // 处理单个对象类型的字段\n                  result.sections[sectionName][fieldName] = extractEssentialData(sectionData[fieldName]);\n                }\n              }\n            });\n          }\n        });\n      }\n      return result;\n    };\n\n    // 判断是否为普通问题\n    const isGeneralQuestion = question => {\n      const explanationPattern = /(是什么|什么意思|解释|定义)/;\n      const comparePattern = /(对比|比较|差异|相比)/;\n      return explanationPattern.test(question) && !comparePattern.test(question);\n    };\n\n    // 判断是否为追问问题\n    const isFollowUpQuestion = question => {\n      const followUpPattern = /(原因|为何|为什么|如何导致|影响因素)/;\n      return followUpPattern.test(question);\n    };\n\n    // 添加助手消息并处理状态\n    const addAssistantMessage = content => {\n      chatHistory.value.push({\n        role: \"assistant\",\n        content: formatAnalysisResult(content),\n        timestamp: new Date().toLocaleString()\n      });\n\n      // 如果不是对比上下文的问题，重置对比状态\n      if (!currentFieldKey.value) {\n        leftData.value = null;\n        rightData.value = null;\n      }\n      scrollToBottom();\n    };\n\n    // 处理普通问题\n    const handleGeneralQuestion = async question => {\n      try {\n        const response = await api.post(\"ask_infobox\", {\n          question: question,\n          leftInfobox: simplifyInfobox(div1InfoboxData.value),\n          rightInfobox: simplifyInfobox(div3InfoboxData.value)\n        });\n        addAssistantMessage(response.answer);\n      } catch (error) {\n        console.error(\"提问失败:\", error);\n        addAssistantMessage(`提问失败: ${error.message || \"未知错误\"}`);\n      }\n    };\n\n    // 处理追问问题\n    const handleFollowUpQuestion = async question => {\n      try {\n        const response = await api.post(\"compare_attributes\", {\n          chartData: {\n            leftInfobox: simplifyInfobox(div1InfoboxData.value),\n            rightInfobox: simplifyInfobox(div3InfoboxData.value),\n            fieldKey: currentFieldKey.value\n          },\n          followUp: true,\n          previousAnalysis: getLastAnalysis()\n        });\n        addAssistantMessage(response.analysis);\n      } catch (error) {\n        console.error(\"追问失败:\", error);\n        addAssistantMessage(`追问失败: ${error.message || \"未知错误\"}`);\n      }\n    };\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        addAssistantMessage(\"问题不能为空\");\n        return;\n      }\n      const question = userQuestion.value;\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      showSuggestedQuestion.value = false;\n      isLoading.value = true;\n      try {\n        // 优先级：普通问题 > 对比追问 > 默认普通问题\n        if (isGeneralQuestion(question)) {\n          await handleGeneralQuestion(question);\n        } else if (currentFieldKey.value && isFollowUpQuestion(question)) {\n          await handleFollowUpQuestion(question);\n        } else {\n          await handleGeneralQuestion(question);\n        }\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n        addAssistantMessage(`请求失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const useSuggestedQuestion = () => {\n      userQuestion.value = suggestedQuestion.value;\n      showSuggestedQuestion.value = false;\n      nextTick(() => {\n        document.querySelector(\".input-container textarea\").focus();\n      });\n    };\n    const handleAttributeComparison = async _ref3 => {\n      let {\n        fieldKey,\n        leftData: incomingLeftData,\n        rightData: incomingRightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref3;\n      if (!incomingLeftData || !incomingRightData) {\n        addAssistantMessage(\"请先选择要对比的数据\");\n        return;\n      }\n      leftData.value = incomingLeftData;\n      rightData.value = incomingRightData;\n      currentFieldKey.value = fieldKey;\n      isLoading.value = true;\n      try {\n        addAssistantMessage(`正在对比分析<strong>${fieldKey}</strong>属性...`);\n        const requestPayload = {\n          chartData: {\n            leftData: leftData.value,\n            rightData: rightData.value,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType,\n            leftInfobox: simplifyInfobox(div1InfoboxData.value),\n            rightInfobox: simplifyInfobox(div3InfoboxData.value)\n          },\n          chartType: \"comparison\"\n        };\n        const response = await api.post(\"compare_attributes\", requestPayload);\n        addAssistantMessage(response.analysis);\n\n        // Generate suggested follow-up question\n        suggestedQuestion.value = `请结合其他属性深入分析${fieldKey}差异的原因`;\n        showSuggestedQuestion.value = true;\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        addAssistantMessage(`对比分析失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const __returned__ = {\n      PRESERVED_FIELDS_BY_SECTION,\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      div1InfoboxData,\n      div3InfoboxData,\n      showSuggestedQuestion,\n      suggestedQuestion,\n      currentFieldKey,\n      leftData,\n      rightData,\n      loadChatHistory,\n      scrollToBottom,\n      getLastAnalysis,\n      handleDiv1Event,\n      handleDiv3Event,\n      handleSelection,\n      getPlainTextFromSelection,\n      formatAnalysisResult,\n      extractEssentialData,\n      simplifyInfobox,\n      isGeneralQuestion,\n      isFollowUpQuestion,\n      addAssistantMessage,\n      handleGeneralQuestion,\n      handleFollowUpQuestion,\n      askQuestion,\n      useSuggestedQuestion,\n      handleAttributeComparison,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","PRESERVED_FIELDS_BY_SECTION","Statistics","userQuestion","chatHistory","selectText2","selectText3","div1RawData","div3RawData","isLoading","div1InfoboxData","div3InfoboxData","showSuggestedQuestion","suggestedQuestion","currentFieldKey","leftData","rightData","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","getLastAnalysis","reversed","reverse","lastAssistantMsg","find","msg","role","content","handleDiv1Event","data","handleSelection","handleDiv3Event","on","off","source","plainText","getPlainTextFromSelection","htmlContent","createElement","innerHTML","innerText","textContent","formatAnalysisResult","text","replace","extractEssentialData","fieldData","essential","type","unit","currency","extracted","raw","simplifyInfobox","infobox","result","title","sections","Object","entries","forEach","_ref2","sectionName","sectionData","fieldName","Array","isArray","map","item","isGeneralQuestion","question","explanationPattern","comparePattern","test","isFollowUpQuestion","followUpPattern","addAssistantMessage","push","timestamp","Date","toLocaleString","handleGeneralQuestion","response","api","post","leftInfobox","rightInfobox","answer","message","handleFollowUpQuestion","chartData","fieldKey","followUp","previousAnalysis","analysis","askQuestion","trim","useSuggestedQuestion","focus","handleAttributeComparison","_ref3","incomingLeftData","incomingRightData","leftTitle","rightTitle","fieldType","fieldLabel","requestPayload","chartType"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\" v-html=\"message.content\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- Suggested question prompt -->\r\n\t\t\t\t<div v-if=\"showSuggestedQuestion\" class=\"suggested-question\">\r\n\t\t\t\t\t<div class=\"suggestion-text\">建议深入分析的问题：</div>\r\n\t\t\t\t\t<div class=\"suggestion-content\" @click=\"useSuggestedQuestion\">\r\n\t\t\t\t\t\t{{ suggestedQuestion }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input-area\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\t// 定义需要保留的关键字段（按section分类）\r\n\tconst PRESERVED_FIELDS_BY_SECTION = {\r\n\t\tStatistics: [\r\n\t\t\t\"Population\",\r\n\t\t\t\"GDP\",\r\n\t\t\t\"GDP rank\",\r\n\t\t\t\"GDP growth\",\r\n\t\t\t\"GDP per capita\",\r\n\t\t\t\"GDP per capita rank\",\r\n\t\t\t\"GDP by sector\",\r\n\t\t\t\"Inflation (CPI)\",\r\n\t\t\t\"Population below poverty line\",\r\n\t\t\t\"Gini coefficient\",\r\n\t\t\t\"Human Development Index\",\r\n\t\t\t\"Corruption Perceptions Index\",\r\n\t\t\t\"Labor force\",\r\n\t\t\t\"Labor force by occupation\",\r\n\t\t\t\"Unemployment\",\r\n\t\t\t\"Average gross salary\",\r\n\t\t\t\"Average net salary\",\r\n\t\t\t\"Main industries\"\r\n\t\t],\r\n\t\t\"Public finances\": [\r\n\t\t\t\"Government debt\",\r\n\t\t\t\"Foreign reserves\",\r\n\t\t\t\"Budget balance\",\r\n\t\t\t\"Revenues\",\r\n\t\t\t\"Expenses\",\r\n\t\t\t\"Economic aid\",\r\n\t\t\t\"Credit rating\"\r\n\t\t]\r\n\t};\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\tconst showSuggestedQuestion = ref(false);\r\n\tconst suggestedQuestion = ref(\"\");\r\n\tconst currentFieldKey = ref(\"\");\r\n\r\n\tconst leftData = ref(null);\r\n\tconst rightData = ref(null);\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 滚动到底部\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst getLastAnalysis = () => {\r\n\t\tconst reversed = [...chatHistory.value].reverse();\r\n\t\tconst lastAssistantMsg = reversed.find(\r\n\t\t\tmsg => msg.role === \"assistant\" && !msg.error\r\n\t\t);\r\n\t\treturn lastAssistantMsg ? lastAssistantMsg.content : \"\";\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\r\n\t\t// 增强的Markdown转换\r\n\t\ttext = text\r\n\t\t\t.replace(/^# (.*$)/gm, \"<h1>$1</h1>\")\r\n\t\t\t.replace(/^## (.*$)/gm, \"<h2>$1</h2>\")\r\n\t\t\t.replace(/^### (.*$)/gm, \"<h3>$1</h3>\")\r\n\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\")\r\n\t\t\t.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\")\r\n\t\t\t.replace(/`(.*?)`/g, \"<code>$1</code>\")\r\n\t\t\t.replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\">')\r\n\t\t\t.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>')\r\n\t\t\t.replace(/(?:^|\\n)\\d+\\.\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\")\r\n\t\t\t.replace(/(?:^|\\n)\\>\\s+(.*)/g, \"<blockquote>$1</blockquote>\")\r\n\t\t\t.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\")\r\n\t\t\t.replace(/\\n\\n/g, \"<br><br>\")\r\n\t\t\t.replace(/\\n/g, \"<br>\");\r\n\r\n\t\treturn `<div class=\"markdown-content\">${text}</div>`;\r\n\t};\r\n\r\n\t// 提取字段中的核心数据\r\n\tconst extractEssentialData = fieldData => {\r\n\t\tif (!fieldData) return null;\r\n\r\n\t\tconst essential = {\r\n\t\t\tvalue: fieldData.value,\r\n\t\t\ttype: fieldData.type\r\n\t\t};\r\n\r\n\t\t// 保留额外有用的属性\r\n\t\tif (fieldData.unit) essential.unit = fieldData.unit;\r\n\t\tif (fieldData.currency) essential.currency = fieldData.currency;\r\n\r\n\t\t// 对于提取过的数据，保留raw值作为参考\r\n\t\tif (fieldData.extracted) {\r\n\t\t\tessential.raw = fieldData.raw;\r\n\t\t}\r\n\r\n\t\treturn essential;\r\n\t};\r\n\r\n\t// 优化后的infobox简化函数\r\n\tconst simplifyInfobox = infobox => {\r\n\t\tif (!infobox) return {};\r\n\r\n\t\tconst result = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\ttype: infobox.type\r\n\t\t};\r\n\r\n\t\t// 处理每个section\r\n\t\tif (infobox.sections) {\r\n\t\t\tresult.sections = {};\r\n\r\n\t\t\tObject.entries(infobox.sections).forEach(([sectionName, sectionData]) => {\r\n\t\t\t\t// 只处理我们关心的section\r\n\t\t\t\tif (PRESERVED_FIELDS_BY_SECTION[sectionName]) {\r\n\t\t\t\t\tresult.sections[sectionName] = {};\r\n\r\n\t\t\t\t\tPRESERVED_FIELDS_BY_SECTION[sectionName].forEach(fieldName => {\r\n\t\t\t\t\t\tif (sectionData[fieldName]) {\r\n\t\t\t\t\t\t\t// 处理字段值\r\n\t\t\t\t\t\t\tif (Array.isArray(sectionData[fieldName])) {\r\n\t\t\t\t\t\t\t\t// 处理数组类型的字段\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = sectionData[\r\n\t\t\t\t\t\t\t\t\tfieldName\r\n\t\t\t\t\t\t\t\t].map(item => {\r\n\t\t\t\t\t\t\t\t\treturn extractEssentialData(item);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// 处理单个对象类型的字段\r\n\t\t\t\t\t\t\t\tresult.sections[sectionName][fieldName] = extractEssentialData(\r\n\t\t\t\t\t\t\t\t\tsectionData[fieldName]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// 判断是否为普通问题\r\n\tconst isGeneralQuestion = question => {\r\n\t\tconst explanationPattern = /(是什么|什么意思|解释|定义)/;\r\n\t\tconst comparePattern = /(对比|比较|差异|相比)/;\r\n\t\treturn explanationPattern.test(question) && !comparePattern.test(question);\r\n\t};\r\n\r\n\t// 判断是否为追问问题\r\n\tconst isFollowUpQuestion = question => {\r\n\t\tconst followUpPattern = /(原因|为何|为什么|如何导致|影响因素)/;\r\n\t\treturn followUpPattern.test(question);\r\n\t};\r\n\r\n\t// 添加助手消息并处理状态\r\n\tconst addAssistantMessage = content => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: formatAnalysisResult(content),\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\r\n\t\t// 如果不是对比上下文的问题，重置对比状态\r\n\t\tif (!currentFieldKey.value) {\r\n\t\t\tleftData.value = null;\r\n\t\t\trightData.value = null;\r\n\t\t}\r\n\t\tscrollToBottom();\r\n\t};\r\n\r\n\t// 处理普通问题\r\n\tconst handleGeneralQuestion = async question => {\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\"ask_infobox\", {\r\n\t\t\t\tquestion: question,\r\n\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t});\r\n\t\t\taddAssistantMessage(response.answer);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"提问失败:\", error);\r\n\t\t\taddAssistantMessage(`提问失败: ${error.message || \"未知错误\"}`);\r\n\t\t}\r\n\t};\r\n\r\n\t// 处理追问问题\r\n\tconst handleFollowUpQuestion = async question => {\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value),\r\n\t\t\t\t\tfieldKey: currentFieldKey.value\r\n\t\t\t\t},\r\n\t\t\t\tfollowUp: true,\r\n\t\t\t\tpreviousAnalysis: getLastAnalysis()\r\n\t\t\t});\r\n\t\t\taddAssistantMessage(response.analysis);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"追问失败:\", error);\r\n\t\t\taddAssistantMessage(`追问失败: ${error.message || \"未知错误\"}`);\r\n\t\t}\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\taddAssistantMessage(\"问题不能为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 优先级：普通问题 > 对比追问 > 默认普通问题\r\n\t\t\tif (isGeneralQuestion(question)) {\r\n\t\t\t\tawait handleGeneralQuestion(question);\r\n\t\t\t} else if (currentFieldKey.value && isFollowUpQuestion(question)) {\r\n\t\t\t\tawait handleFollowUpQuestion(question);\r\n\t\t\t} else {\r\n\t\t\t\tawait handleGeneralQuestion(question);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\taddAssistantMessage(`请求失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst useSuggestedQuestion = () => {\r\n\t\tuserQuestion.value = suggestedQuestion.value;\r\n\t\tshowSuggestedQuestion.value = false;\r\n\t\tnextTick(() => {\r\n\t\t\tdocument.querySelector(\".input-container textarea\").focus();\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData: incomingLeftData,\r\n\t\trightData: incomingRightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!incomingLeftData || !incomingRightData) {\r\n\t\t\taddAssistantMessage(\"请先选择要对比的数据\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tleftData.value = incomingLeftData;\r\n\t\trightData.value = incomingRightData;\r\n\t\tcurrentFieldKey.value = fieldKey;\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\taddAssistantMessage(`正在对比分析<strong>${fieldKey}</strong>属性...`);\r\n\r\n\t\t\tconst requestPayload = {\r\n\t\t\t\tchartData: {\r\n\t\t\t\t\tleftData: leftData.value,\r\n\t\t\t\t\trightData: rightData.value,\r\n\t\t\t\t\tleftTitle,\r\n\t\t\t\t\trightTitle,\r\n\t\t\t\t\tfieldKey,\r\n\t\t\t\t\tfieldType,\r\n\t\t\t\t\tleftInfobox: simplifyInfobox(div1InfoboxData.value),\r\n\t\t\t\t\trightInfobox: simplifyInfobox(div3InfoboxData.value)\r\n\t\t\t\t},\r\n\t\t\t\tchartType: \"comparison\"\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await api.post(\"compare_attributes\", requestPayload);\r\n\t\t\taddAssistantMessage(response.analysis);\r\n\r\n\t\t\t// Generate suggested follow-up question\r\n\t\t\tsuggestedQuestion.value = `请结合其他属性深入分析${fieldKey}差异的原因`;\r\n\t\t\tshowSuggestedQuestion.value = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\taddAssistantMessage(`对比分析失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100vh;\r\n\t\tbackground: #f5f7fa;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\theight: 50vh;\r\n\t\tmin-height: 50vh;\r\n\t\toverflow: hidden;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\tscroll-behavior: smooth;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\theight: 30vh;\r\n\t\tmin-height: 30vh;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tmargin: 0 10px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n\t\toverflow: auto;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-area {\r\n\t\theight: 15vh;\r\n\t\tmin-height: 15vh;\r\n\t\tpadding: 15px;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-top: 1px solid #e0e0e0;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 15px 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tline-height: 1.6;\r\n\t\tposition: relative;\r\n\t\tmax-width: 85%;\r\n\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.message.user {\r\n\t\tbackground: #e3f2fd;\r\n\t\tmargin-left: auto;\r\n\t\tborder-bottom-right-radius: 4px;\r\n\t\tborder: 1px solid #bbdefb;\r\n\t}\r\n\r\n\t.message.assistant {\r\n\t\tbackground: #f8f9fa;\r\n\t\tmargin-right: auto;\r\n\t\tborder-bottom-left-radius: 4px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.message.error {\r\n\t\tbackground: #ffebee;\r\n\t\tborder-left: 4px solid #f44336;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tword-wrap: break-word;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.input-container textarea {\r\n\t\twidth: 100%;\r\n\t\tpadding: 12px 16px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 12px;\r\n\t\tresize: none;\r\n\t\tfont-size: 14px;\r\n\t\toutline: none;\r\n\t\tbackground: #f9f9f9;\r\n\t}\r\n\r\n\t.input-container textarea:focus {\r\n\t\tbackground: #ffffff;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.button-container button {\r\n\t\tbackground: #4285f4;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 20px;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.button-container button:hover {\r\n\t\tbackground: #3367d6;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\t.button-container button:disabled {\r\n\t\tbackground: #b3c6e0;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 15px;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\tborder: 3px solid rgba(66, 133, 244, 0.2);\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top: 3px solid #4285f4;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.markdown-content {\r\n\t\tline-height: 1.7;\r\n\t\tfont-size: 15px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.markdown-content h1 {\r\n\t\tfont-size: 1.5em;\r\n\t\tmargin: 20px 0 15px;\r\n\t\tpadding-bottom: 5px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.markdown-content h2 {\r\n\t\tfont-size: 1.3em;\r\n\t\tmargin: 18px 0 12px;\r\n\t\tcolor: #34495e;\r\n\t}\r\n\r\n\t.markdown-content h3 {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin: 15px 0 10px;\r\n\t\tcolor: #4285f4;\r\n\t}\r\n\r\n\t.markdown-content ul,\r\n\t.markdown-content ol {\r\n\t\tpadding-left: 25px;\r\n\t\tmargin: 12px 0;\r\n\t}\r\n\r\n\t.markdown-content li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.markdown-content ul li::before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #4285f4;\r\n\t\tposition: absolute;\r\n\t\tleft: -15px;\r\n\t}\r\n\r\n\t.markdown-content strong {\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.markdown-content em {\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.markdown-content code {\r\n\t\tbackground: rgba(66, 133, 244, 0.1);\r\n\t\tpadding: 2px 6px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\r\n\t\tfont-size: 0.9em;\r\n\t\tcolor: #d63384;\r\n\t}\r\n\r\n\t.markdown-content blockquote {\r\n\t\tborder-left: 3px solid #4285f4;\r\n\t\tpadding: 10px 15px;\r\n\t\tmargin: 15px 0;\r\n\t\tbackground: rgba(66, 133, 244, 0.05);\r\n\t\tcolor: #555;\r\n\t}\r\n\r\n\t.markdown-content a {\r\n\t\tcolor: #4285f4;\r\n\t\ttext-decoration: none;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.markdown-content a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n\r\n\t.suggested-question {\r\n\t\tmargin: 15px 0;\r\n\t\tpadding: 12px;\r\n\t\tbackground-color: #f5f7fa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px dashed #4285f4;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.suggested-question:hover {\r\n\t\tbackground-color: #e8f0fe;\r\n\t}\r\n\r\n\t.suggestion-text {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.suggestion-content {\r\n\t\tcolor: #4285f4;\r\n\t\tfont-weight: 500;\r\n\t\tpadding: 5px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}