{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d881255\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartEl\",\n  class: \"fixed-pie-chart\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\PieChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"fixed-pie-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t  data: {\r\n\t    type: Array,\r\n\t    default: () => [],\r\n\t    validator: data => {\r\n\t      return data.every(item => {\r\n\t        // 支持两种格式：\r\n\t        // 1. { name: \"Agriculture\", value: 22.8, year: \"2023\" }\r\n\t        // 2. \"Agriculture: 22.8% (2023)\"\r\n\t        return (\r\n\t          (item.name && !isNaN(item.value)) ||\r\n\t          (typeof item === 'string' && item.includes(':'))\r\n\t      });\r\n\t    }\r\n\t  },\r\n\t  title: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 标准化数据格式\r\n\tconst normalizedData = computed(() => {\r\n\t  return props.data.map(item => {\r\n\t    // 处理字符串格式 \"Label: 22.8% (2023)\"\r\n\t    if (typeof item === 'string') {\r\n\t      const match = item.match(/(.*?):\\s*([\\d.]+)%?\\s*(?:\\((\\d{4})\\))?/);\r\n\t      if (match) {\r\n\t        return {\r\n\t          name: match[1].trim(),\r\n\t          value: parseFloat(match[2]),\r\n\t          year: match[3] || ''\r\n\t        };\r\n\t      }\r\n\t      return { name: item, value: 0 };\r\n\t    }\r\n\t    // 处理对象格式\r\n\t    return {\r\n\t      name: item.name,\r\n\t      value: parseFloat(item.value)),\r\n\t      year: item.year || ''\r\n\t    };\r\n\t  }).filter(item => !isNaN(item.value));\r\n\t});\r\n\r\n\t// 计算比例（确保总和为100%）\r\n\tconst proportionalData = computed(() => {\r\n\t  const total = normalizedData.value.reduce((sum, item) => sum + Math.abs(item.value), 0);\r\n\t  return normalizedData.value.map(item => ({\r\n\t    ...item,\r\n\t    displayValue: total > 0 ? (item.value / total * 100) : 0\r\n\t  }));\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t  if (!chartEl.value || proportionalData.value.length === 0) return;\r\n\r\n\t  chartInstance = echarts.init(chartEl.value);\r\n\r\n\t  const option = {\r\n\t    title: {\r\n\t      text: props.title,\r\n\t      left: 'center',\r\n\t      top: 10,\r\n\t      textStyle: {\r\n\t        fontSize: 16,\r\n\t        fontWeight: 'bold'\r\n\t      }\r\n\t    },\r\n\t    tooltip: {\r\n\t      trigger: 'item',\r\n\t      formatter: params => {\r\n\t        const data = proportionalData.value[params.dataIndex];\r\n\t        return `\r\n\t          <div style=\"font-weight:bold\">${data.name}</div>\r\n\t          <div>比例: ${params.percent}%</div>\r\n\t          ${data.year ? `<div>年份: ${data.year}</div>` : ''}\r\n\t          <div>原始值: ${data.value}%</div>\r\n\t        `;\r\n\t      }\r\n\t    },\r\n\t    legend: {\r\n\t      orient: 'vertical',\r\n\t      right: 10,\r\n\t      top: 'center',\r\n\t      formatter: name => {\r\n\t        const item = proportionalData.value.find(d => d.name === name);\r\n\t        return `${name}: ${item?.value}%`;\r\n\t      }\r\n\t    },\r\n\t    series: [{\r\n\t      type: 'pie',\r\n\t      radius: ['40%', '70%'],\r\n\t      center: ['50%', '55%'],\r\n\t      data: proportionalData.value.map((item, index) => ({\r\n\t        name: item.name,\r\n\t        value: item.displayValue,\r\n\t        itemStyle: {\r\n\t          color: [\r\n\t            '#5470c6', '#91cc75', '#fac858',\r\n\t            '#ee6666', '#73c0de', '#3ba272',\r\n\t            '#9a60b4', '#ea7ccc'\r\n\t          ][index % 8]\r\n\t        },\r\n\t        label: {\r\n\t          formatter: `{b}: {d}%`\r\n\t        }\r\n\t      })),\r\n\t      emphasis: {\r\n\t        itemStyle: {\r\n\t          shadowBlur: 10,\r\n\t          shadowOffsetX: 0,\r\n\t          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n\t        }\r\n\t      }\r\n\t    }]\r\n\t  };\r\n\r\n\t  chartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t  initChart();\r\n\t  window.addEventListener('resize', () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(() => [props.data, props.title], initChart, { deep: true });\r\n</script>\r\n\r\n<style scoped>\r\n\t.fixed-pie-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC;;;uBAAzBC,mBAAA,CAAiD,OAAjDC,UAAiD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}