{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6e764bd2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"causal-flow\"\n};\nconst _hoisted_2 = {\n  class: \"chain-country\"\n};\nconst _hoisted_3 = {\n  class: \"steps-container\"\n};\nconst _hoisted_4 = {\n  class: \"step-main\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"step-evidence\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"evidence-icon\"\n}, \"üìä\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"evidence-text\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"step-arrow\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.chains, (chain, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chain-container\"\n    }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($setup.getCountryName(chain.country)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(chain.steps, (step, i) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: i,\n        class: \"step-node\",\n        style: _normalizeStyle($setup.nodeStyle(chain.country))\n      }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(step.text), 1 /* TEXT */), step.evidence ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"span\", _hoisted_7, _toDisplayString(step.evidence), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), i < chain.steps.length - 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"‚Üí\")) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","chains","chain","index","_hoisted_2","_toDisplayString","$setup","getCountryName","country","_hoisted_3","steps","step","i","style","_normalizeStyle","nodeStyle","_hoisted_4","text","evidence","_hoisted_5","_hoisted_6","_hoisted_7","_createCommentVNode","length","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CausalFlowChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"causal-flow\">\r\n\t\t<div v-for=\"(chain, index) in chains\" :key=\"index\" class=\"chain-container\">\r\n\t\t\t<div class=\"chain-country\">{{ getCountryName(chain.country) }}</div>\r\n\t\t\t<div class=\"steps-container\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(step, i) in chain.steps\"\r\n\t\t\t\t\t:key=\"i\"\r\n\t\t\t\t\tclass=\"step-node\"\r\n\t\t\t\t\t:style=\"nodeStyle(chain.country)\">\r\n\t\t\t\t\t<div class=\"step-main\">{{ step.text }}</div>\r\n\t\t\t\t\t<div v-if=\"step.evidence\" class=\"step-evidence\">\r\n\t\t\t\t\t\t<span class=\"evidence-icon\">üìä</span>\r\n\t\t\t\t\t\t<span class=\"evidence-text\">{{ step.evidence }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"i < chain.steps.length - 1\" class=\"step-arrow\">‚Üí</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { defineProps } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tchains: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst getCountryName = code => {\r\n\t\tconst countryMap = {\r\n\t\t\tkorea: \"Èü©ÂõΩ\",\r\n\t\t\tjapan: \"Êó•Êú¨\"\r\n\t\t};\r\n\t\treturn countryMap[code] || code;\r\n\t};\r\n\r\n\tconst nodeStyle = country => {\r\n\t\tconst styles = {\r\n\t\t\tkorea: {\r\n\t\t\t\tbackgroundColor: \"#e3f2fd\",\r\n\t\t\t\tborderColor: \"#64b5f6\"\r\n\t\t\t},\r\n\t\t\tjapan: {\r\n\t\t\t\tbackgroundColor: \"#f8e3fd\",\r\n\t\t\t\tborderColor: \"#ce93d8\"\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn styles[country] || {};\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.causal-flow {\r\n\t\twidth: 100%;\r\n\t\tpadding: 10px;\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.chain-container {\r\n\t\tmargin: 15px 0;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #fafafa;\r\n\t\tborder-radius: 6px;\r\n\t}\r\n\r\n\t.chain-country {\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 8px;\r\n\t\tpadding-left: 10px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.steps-container {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex-wrap: nowrap;\r\n\t\tgap: 8px;\r\n\t\toverflow-x: auto;\r\n\t\tpadding-bottom: 5px;\r\n\t}\r\n\r\n\t.step-node {\r\n\t\tflex-shrink: 0;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-radius: 6px;\r\n\t\tborder: 2px solid;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-width: 120px;\r\n\t\tposition: relative;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.step-node:hover {\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.step-main {\r\n\t\tfont-size: 13px;\r\n\t\tline-height: 1.3;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.step-evidence {\r\n\t\tfont-size: 11px;\r\n\t\tcolor: #666;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tborder-top: 1px dashed rgba(0, 0, 0, 0.1);\r\n\t\tpadding-top: 4px;\r\n\t}\r\n\r\n\t.evidence-icon {\r\n\t\tmargin-right: 4px;\r\n\t\tfont-size: 10px;\r\n\t}\r\n\r\n\t.step-arrow {\r\n\t\tposition: absolute;\r\n\t\tright: -20px;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t\tcolor: #888;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\t/* ÂìçÂ∫îÂºèËÆæËÆ° */\r\n\t@media (max-width: 768px) {\r\n\t\t.steps-container {\r\n\t\t\tflex-wrap: wrap;\r\n\t\t}\r\n\r\n\t\t.step-node {\r\n\t\t\tmin-width: calc(50% - 10px);\r\n\t\t\tmargin-bottom: 8px;\r\n\t\t}\r\n\r\n\t\t.step-arrow {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.chain-country {\r\n\t\t\tfont-size: 13px;\r\n\t\t}\r\n\r\n\t\t.step-main {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\r\n\t\t.step-evidence {\r\n\t\t\tfont-size: 10px;\r\n\t\t}\r\n\t}\r\n\r\n\t/* ÊªöÂä®Êù°Ê†∑Âºè */\r\n\t.steps-container::-webkit-scrollbar {\r\n\t\theight: 4px;\r\n\t}\r\n\r\n\t.steps-container::-webkit-scrollbar-track {\r\n\t\tbackground: #f1f1f1;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t.steps-container::-webkit-scrollbar-thumb {\r\n\t\tbackground: #888;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n\r\n\t.steps-container::-webkit-scrollbar-thumb:hover {\r\n\t\tbackground: #555;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAiB;;EAMrBA,KAAK,EAAC;AAAW;;EAV3BC,GAAA;EAW+BD,KAAK,EAAC;;gEAC/BE,mBAAA,CAAqC;EAA/BF,KAAK,EAAC;AAAe,GAAC,IAAE;;EACxBA,KAAK,EAAC;AAAe;;EAbjCC,GAAA;EAe4CD,KAAK,EAAC;;;uBAdjDG,mBAAA,CAkBM,OAlBNC,UAkBM,I,kBAjBLD,mBAAA,CAgBME,SAAA,QAlBRC,WAAA,CAEgCC,MAAA,CAAAC,MAAM,EAFtC,CAEeC,KAAK,EAAEC,KAAK;yBAAzBP,mBAAA,CAgBM;MAhBiCF,GAAG,EAAES,KAAK;MAAEV,KAAK,EAAC;QACxDE,mBAAA,CAAoE,OAApES,UAAoE,EAAAC,gBAAA,CAAtCC,MAAA,CAAAC,cAAc,CAACL,KAAK,CAACM,OAAO,mBAC1Db,mBAAA,CAaM,OAbNc,UAaM,I,kBAZLb,mBAAA,CAWME,SAAA,QAhBVC,WAAA,CAMyBG,KAAK,CAACQ,KAAK,EANpC,CAMaC,IAAI,EAAEC,CAAC;2BADhBhB,mBAAA,CAWM;QATJF,GAAG,EAAEkB,CAAC;QACPnB,KAAK,EAAC,WAAW;QAChBoB,KAAK,EATXC,eAAA,CASaR,MAAA,CAAAS,SAAS,CAACb,KAAK,CAACM,OAAO;UAC/Bb,mBAAA,CAA4C,OAA5CqB,UAA4C,EAAAX,gBAAA,CAAlBM,IAAI,CAACM,IAAI,kBACxBN,IAAI,CAACO,QAAQ,I,cAAxBtB,mBAAA,CAGM,OAHNuB,UAGM,GAFLC,UAAqC,EACrCzB,mBAAA,CAAsD,QAAtD0B,UAAsD,EAAAhB,gBAAA,CAAvBM,IAAI,CAACO,QAAQ,iB,KAblDI,mBAAA,gBAegBV,CAAC,GAAGV,KAAK,CAACQ,KAAK,CAACa,MAAM,Q,cAAjC3B,mBAAA,CAAiE,OAAjE4B,UAAiE,EAAP,GAAC,KAfhEF,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}