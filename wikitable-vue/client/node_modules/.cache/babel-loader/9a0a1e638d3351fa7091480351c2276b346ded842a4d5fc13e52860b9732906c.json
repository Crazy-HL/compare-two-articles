{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9d3193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"文章大纲\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"outline-container\",\n    style: _normalizeStyle($setup.outlineContainerStyle)\n  }, [_createCommentVNode(\" 大纲切换按钮 \"), _createElementVNode(\"button\", {\n    onClick: $setup.toggleOutline,\n    class: \"toggle-btn\"\n  }, _toDisplayString($setup.isVisible ? \"隐藏大纲\" : \"显示大纲\"), 1 /* TEXT */), _createCommentVNode(\" 文章大纲（仅在 isVisible 为 true 时显示） \"), $setup.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"outline\",\n    style: _normalizeStyle($setup.outlineStyle)\n  }, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outline, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"a\", {\n      href: '#' + item.id\n    }, _toDisplayString(item.text), 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","class","style","_normalizeStyle","$setup","outlineContainerStyle","_createCommentVNode","onClick","toggleOutline","isVisible","key","outlineStyle","_hoisted_1","_Fragment","_renderList","outline","item","id","href","text","_hoisted_2"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div class=\"outline-container\" :style=\"outlineContainerStyle\">\r\n\t\t<!-- 大纲切换按钮 -->\r\n\t\t<button @click=\"toggleOutline\" class=\"toggle-btn\">\r\n\t\t\t{{ isVisible ? \"隐藏大纲\" : \"显示大纲\" }}\r\n\t\t</button>\r\n\r\n\t\t<!-- 文章大纲（仅在 isVisible 为 true 时显示） -->\r\n\t\t<div v-if=\"isVisible\" class=\"outline\" :style=\"outlineStyle\">\r\n\t\t\t<h2>文章大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li v-for=\"item in outline\" :key=\"item.id\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\">{{ item.text }}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, computed, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML 内容\r\n\t\tdivId: String // 组件对应的 divId\r\n\t});\r\n\r\n\tconst isVisible = ref(false); // 控制大纲显示/隐藏\r\n\tconst outline = ref([]);\r\n\r\n\t// 切换大纲的显示状态\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// 解析文章内容，生成大纲\r\n\tconst extractOutline = content => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst outlineItems = [];\r\n\r\n\t\theadings.forEach(heading => {\r\n\t\t\tconst id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${\r\n\t\t\t\tprops.divId\r\n\t\t\t}`;\r\n\t\t\theading.id = id;\r\n\t\t\toutlineItems.push({\r\n\t\t\t\tid,\r\n\t\t\t\ttext: heading.textContent,\r\n\t\t\t\tlevel: parseInt(heading.tagName.charAt(1))\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn outlineItems;\r\n\t};\r\n\r\n\t// 监听 content 变化，更新大纲\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = newContent ? extractOutline(newContent) : [];\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t});\r\n\r\n\t// 计算 **按钮的位置**\r\n\tconst outlineContainerStyle = computed(() => {\r\n\t\tif (props.divId === \"Div1\") {\r\n\t\t\treturn { position: \"absolute\", top: \"20px\", right: \"20px\" }; // 右上角\r\n\t\t} else if (props.divId === \"Div3\") {\r\n\t\t\treturn { position: \"absolute\", top: \"20px\", left: \"20px\" }; // 左上角\r\n\t\t}\r\n\t\treturn {};\r\n\t});\r\n\r\n\t// 计算 **大纲的展开方向**\r\n\tconst outlineStyle = computed(() => {\r\n\t\tif (props.divId === \"Div1\") {\r\n\t\t\treturn { position: \"absolute\", top: \"0px\", right: \"50px\" }; // 向左展开\r\n\t\t} else if (props.divId === \"Div3\") {\r\n\t\t\treturn { position: \"absolute\", top: \"0px\", left: \"50px\" }; // 向右展开\r\n\t\t}\r\n\t\treturn {};\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 确保大纲的容器与每个 div 独立存在 */\r\n\t.outline-container {\r\n\t\tposition: absolute;\r\n\t\ttop: 20px;\r\n\t\tright: 20px;\r\n\t\tz-index: 1000;\r\n\t\tmax-width: 300px;\r\n\t\tbackground: white;\r\n\t}\r\n\r\n\t/* 让按钮始终与当前 div 绑定 */\r\n\t.toggle-btn {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-radius: 5px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tmargin-bottom: 5px;\r\n\t\tposition: absolute; /* 确保按钮可以定位 */\r\n\t}\r\n\r\n\t.toggle-btn:hover {\r\n\t\tbackground-color: #005f8d;\r\n\t}\r\n\r\n\t/* 大纲容器 */\r\n\t.outline {\r\n\t\tbackground-color: white;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 10px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.outline h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.outline a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n"],"mappings":";;gEASGA,mBAAA,CAAa,YAAT,MAAI;mBATX;;uBACCC,mBAAA,CAeM;IAfDC,KAAK,EAAC,mBAAmB;IAAEC,KAAK,EADtCC,eAAA,CACwCC,MAAA,CAAAC,qBAAqB;MAC3DC,mBAAA,YAAe,EACfP,mBAAA,CAES;IAFAQ,OAAK,EAAEH,MAAA,CAAAI,aAAa;IAAEP,KAAK,EAAC;sBACjCG,MAAA,CAAAK,SAAS,oCAGbH,mBAAA,mCAAsC,EAC3BF,MAAA,CAAAK,SAAS,I,cAApBT,mBAAA,CAOM;IAfRU,GAAA;IAQwBT,KAAK,EAAC,SAAS;IAAEC,KAAK,EAR9CC,eAAA,CAQgDC,MAAA,CAAAO,YAAY;MACzDC,UAAa,EACbb,mBAAA,CAIK,c,kBAHJC,mBAAA,CAEKa,SAAA,QAbTC,WAAA,CAWuBV,MAAA,CAAAW,OAAO,EAAfC,IAAI;yBAAfhB,mBAAA,CAEK;MAFwBU,GAAG,EAAEM,IAAI,CAACC;QACtClB,mBAAA,CAA4C;MAAxCmB,IAAI,QAAQF,IAAI,CAACC;wBAAOD,IAAI,CAACG,IAAI,wBAZ1CC,UAAA,E;uDAAAd,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}