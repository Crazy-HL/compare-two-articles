{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5423a9e6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-text\"\n}, \"Loading...\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = {\n  class: \"error-container\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"error-icon\"\n}, \"⚠️\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"error-message\"\n};\nconst _hoisted_9 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */), _createCommentVNode(\" 加载动画 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_5])) : $setup.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 错误信息 \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"retry-button\",\n    onClick: $setup.fetchWikipediaContent\n  }, \"重试\")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 文章内容 \"), _createElementVNode(\"div\", {\n    class: \"showHtml wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 遮罩层 \"), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: \"overlay\",\n    onClick: $setup.closePopup\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 选中内容放大显示 \"), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 4,\n    class: \"text-popup\",\n    onClick: $setup.closePopup\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.selectedText), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","_createElementVNode","_hoisted_3","_hoisted_4","_createElementBlock","_normalizeClass","$props","selectContentClass","id","divId","ref","_toDisplayString","pageTitle","_createCommentVNode","$setup","loading","_hoisted_2","_hoisted_5","error","_Fragment","_hoisted_6","_hoisted_7","_hoisted_8","onClick","fetchWikipediaContent","innerHTML","pageHtml","onMouseup","handleSelection","_hoisted_9","showPopup","closePopup","selectedText","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<div v-if=\"loading\" class=\"loading-container\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">Loading...</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<div v-else-if=\"error\" class=\"error-container\">\r\n\t\t\t<div class=\"error-icon\">⚠️</div>\r\n\t\t\t<div class=\"error-message\">{{ error }}</div>\r\n\t\t\t<button class=\"retry-button\" @click=\"fetchWikipediaContent\">重试</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 遮罩层 -->\r\n\t\t<div v-if=\"showPopup\" class=\"overlay\" @click=\"closePopup\"></div>\r\n\r\n\t\t<!-- 选中内容放大显示 -->\r\n\t\t<div v-if=\"showPopup\" class=\"text-popup\" @click=\"closePopup\">\r\n\t\t\t<p>{{ selectedText }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport HighlightText from \"@/js/highlight\"; // 导入高亮工具包\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst divRef = ref(null); // `Div1` 的 DOM 参考\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 动态注入 Wikipedia 样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **高亮并放大选中文字**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tconst text = selection.toString().trim();\r\n\r\n\t\tif (text) {\r\n\t\t\tselectedText.value = text;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 触发高亮\r\n\t\t\tbus.emit(`${props.divId}Event`, { content: text });\r\n\t\t\tHighlightText.highlightSelection();\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 绑定 div 的 mouseup 事件\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.addEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\tdocument\r\n\t\t\t.querySelector(`#${props.divId}`)\r\n\t\t\t.removeEventListener(\"mouseup\", handleSelection);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* Wikipedia 内容 */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tfont-size: 0.6vw;\r\n\t}\r\n\r\n\t/* 遮罩层（覆盖整个视口） */\r\n\t.overlay {\r\n\t\tposition: fixed; /* 让遮罩层始终覆盖整个视口 */\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100vw;\r\n\t\theight: 100vh;\r\n\t\tbackground: rgba(0, 0, 0, 0.6);\r\n\t\tz-index: 100;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 选中内容的弹出框（始终居中） */\r\n\t.text-popup {\r\n\t\tposition: fixed; /* 让弹出框相对视口固定 */\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 80%;\r\n\t\tmax-width: 600px;\r\n\t\tbackground: rgba(255, 255, 255, 0.95);\r\n\t\tpadding: 20px;\r\n\t\tbox-shadow: 0px 10px 20px rgba(0, 0, 0, 0.3);\r\n\t\tborder-radius: 10px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 1.2rem; /* 保持字体大小适中 */\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #333;\r\n\t\tz-index: 110;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(15px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 加载动画 */\r\n\t.loading-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 200px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: scale(0.9);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;EAAAA,GAAA;EAKsBC,KAAK,EAAC;;gEACzBC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAiB;gEAC5BC,mBAAA,CAA0C;EAArCD,KAAK,EAAC;AAAc,GAAC,YAAU;oBADpCE,UAAmC,EACnCC,UAA0C,C;;EAIpBH,KAAK,EAAC;AAAiB;gEAC7CC,mBAAA,CAAgC;EAA3BD,KAAK,EAAC;AAAY,GAAC,IAAE;;EACrBA,KAAK,EAAC;AAAe;mBAb7B;;uBACCI,mBAAA,CA8BM;IA9BAJ,KAAK,EADZK,eAAA,UACuBC,MAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DT,mBAAA,CAAwB,YAAAU,gBAAA,CAAjBL,MAAA,CAAAM,SAAS,kBAEhBC,mBAAA,UAAa,EACFC,MAAA,CAAAC,OAAO,I,cAAlBX,mBAAA,CAGM,OAHNY,UAGM,EARR,IAAAC,UAAA,MAWkBH,MAAA,CAAAI,KAAK,I,cAArBd,mBAAA,CAIMe,SAAA;IAfRpB,GAAA;EAAA,IAUEc,mBAAA,UAAa,EACbZ,mBAAA,CAIM,OAJNmB,UAIM,GAHLC,UAAgC,EAChCpB,mBAAA,CAA4C,OAA5CqB,UAA4C,EAAAX,gBAAA,CAAdG,MAAA,CAAAI,KAAK,kBACnCjB,mBAAA,CAAuE;IAA/DD,KAAK,EAAC,cAAc;IAAEuB,OAAK,EAAET,MAAA,CAAAU;KAAuB,IAAE,E,qEAI/DpB,mBAAA,CAIkCe,SAAA;IAtBpCpB,GAAA;EAAA,IAiBEc,mBAAA,UAAa,EACbZ,mBAAA,CAIkC;IAFjCD,KAAK,EAAC,4BAA4B;IAClCyB,SAAiB,EAATX,MAAA,CAAAY,QAAQ;IACfC,SAAO,EAAEb,MAAA,CAAAc;2CAtBbC,UAAA,E,mDAwBEhB,mBAAA,SAAY,EACDC,MAAA,CAAAgB,SAAS,I,cAApB1B,mBAAA,CAAgE;IAzBlEL,GAAA;IAyBwBC,KAAK,EAAC,SAAS;IAAEuB,OAAK,EAAET,MAAA,CAAAiB;QAzBhDlB,mBAAA,gBA2BEA,mBAAA,cAAiB,EACNC,MAAA,CAAAgB,SAAS,I,cAApB1B,mBAAA,CAEM;IA9BRL,GAAA;IA4BwBC,KAAK,EAAC,YAAY;IAAEuB,OAAK,EAAET,MAAA,CAAAiB;MAChD9B,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBG,MAAA,CAAAkB,YAAY,iB,KA7BrBnB,mBAAA,e,yBAAAoB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}