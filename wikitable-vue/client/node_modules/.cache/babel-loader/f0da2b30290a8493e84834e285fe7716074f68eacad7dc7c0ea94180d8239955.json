{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.pageTitle), 1 /* TEXT */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    ref: \"content\",\n    class: \"wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleTextSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3))]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","_toDisplayString","$setup","pageTitle","loading","_hoisted_1","error","_hoisted_2","ref","innerHTML","pageHtml","onMouseup","handleTextSelection","_hoisted_3"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\WikipediaViewer.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\t\t<div v-if=\"loading\">Loading...</div>\r\n\t\t<div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tref=\"content\"\r\n\t\t\tclass=\"wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleTextSelection\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\"; // Event bus (for highlighting)\r\n\r\n\tconst pageTitle = ref(\"LeBron James\"); // Page title\r\n\tconst pageHtml = ref(\"\"); // HTML content of the page\r\n\tconst loading = ref(true); // Loading status\r\n\tconst error = ref(\"\"); // Error information\r\n\r\n\t// **Fetch Wikipedia page**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tpageTitle.value\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// Parse HTML and extract <link rel=\"stylesheet\">\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// **Dynamically inject Wikipedia styles**\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Get the body content\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\r\n\t\t\t// **Manually inject Wikipedia official CSS**\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **Manually inject Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **Handle text selection (extract selected text and emit the content)**\r\n\tconst handleTextSelection = () => {\r\n\t\tconst selection = window.getSelection().toString().trim();\r\n\t\tif (selection) {\r\n\t\t\tconsole.log(\"Selected content:\", selection);\r\n\r\n\t\t\t// Emit the selected content to the event bus\r\n\t\t\tbus.emit(\"div1Event\", selection);\r\n\t\t}\r\n\t};\r\n\r\n\t// **Component mounted, load Wikipedia content**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t});\r\n</script>\r\n\r\n<style>\r\n\t/* Wikipedia content container */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tborder: 1px solid #ccc;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* Highlight selected text */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n\r\n\t/* Error message style */\r\n\t.error {\r\n\t\tcolor: red;\r\n\t}\r\n\r\n\t/* Adjust table styles */\r\n\t.wikipedia-content table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #ddd;\r\n\t}\r\n\r\n\t.wikipedia-content th,\r\n\t.wikipedia-content td {\r\n\t\tborder: 1px solid #ddd;\r\n\t\tpadding: 8px;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.wikipedia-content th {\r\n\t\tbackground-color: #f2f2f2;\r\n\t}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAIyBC,KAAK,EAAC;;mBAJ/B;;uBACCC,mBAAA,CAUM,cATLC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBC,MAAA,CAAAC,SAAS,kBACLD,MAAA,CAAAE,OAAO,I,cAAlBL,mBAAA,CAAoC,OAHtCM,UAAA,EAGsB,YAAU,KACdH,MAAA,CAAAI,KAAK,I,cAArBP,mBAAA,CAAsD,OAAtDQ,UAAsD,EAAAN,gBAAA,CAAdC,MAAA,CAAAI,KAAK,qB,cAC7CP,mBAAA,CAKsC;IAVxCF,GAAA;IAOGW,GAAG,EAAC,SAAS;IACbV,KAAK,EAAC,mBAAmB;IACzBW,SAAiB,EAATP,MAAA,CAAAQ,QAAQ;IACfC,SAAO,EAAET,MAAA,CAAAU;2CAVbC,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}