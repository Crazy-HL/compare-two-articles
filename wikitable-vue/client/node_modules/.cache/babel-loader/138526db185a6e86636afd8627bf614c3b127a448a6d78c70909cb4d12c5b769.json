{"ast":null,"code":"const MouseSelection = {\n  debounce(fn) {\n    let time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    let timeout = null;\n    return function () {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        fn.apply(this, arguments);\n      }, time);\n    };\n  },\n  // 获取选中的内容，分为文本和 HTML 类型\n  getSelectContent() {\n    const selection = window.getSelection();\n    if (selection) {\n      if (selection.isCollapsed) {\n        return selection.toString().trim().length ? {\n          type: 'text',\n          content: selection.toString().trim()\n        } : null;\n      }\n      const range = selection.getRangeAt(0);\n      const rangeClone = range.cloneContents();\n      if (rangeClone.childElementCount > 0) {\n        const container = document.createElement('div');\n        container.appendChild(rangeClone);\n        if (!selection.toString().trim().length) {\n          const hasSpNode = MouseSelection.getSpNode(container);\n          return hasSpNode ? {\n            type: 'html',\n            content: container.innerHTML\n          } : null;\n        }\n        return {\n          type: 'html',\n          content: container.innerHTML\n        };\n      } else {\n        return selection.toString().trim().length ? {\n          type: 'text',\n          content: selection.toString().trim()\n        } : null;\n      }\n    } else {\n      return null;\n    }\n  },\n  // 获取选区中的特殊节点（如 iframe, img 等）\n  getSpNode(parent) {\n    const nodeNameList = ['iframe', 'svg', 'img', 'audio', 'video'];\n    const inpList = ['input', 'textarea', 'select'];\n    return Array.from(parent.children).some(node => {\n      if (nodeNameList.includes(node.nodeName.toLowerCase())) return true;\n      if (inpList.includes(node.nodeName.toLowerCase()) && node.value.trim().length) return true;\n      if (node.children) {\n        return MouseSelection.getSpNode(node);\n      }\n      return false;\n    });\n  },\n  // 处理选区变动后的回调，并返回选中的内容\n  selectionChangeFun(callback) {\n    const selectContent = MouseSelection.getSelectContent();\n    if (selectContent) {\n      callback(selectContent); // 调用回调并传递选中的内容\n      return selectContent; // 返回选中的内容\n    } else {\n      callback(null); // 如果没有选中内容，返回 null\n      return null;\n    }\n  },\n  // 启动选择功能，支持范围配置\n  start() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      rangeSelector,\n      customId\n    } = options; // 添加自定义的 customId 用于区分不同区域\n    const rangeElement = rangeSelector ? document.querySelector(rangeSelector) : document;\n    if (!rangeElement) {\n      console.error('Invalid range selector');\n      return;\n    }\n    let selectionchangeMouseTrack = false;\n\n    // 鼠标按下事件\n    rangeElement.addEventListener('mousedown', () => {\n      selectionchangeMouseTrack = true;\n    });\n\n    // 鼠标抬起事件\n    rangeElement.addEventListener('mouseup', MouseSelection.debounce(() => {\n      const selectedContent = MouseSelection.selectionChangeFun(selectContent => {\n        if (selectContent) {\n          // 区分选区并传递额外参数\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\n        } else {\n          console.log(\"没有选择内容\");\n        }\n      });\n      return selectedContent;\n    }, 100));\n\n    // 选择区域发生变化时\n    rangeElement.addEventListener('selectionchange', MouseSelection.debounce(() => {\n      if (selectionchangeMouseTrack) return;\n      const selectedContent = MouseSelection.selectionChangeFun(selectContent => {\n        if (selectContent) {\n          // 区分选区并传递额外参数\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\n        } else {\n          console.log(\"没有选择内容\");\n        }\n      });\n      return selectedContent;\n    }));\n\n    // 双击事件\n    rangeElement.addEventListener('dblclick', () => {\n      const selectedContent = MouseSelection.selectionChangeFun(selectContent => {\n        if (selectContent) {\n          // 区分选区并传递额外参数\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\n        } else {\n          console.log(\"没有选择内容\");\n        }\n      });\n      return selectedContent;\n    });\n\n    // 右键事件\n    rangeElement.addEventListener('contextmenu', MouseSelection.debounce(() => {\n      const selectedContent = MouseSelection.selectionChangeFun(selectContent => {\n        if (selectContent) {\n          // 区分选区并传递额外参数\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\n        } else {\n          console.log(\"没有选择内容\");\n        }\n      });\n      return selectedContent;\n    }, 100));\n  }\n};\nexport default MouseSelection;","map":{"version":3,"names":["MouseSelection","debounce","fn","time","arguments","length","undefined","timeout","clearTimeout","setTimeout","apply","getSelectContent","selection","window","getSelection","isCollapsed","toString","trim","type","content","range","getRangeAt","rangeClone","cloneContents","childElementCount","container","document","createElement","appendChild","hasSpNode","getSpNode","innerHTML","parent","nodeNameList","inpList","Array","from","children","some","node","includes","nodeName","toLowerCase","value","selectionChangeFun","callback","selectContent","start","options","rangeSelector","customId","rangeElement","querySelector","console","error","selectionchangeMouseTrack","addEventListener","selectedContent","log"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/mouse_selection.js"],"sourcesContent":["const MouseSelection = {\r\n  debounce(fn, time = 500) {\r\n    let timeout = null;\r\n    return function () {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        fn.apply(this, arguments);\r\n      }, time);\r\n    };\r\n  },\r\n\r\n  // 获取选中的内容，分为文本和 HTML 类型\r\n  getSelectContent() {\r\n    const selection = window.getSelection();\r\n    if (selection) {\r\n      if (selection.isCollapsed) {\r\n        return selection.toString().trim().length ? {\r\n          type: 'text',\r\n          content: selection.toString().trim()\r\n        } : null;\r\n      }\r\n\r\n      const range = selection.getRangeAt(0);\r\n      const rangeClone = range.cloneContents();\r\n      if (rangeClone.childElementCount > 0) {\r\n        const container = document.createElement('div');\r\n        container.appendChild(rangeClone);\r\n        if (!selection.toString().trim().length) {\r\n          const hasSpNode = MouseSelection.getSpNode(container);\r\n          return hasSpNode ? {\r\n            type: 'html',\r\n            content: container.innerHTML\r\n          } : null;\r\n        }\r\n        return {\r\n          type: 'html',\r\n          content: container.innerHTML\r\n        };\r\n      } else {\r\n        return selection.toString().trim().length ? {\r\n          type: 'text',\r\n          content: selection.toString().trim()\r\n        } : null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // 获取选区中的特殊节点（如 iframe, img 等）\r\n  getSpNode(parent) {\r\n    const nodeNameList = ['iframe', 'svg', 'img', 'audio', 'video'];\r\n    const inpList = ['input', 'textarea', 'select'];\r\n    return Array.from(parent.children).some((node) => {\r\n      if (nodeNameList.includes(node.nodeName.toLowerCase())) return true;\r\n      if (inpList.includes(node.nodeName.toLowerCase()) && node.value.trim().length) return true;\r\n      if (node.children) {\r\n        return MouseSelection.getSpNode(node);\r\n      }\r\n      return false;\r\n    });\r\n  },\r\n\r\n  // 处理选区变动后的回调，并返回选中的内容\r\n  selectionChangeFun(callback) {\r\n    const selectContent = MouseSelection.getSelectContent();\r\n    if (selectContent) {\r\n      callback(selectContent); // 调用回调并传递选中的内容\r\n      return selectContent; // 返回选中的内容\r\n    } else {\r\n      callback(null); // 如果没有选中内容，返回 null\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // 启动选择功能，支持范围配置\r\n  start(options = {}) {\r\n    const { rangeSelector, customId } = options; // 添加自定义的 customId 用于区分不同区域\r\n    const rangeElement = rangeSelector ? document.querySelector(rangeSelector) : document;\r\n  \r\n    if (!rangeElement) {\r\n      console.error('Invalid range selector');\r\n      return;\r\n    }\r\n  \r\n    let selectionchangeMouseTrack = false;\r\n  \r\n    // 鼠标按下事件\r\n    rangeElement.addEventListener('mousedown', () => {\r\n      selectionchangeMouseTrack = true;\r\n    });\r\n  \r\n    // 鼠标抬起事件\r\n    rangeElement.addEventListener('mouseup', MouseSelection.debounce(() => {\r\n      const selectedContent = MouseSelection.selectionChangeFun((selectContent) => {\r\n        if (selectContent) {\r\n          // 区分选区并传递额外参数\r\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\r\n        } else {\r\n          console.log(\"没有选择内容\");\r\n        }\r\n      });\r\n      return selectedContent;\r\n    }, 100));\r\n  \r\n    // 选择区域发生变化时\r\n    rangeElement.addEventListener('selectionchange', MouseSelection.debounce(() => {\r\n      if (selectionchangeMouseTrack) return;\r\n      const selectedContent = MouseSelection.selectionChangeFun((selectContent) => {\r\n        if (selectContent) {\r\n          // 区分选区并传递额外参数\r\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\r\n        } else {\r\n          console.log(\"没有选择内容\");\r\n        }\r\n      });\r\n      return selectedContent;\r\n    }));\r\n  \r\n    // 双击事件\r\n    rangeElement.addEventListener('dblclick', () => {\r\n      const selectedContent = MouseSelection.selectionChangeFun((selectContent) => {\r\n        if (selectContent) {\r\n          // 区分选区并传递额外参数\r\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\r\n        } else {\r\n          console.log(\"没有选择内容\");\r\n        }\r\n      });\r\n      return selectedContent;\r\n    });\r\n  \r\n    // 右键事件\r\n    rangeElement.addEventListener('contextmenu', MouseSelection.debounce(() => {\r\n      const selectedContent = MouseSelection.selectionChangeFun((selectContent) => {\r\n        if (selectContent) {\r\n          // 区分选区并传递额外参数\r\n          console.log(`选中的内容来自区域: ${customId}`, selectContent);\r\n        } else {\r\n          console.log(\"没有选择内容\");\r\n        }\r\n      });\r\n      return selectedContent;\r\n    }, 100));\r\n  }\r\n  \r\n};\r\n\r\nexport default MouseSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}