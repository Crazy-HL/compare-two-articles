{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport * as d3 from \"d3\";\nimport { renderLineChart, renderBarChart, renderPieChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\"); // 用户输入的问题\n    const chatHistory = ref([]); // 历史对话记录\n    const selectText2 = ref(\"\"); // 左侧选中文本\n    const selectText3 = ref(\"\"); // 右侧选中文本\n\n    let offDiv1, offDiv3;\n    onMounted(() => {\n      offDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\n      offDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\n    });\n    onUnmounted(() => {\n      offDiv1();\n      offDiv3();\n    });\n\n    // 处理选中文本\n    function handleSelection(data, source) {\n      console.log(\"Received data:\", data); // 调试输出接收到的数据\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n      }\n    }\n\n    // 从 HTML 内容中提取纯文本\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      console.log(\"Extracted text:\", container.innerText); // 输出提取的纯文本\n      return container.innerText || container.textContent || \"\";\n    }\n\n    // 向 GPT 提问\n    async function askQuestion() {\n      if (!userQuestion.value) {\n        alert(\"请输入问题！\");\n        return;\n      }\n\n      // 将用户的问题添加到历史记录\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      try {\n        const response = await api.post(\"gpt_ask\", {\n          question: userQuestion.value\n        }, data => {\n          if (data) {\n            // 将 GPT 的回答添加到历史记录\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: data.answer\n            });\n          } else {\n            console.error(\"提问失败:\", data.error);\n          }\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n\n      // 清空输入框\n      userQuestion.value = \"\";\n    }\n\n    // 对比文章\n    async function compareTexts() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        api.post(\"gpt_compare\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data) {\n            // 将对比结果添加到历史记录\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: data.result\n            });\n          } else {\n            console.error(\"对比失败:\", data.error);\n          }\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n    }\n    async function processText() {\n      try {\n        api.post(\"process_text\", {\n          text: selectText2.value\n        }, data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          const jsonData = data.json_data;\n          console.log(\"后端返回的数据:\", jsonData);\n          renderChart(jsonData);\n        });\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    }\n\n    // 渲染图表\n    function renderChart(rawJsonData) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n\n      // 清空之前的图表\n      d3.select(\".chart-container\").html(\"\");\n      const chartType = rawJsonData.type;\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      if (chartType === \"line\") {\n        renderLineChart(\".chart-container\", data, options);\n      } else if (chartType === \"bar\") {\n        renderBarChart(\".chart-container\", data, options);\n      } else if (chartType === \"pie\") {\n        renderPieChart(\".chart-container\", data, options);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      get offDiv1() {\n        return offDiv1;\n      },\n      set offDiv1(v) {\n        offDiv1 = v;\n      },\n      get offDiv3() {\n        return offDiv3;\n      },\n      set offDiv3(v) {\n        offDiv3 = v;\n      },\n      handleSelection,\n      getPlainTextFromSelection,\n      askQuestion,\n      compareTexts,\n      processText,\n      renderChart,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      get d3() {\n        return d3;\n      },\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","d3","renderLineChart","renderBarChart","renderPieChart","userQuestion","chatHistory","selectText2","selectText3","offDiv1","offDiv3","on","data","handleSelection","source","console","log","plainText","getPlainTextFromSelection","content","value","htmlContent","container","document","createElement","innerHTML","innerText","textContent","askQuestion","alert","push","role","response","api","post","question","answer","error","compareTexts","text1","text2","result","processText","text","message","jsonData","json_data","renderChart","rawJsonData","select","html","chartType","type","options"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 可用于显示图形或其他内容 -->\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t\t<button @click=\"processText\" class=\"submit-btn\">提交可视化</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\"); // 用户输入的问题\r\n\tconst chatHistory = ref([]); // 历史对话记录\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\r\n\tlet offDiv1, offDiv3;\r\n\r\n\tonMounted(() => {\r\n\t\toffDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\r\n\t\toffDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\toffDiv1();\r\n\t\toffDiv3();\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconsole.log(\"Received data:\", data); // 调试输出接收到的数据\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\tconsole.log(\"Extracted text:\", container.innerText); // 输出提取的纯文本\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 向 GPT 提问\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 将用户的问题添加到历史记录\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\r\n\t\t\t\t\"gpt_ask\",\r\n\t\t\t\t{ question: userQuestion.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t// 将 GPT 的回答添加到历史记录\r\n\t\t\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.answer });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"提问失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\r\n\t\t// 清空输入框\r\n\t\tuserQuestion.value = \"\";\r\n\t}\r\n\r\n\t// 对比文章\r\n\tasync function compareTexts() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t// 将对比结果添加到历史记录\r\n\t\t\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.result });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function processText() {\r\n\t\ttry {\r\n\t\t\tapi.post(\"process_text\", { text: selectText2.value }, data => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\tconsole.log(\"后端返回的数据:\", jsonData);\r\n\t\t\t\trenderChart(jsonData);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\t// 渲染图表\r\n\tfunction renderChart(rawJsonData) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\r\n\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 清空之前的图表\r\n\t\td3.select(\".chart-container\").html(\"\");\r\n\r\n\t\tconst chartType = rawJsonData.type;\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\tif (chartType === \"line\") {\r\n\t\t\trenderLineChart(\".chart-container\", data, options);\r\n\t\t} else if (chartType === \"bar\") {\r\n\t\t\trenderBarChart(\".chart-container\", data, options);\r\n\t\t} else if (chartType === \"pie\") {\r\n\t\t\trenderPieChart(\".chart-container\", data, options);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%; /* 固定宽度 */\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\t/* max-height: 200px; */\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 视觉内容容器 */\r\n\t.vis-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tflex: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1; /* 按钮宽度占满容器 */\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\t/* 新增提交按钮样式 */\r\n\t.submit-btn {\r\n\t\tbackground-color: #ff9800;\r\n\t}\r\n\r\n\t.submit-btn:hover {\r\n\t\tbackground-color: #fb8c00;\r\n\t}\r\n\r\n\t.submit-btn:active {\r\n\t\tbackground-color: #f57c00;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}