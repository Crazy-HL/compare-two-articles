{"ast":null,"code":"import { computed, ref, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  props: {\n    field: {\n      type: [Object, Array, String, Number],\n      default: null\n    },\n    type: {\n      type: String,\n      default: \"\"\n    },\n    visualization: {\n      type: String,\n      default: \"\"\n    },\n    fieldKey: {\n      type: String,\n      default: \"\"\n    },\n    unifiedMax: {\n      type: Number,\n      default: null\n    }\n  },\n  emits: [\"chartClick\"],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const hoveredIndex = ref(null);\n    const activeIndex = ref(null);\n    const isTextHovered = ref(false);\n    const pieContainer = ref(null);\n    const barContainer = ref(null);\n    const lineContainer = ref(null);\n    const stackedContainer = ref(null);\n    const colors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\", \"#1abc9c\", \"#d35400\", \"#8e44ad\", \"#c0392b\", \"#7f8c8d\"];\n    const remainderColor = \"#f0f0f0\";\n    const fixedStackedChartRawData = [\n    // 保持原始结构，方便提取 name 和 value\n    {\n      value: 15.35,\n      raw: \"Integrated Circuits 15.35%\"\n    }, {\n      value: 12.81,\n      raw: \"Machinery 12.81%\"\n    }, {\n      value: 11.34,\n      raw: \"Vehicles and their parts 11.34%\"\n    }, {\n      value: 7.01,\n      raw: \"Mineral Fuels 7.01%\"\n    }, {\n      value: 5.86,\n      raw: \"Plastics 5.86%\"\n    }, {\n      value: 4.23,\n      raw: \"Iron and Steel 4.23%\"\n    }, {\n      value: 4.16,\n      raw: \"Instruments and Apparatus 4.16%\"\n    }, {\n      value: 3.85,\n      raw: \"Organic Chemicals 3.85%\"\n    }, {\n      value: 35.39,\n      raw: \"Others 35.39%\"\n    }];\n    const processedField = computed(() => {\n      // 如果是堆叠图，我们使用内部定义的 fixedStackedChartData 并转换为 D3 stack 需要的格式\n      if (props.visualization === \"stacked-chart\") {\n        // D3 stack generator 需要的是一个对象数组，每个对象代表一个数据点（在这里我们只有一个数据点，即“总和”）\n        // 这个对象的每个属性代表一个系列（即一个商品类别）的值。\n        const dataForStack = {};\n        const nameValueRegex = /^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/;\n        fixedStackedChartRawData.forEach(item => {\n          const match = String(item.raw).match(nameValueRegex);\n          if (match) {\n            const name = match[1].trim();\n            const value = parseFloat(match[2]);\n            dataForStack[name] = value; // key 是商品名, value 是其百分比\n          }\n        });\n        // D3 stack 通常作用于一个数组，即使只有一个元素\n        // console.log(\"Data prepared for D3 stack (single item with categories as keys):\", dataForStack);\n        return [dataForStack]; // 返回包含单个对象的数组\n      }\n\n      // 对于其他图表类型，沿用之前的逻辑处理 props.field\n      if (!props.field) return null;\n      if (Array.isArray(props.field)) {\n        return props.field.map(item => {\n          if (typeof item === \"object\" && item !== null) {\n            const valueMatch = typeof item.raw === \"string\" ? String(item.raw).match(/([\\d.]+)/) : null;\n            const name = item.name || (typeof item.raw === \"string\" ? String(item.raw).split(/[:%]/)[0].trim() : \"Item\");\n            let value = item.value;\n            if (value === undefined && valueMatch) value = parseFloat(valueMatch[0]);\n            if (value === undefined) value = 0;\n            return {\n              name,\n              value,\n              raw: item.raw,\n              unit: item.unit,\n              type: item.type,\n              year: item.year,\n              currency: item.currency\n            };\n          }\n          return {\n            name: String(item),\n            value: 0,\n            raw: String(item)\n          };\n        });\n      }\n      if (typeof props.field === \"object\" && props.field !== null) {\n        const valueMatch = typeof props.field.raw === \"string\" ? String(props.field.raw).match(/([\\d.]+)/) : null;\n        const name = props.field.name || (typeof props.field.raw === \"string\" ? String(props.field.raw).split(/[:%]/)[0].trim() : \"Item\");\n        let value = props.field.value;\n        if (value === undefined && valueMatch) value = parseFloat(valueMatch[0]);\n        if (value === undefined) value = 0;\n        return {\n          name,\n          value,\n          raw: props.field.raw,\n          unit: props.field.unit,\n          type: props.field.type,\n          year: props.field.year,\n          currency: props.field.currency\n        };\n      }\n      return {\n        name: String(props.field),\n        value: 0,\n        raw: String(props.field)\n      };\n    });\n    const hasData = computed(() => {\n      if (!processedField.value) return false;\n      // 对于堆叠图，processedField.value 是一个包含单个对象的数组，该对象包含所有系列\n      if (props.visualization === \"stacked-chart\") {\n        return Array.isArray(processedField.value) && processedField.value.length === 1 && typeof processedField.value[0] === \"object\" && Object.keys(processedField.value[0]).length > 0;\n      }\n      // 其他图表类型的判断逻辑\n      if (Array.isArray(processedField.value)) return processedField.value.length > 0;\n      if (typeof processedField.value === \"object\") {\n        if (Object.keys(processedField.value).length === 0) return false;\n        return processedField.value.value !== undefined || typeof processedField.value.raw === \"string\" && processedField.value.raw !== \"-\" && processedField.value.raw !== \"\";\n      }\n      return String(processedField.value).trim().length > 0 && String(processedField.value).trim() !== \"-\";\n    });\n    onMounted(() => {\n      console.log(`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`);\n      watch(() => [props.visualization, props.fieldKey, props.field], () => {\n        console.log(`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`);\n        if (props.visualization === \"stacked-chart\") {\n          console.log(\"SimpleChart WATCH - Processed field for STACKED chart:\", JSON.parse(JSON.stringify(processedField.value)));\n        }\n        nextTick(() => {\n          if (props.visualization === \"pie-chart\" && hasData.value && isValidPieData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderPieChart.\");\n            renderPieChart();\n          } else if (props.visualization === \"bar-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderBarChart.\");\n            renderBarChart();\n          } else if (props.visualization === \"line-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderLineChart.\");\n            renderLineChart();\n          } else if (props.visualization === \"stacked-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\");\n            renderStackedChart();\n          } else {\n            // console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`);\n          }\n        });\n      }, {\n        immediate: true,\n        deep: true\n      });\n    });\n    const isYearEntry = value => {\n      if (typeof value !== \"string\") return false;\n      const trimmedValue = value.trim();\n      return /^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) || /^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) || /^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) || /^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue);\n    };\n    const safeToNumber = value => {\n      if (value === null || value === undefined) return 0;\n      if (typeof value === \"number\") return value;\n      if (typeof value === \"string\") {\n        const yiMatch = value.match(/(-?[\\d.]+)亿/);\n        if (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\n        const wanMatch = value.match(/(-?[\\d.]+)万/);\n        if (wanMatch) return parseFloat(wanMatch[1]) * 10000;\n        const qianMatch = value.match(/(-?[\\d.]+)千/);\n        if (qianMatch) return parseFloat(qianMatch[1]) * 1000;\n        const percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\n        if (percentMatch) return parseFloat(percentMatch[1]);\n        const num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\n        return isNaN(num) ? 0 : num;\n      }\n      if (typeof value === \"object\") {\n        // Should not happen if data is processed correctly\n        return safeToNumber(value.value || value.raw);\n      }\n      return 0;\n    };\n\n    // --- 恢复其他图表的渲染逻辑 ---\n    const renderPieChart = () => {\n      if (!pieContainer.value) return;\n      d3.select(pieContainer.value).selectAll(\"*\").remove();\n      if (!isValidPieData.value || pieData.value.length === 0) {\n        d3.select(pieContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"-\");\n        return;\n      }\n      const container = d3.select(pieContainer.value);\n      const containerWidth = pieContainer.value.clientWidth;\n      const containerHeight = pieContainer.value.clientHeight;\n      const size = Math.min(containerWidth, containerHeight);\n      const radius = size / 2;\n      const svg = container.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", `0 0 ${size} ${size}`).append(\"g\").attr(\"transform\", `translate(${radius},${radius})`);\n      const isSingleValue = props.fieldKey === \"Inflation (CPI)\";\n      const dataForPie = isSingleValue && pieData.value.length === 1 ? [{\n        ...pieData.value[0],\n        color: colors[0],\n        isMainValue: true\n      }, {\n        value: Math.max(0, 100 - pieData.value[0].value),\n        name: \"剩余\",\n        color: remainderColor,\n        isRemainder: true,\n        index: 1\n      }] : pieData.value.map((d, i) => ({\n        ...d,\n        color: colors[i % colors.length],\n        isMainValue: true,\n        index: i\n      }));\n      const pieGen = d3.pie().value(d => d.value).sort(null);\n      const arcGen = d3.arc().innerRadius(0).outerRadius(radius * 0.9).cornerRadius(2);\n      const tooltip = d3.select(pieContainer.value).append(\"div\").attr(\"class\", \"d3-tooltip\").style(\"visibility\", \"hidden\");\n      svg.selectAll(\".arc\").data(pieGen(dataForPie)).enter().append(\"g\").attr(\"class\", \"arc\").append(\"path\").attr(\"d\", arcGen).attr(\"fill\", d => d.data.color).style(\"opacity\", d => d.data.isRemainder ? 0.6 : 0.8).style(\"stroke\", \"#fff\").style(\"stroke-width\", 1).on(\"mouseover\", function (event, d) {\n        if (d.data.isRemainder) return;\n        d3.select(this).transition().duration(200).style(\"opacity\", 1).attr(\"transform\", \"scale(1.05)\");\n        tooltip.style(\"visibility\", \"visible\").html(`${d.data.name}: ${d.data.value.toFixed(1)}${props.type === \"percentage\" ? \"%\" : \"\"}`);\n      }).on(\"mousemove\", function (event) {\n        const [mouseX, mouseY] = d3.pointer(event, pieContainer.value);\n        tooltip.style(\"top\", mouseY + 10 + \"px\").style(\"left\", mouseX + 10 + \"px\");\n      }).on(\"mouseout\", function (event, d) {\n        if (d.data.isRemainder) return;\n        d3.select(this).transition().duration(200).style(\"opacity\", d.data.isRemainder ? 0.6 : 0.8).attr(\"transform\", \"scale(1)\");\n        tooltip.style(\"visibility\", \"hidden\");\n      }).on(\"click\", function (event, d) {\n        if (d.data.isRemainder) return;\n        emit(\"chartClick\", {\n          type: \"pie\",\n          index: d.data.index,\n          data: d.data,\n          value: d.data.value\n        });\n      });\n      if (isSingleValue && pieData.value.length === 1) {\n        svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \".3em\").text(`${pieData.value[0].value.toFixed(1)}${props.type === \"percentage\" ? \"%\" : \"\"}`).style(\"font-size\", \"14px\").style(\"fill\", \"#333\");\n      } else if (!isSingleValue && pieData.value.length > 1) {\n        const legendGroup = d3.select(pieContainer.value).select(\"svg\").append(\"g\").attr(\"class\", \"legend\");\n        const legendItemSize = 10,\n          legendSpacing = 4,\n          legendPaddingRight = 5,\n          legendPaddingTop = 5;\n        let maxLegendTextWidth = 0;\n        const tempSvgForTextMeasure = d3.select(\"body\").append(\"svg\").style(\"visibility\", \"hidden\");\n        pieData.value.forEach(d => {\n          const tempText = tempSvgForTextMeasure.append(\"text\").text(`${d.name}: ${d.value.toFixed(1)}%`).style(\"font-size\", \"10px\");\n          maxLegendTextWidth = Math.max(maxLegendTextWidth, tempText.node().getComputedTextLength());\n        });\n        tempSvgForTextMeasure.remove();\n        const legendItemTotalWidth = legendItemSize + 4 + maxLegendTextWidth + 5;\n        pieData.value.forEach((d, i) => {\n          const legendX = size - legendItemTotalWidth - legendPaddingRight;\n          const legendY = legendPaddingTop + i * (legendItemSize + legendSpacing);\n          const legendItem = legendGroup.append(\"g\").attr(\"transform\", `translate(${legendX}, ${legendY})`);\n          legendItem.append(\"rect\").attr(\"width\", legendItemSize).attr(\"height\", legendItemSize).attr(\"fill\", colors[i % colors.length]);\n          legendItem.append(\"text\").attr(\"x\", legendItemSize + 4).attr(\"y\", legendItemSize - 1).text(`${d.name}: ${d.value.toFixed(1)}%`).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n        });\n      }\n      console.log(\"renderPieChart FINISHED.\");\n    };\n    const renderBarChart = () => {\n      if (!barContainer.value) return;\n      d3.select(barContainer.value).selectAll(\"*\").remove();\n      if (!simpleBarData.value || simpleBarData.value.length === 0) {\n        d3.select(barContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"-\");\n        return;\n      }\n      const container = d3.select(barContainer.value);\n      const width = barContainer.value.clientWidth;\n      const height = barContainer.value.clientHeight;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 30,\n        left: 10\n      };\n      const svg = container.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", `0 0 ${width} ${height}`);\n      const maxYValue = props.unifiedMax !== null ? props.unifiedMax : d3.max(simpleBarData.value, d => d.value) * 1.1 || 1;\n      const minYValue = Math.min(0, d3.min(simpleBarData.value, d => d.value) || 0);\n      const y = d3.scaleLinear().domain([minYValue, maxYValue]).range([height - margin.bottom, margin.top]);\n      const maxBarWidth = 60,\n        minSpacing = 10;\n      const availableWidth = width - margin.left - margin.right;\n      const barCount = simpleBarData.value.length;\n      const barWidth = barCount > 0 ? Math.min(maxBarWidth, Math.max(20, availableWidth / barCount - minSpacing)) : 20;\n      const totalBarsWidth = barWidth * barCount + minSpacing * (barCount > 1 ? barCount - 1 : 0);\n      const startX = margin.left + (availableWidth - totalBarsWidth) / 2;\n      svg.selectAll(\".bar\").data(simpleBarData.value).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (d, i) => startX + i * (barWidth + minSpacing)).attr(\"y\", d => y(Math.max(0, d.value))).attr(\"width\", barWidth).attr(\"height\", d => Math.abs(y(d.value) - y(0))).attr(\"fill\", (d, i) => colors[i % colors.length]).style(\"opacity\", 0.8);\n      svg.selectAll(\".bar-label\").data(simpleBarData.value).enter().append(\"text\").attr(\"class\", \"bar-label\").attr(\"x\", (d, i) => startX + i * (barWidth + minSpacing) + barWidth / 2).attr(\"y\", height - 5).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"fill\", \"#666\").text(d => formatNumber(d.value)); // formatNumber was missing props.fieldKey, pass it or simplify\n      console.log(\"renderBarChart FINISHED.\");\n    };\n    const renderLineChart = () => {\n      if (!lineContainer.value) return;\n      d3.select(lineContainer.value).selectAll(\"*\").remove();\n      if (!lineData.value || lineData.value.length === 0) {\n        d3.select(lineContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"-\");\n        return;\n      }\n      const container = d3.select(lineContainer.value);\n      const width = lineContainer.value.clientWidth;\n      const height = lineContainer.value.clientHeight;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 30,\n        left: 10\n      };\n      const svg = container.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", `0 0 ${width} ${height}`);\n      const x = d3.scaleLinear().domain([0, lineData.value.length > 1 ? lineData.value.length - 1 : 1]).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain(d3.extent(lineData.value, d => d.y)).range([height - margin.bottom, margin.top]);\n      const lineGen = d3.line().x((d, i) => x(i)).y(d => y(d.y)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(lineData.value).attr(\"fill\", \"none\").attr(\"stroke\", \"#3498db\").attr(\"stroke-width\", 2).attr(\"d\", lineGen);\n      svg.selectAll(\".dot\").data(lineData.value).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"cx\", (d, i) => x(i)).attr(\"cy\", d => y(d.y)).attr(\"r\", 3).attr(\"fill\", \"#3498db\");\n      svg.selectAll(\".line-label\").data(lineData.value).enter().append(\"text\").attr(\"class\", \"line-label\").attr(\"x\", (d, i) => x(i)).attr(\"y\", height - 5).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"fill\", \"#666\").text(d => formatNumber(d.y));\n      console.log(\"renderLineChart FINISHED.\");\n    };\n    // --- End: 恢复其他图表的渲染逻辑 ---\n\n    const renderStackedChart = () => {\n      // 100% 纵向堆叠条形图\n      if (!stackedContainer.value) {\n        console.error(\"renderStackedChart: stackedContainer ref is not available.\");\n        return;\n      }\n      // processedField.value for stacked-chart is an array with a single object: [{ \"Cat A\": valA, \"Cat B\": valB, ... }]\n      const rawDataObject = processedField.value && processedField.value.length > 0 ? processedField.value[0] : {};\n      const seriesNames = Object.keys(rawDataObject); // 这些是商品类别名称\n\n      console.log(\"renderStackedChart CALLED. Series Names:\", seriesNames, \"Raw Data Object:\", JSON.parse(JSON.stringify(rawDataObject)));\n      if (seriesNames.length === 0) {\n        console.warn(\"renderStackedChart: No series data to render. Clearing container.\");\n        d3.select(stackedContainer.value).selectAll(\"*\").remove();\n        d3.select(stackedContainer.value).append(\"div\").attr(\"class\", \"no-data\").style(\"text-align\", \"center\").text(\"- (No data for chart)\");\n        return;\n      }\n      d3.select(stackedContainer.value).selectAll(\"*\").remove();\n      const container = d3.select(stackedContainer.value);\n      let width = stackedContainer.value.clientWidth;\n      let height = stackedContainer.value.clientHeight;\n      if (width === 0 || height === 0) {\n        const parentBounds = stackedContainer.value.parentElement.getBoundingClientRect();\n        width = parentBounds.width > 0 ? parentBounds.width : 300;\n        height = parentBounds.height > 0 ? parentBounds.height : 150;\n        // console.warn(`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`);\n      }\n\n      // 为图例调整边距，图例放右边\n      const margin = {\n        top: 10,\n        right: 150,\n        bottom: 10,\n        left: 10\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      if (chartWidth <= 0 || chartHeight <= 0) {\n        console.warn(\"renderStackedChart: Chart dimensions are invalid after applying margins.\", {\n          width,\n          height,\n          chartWidth,\n          chartHeight\n        });\n        d3.select(stackedContainer.value).append(\"div\").attr(\"class\", \"no-data\").style(\"text-align\", \"center\").text(\"- (Chart area too small)\");\n        return;\n      }\n      const svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // D3 stack generator\n      const stack = d3.stack().keys(seriesNames) // 告诉 stack 如何从数据对象中获取每个系列的值\n      .order(d3.stackOrderNone) // 可以根据需要改变堆叠顺序\n      .offset(d3.stackOffsetNone); // 我们将手动归一化为百分比\n\n      const stackedSeriesInput = [rawDataObject]; // stack() 需要一个数组作为输入\n      let series = stack(stackedSeriesInput);\n\n      // 计算总和并归一化为0-100的百分比\n      const total = d3.sum(seriesNames, key => rawDataObject[key]);\n      series.forEach(s => {\n        s.forEach(d => {\n          d[0] = total > 0 ? d[0] / total * 100 : 0; // 下边界\n          d[1] = total > 0 ? d[1] / total * 100 : 0; // 上边界\n        });\n      });\n      // console.log(\"Normalized D3 Stacked Series for 100%:\", JSON.parse(JSON.stringify(series)));\n\n      // Y 轴比例尺 (代表整个条的高度，0到100%)\n      const y = d3.scaleLinear().domain([0, 100]) // 0% 到 100%\n      .range([chartHeight, 0]); // 反向，0在顶部\n\n      // X 轴只有一个条，所以用 scaleBand 但只有一个域\n      const barCategory = [\"堆叠条\"]; // 只是一个占位符\n      const x = d3.scaleBand().domain(barCategory).range([0, chartWidth]).padding(0.6); // 调整条的宽度，使其看起来像一个单独的条\n\n      // 绘制堆叠的矩形\n      svg.append(\"g\").selectAll(\"g\").data(series) // series 是一个数组，每个元素代表一个商品类别（一个堆叠层）\n      .join(\"g\").attr(\"fill\", (d, i) => colors[i % colors.length]).selectAll(\"rect\").data(d => d) // d 是一个数组，通常只有一个元素，代表这个系列在条上的部分\n      .join(\"rect\").attr(\"x\", (d, i) => x(barCategory[i])) // 只有一个条，所以 i 总是0\n      .attr(\"y\", d => y(d[1])) // d[1] 是堆叠部分的顶部y坐标\n      .attr(\"height\", d => y(d[0]) - y(d[1])) // 高度是底部和顶部y坐标之差\n      .attr(\"width\", x.bandwidth()).append(\"title\") // 添加 tooltip\n      .text((d, i, nodes) => {\n        const seriesData = d3.select(nodes[i].parentNode).datum(); // 获取系列数据 (包含 key)\n        const originalValue = rawDataObject[seriesData.key];\n        const percentage = y(d[0]) - y(d[1]); // 高度百分比\n        return `${seriesData.key}: ${originalValue.toFixed(1)}% (${percentage.toFixed(1)}% of bar)`;\n      });\n\n      // 添加图例\n      const legend = svg.append(\"g\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).attr(\"text-anchor\", \"start\").selectAll(\"g\").data(series) // 使用 series 来获取 key (商品名) 和颜色\n      .join(\"g\").attr(\"transform\", (d, i) => `translate(${chartWidth + 15},${i * 20})`);\n      legend.append(\"rect\").attr(\"x\", 0).attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", (d, i) => colors[i % colors.length]);\n      legend.append(\"text\").attr(\"x\", 20).attr(\"y\", 9.5).attr(\"dy\", \"0.32em\").text(d => {\n        const name = d.key; // d.key 是商品名称\n        const originalValue = rawDataObject[d.key];\n        return `${name.length > 15 ? name.substring(0, 13) + \"...\" : name} (${originalValue.toFixed(1)}%)`;\n      });\n      console.log(\"renderStackedChart FINISHED drawing (100% stacked bar).\");\n    };\n    const formatSimpleText = value => {\n      if (!value) return \"-\";\n      if (Array.isArray(value)) {\n        const items = value.map(item => {\n          if (typeof item === \"object\" && item !== null) {\n            let text = item.raw || item.value || JSON.stringify(item);\n            if (item.unit) text += ` ${item.unit}`;\n            if (item.year) text += ` (${item.year})`;\n            return text;\n          }\n          return item;\n        });\n        return items.length > 2 ? items.slice(0, 2).join(\"; \") + \"...\" : items.join(\"; \");\n      }\n      if (typeof value === \"object\" && value !== null) {\n        let text = value.raw || item.value || \"-\"; // 修正：应为 value.raw 或 value.value\n        if (value.raw === undefined && value.value === undefined && value.name) text = value.name; // 如果只有name\n        if (value.unit) text += ` ${value.unit}`;\n        if (value.year) text += ` (${value.year})`;\n        return text;\n      }\n      return value.toString().length > 50 ? value.toString().substring(0, 50) + \"...\" : value.toString();\n    };\n    const handleTextClick = () => {\n      emit(\"chartClick\", {\n        type: \"text\",\n        data: processedField.value,\n        value: processedField.value\n      });\n    };\n    const handleTextHover = () => {\n      isTextHovered.value = true;\n    };\n    const resetHover = () => {\n      isTextHovered.value = false;\n    };\n    const isValidPieData = computed(() => {\n      if (props.visualization !== \"pie-chart\") return false;\n      return pieData.value && pieData.value.length > 0 && pieData.value.every(item => typeof item.name === \"string\" && typeof item.value === \"number\" && !isYearEntry(item.name) && !isYearEntry(String(item.value)));\n    });\n    const pieData = computed(() => {\n      // 恢复 pieData 逻辑\n      if (props.visualization !== \"pie-chart\" || !processedField.value) return [];\n      const processItem = (item, index) => {\n        let rawValue = typeof item === \"object\" && item !== null ? item.raw || item.value || item : item;\n        if (isYearEntry(rawValue)) return null;\n        const value = safeToNumber(rawValue);\n        if (value === null) return null;\n        let name = \"项目\";\n        if (typeof item === \"object\" && item !== null && item.name) name = item.name;else if (typeof item === \"object\" && item !== null && item.raw) {\n          const rawText = String(item.raw);\n          name = rawText.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\n        } else if (typeof item === \"string\") {\n          name = item.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\n        }\n        if (isYearEntry(name)) return null;\n        return {\n          value: Math.min(100, Math.max(0, value)),\n          name: name || \"项目\",\n          index\n        };\n      };\n      if (Array.isArray(processedField.value)) {\n        return processedField.value.map(processItem).filter(item => item !== null);\n      }\n      const result = processItem(processedField.value, 0);\n      return result ? [result] : [];\n    });\n    const simpleBarData = computed(() => {\n      // 恢复 simpleBarData 逻辑\n      if (props.visualization !== \"bar-chart\" || !processedField.value) return [];\n      let values = [];\n      if (Array.isArray(processedField.value)) {\n        values = processedField.value.filter(item => {\n          const val = item?.value || item?.raw;\n          return val !== undefined && val !== null && !isYearEntry(val);\n        }).map(item => ({\n          value: safeToNumber(item.value || item.raw),\n          name: item.name || \"Bar\"\n        }));\n      } else {\n        const val = processedField.value.value || processedField.value.raw;\n        if (val !== undefined && val !== null && !isYearEntry(val)) {\n          values = [{\n            value: safeToNumber(val),\n            name: processedField.value.name || \"Bar\"\n          }];\n        }\n      }\n      return values.map((d, index) => ({\n        ...d,\n        index,\n        color: colors[index % colors.length]\n      }));\n    });\n    const lineData = computed(() => {\n      // 恢复 lineData 逻辑\n      if (props.visualization !== \"line-chart\" || !processedField.value) return [];\n      if (Array.isArray(processedField.value)) {\n        return processedField.value.filter(item => {\n          const val = item?.value || item?.raw;\n          return val !== undefined && val !== null && !isYearEntry(val);\n        }).map((item, index) => ({\n          x: index,\n          y: safeToNumber(item.value || item.raw),\n          raw: item.raw || item.value,\n          index\n        }));\n      }\n      const val = processedField.value.value || processedField.value.raw;\n      if (val !== undefined && val !== null && !isYearEntry(val)) {\n        return [{\n          x: 0,\n          y: safeToNumber(val),\n          raw: val,\n          index: 0\n        }];\n      }\n      return [];\n    });\n    const formatNumber = value => {\n      // 简化版，具体格式化可根据需要调整\n      const num = Number(value);\n      if (isNaN(num)) return \"0\";\n      if (props.type === \"percentage\") return num.toFixed(1) + \"%\";\n      if (num >= 1e8) return (num / 1e8).toFixed(2) + \"亿\";\n      if (num >= 1e4) return (num / 1e4).toFixed(1) + \"万\";\n      return num.toFixed(0);\n    };\n    return {\n      pieContainer,\n      barContainer,\n      lineContainer,\n      stackedContainer,\n      formatSimpleText,\n      handleTextClick,\n      handleTextHover,\n      resetHover,\n      isTextHovered,\n      hasData,\n      isValidPieData\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","watch","nextTick","d3","props","field","type","Object","Array","String","Number","default","visualization","fieldKey","unifiedMax","emits","setup","_ref","emit","hoveredIndex","activeIndex","isTextHovered","pieContainer","barContainer","lineContainer","stackedContainer","colors","remainderColor","fixedStackedChartRawData","value","raw","processedField","dataForStack","nameValueRegex","forEach","item","match","name","trim","parseFloat","isArray","map","valueMatch","split","undefined","unit","year","currency","hasData","length","keys","console","log","JSON","parse","stringify","isValidPieData","renderPieChart","renderBarChart","renderLineChart","renderStackedChart","immediate","deep","isYearEntry","trimmedValue","test","safeToNumber","yiMatch","wanMatch","qianMatch","percentMatch","num","replace","isNaN","select","selectAll","remove","pieData","append","attr","text","container","containerWidth","clientWidth","containerHeight","clientHeight","size","Math","min","radius","svg","isSingleValue","dataForPie","color","isMainValue","max","isRemainder","index","d","i","pieGen","pie","sort","arcGen","arc","innerRadius","outerRadius","cornerRadius","tooltip","style","data","enter","on","event","transition","duration","html","toFixed","mouseX","mouseY","pointer","legendGroup","legendItemSize","legendSpacing","legendPaddingRight","legendPaddingTop","maxLegendTextWidth","tempSvgForTextMeasure","tempText","node","getComputedTextLength","legendItemTotalWidth","legendX","legendY","legendItem","simpleBarData","width","height","margin","top","right","bottom","left","maxYValue","minYValue","y","scaleLinear","domain","range","maxBarWidth","minSpacing","availableWidth","barCount","barWidth","totalBarsWidth","startX","abs","formatNumber","lineData","x","extent","lineGen","line","curve","curveMonotoneX","datum","error","rawDataObject","seriesNames","warn","parentBounds","parentElement","getBoundingClientRect","chartWidth","chartHeight","stack","order","stackOrderNone","offset","stackOffsetNone","stackedSeriesInput","series","total","sum","key","s","barCategory","scaleBand","padding","join","bandwidth","nodes","seriesData","parentNode","originalValue","percentage","legend","substring","formatSimpleText","items","slice","toString","handleTextClick","handleTextHover","resetHover","every","processItem","rawValue","rawText","filter","result","values","val"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData && isValidPieData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"pieContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"barContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"lineContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 堆叠图 (100%纵向堆叠) -->\r\n\t\t<template v-else-if=\"visualization === 'stacked-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"stackedContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Stacked Data Not Ready)</div>\r\n\t\t</template>\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { computed, ref, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tfield: {\r\n\t\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tvisualization: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tfieldKey: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunifiedMax: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"chartClick\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst hoveredIndex = ref(null);\r\n\t\t\tconst activeIndex = ref(null);\r\n\t\t\tconst isTextHovered = ref(false);\r\n\r\n\t\t\tconst pieContainer = ref(null);\r\n\t\t\tconst barContainer = ref(null);\r\n\t\t\tconst lineContainer = ref(null);\r\n\t\t\tconst stackedContainer = ref(null);\r\n\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#3498db\",\r\n\t\t\t\t\"#e74c3c\",\r\n\t\t\t\t\"#2ecc71\",\r\n\t\t\t\t\"#f39c12\",\r\n\t\t\t\t\"#9b59b6\",\r\n\t\t\t\t\"#1abc9c\",\r\n\t\t\t\t\"#d35400\",\r\n\t\t\t\t\"#8e44ad\",\r\n\t\t\t\t\"#c0392b\",\r\n\t\t\t\t\"#7f8c8d\"\r\n\t\t\t];\r\n\t\t\tconst remainderColor = \"#f0f0f0\";\r\n\r\n\t\t\tconst fixedStackedChartRawData = [\r\n\t\t\t\t// 保持原始结构，方便提取 name 和 value\r\n\t\t\t\t{ value: 15.35, raw: \"Integrated Circuits 15.35%\" },\r\n\t\t\t\t{ value: 12.81, raw: \"Machinery 12.81%\" },\r\n\t\t\t\t{ value: 11.34, raw: \"Vehicles and their parts 11.34%\" },\r\n\t\t\t\t{ value: 7.01, raw: \"Mineral Fuels 7.01%\" },\r\n\t\t\t\t{ value: 5.86, raw: \"Plastics 5.86%\" },\r\n\t\t\t\t{ value: 4.23, raw: \"Iron and Steel 4.23%\" },\r\n\t\t\t\t{ value: 4.16, raw: \"Instruments and Apparatus 4.16%\" },\r\n\t\t\t\t{ value: 3.85, raw: \"Organic Chemicals 3.85%\" },\r\n\t\t\t\t{ value: 35.39, raw: \"Others 35.39%\" }\r\n\t\t\t];\r\n\r\n\t\t\tconst processedField = computed(() => {\r\n\t\t\t\t// 如果是堆叠图，我们使用内部定义的 fixedStackedChartData 并转换为 D3 stack 需要的格式\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t// D3 stack generator 需要的是一个对象数组，每个对象代表一个数据点（在这里我们只有一个数据点，即“总和”）\r\n\t\t\t\t\t// 这个对象的每个属性代表一个系列（即一个商品类别）的值。\r\n\t\t\t\t\tconst dataForStack = {};\r\n\t\t\t\t\tconst nameValueRegex =\r\n\t\t\t\t\t\t/^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/;\r\n\t\t\t\t\tfixedStackedChartRawData.forEach(item => {\r\n\t\t\t\t\t\tconst match = String(item.raw).match(nameValueRegex);\r\n\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\tconst name = match[1].trim();\r\n\t\t\t\t\t\t\tconst value = parseFloat(match[2]);\r\n\t\t\t\t\t\t\tdataForStack[name] = value; // key 是商品名, value 是其百分比\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// D3 stack 通常作用于一个数组，即使只有一个元素\r\n\t\t\t\t\t// console.log(\"Data prepared for D3 stack (single item with categories as keys):\", dataForStack);\r\n\t\t\t\t\treturn [dataForStack]; // 返回包含单个对象的数组\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 对于其他图表类型，沿用之前的逻辑处理 props.field\r\n\t\t\t\tif (!props.field) return null;\r\n\t\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\t\treturn props.field.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tconst valueMatch =\r\n\t\t\t\t\t\t\t\ttypeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t? String(item.raw).match(/([\\d.]+)/)\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\tconst name =\r\n\t\t\t\t\t\t\t\titem.name ||\r\n\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t? String(item.raw).split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t\t: \"Item\");\r\n\t\t\t\t\t\t\tlet value = item.value;\r\n\t\t\t\t\t\t\tif (value === undefined && valueMatch)\r\n\t\t\t\t\t\t\t\tvalue = parseFloat(valueMatch[0]);\r\n\t\t\t\t\t\t\tif (value === undefined) value = 0;\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\t\t\t\ttype: item.type,\r\n\t\t\t\t\t\t\t\tyear: item.year,\r\n\t\t\t\t\t\t\t\tcurrency: item.currency\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn { name: String(item), value: 0, raw: String(item) };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof props.field === \"object\" && props.field !== null) {\r\n\t\t\t\t\tconst valueMatch =\r\n\t\t\t\t\t\ttypeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t? String(props.field.raw).match(/([\\d.]+)/)\r\n\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\tconst name =\r\n\t\t\t\t\t\tprops.field.name ||\r\n\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t? String(props.field.raw).split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t: \"Item\");\r\n\t\t\t\t\tlet value = props.field.value;\r\n\t\t\t\t\tif (value === undefined && valueMatch)\r\n\t\t\t\t\t\tvalue = parseFloat(valueMatch[0]);\r\n\t\t\t\t\tif (value === undefined) value = 0;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\traw: props.field.raw,\r\n\t\t\t\t\t\tunit: props.field.unit,\r\n\t\t\t\t\t\ttype: props.field.type,\r\n\t\t\t\t\t\tyear: props.field.year,\r\n\t\t\t\t\t\tcurrency: props.field.currency\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: String(props.field),\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\traw: String(props.field)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconst hasData = computed(() => {\r\n\t\t\t\tif (!processedField.value) return false;\r\n\t\t\t\t// 对于堆叠图，processedField.value 是一个包含单个对象的数组，该对象包含所有系列\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tArray.isArray(processedField.value) &&\r\n\t\t\t\t\t\tprocessedField.value.length === 1 &&\r\n\t\t\t\t\t\ttypeof processedField.value[0] === \"object\" &&\r\n\t\t\t\t\t\tObject.keys(processedField.value[0]).length > 0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// 其他图表类型的判断逻辑\r\n\t\t\t\tif (Array.isArray(processedField.value))\r\n\t\t\t\t\treturn processedField.value.length > 0;\r\n\t\t\t\tif (typeof processedField.value === \"object\") {\r\n\t\t\t\t\tif (Object.keys(processedField.value).length === 0) return false;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value.value !== undefined ||\r\n\t\t\t\t\t\t(typeof processedField.value.raw === \"string\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"-\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\tString(processedField.value).trim().length > 0 &&\r\n\t\t\t\t\tString(processedField.value).trim() !== \"-\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`\r\n\t\t\t\t);\r\n\t\t\t\twatch(\r\n\t\t\t\t\t() => [props.visualization, props.fieldKey, props.field],\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"SimpleChart WATCH - Processed field for STACKED chart:\",\r\n\t\t\t\t\t\t\t\tJSON.parse(JSON.stringify(processedField.value))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value &&\r\n\t\t\t\t\t\t\t\tisValidPieData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderPieChart.\");\r\n\t\t\t\t\t\t\t\trenderPieChart();\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"bar-chart\" && hasData.value) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderBarChart.\");\r\n\t\t\t\t\t\t\t\trenderBarChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"line-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderLineChart.\");\r\n\t\t\t\t\t\t\t\trenderLineChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"stacked-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\trenderStackedChart();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst isYearEntry = value => {\r\n\t\t\t\tif (typeof value !== \"string\") return false;\r\n\t\t\t\tconst trimmedValue = value.trim();\r\n\t\t\t\treturn (\r\n\t\t\t\t\t/^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) ||\r\n\t\t\t\t\t/^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst safeToNumber = value => {\r\n\t\t\t\tif (value === null || value === undefined) return 0;\r\n\t\t\t\tif (typeof value === \"number\") return value;\r\n\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\tconst yiMatch = value.match(/(-?[\\d.]+)亿/);\r\n\t\t\t\t\tif (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\r\n\t\t\t\t\tconst wanMatch = value.match(/(-?[\\d.]+)万/);\r\n\t\t\t\t\tif (wanMatch) return parseFloat(wanMatch[1]) * 10000;\r\n\t\t\t\t\tconst qianMatch = value.match(/(-?[\\d.]+)千/);\r\n\t\t\t\t\tif (qianMatch) return parseFloat(qianMatch[1]) * 1000;\r\n\t\t\t\t\tconst percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\r\n\t\t\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\t\t\tconst num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\r\n\t\t\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\") {\r\n\t\t\t\t\t// Should not happen if data is processed correctly\r\n\t\t\t\t\treturn safeToNumber(value.value || value.raw);\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\r\n\t\t\t// --- 恢复其他图表的渲染逻辑 ---\r\n\t\t\tconst renderPieChart = () => {\r\n\t\t\t\tif (!pieContainer.value) return;\r\n\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!isValidPieData.value || pieData.value.length === 0) {\r\n\t\t\t\t\td3.select(pieContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst container = d3.select(pieContainer.value);\r\n\t\t\t\tconst containerWidth = pieContainer.value.clientWidth;\r\n\t\t\t\tconst containerHeight = pieContainer.value.clientHeight;\r\n\t\t\t\tconst size = Math.min(containerWidth, containerHeight);\r\n\t\t\t\tconst radius = size / 2;\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${size} ${size}`)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${radius},${radius})`);\r\n\r\n\t\t\t\tconst isSingleValue = props.fieldKey === \"Inflation (CPI)\";\r\n\t\t\t\tconst dataForPie =\r\n\t\t\t\t\tisSingleValue && pieData.value.length === 1\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t{ ...pieData.value[0], color: colors[0], isMainValue: true },\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvalue: Math.max(0, 100 - pieData.value[0].value),\r\n\t\t\t\t\t\t\t\t\tname: \"剩余\",\r\n\t\t\t\t\t\t\t\t\tcolor: remainderColor,\r\n\t\t\t\t\t\t\t\t\tisRemainder: true,\r\n\t\t\t\t\t\t\t\t\tindex: 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: pieData.value.map((d, i) => ({\r\n\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\tcolor: colors[i % colors.length],\r\n\t\t\t\t\t\t\t\tisMainValue: true,\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t  }));\r\n\r\n\t\t\t\tconst pieGen = d3\r\n\t\t\t\t\t.pie()\r\n\t\t\t\t\t.value(d => d.value)\r\n\t\t\t\t\t.sort(null);\r\n\t\t\t\tconst arcGen = d3\r\n\t\t\t\t\t.arc()\r\n\t\t\t\t\t.innerRadius(0)\r\n\t\t\t\t\t.outerRadius(radius * 0.9)\r\n\t\t\t\t\t.cornerRadius(2);\r\n\t\t\t\tconst tooltip = d3\r\n\t\t\t\t\t.select(pieContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"d3-tooltip\")\r\n\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".arc\")\r\n\t\t\t\t\t.data(pieGen(dataForPie))\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"arc\")\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arcGen)\r\n\t\t\t\t\t.attr(\"fill\", d => d.data.color)\r\n\t\t\t\t\t.style(\"opacity\", d => (d.data.isRemainder ? 0.6 : 0.8))\r\n\t\t\t\t\t.style(\"stroke\", \"#fff\")\r\n\t\t\t\t\t.style(\"stroke-width\", 1)\r\n\t\t\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(200)\r\n\t\t\t\t\t\t\t.style(\"opacity\", 1)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1.05)\");\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"visibility\", \"visible\")\r\n\t\t\t\t\t\t\t.html(\r\n\t\t\t\t\t\t\t\t`${d.data.name}: ${d.data.value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mousemove\", function (event) {\r\n\t\t\t\t\t\tconst [mouseX, mouseY] = d3.pointer(event, pieContainer.value);\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"top\", mouseY + 10 + \"px\")\r\n\t\t\t\t\t\t\t.style(\"left\", mouseX + 10 + \"px\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(200)\r\n\t\t\t\t\t\t\t.style(\"opacity\", d.data.isRemainder ? 0.6 : 0.8)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1)\");\r\n\t\t\t\t\t\ttooltip.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"click\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\t\t\tindex: d.data.index,\r\n\t\t\t\t\t\t\tdata: d.data,\r\n\t\t\t\t\t\t\tvalue: d.data.value\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (isSingleValue && pieData.value.length === 1) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.attr(\"dy\", \".3em\")\r\n\t\t\t\t\t\t.text(\r\n\t\t\t\t\t\t\t`${pieData.value[0].value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t\t\t\t.style(\"fill\", \"#333\");\r\n\t\t\t\t} else if (!isSingleValue && pieData.value.length > 1) {\r\n\t\t\t\t\tconst legendGroup = d3\r\n\t\t\t\t\t\t.select(pieContainer.value)\r\n\t\t\t\t\t\t.select(\"svg\")\r\n\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"class\", \"legend\");\r\n\t\t\t\t\tconst legendItemSize = 10,\r\n\t\t\t\t\t\tlegendSpacing = 4,\r\n\t\t\t\t\t\tlegendPaddingRight = 5,\r\n\t\t\t\t\t\tlegendPaddingTop = 5;\r\n\t\t\t\t\tlet maxLegendTextWidth = 0;\r\n\t\t\t\t\tconst tempSvgForTextMeasure = d3\r\n\t\t\t\t\t\t.select(\"body\")\r\n\t\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\tpieData.value.forEach(d => {\r\n\t\t\t\t\t\tconst tempText = tempSvgForTextMeasure\r\n\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t.text(`${d.name}: ${d.value.toFixed(1)}%`)\r\n\t\t\t\t\t\t\t.style(\"font-size\", \"10px\");\r\n\t\t\t\t\t\tmaxLegendTextWidth = Math.max(\r\n\t\t\t\t\t\t\tmaxLegendTextWidth,\r\n\t\t\t\t\t\t\ttempText.node().getComputedTextLength()\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttempSvgForTextMeasure.remove();\r\n\t\t\t\t\tconst legendItemTotalWidth =\r\n\t\t\t\t\t\tlegendItemSize + 4 + maxLegendTextWidth + 5;\r\n\r\n\t\t\t\t\tpieData.value.forEach((d, i) => {\r\n\t\t\t\t\t\tconst legendX = size - legendItemTotalWidth - legendPaddingRight;\r\n\t\t\t\t\t\tconst legendY =\r\n\t\t\t\t\t\t\tlegendPaddingTop + i * (legendItemSize + legendSpacing);\r\n\t\t\t\t\t\tconst legendItem = legendGroup\r\n\t\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t\t.attr(\"transform\", `translate(${legendX}, ${legendY})`);\r\n\t\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t\t.attr(\"width\", legendItemSize)\r\n\t\t\t\t\t\t\t.attr(\"height\", legendItemSize)\r\n\t\t\t\t\t\t\t.attr(\"fill\", colors[i % colors.length]);\r\n\t\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t.attr(\"x\", legendItemSize + 4)\r\n\t\t\t\t\t\t\t.attr(\"y\", legendItemSize - 1)\r\n\t\t\t\t\t\t\t.text(`${d.name}: ${d.value.toFixed(1)}%`)\r\n\t\t\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t\t\t.style(\"fill\", \"#333\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"renderPieChart FINISHED.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst renderBarChart = () => {\r\n\t\t\t\tif (!barContainer.value) return;\r\n\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!simpleBarData.value || simpleBarData.value.length === 0) {\r\n\t\t\t\t\td3.select(barContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst container = d3.select(barContainer.value);\r\n\t\t\t\tconst width = barContainer.value.clientWidth;\r\n\t\t\t\tconst height = barContainer.value.clientHeight;\r\n\t\t\t\tconst margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\t\t\t\tconst maxYValue =\r\n\t\t\t\t\tprops.unifiedMax !== null\r\n\t\t\t\t\t\t? props.unifiedMax\r\n\t\t\t\t\t\t: d3.max(simpleBarData.value, d => d.value) * 1.1 || 1;\r\n\t\t\t\tconst minYValue = Math.min(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\td3.min(simpleBarData.value, d => d.value) || 0\r\n\t\t\t\t);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([minYValue, maxYValue])\r\n\t\t\t\t\t.range([height - margin.bottom, margin.top]);\r\n\t\t\t\tconst maxBarWidth = 60,\r\n\t\t\t\t\tminSpacing = 10;\r\n\t\t\t\tconst availableWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst barCount = simpleBarData.value.length;\r\n\t\t\t\tconst barWidth =\r\n\t\t\t\t\tbarCount > 0\r\n\t\t\t\t\t\t? Math.min(\r\n\t\t\t\t\t\t\t\tmaxBarWidth,\r\n\t\t\t\t\t\t\t\tMath.max(20, availableWidth / barCount - minSpacing)\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: 20;\r\n\t\t\t\tconst totalBarsWidth =\r\n\t\t\t\t\tbarWidth * barCount + minSpacing * (barCount > 1 ? barCount - 1 : 0);\r\n\t\t\t\tconst startX = margin.left + (availableWidth - totalBarsWidth) / 2;\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => startX + i * (barWidth + minSpacing))\r\n\t\t\t\t\t.attr(\"y\", d => y(Math.max(0, d.value)))\r\n\t\t\t\t\t.attr(\"width\", barWidth)\r\n\t\t\t\t\t.attr(\"height\", d => Math.abs(y(d.value) - y(0)))\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.style(\"opacity\", 0.8);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar-label\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"bar-label\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"x\",\r\n\t\t\t\t\t\t(d, i) => startX + i * (barWidth + minSpacing) + barWidth / 2\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.attr(\"y\", height - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t\t\t.attr(\"fill\", \"#666\")\r\n\t\t\t\t\t.text(d => formatNumber(d.value)); // formatNumber was missing props.fieldKey, pass it or simplify\r\n\t\t\t\tconsole.log(\"renderBarChart FINISHED.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst renderLineChart = () => {\r\n\t\t\t\tif (!lineContainer.value) return;\r\n\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!lineData.value || lineData.value.length === 0) {\r\n\t\t\t\t\td3.select(lineContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst container = d3.select(lineContainer.value);\r\n\t\t\t\tconst width = lineContainer.value.clientWidth;\r\n\t\t\t\tconst height = lineContainer.value.clientHeight;\r\n\t\t\t\tconst margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tlineData.value.length > 1 ? lineData.value.length - 1 : 1\r\n\t\t\t\t\t])\r\n\t\t\t\t\t.range([margin.left, width - margin.right]);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain(d3.extent(lineData.value, d => d.y))\r\n\t\t\t\t\t.range([height - margin.bottom, margin.top]);\r\n\t\t\t\tconst lineGen = d3\r\n\t\t\t\t\t.line()\r\n\t\t\t\t\t.x((d, i) => x(i))\r\n\t\t\t\t\t.y(d => y(d.y))\r\n\t\t\t\t\t.curve(d3.curveMonotoneX);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.datum(lineData.value)\r\n\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t.attr(\"stroke\", \"#3498db\")\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.attr(\"d\", lineGen);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".dot\")\r\n\t\t\t\t\t.data(lineData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"class\", \"dot\")\r\n\t\t\t\t\t.attr(\"cx\", (d, i) => x(i))\r\n\t\t\t\t\t.attr(\"cy\", d => y(d.y))\r\n\t\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t\t.attr(\"fill\", \"#3498db\");\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".line-label\")\r\n\t\t\t\t\t.data(lineData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"line-label\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => x(i))\r\n\t\t\t\t\t.attr(\"y\", height - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t\t\t.attr(\"fill\", \"#666\")\r\n\t\t\t\t\t.text(d => formatNumber(d.y));\r\n\t\t\t\tconsole.log(\"renderLineChart FINISHED.\");\r\n\t\t\t};\r\n\t\t\t// --- End: 恢复其他图表的渲染逻辑 ---\r\n\r\n\t\t\tconst renderStackedChart = () => {\r\n\t\t\t\t// 100% 纵向堆叠条形图\r\n\t\t\t\tif (!stackedContainer.value) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"renderStackedChart: stackedContainer ref is not available.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// processedField.value for stacked-chart is an array with a single object: [{ \"Cat A\": valA, \"Cat B\": valB, ... }]\r\n\t\t\t\tconst rawDataObject =\r\n\t\t\t\t\tprocessedField.value && processedField.value.length > 0\r\n\t\t\t\t\t\t? processedField.value[0]\r\n\t\t\t\t\t\t: {};\r\n\t\t\t\tconst seriesNames = Object.keys(rawDataObject); // 这些是商品类别名称\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart CALLED. Series Names:\",\r\n\t\t\t\t\tseriesNames,\r\n\t\t\t\t\t\"Raw Data Object:\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(rawDataObject))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (seriesNames.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No series data to render. Clearing container.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No data for chart)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tconst container = d3.select(stackedContainer.value);\r\n\t\t\t\tlet width = stackedContainer.value.clientWidth;\r\n\t\t\t\tlet height = stackedContainer.value.clientHeight;\r\n\r\n\t\t\t\tif (width === 0 || height === 0) {\r\n\t\t\t\t\tconst parentBounds =\r\n\t\t\t\t\t\tstackedContainer.value.parentElement.getBoundingClientRect();\r\n\t\t\t\t\twidth = parentBounds.width > 0 ? parentBounds.width : 300;\r\n\t\t\t\t\theight = parentBounds.height > 0 ? parentBounds.height : 150;\r\n\t\t\t\t\t// console.warn(`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 为图例调整边距，图例放右边\r\n\t\t\t\tconst margin = { top: 10, right: 150, bottom: 10, left: 10 };\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: Chart dimensions are invalid after applying margins.\",\r\n\t\t\t\t\t\t{ width, height, chartWidth, chartHeight }\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (Chart area too small)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// D3 stack generator\r\n\t\t\t\tconst stack = d3\r\n\t\t\t\t\t.stack()\r\n\t\t\t\t\t.keys(seriesNames) // 告诉 stack 如何从数据对象中获取每个系列的值\r\n\t\t\t\t\t.order(d3.stackOrderNone) // 可以根据需要改变堆叠顺序\r\n\t\t\t\t\t.offset(d3.stackOffsetNone); // 我们将手动归一化为百分比\r\n\r\n\t\t\t\tconst stackedSeriesInput = [rawDataObject]; // stack() 需要一个数组作为输入\r\n\t\t\t\tlet series = stack(stackedSeriesInput);\r\n\r\n\t\t\t\t// 计算总和并归一化为0-100的百分比\r\n\t\t\t\tconst total = d3.sum(seriesNames, key => rawDataObject[key]);\r\n\t\t\t\tseries.forEach(s => {\r\n\t\t\t\t\ts.forEach(d => {\r\n\t\t\t\t\t\td[0] = total > 0 ? (d[0] / total) * 100 : 0; // 下边界\r\n\t\t\t\t\t\td[1] = total > 0 ? (d[1] / total) * 100 : 0; // 上边界\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(\"Normalized D3 Stacked Series for 100%:\", JSON.parse(JSON.stringify(series)));\r\n\r\n\t\t\t\t// Y 轴比例尺 (代表整个条的高度，0到100%)\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, 100]) // 0% 到 100%\r\n\t\t\t\t\t.range([chartHeight, 0]); // 反向，0在顶部\r\n\r\n\t\t\t\t// X 轴只有一个条，所以用 scaleBand 但只有一个域\r\n\t\t\t\tconst barCategory = [\"堆叠条\"]; // 只是一个占位符\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(barCategory)\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.6); // 调整条的宽度，使其看起来像一个单独的条\r\n\r\n\t\t\t\t// 绘制堆叠的矩形\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series) // series 是一个数组，每个元素代表一个商品类别（一个堆叠层）\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(d => d) // d 是一个数组，通常只有一个元素，代表这个系列在条上的部分\r\n\t\t\t\t\t.join(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => x(barCategory[i])) // 只有一个条，所以 i 总是0\r\n\t\t\t\t\t.attr(\"y\", d => y(d[1])) // d[1] 是堆叠部分的顶部y坐标\r\n\t\t\t\t\t.attr(\"height\", d => y(d[0]) - y(d[1])) // 高度是底部和顶部y坐标之差\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.append(\"title\") // 添加 tooltip\r\n\t\t\t\t\t.text((d, i, nodes) => {\r\n\t\t\t\t\t\tconst seriesData = d3.select(nodes[i].parentNode).datum(); // 获取系列数据 (包含 key)\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[seriesData.key];\r\n\t\t\t\t\t\tconst percentage = y(d[0]) - y(d[1]); // 高度百分比\r\n\t\t\t\t\t\treturn `${seriesData.key}: ${originalValue.toFixed(\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t)}% (${percentage.toFixed(1)}% of bar)`;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// 添加图例\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\r\n\t\t\t\t\t.attr(\"font-size\", 10)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series) // 使用 series 来获取 key (商品名) 和颜色\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t(d, i) => `translate(${chartWidth + 15},${i * 20})`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", 0)\r\n\t\t\t\t\t.attr(\"width\", 15)\r\n\t\t\t\t\t.attr(\"height\", 15)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length]);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t\t.attr(\"y\", 9.5)\r\n\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t.text(d => {\r\n\t\t\t\t\t\tconst name = d.key; // d.key 是商品名称\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[d.key];\r\n\t\t\t\t\t\treturn `${\r\n\t\t\t\t\t\t\tname.length > 15 ? name.substring(0, 13) + \"...\" : name\r\n\t\t\t\t\t\t} (${originalValue.toFixed(1)}%)`;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(\"renderStackedChart FINISHED drawing (100% stacked bar).\");\r\n\t\t\t};\r\n\r\n\t\t\tconst formatSimpleText = value => {\r\n\t\t\t\tif (!value) return \"-\";\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tconst items = value.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tlet text = item.raw || item.value || JSON.stringify(item);\r\n\t\t\t\t\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\t\t\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn items.length > 2\r\n\t\t\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t\t\t: items.join(\"; \");\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\tlet text = value.raw || item.value || \"-\"; // 修正：应为 value.raw 或 value.value\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tvalue.raw === undefined &&\r\n\t\t\t\t\t\tvalue.value === undefined &&\r\n\t\t\t\t\t\tvalue.name\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\ttext = value.name; // 如果只有name\r\n\t\t\t\t\tif (value.unit) text += ` ${value.unit}`;\r\n\t\t\t\t\tif (value.year) text += ` (${value.year})`;\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\treturn value.toString().length > 50\r\n\t\t\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t\t\t: value.toString();\r\n\t\t\t};\r\n\r\n\t\t\tconst handleTextClick = () => {\r\n\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tdata: processedField.value,\r\n\t\t\t\t\tvalue: processedField.value\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tconst handleTextHover = () => {\r\n\t\t\t\tisTextHovered.value = true;\r\n\t\t\t};\r\n\t\t\tconst resetHover = () => {\r\n\t\t\t\tisTextHovered.value = false;\r\n\t\t\t};\r\n\r\n\t\t\tconst isValidPieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return false;\r\n\t\t\t\treturn (\r\n\t\t\t\t\tpieData.value &&\r\n\t\t\t\t\tpieData.value.length > 0 &&\r\n\t\t\t\t\tpieData.value.every(\r\n\t\t\t\t\t\titem =>\r\n\t\t\t\t\t\t\ttypeof item.name === \"string\" &&\r\n\t\t\t\t\t\t\ttypeof item.value === \"number\" &&\r\n\t\t\t\t\t\t\t!isYearEntry(item.name) &&\r\n\t\t\t\t\t\t\t!isYearEntry(String(item.value))\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst pieData = computed(() => {\r\n\t\t\t\t// 恢复 pieData 逻辑\r\n\t\t\t\tif (props.visualization !== \"pie-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tconst processItem = (item, index) => {\r\n\t\t\t\t\tlet rawValue =\r\n\t\t\t\t\t\ttypeof item === \"object\" && item !== null\r\n\t\t\t\t\t\t\t? item.raw || item.value || item\r\n\t\t\t\t\t\t\t: item;\r\n\t\t\t\t\tif (isYearEntry(rawValue)) return null;\r\n\t\t\t\t\tconst value = safeToNumber(rawValue);\r\n\t\t\t\t\tif (value === null) return null;\r\n\r\n\t\t\t\t\tlet name = \"项目\";\r\n\t\t\t\t\tif (typeof item === \"object\" && item !== null && item.name)\r\n\t\t\t\t\t\tname = item.name;\r\n\t\t\t\t\telse if (typeof item === \"object\" && item !== null && item.raw) {\r\n\t\t\t\t\t\tconst rawText = String(item.raw);\r\n\t\t\t\t\t\tname = rawText.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\r\n\t\t\t\t\t} else if (typeof item === \"string\") {\r\n\t\t\t\t\t\tname = item.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isYearEntry(name)) return null;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: Math.min(100, Math.max(0, value)),\r\n\t\t\t\t\t\tname: name || \"项目\",\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\treturn processedField.value\r\n\t\t\t\t\t\t.map(processItem)\r\n\t\t\t\t\t\t.filter(item => item !== null);\r\n\t\t\t\t}\r\n\t\t\t\tconst result = processItem(processedField.value, 0);\r\n\t\t\t\treturn result ? [result] : [];\r\n\t\t\t});\r\n\r\n\t\t\tconst simpleBarData = computed(() => {\r\n\t\t\t\t// 恢复 simpleBarData 逻辑\r\n\t\t\t\tif (props.visualization !== \"bar-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tlet values = [];\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\tvalues = processedField.value\r\n\t\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\t\tconst val = item?.value || item?.raw;\r\n\t\t\t\t\t\t\treturn val !== undefined && val !== null && !isYearEntry(val);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.map(item => ({\r\n\t\t\t\t\t\t\tvalue: safeToNumber(item.value || item.raw),\r\n\t\t\t\t\t\t\tname: item.name || \"Bar\"\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst val = processedField.value.value || processedField.value.raw;\r\n\t\t\t\t\tif (val !== undefined && val !== null && !isYearEntry(val)) {\r\n\t\t\t\t\t\tvalues = [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalue: safeToNumber(val),\r\n\t\t\t\t\t\t\t\tname: processedField.value.name || \"Bar\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn values.map((d, index) => ({\r\n\t\t\t\t\t...d,\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tcolor: colors[index % colors.length]\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\r\n\t\t\tconst lineData = computed(() => {\r\n\t\t\t\t// 恢复 lineData 逻辑\r\n\t\t\t\tif (props.visualization !== \"line-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\treturn processedField.value\r\n\t\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\t\tconst val = item?.value || item?.raw;\r\n\t\t\t\t\t\t\treturn val !== undefined && val !== null && !isYearEntry(val);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.map((item, index) => ({\r\n\t\t\t\t\t\t\tx: index,\r\n\t\t\t\t\t\t\ty: safeToNumber(item.value || item.raw),\r\n\t\t\t\t\t\t\traw: item.raw || item.value,\r\n\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tconst val = processedField.value.value || processedField.value.raw;\r\n\t\t\t\tif (val !== undefined && val !== null && !isYearEntry(val)) {\r\n\t\t\t\t\treturn [{ x: 0, y: safeToNumber(val), raw: val, index: 0 }];\r\n\t\t\t\t}\r\n\t\t\t\treturn [];\r\n\t\t\t});\r\n\r\n\t\t\tconst formatNumber = value => {\r\n\t\t\t\t// 简化版，具体格式化可根据需要调整\r\n\t\t\t\tconst num = Number(value);\r\n\t\t\t\tif (isNaN(num)) return \"0\";\r\n\t\t\t\tif (props.type === \"percentage\") return num.toFixed(1) + \"%\";\r\n\t\t\t\tif (num >= 1e8) return (num / 1e8).toFixed(2) + \"亿\";\r\n\t\t\t\tif (num >= 1e4) return (num / 1e4).toFixed(1) + \"万\";\r\n\t\t\t\treturn num.toFixed(0);\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpieContainer,\r\n\t\t\t\tbarContainer,\r\n\t\t\t\tlineContainer,\r\n\t\t\t\tstackedContainer,\r\n\t\t\t\tformatSimpleText,\r\n\t\t\t\thandleTextClick,\r\n\t\t\t\thandleTextHover,\r\n\t\t\t\tresetHover,\r\n\t\t\t\tisTextHovered,\r\n\t\t\t\thasData,\r\n\t\t\t\tisValidPieData\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -25px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.d3-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\toverflow: visible; /* 改为 visible，允许图例在 margin 外显示 */\r\n\t}\r\n\r\n\t:deep(.d3-tooltip) {\r\n\t\tposition: absolute;\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tpointer-events: none;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tbackground: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t:deep(.tick text) {\r\n\t\tfont-size: 9px;\r\n\t\tfill: #555;\r\n\t}\r\n\t:deep(.tick line) {\r\n\t\tstroke: #e0e0e0;\r\n\t}\r\n\t:deep(path.domain) {\r\n\t\tstroke: #aaa;\r\n\t}\r\n\r\n\t:deep(.stack-bar:hover),\r\n\t:deep(.bar:hover) {\r\n\t\t/* 统一悬停效果 */\r\n\t\topacity: 1 !important;\r\n\t}\r\n\t:deep(.stack-value-label),\r\n\t:deep(.bar-label),\r\n\t:deep(.line-label) {\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-text {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\t\t:deep(.tick text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t\t:deep(.legend text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t} /* 如果图例有 text 元素 */\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}