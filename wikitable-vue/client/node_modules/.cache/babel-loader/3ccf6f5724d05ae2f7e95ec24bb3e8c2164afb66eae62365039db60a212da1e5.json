{"ast":null,"code":"const MouseSelection = {\n  getSelectContent(sourceId, element) {\n    const selection = window.getSelection();\n    if (!selection || selection.isCollapsed) return null;\n\n    // 检查选区是否在当前 element 内部\n    if (!element.contains(selection.anchorNode) || !element.contains(selection.focusNode)) {\n      return null;\n    }\n    const textContent = selection.toString().trim();\n    if (textContent.length) {\n      return {\n        source: sourceId,\n        // 选中内容的来源（Div1 或 Div3）\n        content: textContent\n      };\n    }\n    return null;\n  },\n  selectionChangeFun(callback, sourceId, element) {\n    element.addEventListener(\"mouseup\", () => {\n      const selectContent = MouseSelection.getSelectContent(sourceId, element);\n      if (selectContent) {\n        callback(selectContent);\n      }\n    });\n  },\n  start(sourceId, element, callback) {\n    MouseSelection.selectionChangeFun(callback, sourceId, element);\n  }\n};\nexport default MouseSelection;","map":{"version":3,"names":["MouseSelection","getSelectContent","sourceId","element","selection","window","getSelection","isCollapsed","contains","anchorNode","focusNode","textContent","toString","trim","length","source","content","selectionChangeFun","callback","addEventListener","selectContent","start"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/mouse_selection.js"],"sourcesContent":["const MouseSelection = {\r\n  getSelectContent(sourceId, element) {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.isCollapsed) return null;\r\n\r\n    // 检查选区是否在当前 element 内部\r\n    if (!element.contains(selection.anchorNode) || !element.contains(selection.focusNode)) {\r\n      return null;\r\n    }\r\n\r\n    const textContent = selection.toString().trim();\r\n    if (textContent.length) {\r\n      return {\r\n        source: sourceId,  // 选中内容的来源（Div1 或 Div3）\r\n        content: textContent\r\n      };\r\n    }\r\n    return null;\r\n  },\r\n\r\n  selectionChangeFun(callback, sourceId, element) {\r\n    element.addEventListener(\"mouseup\", () => {\r\n      const selectContent = MouseSelection.getSelectContent(sourceId, element);\r\n      if (selectContent) {\r\n        callback(selectContent);\r\n      }\r\n    });\r\n  },\r\n\r\n  start(sourceId, element, callback) {\r\n    MouseSelection.selectionChangeFun(callback, sourceId, element);\r\n  }\r\n};\r\n\r\nexport default MouseSelection;\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG;EACrBC,gBAAgBA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAClC,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;IACvC,IAAI,CAACF,SAAS,IAAIA,SAAS,CAACG,WAAW,EAAE,OAAO,IAAI;;IAEpD;IACA,IAAI,CAACJ,OAAO,CAACK,QAAQ,CAACJ,SAAS,CAACK,UAAU,CAAC,IAAI,CAACN,OAAO,CAACK,QAAQ,CAACJ,SAAS,CAACM,SAAS,CAAC,EAAE;MACrF,OAAO,IAAI;IACb;IAEA,MAAMC,WAAW,GAAGP,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC/C,IAAIF,WAAW,CAACG,MAAM,EAAE;MACtB,OAAO;QACLC,MAAM,EAAEb,QAAQ;QAAG;QACnBc,OAAO,EAAEL;MACX,CAAC;IACH;IACA,OAAO,IAAI;EACb,CAAC;EAEDM,kBAAkBA,CAACC,QAAQ,EAAEhB,QAAQ,EAAEC,OAAO,EAAE;IAC9CA,OAAO,CAACgB,gBAAgB,CAAC,SAAS,EAAE,MAAM;MACxC,MAAMC,aAAa,GAAGpB,cAAc,CAACC,gBAAgB,CAACC,QAAQ,EAAEC,OAAO,CAAC;MACxE,IAAIiB,aAAa,EAAE;QACjBF,QAAQ,CAACE,aAAa,CAAC;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDC,KAAKA,CAACnB,QAAQ,EAAEC,OAAO,EAAEe,QAAQ,EAAE;IACjClB,cAAc,CAACiB,kBAAkB,CAACC,QAAQ,EAAEhB,QAAQ,EAAEC,OAAO,CAAC;EAChE;AACF,CAAC;AAED,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}