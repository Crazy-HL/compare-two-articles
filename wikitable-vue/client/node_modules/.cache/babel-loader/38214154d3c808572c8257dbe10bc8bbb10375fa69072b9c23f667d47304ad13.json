{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    let offDiv1, offDiv3;\n    onMounted(() => {\n      offDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\n      offDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\n    });\n    onUnmounted(() => {\n      offDiv1();\n      offDiv3();\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    async function askQuestion() {\n      if (!userQuestion.value) {\n        alert(\"请输入问题！\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      try {\n        const response = await fetch(\"http://localhost:8888/gpt_ask\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            question: userQuestion.value\n          })\n        });\n        const data = await response.json();\n        if (data) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: data.answer\n          });\n        } else {\n          console.error(\"提问失败:\", data.error);\n        }\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n      userQuestion.value = \"\";\n    }\n    async function compareTexts() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        const response = await fetch(\"http://localhost:8888/gpt_compare\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text1: selectText2.value,\n            text2: selectText3.value\n          })\n        });\n        const data = await response.json();\n        if (data) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: data.result\n          });\n        } else {\n          console.error(\"对比失败:\", data.error);\n        }\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n    }\n    async function processText() {\n      try {\n        const response = await fetch(\"http://localhost:8888/process_text\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: selectText2.value\n          })\n        });\n        const result = await response.json();\n        if (result.error) {\n          console.error(\"后端返回的错误:\", result.error);\n          alert(`处理文章内容时出错: ${result.message}`);\n          return;\n        }\n        renderChart(result.json_data);\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    }\n    function renderChart(rawJsonData) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n      d3.select(\".chart-container\").html(\"\");\n      const chartType = rawJsonData.type;\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      if (chartType === \"line\") {\n        renderLineChart(\".chart-container\", data, options);\n      } else if (chartType === \"bar\") {\n        renderBarChart(\".chart-container\", data, options);\n      } else if (chartType === \"pie\") {\n        renderPieChart(\".chart-container\", data, options);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      get offDiv1() {\n        return offDiv1;\n      },\n      set offDiv1(v) {\n        offDiv1 = v;\n      },\n      get offDiv3() {\n        return offDiv3;\n      },\n      set offDiv3(v) {\n        offDiv3 = v;\n      },\n      handleSelection,\n      getPlainTextFromSelection,\n      askQuestion,\n      compareTexts,\n      processText,\n      renderChart,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","d3","userQuestion","chatHistory","selectText2","selectText3","offDiv1","offDiv3","on","data","handleSelection","source","plainText","getPlainTextFromSelection","content","value","htmlContent","container","document","createElement","innerHTML","innerText","textContent","askQuestion","alert","push","role","response","fetch","method","headers","body","JSON","stringify","question","json","answer","console","error","compareTexts","text1","text2","result","processText","text","message","renderChart","json_data","rawJsonData","select","html","chartType","type","options","renderLineChart","renderBarChart","renderPieChart"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<!-- 可用于显示图形或其他内容 -->\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 输入框和操作按钮（移动到vis-container的下方） -->\r\n\t\t<div class=\"input-container\">\r\n\t\t\t<textarea\r\n\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\trows=\"2\"\r\n\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t<div class=\"button-container\">\r\n\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t<button @click=\"processText\" class=\"submit-btn\">提交可视化</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\r\n\tlet offDiv1, offDiv3;\r\n\r\n\tonMounted(() => {\r\n\t\toffDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\r\n\t\toffDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\toffDiv1();\r\n\t\toffDiv3();\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"http://localhost:8888/gpt_ask\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({ question: userQuestion.value })\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.answer });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"提问失败:\", data.error);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\r\n\t\tuserQuestion.value = \"\";\r\n\t}\r\n\r\n\tasync function compareTexts() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"http://localhost:8888/gpt_compare\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttext1: selectText2.value,\r\n\t\t\t\t\ttext2: selectText3.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.result });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function processText() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({ text: selectText2.value })\r\n\t\t\t});\r\n\t\t\tconst result = await response.json();\r\n\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\trenderChart(result.json_data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderChart(rawJsonData) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\r\n\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\td3.select(\".chart-container\").html(\"\");\r\n\r\n\t\tconst chartType = rawJsonData.type;\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\tif (chartType === \"line\") {\r\n\t\t\trenderLineChart(\".chart-container\", data, options);\r\n\t\t} else if (chartType === \"bar\") {\r\n\t\t\trenderBarChart(\".chart-container\", data, options);\r\n\t\t} else if (chartType === \"pie\") {\r\n\t\t\trenderPieChart(\".chart-container\", data, options);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tmax-height: 200px;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 2;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 10px;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t\tbackground: #fff;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 10px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}