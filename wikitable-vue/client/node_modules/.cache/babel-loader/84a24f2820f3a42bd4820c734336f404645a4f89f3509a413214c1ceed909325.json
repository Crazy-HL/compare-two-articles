{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n    const initChart = () => {\n      if (!chartEl.value) return;\n      chartInstance = echarts.init(chartEl.value);\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: \"{b}: {c}%\"\n        },\n        xAxis: {\n          type: \"category\",\n          data: props.data.map(item => item.year || \"\")\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          }\n        },\n        series: [{\n          data: props.data.map(item => item.value),\n          type: \"line\",\n          smooth: true,\n          symbol: \"circle\",\n          symbolSize: 8,\n          itemStyle: {\n            color: \"#3498db\"\n          },\n          lineStyle: {\n            width: 3\n          }\n        }]\n      };\n      chartInstance.setOption(option);\n    };\n    onMounted(() => {\n      initChart();\n      window.addEventListener(\"resize\", () => chartInstance?.resize());\n    });\n    watch(() => props.data, () => {\n      if (chartInstance) {\n        initChart();\n      }\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart,\n      ref,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","echarts","props","__props","chartEl","chartInstance","initChart","value","init","option","tooltip","trigger","formatter","xAxis","type","data","map","item","year","yAxis","axisLabel","series","smooth","symbol","symbolSize","itemStyle","color","lineStyle","width","setOption","window","addEventListener","resize","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: \"{b}: {c}%\"\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: props.data.map(item => item.year || \"\")\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: \"#3498db\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => props.data,\r\n\t\t() => {\r\n\t\t\tif (chartInstance) {\r\n\t\t\t\tinitChart();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 150px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAKC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,IAAIO,aAAa,GAAG,IAAI;IAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACF,OAAO,CAACG,KAAK,EAAE;MAEpBF,aAAa,GAAGJ,OAAO,CAACO,IAAI,CAACJ,OAAO,CAACG,KAAK,CAAC;MAE3C,MAAME,MAAM,GAAG;QACdC,OAAO,EAAE;UACRC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACNC,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAEb,KAAK,CAACa,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,IAAI,EAAE;QAC7C,CAAC;QACDC,KAAK,EAAE;UACNL,IAAI,EAAE,OAAO;UACbM,SAAS,EAAE;YACVR,SAAS,EAAE;UACZ;QACD,CAAC;QACDS,MAAM,EAAE,CACP;UACCN,IAAI,EAAEb,KAAK,CAACa,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACV,KAAK,CAAC;UACxCO,IAAI,EAAE,MAAM;UACZQ,MAAM,EAAE,IAAI;UACZC,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE;YACVC,KAAK,EAAE;UACR,CAAC;UACDC,SAAS,EAAE;YACVC,KAAK,EAAE;UACR;QACD,CAAC;MAEH,CAAC;MAEDvB,aAAa,CAACwB,SAAS,CAACpB,MAAM,CAAC;IAChC,CAAC;IAEDV,SAAS,CAAC,MAAM;MACfO,SAAS,CAAC,CAAC;MACXwB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM1B,aAAa,EAAE2B,MAAM,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC;IAEFhC,KAAK,CACJ,MAAME,KAAK,CAACa,IAAI,EAChB,MAAM;MACL,IAAIV,aAAa,EAAE;QAClBC,SAAS,CAAC,CAAC;MACZ;IACD,CAAC,EACD;MAAE2B,IAAI,EAAE;IAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}