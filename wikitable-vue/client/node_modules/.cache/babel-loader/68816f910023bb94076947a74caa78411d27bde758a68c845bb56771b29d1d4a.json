{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport ArticleOutline from \"./ArticleOutline.vue\"; // 引入大纲组件\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref({}); // 存储每个 div 的选中内容\n    const showPopup = ref({}); // 存储每个 div 的弹窗显示状态\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n\n    // 自定义关联数组\n    const linkedOutline = ref([{\n      leftId: \"heading-0-div1\",\n      rightId: \"heading-0-div3\"\n    }, {\n      leftId: \"heading-3-div1\",\n      rightId: \"heading-3-div3\"\n    }, {\n      leftId: \"heading-9-div1\",\n      rightId: \"heading-12-div3\"\n    }, {\n      leftId: \"heading-23-div1\",\n      rightId: \"heading-13-div3\"\n    }, {\n      leftId: \"heading-24-div1\",\n      rightId: \"heading-14-div3\"\n    }, {\n      leftId: \"heading-25-div1\",\n      rightId: \"heading-19-div3\"\n    }, {\n      leftId: \"heading-26-div1\",\n      rightId: \"heading-15-div3\"\n    }, {\n      leftId: \"heading-28-div1\",\n      rightId: \"heading-16-div3\"\n    }, {\n      leftId: \"heading-30-div1\",\n      rightId: \"heading-17-div3\"\n    }, {\n      leftId: \"heading-32-div1\",\n      rightId: \"heading-32-div3\"\n    }, {\n      leftId: \"heading-33-div1\",\n      rightId: \"heading-33-div3\"\n    }, {\n      leftId: \"heading-34-div1\",\n      rightId: \"heading-35-div3\"\n    }, {\n      leftId: \"heading-35-div1\",\n      rightId: \"heading-37-div3\"\n    }]);\n\n    // 处理 scroll-and-popup 事件\n    const handleScrollAndPopup = _ref2 => {\n      let {\n        sourceDivId,\n        targetId,\n        content\n      } = _ref2;\n      console.log(\"处理 scroll-and-popup 事件，sourceDivId:\", sourceDivId, \"targetId:\", targetId);\n\n      // 如果事件来自当前 Div，则不处理\n      if (sourceDivId === props.divId) return;\n\n      // 滚动到目标章节\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) {\n        console.log(\"找到目标元素，开始滚动\");\n        targetElement.scrollIntoView({\n          behavior: \"smooth\"\n        });\n\n        // 弹出相关内容\n        selectedText.value[props.divId] = content;\n        showPopup.value[props.divId] = true;\n\n        // 确保弹窗位置更新\n        nextTick(() => {\n          updatePopupPosition();\n          console.log(\"弹窗位置已更新\");\n        });\n      } else {\n        console.error(\"未找到目标元素，targetId:\", targetId);\n      }\n    };\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n        console.log(\"API 请求成功，返回的 HTML:\", html);\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 给所有 h1-h6 添加唯一 ID\n        const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n        headings.forEach((heading, index) => {\n          const uniqueId = `heading-${index}-${props.divId}`; // 生成唯一 ID\n          heading.id = uniqueId;\n        });\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n        console.log(\"解析后的页面内容:\", pageHtml.value);\n      } catch (err) {\n        console.error(\"API 请求失败:\", err);\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **手动引入 Wikipedia CSS**\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // **处理选中内容**\n    const handleSelection = selectedText => {\n      if (!selectedText) {\n        console.error(\"选中的内容为空\");\n        return;\n      }\n\n      // 获取选中的文本所在的章节 ID\n      const chapterId = findChapterId(selectedText);\n      if (!chapterId) {\n        console.error(\"未找到选中的章节 ID\");\n        return;\n      }\n      console.log(\"选中的章节 ID:\", chapterId);\n\n      // 存储选中的内容和章节 ID\n      selectedText.value[props.divId] = {\n        content: selectedText,\n        chapterId\n      };\n      showPopup.value[props.divId] = true;\n\n      // 通过 eventBus 通知另一个 div 进行滚动和弹出\n      bus.emit(\"scroll-and-popup\", {\n        sourceDivId: props.divId,\n        // 当前 Div 的 ID\n        chapterId: chapterId // 选中的章节 ID\n      });\n\n      // 确保弹窗位置更新\n      nextTick(() => {\n        updatePopupPosition();\n      });\n    };\n\n    // 查找选中的文本所在的章节 ID\n    const findChapterId = selectedText => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(pageHtml.value, \"text/html\");\n\n      // 遍历所有章节（h1-h6）\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      for (const heading of headings) {\n        // 检查选中的文本是否在该章节的范围内\n        if (heading.textContent.includes(selectedText)) {\n          return heading.id; // 返回章节 ID\n        }\n      }\n      return null; // 未找到章节 ID\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value[props.divId] = false; // 根据 divId 关闭弹窗\n      selectedText.value[props.divId] = \"\"; // 根据 divId 清除选中内容\n\n      // 根据 divId 清空对应的容器\n      const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n      d3.select(container).html(\"\");\n    };\n\n    // **更新遮罩层和弹出框的位置**\n    const updatePopupPosition = () => {\n      if (showPopup.value[props.divId] && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        const overlay = divRef.value.querySelector(\".overlay\");\n        if (popup && overlay) {\n          const rect = divRef.value.getBoundingClientRect();\n          const scrollTop = divRef.value.scrollTop;\n          const scrollLeft = divRef.value.scrollLeft;\n\n          // 动态调整遮罩层和弹出框的位置\n          overlay.style.top = `${scrollTop}px`;\n          overlay.style.left = `${scrollLeft}px`;\n          overlay.style.width = `${divRef.value.clientWidth}px`;\n          overlay.style.height = `${divRef.value.clientHeight}px`;\n          popup.style.top = `${rect.height / 2 + scrollTop}px`;\n          popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n        }\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(() => {\n      // 确保 divRef 已初始化\n      if (divRef.value) {\n        console.log(\"divRef 已绑定到 DOM 元素:\", divRef.value);\n      } else {\n        console.error(\"divRef 未绑定到 DOM 元素\");\n      }\n      fetchWikipediaContent();\n\n      // 监听父容器滚动事件\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n      // 监听 scroll-and-popup 事件\n      bus.on(\"scroll-and-popup\", handleScrollAndPopup);\n    });\n\n    // **组件卸载时解绑事件**\n    onUnmounted(() => {\n      // 解绑父容器滚动事件\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n      // 解绑 scroll-and-popup 事件\n      bus.off(\"scroll-and-popup\", handleScrollAndPopup);\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      linkedOutline,\n      handleScrollAndPopup,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      handleSelection,\n      findChapterId,\n      closePopup,\n      updatePopupPosition,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      ArticleOutline,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","ArticleOutline","d3","bus","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","linkedOutline","leftId","rightId","handleScrollAndPopup","_ref2","sourceDivId","targetId","content","console","log","divId","targetElement","document","getElementById","scrollIntoView","behavior","value","updatePopupPosition","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","forEach","heading","index","uniqueId","id","contentElement","querySelector","innerHTML","err","message","injectWikipediaStyles","wikipediaStyles","url","styleTag","createElement","rel","href","head","appendChild","handleSelection","chapterId","findChapterId","emit","textContent","includes","closePopup","container","select","popup","overlay","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","left","width","clientWidth","height","clientHeight","addEventListener","on","removeEventListener","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t:divId=\"divId\"\r\n\t\t\t:linkedOutline=\"linkedOutline\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<!-- 悬浮大纲组件 -->\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t\t<!-- 添加 key 属性 -->\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\"; // 引入大纲组件\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\r\n\t// 自定义关联数组\r\n\tconst linkedOutline = ref([\r\n\t\t{ leftId: \"heading-0-div1\", rightId: \"heading-0-div3\" },\r\n\t\t{ leftId: \"heading-3-div1\", rightId: \"heading-3-div3\" },\r\n\t\t{ leftId: \"heading-9-div1\", rightId: \"heading-12-div3\" },\r\n\t\t{ leftId: \"heading-23-div1\", rightId: \"heading-13-div3\" },\r\n\t\t{ leftId: \"heading-24-div1\", rightId: \"heading-14-div3\" },\r\n\t\t{ leftId: \"heading-25-div1\", rightId: \"heading-19-div3\" },\r\n\t\t{ leftId: \"heading-26-div1\", rightId: \"heading-15-div3\" },\r\n\t\t{ leftId: \"heading-28-div1\", rightId: \"heading-16-div3\" },\r\n\t\t{ leftId: \"heading-30-div1\", rightId: \"heading-17-div3\" },\r\n\t\t{ leftId: \"heading-32-div1\", rightId: \"heading-32-div3\" },\r\n\t\t{ leftId: \"heading-33-div1\", rightId: \"heading-33-div3\" },\r\n\t\t{ leftId: \"heading-34-div1\", rightId: \"heading-35-div3\" },\r\n\t\t{ leftId: \"heading-35-div1\", rightId: \"heading-37-div3\" }\r\n\t]);\r\n\r\n\t// 处理 scroll-and-popup 事件\r\n\tconst handleScrollAndPopup = ({ sourceDivId, targetId, content }) => {\r\n\t\tconsole.log(\r\n\t\t\t\"处理 scroll-and-popup 事件，sourceDivId:\",\r\n\t\t\tsourceDivId,\r\n\t\t\t\"targetId:\",\r\n\t\t\ttargetId\r\n\t\t);\r\n\r\n\t\t// 如果事件来自当前 Div，则不处理\r\n\t\tif (sourceDivId === props.divId) return;\r\n\r\n\t\t// 滚动到目标章节\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\tif (targetElement) {\r\n\t\t\tconsole.log(\"找到目标元素，开始滚动\");\r\n\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t\t// 弹出相关内容\r\n\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\r\n\t\t\t// 确保弹窗位置更新\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t\tconsole.log(\"弹窗位置已更新\");\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未找到目标元素，targetId:\", targetId);\r\n\t\t}\r\n\t};\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\t\t\tconsole.log(\"API 请求成功，返回的 HTML:\", html);\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 给所有 h1-h6 添加唯一 ID\r\n\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\tconst uniqueId = `heading-${index}-${props.divId}`; // 生成唯一 ID\r\n\t\t\t\theading.id = uniqueId;\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\tconsole.log(\"解析后的页面内容:\", pageHtml.value);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"API 请求失败:\", err);\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **处理选中内容**\r\n\tconst handleSelection = selectedText => {\r\n\t\tif (!selectedText) {\r\n\t\t\tconsole.error(\"选中的内容为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 获取选中的文本所在的章节 ID\r\n\t\tconst chapterId = findChapterId(selectedText);\r\n\t\tif (!chapterId) {\r\n\t\t\tconsole.error(\"未找到选中的章节 ID\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"选中的章节 ID:\", chapterId);\r\n\r\n\t\t// 存储选中的内容和章节 ID\r\n\t\tselectedText.value[props.divId] = { content: selectedText, chapterId };\r\n\t\tshowPopup.value[props.divId] = true;\r\n\r\n\t\t// 通过 eventBus 通知另一个 div 进行滚动和弹出\r\n\t\tbus.emit(\"scroll-and-popup\", {\r\n\t\t\tsourceDivId: props.divId, // 当前 Div 的 ID\r\n\t\t\tchapterId: chapterId // 选中的章节 ID\r\n\t\t});\r\n\r\n\t\t// 确保弹窗位置更新\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\t// 查找选中的文本所在的章节 ID\r\n\tconst findChapterId = selectedText => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(pageHtml.value, \"text/html\");\r\n\r\n\t\t// 遍历所有章节（h1-h6）\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tfor (const heading of headings) {\r\n\t\t\t// 检查选中的文本是否在该章节的范围内\r\n\t\t\tif (heading.textContent.includes(selectedText)) {\r\n\t\t\t\treturn heading.id; // 返回章节 ID\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null; // 未找到章节 ID\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false; // 根据 divId 关闭弹窗\r\n\t\tselectedText.value[props.divId] = \"\"; // 根据 divId 清除选中内容\r\n\r\n\t\t// 根据 divId 清空对应的容器\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\t// **更新遮罩层和弹出框的位置**\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\t\tif (popup && overlay) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\t// 动态调整遮罩层和弹出框的位置\r\n\t\t\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\t\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\t\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\t\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\t// 确保 divRef 已初始化\r\n\t\tif (divRef.value) {\r\n\t\t\tconsole.log(\"divRef 已绑定到 DOM 元素:\", divRef.value);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"divRef 未绑定到 DOM 元素\");\r\n\t\t}\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 监听父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t\t// 监听 scroll-and-popup 事件\r\n\t\tbus.on(\"scroll-and-popup\", handleScrollAndPopup);\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\t// 解绑父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t\t// 解绑 scroll-and-popup 事件\r\n\t\tbus.off(\"scroll-and-popup\", handleScrollAndPopup);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* 选中文本的高亮样式 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"AAmCC,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAK;AAC3D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,cAAc,MAAM,sBAAsB,CAAC,CAAC;AACnD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,GAAG,MAAM,kBAAkB;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,QAAQ,GAAGb,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAMc,OAAO,GAAGd,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,MAAMe,KAAK,GAAGf,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,MAAMgB,YAAY,GAAGhB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMiB,SAAS,GAAGjB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMkB,MAAM,GAAGlB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE1B;IACA,MAAMmB,aAAa,GAAGnB,GAAG,CAAC,CACzB;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAiB,CAAC,EACvD;MAAED,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAiB,CAAC,EACvD;MAAED,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACxD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACzD;MAAED,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAkB,CAAC,CACzD,CAAC;;IAEF;IACA,MAAMC,oBAAoB,GAAGC,KAAA,IAAwC;MAAA,IAAvC;QAAEC,WAAW;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,GAAAH,KAAA;MAC/DI,OAAO,CAACC,GAAG,CACV,qCAAqC,EACrCJ,WAAW,EACX,WAAW,EACXC,QACD,CAAC;;MAED;MACA,IAAID,WAAW,KAAKb,KAAK,CAACkB,KAAK,EAAE;;MAEjC;MACA,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAACP,QAAQ,CAAC;MACvD,IAAIK,aAAa,EAAE;QAClBH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1BE,aAAa,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;;QAEpD;QACAlB,YAAY,CAACmB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAGH,OAAO;QACzCT,SAAS,CAACkB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAG,IAAI;;QAEnC;QACA1B,QAAQ,CAAC,MAAM;UACdiC,mBAAmB,CAAC,CAAC;UACrBT,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACvB,CAAC,CAAC;MACH,CAAC,MAAM;QACND,OAAO,CAACZ,KAAK,CAAC,mBAAmB,EAAEU,QAAQ,CAAC;MAC7C;IACD,CAAC;;IAED;IACA,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH,MAAMC,MAAM,GAAG,kDAAkDC,kBAAkB,CAClF5B,KAAK,CAAC6B,SACP,CAAC,EAAE;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCnB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEiB,IAAI,CAAC;;QAEvC;QACA,MAAME,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACL,IAAI,EAAE,WAAW,CAAC;;QAErD;QACA,MAAMM,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;QAC/DD,QAAQ,CAACE,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;UACpC,MAAMC,QAAQ,GAAG,WAAWD,KAAK,IAAI5C,KAAK,CAACkB,KAAK,EAAE,CAAC,CAAC;UACpDyB,OAAO,CAACG,EAAE,GAAGD,QAAQ;QACtB,CAAC,CAAC;;QAEF;QACA,MAAME,cAAc,GAAGT,GAAG,CAACU,aAAa,CAAC,MAAM,CAAC;QAChD,IAAI,CAACD,cAAc,EAAE,MAAM,IAAId,KAAK,CAAC,mBAAmB,CAAC;QAEzD/B,QAAQ,CAACsB,KAAK,GAAGuB,cAAc,CAACE,SAAS;QACzCjC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEf,QAAQ,CAACsB,KAAK,CAAC;MACzC,CAAC,CAAC,OAAO0B,GAAG,EAAE;QACblC,OAAO,CAACZ,KAAK,CAAC,WAAW,EAAE8C,GAAG,CAAC;QAC/B9C,KAAK,CAACoB,KAAK,GAAG,oCAAoC,GAAG0B,GAAG,CAACC,OAAO;MACjE,CAAC,SAAS;QACThD,OAAO,CAACqB,KAAK,GAAG,KAAK;MACtB;IACD,CAAC;;IAED;IACA,MAAM4B,qBAAqB,GAAGA,CAAA,KAAM;MACnC,MAAMC,eAAe,GAAG,CACvB,yDAAyD,EACzD,6DAA6D,EAC7D,kEAAkE,EAClE,iEAAiE,CACjE;MAEDA,eAAe,CAACX,OAAO,CAACY,GAAG,IAAI;QAC9B,IAAI,CAAClC,QAAQ,CAAC4B,aAAa,CAAC,cAAcM,GAAG,IAAI,CAAC,EAAE;UACnD,MAAMC,QAAQ,GAAGnC,QAAQ,CAACoC,aAAa,CAAC,MAAM,CAAC;UAC/CD,QAAQ,CAACE,GAAG,GAAG,YAAY;UAC3BF,QAAQ,CAACG,IAAI,GAAGJ,GAAG;UACnBlC,QAAQ,CAACuC,IAAI,CAACC,WAAW,CAACL,QAAQ,CAAC;QACpC;MACD,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMM,eAAe,GAAGxD,YAAY,IAAI;MACvC,IAAI,CAACA,YAAY,EAAE;QAClBW,OAAO,CAACZ,KAAK,CAAC,SAAS,CAAC;QACxB;MACD;;MAEA;MACA,MAAM0D,SAAS,GAAGC,aAAa,CAAC1D,YAAY,CAAC;MAC7C,IAAI,CAACyD,SAAS,EAAE;QACf9C,OAAO,CAACZ,KAAK,CAAC,aAAa,CAAC;QAC5B;MACD;MAEAY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE6C,SAAS,CAAC;;MAEnC;MACAzD,YAAY,CAACmB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAG;QAAEH,OAAO,EAAEV,YAAY;QAAEyD;MAAU,CAAC;MACtExD,SAAS,CAACkB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAG,IAAI;;MAEnC;MACAnB,GAAG,CAACiE,IAAI,CAAC,kBAAkB,EAAE;QAC5BnD,WAAW,EAAEb,KAAK,CAACkB,KAAK;QAAE;QAC1B4C,SAAS,EAAEA,SAAS,CAAC;MACtB,CAAC,CAAC;;MAEF;MACAtE,QAAQ,CAAC,MAAM;QACdiC,mBAAmB,CAAC,CAAC;MACtB,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMsC,aAAa,GAAG1D,YAAY,IAAI;MACrC,MAAM+B,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACrC,QAAQ,CAACsB,KAAK,EAAE,WAAW,CAAC;;MAE/D;MACA,MAAMgB,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAC/D,KAAK,MAAME,OAAO,IAAIH,QAAQ,EAAE;QAC/B;QACA,IAAIG,OAAO,CAACsB,WAAW,CAACC,QAAQ,CAAC7D,YAAY,CAAC,EAAE;UAC/C,OAAOsC,OAAO,CAACG,EAAE,CAAC,CAAC;QACpB;MACD;MACA,OAAO,IAAI,CAAC,CAAC;IACd,CAAC;;IAED;IACA,MAAMqB,UAAU,GAAGA,CAAA,KAAM;MACxB7D,SAAS,CAACkB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;MACtCb,YAAY,CAACmB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;;MAEtC;MACA,MAAMkD,SAAS,GACdpE,KAAK,CAACkB,KAAK,KAAK,MAAM,GAAG,mBAAmB,GAAG,mBAAmB;MACnEpB,EAAE,CAACuE,MAAM,CAACD,SAAS,CAAC,CAAClC,IAAI,CAAC,EAAE,CAAC;IAC9B,CAAC;;IAED;IACA,MAAMT,mBAAmB,GAAGA,CAAA,KAAM;MACjC,IAAInB,SAAS,CAACkB,KAAK,CAACxB,KAAK,CAACkB,KAAK,CAAC,IAAIX,MAAM,CAACiB,KAAK,EAAE;QACjD,MAAM8C,KAAK,GAAG/D,MAAM,CAACiB,KAAK,CAACwB,aAAa,CAAC,aAAa,CAAC;QACvD,MAAMuB,OAAO,GAAGhE,MAAM,CAACiB,KAAK,CAACwB,aAAa,CAAC,UAAU,CAAC;QACtD,IAAIsB,KAAK,IAAIC,OAAO,EAAE;UACrB,MAAMC,IAAI,GAAGjE,MAAM,CAACiB,KAAK,CAACiD,qBAAqB,CAAC,CAAC;UACjD,MAAMC,SAAS,GAAGnE,MAAM,CAACiB,KAAK,CAACkD,SAAS;UACxC,MAAMC,UAAU,GAAGpE,MAAM,CAACiB,KAAK,CAACmD,UAAU;;UAE1C;UACAJ,OAAO,CAACK,KAAK,CAACC,GAAG,GAAG,GAAGH,SAAS,IAAI;UACpCH,OAAO,CAACK,KAAK,CAACE,IAAI,GAAG,GAAGH,UAAU,IAAI;UACtCJ,OAAO,CAACK,KAAK,CAACG,KAAK,GAAG,GAAGxE,MAAM,CAACiB,KAAK,CAACwD,WAAW,IAAI;UACrDT,OAAO,CAACK,KAAK,CAACK,MAAM,GAAG,GAAG1E,MAAM,CAACiB,KAAK,CAAC0D,YAAY,IAAI;UAEvDZ,KAAK,CAACM,KAAK,CAACC,GAAG,GAAG,GAAGL,IAAI,CAACS,MAAM,GAAG,CAAC,GAAGP,SAAS,IAAI;UACpDJ,KAAK,CAACM,KAAK,CAACE,IAAI,GAAG,GAAGN,IAAI,CAACO,KAAK,GAAG,CAAC,GAAGJ,UAAU,IAAI;QACtD;MACD;IACD,CAAC;;IAED;IACArF,SAAS,CAAC,MAAM;MACf;MACA,IAAIiB,MAAM,CAACiB,KAAK,EAAE;QACjBR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEV,MAAM,CAACiB,KAAK,CAAC;MACjD,CAAC,MAAM;QACNR,OAAO,CAACZ,KAAK,CAAC,oBAAoB,CAAC;MACpC;MACAsB,qBAAqB,CAAC,CAAC;;MAEvB;MACA,IAAInB,MAAM,CAACiB,KAAK,EAAE;QACjBjB,MAAM,CAACiB,KAAK,CAAC2D,gBAAgB,CAAC,QAAQ,EAAE1D,mBAAmB,CAAC;MAC7D;MACA;MACA1B,GAAG,CAACqF,EAAE,CAAC,kBAAkB,EAAEzE,oBAAoB,CAAC;IACjD,CAAC,CAAC;;IAEF;IACApB,WAAW,CAAC,MAAM;MACjB;MACA,IAAIgB,MAAM,CAACiB,KAAK,EAAE;QACjBjB,MAAM,CAACiB,KAAK,CAAC6D,mBAAmB,CAAC,QAAQ,EAAE5D,mBAAmB,CAAC;MAChE;MACA;MACA1B,GAAG,CAACuF,GAAG,CAAC,kBAAkB,EAAE3E,oBAAoB,CAAC;IAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}