{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport ArticleOutline from \"./ArticleOutline.vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String,\n    linkedOutline: Array\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\");\n    const loading = ref(true);\n    const error = ref(\"\");\n    const selectedText = ref({});\n    const showPopup = ref({});\n    const divRef = ref(null);\n\n    // 调试模式\n    const debugMode = ref(true);\n\n    // 获取Wikipedia页面\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 给所有标题添加唯一ID\n        const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n        headings.forEach((heading, index) => {\n          heading.id = `heading-${index}-${props.divId}`;\n        });\n\n        // 给表格添加类名\n        const tables = doc.querySelectorAll(\"table\");\n        tables.forEach(table => {\n          table.classList.add(\"custom-table\");\n        });\n\n        // 注入样式\n        const styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\n        styles.forEach(link => {\n          if (!document.querySelector(`link[href=\"${link.href}\"]`)) {\n            const styleTag = document.createElement(\"link\");\n            styleTag.rel = \"stylesheet\";\n            styleTag.href = link.href;\n            document.head.appendChild(styleTag);\n          }\n        });\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n        injectWikipediaStyles();\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 手动引入Wikipedia CSS\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // 提取关联章节内容\n    const extractLinkedChapterContent = (sourceId, sourceContainerId) => {\n      if (!props.linkedOutline) {\n        console.error(\"LinkedOutline is undefined!\");\n        return {\n          linkedItem: null,\n          chapterContent: \"\"\n        };\n      }\n      const linkedItem = props.linkedOutline.find(linked => linked.leftId === sourceId || linked.rightId === sourceId);\n      if (!linkedItem) return {\n        linkedItem: null,\n        chapterContent: \"\"\n      };\n      const targetContainerId = sourceContainerId === \"div1\" ? \"div3\" : \"div1\";\n      const targetId = sourceContainerId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\n      const targetContainer = document.getElementById(targetContainerId);\n      if (!targetContainer) return {\n        linkedItem: null,\n        chapterContent: \"\"\n      };\n      const targetElement = targetContainer.querySelector(`#${targetId}`);\n      if (!targetElement) return {\n        linkedItem: null,\n        chapterContent: \"\"\n      };\n      let chapterContent = \"\";\n      let currentNode = targetElement;\n      while (currentNode) {\n        if (currentNode !== targetElement && currentNode.nodeType === Node.ELEMENT_NODE && /^h[1-6]$/i.test(currentNode.tagName)) {\n          break;\n        }\n        if (currentNode.nodeType === Node.ELEMENT_NODE || currentNode.nodeType === Node.TEXT_NODE) {\n          chapterContent += currentNode.outerHTML || currentNode.textContent;\n        }\n        currentNode = currentNode.nextSibling;\n      }\n      return {\n        linkedItem,\n        chapterContent\n      };\n    };\n\n    // 处理选中内容（主入口）\n    const handleSelection = content => {\n      const isTable = /<table.*?>.*?<\\/table>/s.test(content);\n      const selection = window.getSelection();\n      if (!selection || selection.rangeCount === 0) return;\n      const range = selection.getRangeAt(0);\n      let sourceId = findHeadingId(range);\n\n      // 核心修改：确保始终触发主事件\n      triggerPrimaryEvent(content, sourceId, isTable);\n\n      // 存储选中内容并显示弹窗\n      selectedText.value[props.divId] = content;\n      showPopup.value[props.divId] = true;\n      nextTick(updatePopupPosition);\n\n      // 特殊处理表格内容\n      if (isTable && sourceId) {\n        handleTableSelection(content, sourceId);\n      }\n    };\n\n    // 辅助函数：查找标题ID\n    const findHeadingId = range => {\n      // 从选中节点查找\n      const selectedNodes = range.cloneContents().childNodes;\n      for (const node of selectedNodes) {\n        if (node.nodeType === Node.ELEMENT_NODE && /^h[1-6]$/i.test(node.tagName)) {\n          return node.id;\n        }\n      }\n\n      // 从起始位置向上查找\n      let element = range.startContainer;\n      while (element && !/^h[1-6]$/i.test(element.tagName)) {\n        element = element.parentElement;\n      }\n      return element?.id;\n    };\n\n    // 触发主事件\n    const triggerPrimaryEvent = (content, sourceId, isTable) => {\n      const eventData = {\n        type: \"primary\",\n        content,\n        sourceId,\n        isTable,\n        divId: props.divId,\n        timestamp: Date.now()\n      };\n      if (debugMode.value) {\n        console.group(`触发 ${props.divId}Event`);\n        console.log(\"事件数据:\", eventData);\n        console.groupEnd();\n      }\n      bus.emit(`${props.divId}Event`, eventData);\n    };\n\n    // 处理表格选择\n    const handleTableSelection = (content, sourceId) => {\n      const {\n        linkedItem,\n        chapterContent\n      } = extractLinkedChapterContent(sourceId, props.divId);\n      if (!linkedItem || !chapterContent) return;\n      const otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\n      const targetId = props.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\n\n      // 滚动到关联章节\n      const targetElement = document.getElementById(targetId);\n      targetElement?.scrollIntoView({\n        behavior: \"smooth\"\n      });\n\n      // 触发关联事件\n      const linkedEventData = {\n        type: \"linked\",\n        content: chapterContent,\n        sourceId,\n        linkedItem,\n        fromDivId: props.divId\n      };\n      if (debugMode.value) {\n        console.group(`触发 ${otherContainerId}Event (关联内容)`);\n        console.log(\"关联事件数据:\", linkedEventData);\n        console.groupEnd();\n      }\n      bus.emit(`${otherContainerId}Event`, linkedEventData);\n    };\n\n    // 关闭弹出框\n    const closePopup = () => {\n      showPopup.value[props.divId] = false;\n      selectedText.value[props.divId] = \"\";\n      const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n      d3.select(container).html(\"\");\n    };\n\n    // 更新弹窗位置\n    const updatePopupPosition = () => {\n      if (!showPopup.value[props.divId] || !divRef.value) return;\n      const popup = divRef.value.querySelector(\".text-popup\");\n      const overlay = divRef.value.querySelector(\".overlay\");\n      if (!popup || !overlay) return;\n      const rect = divRef.value.getBoundingClientRect();\n      const scrollTop = divRef.value.scrollTop;\n      const scrollLeft = divRef.value.scrollLeft;\n      overlay.style.top = `${scrollTop}px`;\n      overlay.style.left = `${scrollLeft}px`;\n      overlay.style.width = `${divRef.value.clientWidth}px`;\n      overlay.style.height = `${divRef.value.clientHeight}px`;\n      popup.style.top = `${rect.height / 2 + scrollTop}px`;\n      popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n    };\n\n    // 组件生命周期\n    onMounted(() => {\n      if (debugMode.value) {\n        console.log(`ParentComponent ${props.divId} 已挂载`);\n      }\n      fetchWikipediaContent();\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n\n      // 监听关联内容事件\n      bus.on(`${props.divId}Event`, handleIncomingEvent);\n    });\n    onUnmounted(() => {\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n      bus.off(`${props.divId}Event`, handleIncomingEvent);\n    });\n\n    // 处理传入事件\n    const handleIncomingEvent = data => {\n      if (debugMode.value) {\n        console.group(`收到 ${props.divId}Event`);\n        console.log(\"事件数据:\", data);\n        console.groupEnd();\n      }\n      if (data.type === \"linked\") {\n        selectedText.value[props.divId] = data.content;\n        showPopup.value[props.divId] = true;\n        nextTick(updatePopupPosition);\n      }\n    };\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      debugMode,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      extractLinkedChapterContent,\n      handleSelection,\n      findHeadingId,\n      triggerPrimaryEvent,\n      handleTableSelection,\n      closePopup,\n      updatePopupPosition,\n      handleIncomingEvent,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      ArticleOutline,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","ArticleOutline","d3","bus","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","debugMode","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","forEach","heading","index","id","divId","tables","table","classList","add","styles","Array","from","link","document","querySelector","href","styleTag","createElement","rel","head","appendChild","contentElement","value","innerHTML","injectWikipediaStyles","err","message","wikipediaStyles","url","extractLinkedChapterContent","sourceId","sourceContainerId","linkedOutline","console","linkedItem","chapterContent","find","linked","leftId","rightId","targetContainerId","targetId","targetContainer","getElementById","targetElement","currentNode","nodeType","Node","ELEMENT_NODE","test","tagName","TEXT_NODE","outerHTML","textContent","nextSibling","handleSelection","content","isTable","selection","window","getSelection","rangeCount","range","getRangeAt","findHeadingId","triggerPrimaryEvent","updatePopupPosition","handleTableSelection","selectedNodes","cloneContents","childNodes","node","element","startContainer","parentElement","eventData","type","timestamp","Date","now","group","log","groupEnd","emit","otherContainerId","scrollIntoView","behavior","linkedEventData","fromDivId","closePopup","container","select","popup","overlay","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","left","width","clientWidth","height","clientHeight","addEventListener","on","handleIncomingEvent","removeEventListener","off","data"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<!-- 悬浮大纲组件 -->\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String,\r\n\t\tlinkedOutline: Array\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\");\r\n\tconst loading = ref(true);\r\n\tconst error = ref(\"\");\r\n\tconst selectedText = ref({});\r\n\tconst showPopup = ref({});\r\n\tconst divRef = ref(null);\r\n\r\n\t// 调试模式\r\n\tconst debugMode = ref(true);\r\n\r\n\t// 获取Wikipedia页面\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 给所有标题添加唯一ID\r\n\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\theading.id = `heading-${index}-${props.divId}`;\r\n\t\t\t});\r\n\r\n\t\t\t// 给表格添加类名\r\n\t\t\tconst tables = doc.querySelectorAll(\"table\");\r\n\t\t\ttables.forEach(table => {\r\n\t\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\t});\r\n\r\n\t\t\t// 注入样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 手动引入Wikipedia CSS\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 提取关联章节内容\r\n\tconst extractLinkedChapterContent = (sourceId, sourceContainerId) => {\r\n\t\tif (!props.linkedOutline) {\r\n\t\t\tconsole.error(\"LinkedOutline is undefined!\");\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst linkedItem = props.linkedOutline.find(\r\n\t\t\tlinked => linked.leftId === sourceId || linked.rightId === sourceId\r\n\t\t);\r\n\t\tif (!linkedItem) return { linkedItem: null, chapterContent: \"\" };\r\n\r\n\t\tconst targetContainerId = sourceContainerId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\tconst targetId =\r\n\t\t\tsourceContainerId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\tconst targetContainer = document.getElementById(targetContainerId);\r\n\t\tif (!targetContainer) return { linkedItem: null, chapterContent: \"\" };\r\n\r\n\t\tconst targetElement = targetContainer.querySelector(`#${targetId}`);\r\n\t\tif (!targetElement) return { linkedItem: null, chapterContent: \"\" };\r\n\r\n\t\tlet chapterContent = \"\";\r\n\t\tlet currentNode = targetElement;\r\n\r\n\t\twhile (currentNode) {\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode !== targetElement &&\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(currentNode.tagName)\r\n\t\t\t) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE ||\r\n\t\t\t\tcurrentNode.nodeType === Node.TEXT_NODE\r\n\t\t\t) {\r\n\t\t\t\tchapterContent += currentNode.outerHTML || currentNode.textContent;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentNode = currentNode.nextSibling;\r\n\t\t}\r\n\r\n\t\treturn { linkedItem, chapterContent };\r\n\t};\r\n\r\n\t// 处理选中内容（主入口）\r\n\tconst handleSelection = content => {\r\n\t\tconst isTable = /<table.*?>.*?<\\/table>/s.test(content);\r\n\t\tconst selection = window.getSelection();\r\n\r\n\t\tif (!selection || selection.rangeCount === 0) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tlet sourceId = findHeadingId(range);\r\n\r\n\t\t// 核心修改：确保始终触发主事件\r\n\t\ttriggerPrimaryEvent(content, sourceId, isTable);\r\n\r\n\t\t// 存储选中内容并显示弹窗\r\n\t\tselectedText.value[props.divId] = content;\r\n\t\tshowPopup.value[props.divId] = true;\r\n\t\tnextTick(updatePopupPosition);\r\n\r\n\t\t// 特殊处理表格内容\r\n\t\tif (isTable && sourceId) {\r\n\t\t\thandleTableSelection(content, sourceId);\r\n\t\t}\r\n\t};\r\n\r\n\t// 辅助函数：查找标题ID\r\n\tconst findHeadingId = range => {\r\n\t\t// 从选中节点查找\r\n\t\tconst selectedNodes = range.cloneContents().childNodes;\r\n\t\tfor (const node of selectedNodes) {\r\n\t\t\tif (\r\n\t\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(node.tagName)\r\n\t\t\t) {\r\n\t\t\t\treturn node.id;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 从起始位置向上查找\r\n\t\tlet element = range.startContainer;\r\n\t\twhile (element && !/^h[1-6]$/i.test(element.tagName)) {\r\n\t\t\telement = element.parentElement;\r\n\t\t}\r\n\t\treturn element?.id;\r\n\t};\r\n\r\n\t// 触发主事件\r\n\tconst triggerPrimaryEvent = (content, sourceId, isTable) => {\r\n\t\tconst eventData = {\r\n\t\t\ttype: \"primary\",\r\n\t\t\tcontent,\r\n\t\t\tsourceId,\r\n\t\t\tisTable,\r\n\t\t\tdivId: props.divId,\r\n\t\t\ttimestamp: Date.now()\r\n\t\t};\r\n\r\n\t\tif (debugMode.value) {\r\n\t\t\tconsole.group(`触发 ${props.divId}Event`);\r\n\t\t\tconsole.log(\"事件数据:\", eventData);\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\r\n\t\tbus.emit(`${props.divId}Event`, eventData);\r\n\t};\r\n\r\n\t// 处理表格选择\r\n\tconst handleTableSelection = (content, sourceId) => {\r\n\t\tconst { linkedItem, chapterContent } = extractLinkedChapterContent(\r\n\t\t\tsourceId,\r\n\t\t\tprops.divId\r\n\t\t);\r\n\t\tif (!linkedItem || !chapterContent) return;\r\n\r\n\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\tconst targetId =\r\n\t\t\tprops.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\t// 滚动到关联章节\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\ttargetElement?.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t// 触发关联事件\r\n\t\tconst linkedEventData = {\r\n\t\t\ttype: \"linked\",\r\n\t\t\tcontent: chapterContent,\r\n\t\t\tsourceId,\r\n\t\t\tlinkedItem,\r\n\t\t\tfromDivId: props.divId\r\n\t\t};\r\n\r\n\t\tif (debugMode.value) {\r\n\t\t\tconsole.group(`触发 ${otherContainerId}Event (关联内容)`);\r\n\t\t\tconsole.log(\"关联事件数据:\", linkedEventData);\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\r\n\t\tbus.emit(`${otherContainerId}Event`, linkedEventData);\r\n\t};\r\n\r\n\t// 关闭弹出框\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false;\r\n\t\tselectedText.value[props.divId] = \"\";\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\t// 更新弹窗位置\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (!showPopup.value[props.divId] || !divRef.value) return;\r\n\r\n\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\tif (!popup || !overlay) return;\r\n\r\n\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t};\r\n\r\n\t// 组件生命周期\r\n\tonMounted(() => {\r\n\t\tif (debugMode.value) {\r\n\t\t\tconsole.log(`ParentComponent ${props.divId} 已挂载`);\r\n\t\t}\r\n\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\r\n\t\t// 监听关联内容事件\r\n\t\tbus.on(`${props.divId}Event`, handleIncomingEvent);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t\tbus.off(`${props.divId}Event`, handleIncomingEvent);\r\n\t});\r\n\r\n\t// 处理传入事件\r\n\tconst handleIncomingEvent = data => {\r\n\t\tif (debugMode.value) {\r\n\t\t\tconsole.group(`收到 ${props.divId}Event`);\r\n\t\t\tconsole.log(\"事件数据:\", data);\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\r\n\t\tif (data.type === \"linked\") {\r\n\t\t\tselectedText.value[props.divId] = data.content;\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(updatePopupPosition);\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}