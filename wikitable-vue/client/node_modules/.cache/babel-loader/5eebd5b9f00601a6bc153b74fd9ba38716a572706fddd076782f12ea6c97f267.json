{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 格式化数值显示\n    const formatNumber = value => {\n      const num = Number(value);\n      return isNaN(num) ? \"0\" : num.toFixed(2);\n    };\n    const initChart = () => {\n      if (!chartEl.value) return;\n      chartInstance = echarts.init(chartEl.value);\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.map(param => {\n              let tip = `${param.seriesName}<br/>${param.axisValueLabel}: ${formatNumber(param.value)}%`;\n              if (param.data.unit) tip += ` ${param.data.unit}`;\n              return tip;\n            }).join(\"<br/>\");\n          }\n        },\n        xAxis: {\n          type: \"category\",\n          data: props.data.map(item => item.year),\n          axisLabel: {\n            interval: 0,\n            rotate: props.data.length > 5 ? 30 : 0\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          }\n        },\n        series: [{\n          data: props.data.map(item => ({\n            value: Number(item.value) || 0,\n            unit: item.unit\n          })),\n          type: \"line\",\n          smooth: true,\n          symbol: \"circle\",\n          symbolSize: 8,\n          itemStyle: {\n            color: \"#3498db\"\n          },\n          lineStyle: {\n            width: 3\n          },\n          label: {\n            show: true,\n            formatter: params => {\n              return formatNumber(params.value) + \"%\";\n            }\n          }\n        }]\n      };\n      chartInstance.setOption(option);\n    };\n    onMounted(() => {\n      initChart();\n      window.addEventListener(\"resize\", () => chartInstance?.resize());\n    });\n    watch(() => props.data, () => {\n      if (chartInstance) {\n        initChart();\n      }\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      formatNumber,\n      initChart,\n      ref,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","echarts","props","__props","chartEl","chartInstance","formatNumber","value","num","Number","isNaN","toFixed","initChart","init","option","tooltip","trigger","formatter","params","map","param","tip","seriesName","axisValueLabel","data","unit","join","xAxis","type","item","year","axisLabel","interval","rotate","length","yAxis","series","smooth","symbol","symbolSize","itemStyle","color","lineStyle","width","label","show","setOption","window","addEventListener","resize","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 格式化数值显示\r\n\tconst formatNumber = value => {\r\n\t\tconst num = Number(value);\r\n\t\treturn isNaN(num) ? \"0\" : num.toFixed(2);\r\n\t};\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\tlet tip = `${param.seriesName}<br/>${\r\n\t\t\t\t\t\t\t\tparam.axisValueLabel\r\n\t\t\t\t\t\t\t}: ${formatNumber(param.value)}%`;\r\n\t\t\t\t\t\t\tif (param.data.unit) tip += ` ${param.data.unit}`;\r\n\t\t\t\t\t\t\treturn tip;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: props.data.map(item => item.year),\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\trotate: props.data.length > 5 ? 30 : 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: props.data.map(item => ({\r\n\t\t\t\t\t\tvalue: Number(item.value) || 0,\r\n\t\t\t\t\t\tunit: item.unit\r\n\t\t\t\t\t})),\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: \"#3498db\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\treturn formatNumber(params.value) + \"%\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => props.data,\r\n\t\t() => {\r\n\t\t\tif (chartInstance) {\r\n\t\t\t\tinitChart();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 300px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAKC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,IAAIO,aAAa,GAAG,IAAI;;IAExB;IACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;MAC7B,MAAMC,GAAG,GAAGC,MAAM,CAACF,KAAK,CAAC;MACzB,OAAOG,KAAK,CAACF,GAAG,CAAC,GAAG,GAAG,GAAGA,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACR,OAAO,CAACG,KAAK,EAAE;MAEpBF,aAAa,GAAGJ,OAAO,CAACY,IAAI,CAACT,OAAO,CAACG,KAAK,CAAC;MAE3C,MAAMO,MAAM,GAAG;QACdC,OAAO,EAAE;UACRC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAEC,MAAM,IAAI;YACpB,OAAOA,MAAM,CACXC,GAAG,CAACC,KAAK,IAAI;cACb,IAAIC,GAAG,GAAG,GAAGD,KAAK,CAACE,UAAU,QAC5BF,KAAK,CAACG,cAAc,KAChBjB,YAAY,CAACc,KAAK,CAACb,KAAK,CAAC,GAAG;cACjC,IAAIa,KAAK,CAACI,IAAI,CAACC,IAAI,EAAEJ,GAAG,IAAI,IAAID,KAAK,CAACI,IAAI,CAACC,IAAI,EAAE;cACjD,OAAOJ,GAAG;YACX,CAAC,CAAC,CACDK,IAAI,CAAC,OAAO,CAAC;UAChB;QACD,CAAC;QACDC,KAAK,EAAE;UACNC,IAAI,EAAE,UAAU;UAChBJ,IAAI,EAAEtB,KAAK,CAACsB,IAAI,CAACL,GAAG,CAACU,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;UACvCC,SAAS,EAAE;YACVC,QAAQ,EAAE,CAAC;YACXC,MAAM,EAAE/B,KAAK,CAACsB,IAAI,CAACU,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG;UACtC;QACD,CAAC;QACDC,KAAK,EAAE;UACNP,IAAI,EAAE,OAAO;UACbG,SAAS,EAAE;YACVd,SAAS,EAAE;UACZ;QACD,CAAC;QACDmB,MAAM,EAAE,CACP;UACCZ,IAAI,EAAEtB,KAAK,CAACsB,IAAI,CAACL,GAAG,CAACU,IAAI,KAAK;YAC7BtB,KAAK,EAAEE,MAAM,CAACoB,IAAI,CAACtB,KAAK,CAAC,IAAI,CAAC;YAC9BkB,IAAI,EAAEI,IAAI,CAACJ;UACZ,CAAC,CAAC,CAAC;UACHG,IAAI,EAAE,MAAM;UACZS,MAAM,EAAE,IAAI;UACZC,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE;YACVC,KAAK,EAAE;UACR,CAAC;UACDC,SAAS,EAAE;YACVC,KAAK,EAAE;UACR,CAAC;UACDC,KAAK,EAAE;YACNC,IAAI,EAAE,IAAI;YACV5B,SAAS,EAAEC,MAAM,IAAI;cACpB,OAAOZ,YAAY,CAACY,MAAM,CAACX,KAAK,CAAC,GAAG,GAAG;YACxC;UACD;QACD,CAAC;MAEH,CAAC;MAEDF,aAAa,CAACyC,SAAS,CAAChC,MAAM,CAAC;IAChC,CAAC;IAEDf,SAAS,CAAC,MAAM;MACfa,SAAS,CAAC,CAAC;MACXmC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM3C,aAAa,EAAE4C,MAAM,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC;IAEFjD,KAAK,CACJ,MAAME,KAAK,CAACsB,IAAI,EAChB,MAAM;MACL,IAAInB,aAAa,EAAE;QAClBO,SAAS,CAAC,CAAC;MACZ;IACD,CAAC,EACD;MAAEsC,IAAI,EAAE;IAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}