{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  class: \"message-content\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"-viscontainer\"\n};\nconst _hoisted_6 = {\n  class: \"input-container\"\n};\nconst _hoisted_7 = {\n  class: \"button-container\"\n};\nconst _hoisted_8 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", {\n    class: \"chat-container\",\n    onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleDrop && _ctx.handleDrop(...arguments);\n    })\n  }, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_4)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 视觉内容容器 \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"CompareTable\"], {\n    \"div1-raw-data\": $setup.div1RawData,\n    \"div3-raw-data\": $setup.div3RawData,\n    ref: \"compareTable\"\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\"]), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    })\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: $setup.compareTableAttributes,\n    disabled: $setup.isComparing\n  }, _toDisplayString($setup.isComparing ? \"分析中...\" : \"分析表格属性\"), 9 /* TEXT, PROPS */, _hoisted_8)])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onDragover","_cache","_withModifiers","onDrop","_ctx","handleDrop","arguments","_hoisted_2","_Fragment","_renderList","$setup","chatHistory","message","index","key","_normalizeClass","role","_hoisted_3","_toDisplayString","innerHTML","content","_hoisted_4","_hoisted_5","_createVNode","div1RawData","div3RawData","ref","_hoisted_6","$event","userQuestion","rows","placeholder","_hoisted_7","onClick","askQuestion","compareTableAttributes","disabled","isComparing","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"-viscontainer\">\r\n\t\t\t<CompareTable\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\tref=\"compareTable\" />\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTableAttributes\" :disabled=\"isComparing\">\r\n\t\t\t\t\t\t{{ isComparing ? \"分析中...\" : \"分析表格属性\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst compareTable = ref(null);\r\n\tconst isComparing = ref(false);\r\n\tconst tableComparisonResults = ref([]);\r\n\r\n\t// 定义回调函数\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 比较表格属性\r\n\tconst compareTableAttributes = async () => {\r\n\t\tif (!div1RawData.value || !div3RawData.value) {\r\n\t\t\talert(\"请先加载两个表格的数据\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisComparing.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 获取处理后的表格数据\r\n\t\t\tconst table1 = compareTable.value.processedTable1;\r\n\t\t\tconst table2 = compareTable.value.processedTable2;\r\n\r\n\t\t\t// 获取公共属性\r\n\t\t\tconst commonAttrs = Object.keys(table1.timeSeriesData || {}).filter(\r\n\t\t\t\tattr => table2.timeSeriesData[attr]\r\n\t\t\t);\r\n\r\n\t\t\tif (commonAttrs.length === 0) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"两个表格没有共同的属性可供比较。\"\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// 调用后端接口\r\n\t\t\tconst response = await api.post(\"compare_table_attributes\", {\r\n\t\t\t\ttable1: table1,\r\n\t\t\t\ttable2: table2,\r\n\t\t\t\tcommonAttributes: commonAttrs\r\n\t\t\t});\r\n\r\n\t\t\tif (response.success) {\r\n\t\t\t\ttableComparisonResults.value = response.results;\r\n\r\n\t\t\t\t// 添加总体比较标题\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(`\r\n          ### 表格属性对比分析\r\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\r\n          **共有属性**: ${commonAttrs.length}个\r\n        `)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加每个属性的分析结果\r\n\t\t\t\tresponse.results.forEach(result => {\r\n\t\t\t\t\tconst formattedContent = formatAnalysisResult(`\r\n          ### 属性 \"${result.attribute}\" 对比分析\r\n          ${result.analysis}\r\n        `);\r\n\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedContent\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"表格属性对比失败: \" + (response.message || \"未知错误\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"比较表格属性时出错:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"比较表格属性时出错，请稍后重试。\"\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisComparing.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 保留原有函数（handleDragStart, handleDrop, analyzeChart, askQuestion, compareTexts, mergedJson, renderChart）\r\n\t// ... 原有函数保持不变 ...\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message-content p {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0;\r\n\t\tcolor: #0077b6;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tpadding-bottom: 5px;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 10px 0;\r\n\t\tpadding-left: 25px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 6px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.message-content li:before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #4a90e2;\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 1em;\r\n\t\tmargin-left: -1em;\r\n\t}\r\n\r\n\t.message-content br {\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t.-viscontainer {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBAVjC;;EAmBOA,KAAK,EAAC;AAAe;;EAOpBA,KAAK,EAAC;AAAiB;;EAKtBA,KAAK,EAAC;AAAkB;mBA/BjC;;uBACCC,mBAAA,CAsCM,OAtCNC,UAsCM,GArCLC,mBAAA,UAAa,EACbC,mBAAA,CAaM;IAbDJ,KAAK,EAAC,gBAAgB;IAAEK,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAHvCC,cAAA,CAG8B,QAAiB;IAAEC,MAAI,EAAAF,MAAA,QAAAA,MAAA;MAAA,OAAEG,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAC,SAAA,CAAU;IAAA;MAC9DR,mBAAA,YAAe,EACfC,mBAAA,CAUM,OAVNQ,UAUM,I,kBATLX,mBAAA,CAQMY,SAAA,QAdVC,WAAA,CAOgCC,MAAA,CAAAC,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBjB,mBAAA,CAQM;MANJkB,GAAG,EAAED,KAAK;MACVlB,KAAK,EATXoB,eAAA,aASyBH,OAAO,CAACI,IAAI;QAChCjB,mBAAA,CAGM,OAHNkB,UAGM,GAFLlB,mBAAA,CAA8D,gBAAAmB,gBAAA,CAAnDN,OAAO,CAACI,IAAI,8BAA6B,GAAC,iBACrDjB,mBAAA,CAAgC;MAA7BoB,SAAwB,EAAhBP,OAAO,CAACQ;4BAZzBC,UAAA,E;+DAkBEvB,mBAAA,YAAe,EACfC,mBAAA,CAmBM,OAnBNuB,UAmBM,GAlBLC,YAAA,CAGsBb,MAAA;IAFpB,eAAa,EAAEA,MAAA,CAAAc,WAAW;IAC1B,eAAa,EAAEd,MAAA,CAAAe,WAAW;IAC3BC,GAAG,EAAC;+DAEL5B,mBAAA,cAAiB,EACjBC,mBAAA,CAWM,OAXN4B,UAWM,G,gBAVL5B,mBAAA,CAGuC;IA9B3C,uBAAAE,MAAA,QAAAA,MAAA,MAAA2B,MAAA,IA4BclB,MAAA,CAAAmB,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHrB,MAAA,CAAAmB,YAAY,E,GAGtB9B,mBAAA,CAKM,OALNiC,UAKM,GAJLjC,mBAAA,CAAwC;IAA/BkC,OAAK,EAAAhC,MAAA,QAAAA,MAAA;MAAA,OAAEG,IAAA,CAAA8B,WAAA,IAAA9B,IAAA,CAAA8B,WAAA,IAAA5B,SAAA,CAAW;IAAA;KAAE,IAAE,GAC/BP,mBAAA,CAES;IAFAkC,OAAK,EAAEvB,MAAA,CAAAyB,sBAAsB;IAAGC,QAAQ,EAAE1B,MAAA,CAAA2B;sBAC/C3B,MAAA,CAAA2B,WAAW,8CAlCpBC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}