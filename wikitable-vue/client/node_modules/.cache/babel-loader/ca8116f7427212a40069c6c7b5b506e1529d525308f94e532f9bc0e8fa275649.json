{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      // 修改右键菜单处理\n      const handleContextMenu = e => {\n        if (e.target.closest(\".middle-column\")) {\n          e.preventDefault();\n          return false;\n        }\n      };\n      document.addEventListener(\"contextmenu\", handleContextMenu);\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n      return () => {\n        document.removeEventListener(\"contextmenu\", handleContextMenu);\n        bus.off(\"div1_Event\", handleDiv1Event);\n        bus.off(\"div3_Event\", handleDiv3Event);\n      };\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const handleDragStart = event => {\n      event.dataTransfer.setData(\"application/json\", JSON.stringify({\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }));\n    };\n    const handleDrop = event => {\n      event.preventDefault();\n      const data = event.dataTransfer.getData(\"application/json\");\n      if (data) {\n        try {\n          const {\n            chartData,\n            chartType\n          } = JSON.parse(data);\n          currentChartData.value = chartData;\n          currentChartType.value = chartType;\n          analyzeChart(chartData, chartType);\n        } catch (error) {\n          console.error(\"解析拖拽数据失败:\", error);\n        }\n      }\n    };\n    const analyzeChart = (chartData, chartType) => {\n      api.post(\"analyze_chart\", {\n        chartData,\n        chartType\n      }, response => {\n        if (response && response.analysis) {\n          const formattedAnalysis = formatAnalysisResult(response.analysis);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formattedAnalysis\n          });\n        } else {\n          console.error(\"后端返回的数据格式不正确:\", response);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: \"图表分析失败，后端返回的数据格式不正确。\"\n          });\n        }\n      }, error => {\n        console.error(\"图表分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"图表分析失败，请稍后重试。\"\n        });\n      });\n    };\n    const formatAnalysisResult = text => {\n      text = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n      return text;\n    };\n    const askQuestion = () => {\n      if (!userQuestion.value) {\n        alert(\"请输入问题！\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      api.post(\"gpt_ask_chart\", {\n        question: userQuestion.value,\n        chartData: currentChartData.value,\n        chartType: currentChartType.value\n      }, response => {\n        const formattedAnswer = formatAnalysisResult(response.answer);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: formattedAnswer\n        });\n      }, error => {\n        console.error(\"请求失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请求失败，请稍后重试。\"\n        });\n      });\n      userQuestion.value = \"\";\n    };\n    async function compareTexts() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        api.post(\"gpt_compare\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data) {\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: data.result\n            });\n          } else {\n            console.error(\"对比失败:\", data.error);\n          }\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n    }\n    async function mergedJson() {\n      if (!selectText2.value || !selectText3.value) {\n        alert(\"请先选择两段文本！\");\n        return;\n      }\n      try {\n        api.post(\"merged_json\", {\n          text1: selectText2.value,\n          text2: selectText3.value\n        }, data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          const jsonData = data.json_data;\n          currentChartData.value = jsonData;\n          currentChartType.value = data.chart_classification;\n          if (data.yes_no === \"no\" || !jsonData) {\n            renderNonVisualChart(\".chart-container\", data, {\n              message: \"当前数据无法合并\"\n            });\n            return;\n          }\n          renderChart(jsonData, data.chart_classification);\n          bus.emit(\"updateChart1\", {\n            divId: \"div1\",\n            jsonData: data.div1_json,\n            chartType: data.chart_classification\n          });\n          bus.emit(\"updateChart3\", {\n            divId: \"div3\",\n            jsonData: data.div3_json,\n            chartType: data.chart_classification\n          });\n        });\n      } catch (error) {\n        console.error(\"处理JSON时出错:\", error);\n        alert(\"处理JSON时出错，请稍后重试\");\n      }\n    }\n    function renderChart(rawJsonData, chartType) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\") {\n        renderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\n          message: \"JSON 数据无效\"\n        });\n        return;\n      }\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      const chartContainer = document.querySelector(\".chart-container\");\n      if (chartType === \"Line Chart\") {\n        renderLineChart(chartContainer, data, options);\n      } else if (chartType === \"Bar Chart\") {\n        renderBarChart(chartContainer, rawJsonData);\n      } else if (chartType === \"Pie Chart\") {\n        renderPieChart(chartContainer, data, options);\n      } else if (chartType === \"Stacked Bar Chart\") {\n        renderStackedBarChart(chartContainer, data, options);\n      } else if (chartType === \"Radar Chart\") {\n        renderRadarChart(chartContainer, rawJsonData);\n      } else if (chartType === \"Scatter Chart\") {\n        renderScatterChart(chartContainer, rawJsonData);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n    const handleAttributeComparison = async _ref2 => {\n      let {\n        fieldKey,\n        leftData,\n        rightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref2;\n      try {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `正在分析 <strong>${leftTitle}</strong> 和 <strong>${rightTitle}</strong> 的 <strong>${fieldKey}</strong> (${fieldLabel}) 数据对比...`\n        });\n        api.post(\"analyze_chart\", {\n          chartData: {\n            leftData,\n            rightData,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType\n          },\n          chartType: \"comparison\"\n        }, response => {\n          if (response && response.analysis) {\n            const formattedAnalysis = formatAnalysisResult(response.analysis);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnalysis\n            });\n          } else {\n            throw new Error(\"无效的响应格式\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `对比分析失败: ${error.message || \"未知错误\"}`\n        });\n      }\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      currentChartData,\n      currentChartType,\n      div1RawData,\n      div3RawData,\n      handleDiv1Event,\n      handleDiv3Event,\n      handleSelection,\n      getPlainTextFromSelection,\n      handleDragStart,\n      handleDrop,\n      analyzeChart,\n      formatAnalysisResult,\n      askQuestion,\n      compareTexts,\n      mergedJson,\n      renderChart,\n      handleAttributeComparison,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      CompareTable,\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","CompareTable","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","userQuestion","chatHistory","selectText2","selectText3","currentChartData","currentChartType","div1RawData","div3RawData","handleDiv1Event","data","handleSelection","handleDiv3Event","handleContextMenu","e","target","closest","preventDefault","document","addEventListener","on","removeEventListener","off","source","plainText","getPlainTextFromSelection","content","value","htmlContent","container","createElement","innerHTML","innerText","textContent","handleDragStart","event","dataTransfer","setData","JSON","stringify","chartData","chartType","handleDrop","getData","parse","analyzeChart","error","console","api","post","response","analysis","formattedAnalysis","formatAnalysisResult","push","role","text","replace","askQuestion","alert","question","formattedAnswer","answer","compareTexts","text1","text2","result","mergedJson","message","jsonData","json_data","chart_classification","yes_no","renderChart","emit","divId","div1_json","div3_json","rawJsonData","props","containerClass","options","chartContainer","querySelector","handleAttributeComparison","_ref2","fieldKey","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","Error"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"mergedJson\">合并数据</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文本</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\t// 修改右键菜单处理\r\n\t\tconst handleContextMenu = e => {\r\n\t\t\tif (e.target.closest(\".middle-column\")) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"contextmenu\", handleContextMenu);\r\n\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"contextmenu\", handleContextMenu);\r\n\t\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\t};\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst handleDragStart = event => {\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst data = event.dataTransfer.getData(\"application/json\");\r\n\t\tif (data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { chartData, chartType } = JSON.parse(data);\r\n\t\t\t\tcurrentChartData.value = chartData;\r\n\t\t\t\tcurrentChartType.value = chartType;\r\n\t\t\t\tanalyzeChart(chartData, chartType);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"解析拖拽数据失败:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst analyzeChart = (chartData, chartType) => {\r\n\t\tapi.post(\r\n\t\t\t\"analyze_chart\",\r\n\t\t\t{ chartData, chartType },\r\n\t\t\tresponse => {\r\n\t\t\t\tif (response && response.analysis) {\r\n\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedAnalysis\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"后端返回的数据格式不正确:\", response);\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: \"图表分析失败，后端返回的数据格式不正确。\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"图表分析失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"图表分析失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\tconst askQuestion = () => {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\tapi.post(\r\n\t\t\t\"gpt_ask_chart\",\r\n\t\t\t{\r\n\t\t\t\tquestion: userQuestion.value,\r\n\t\t\t\tchartData: currentChartData.value,\r\n\t\t\t\tchartType: currentChartType.value\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: formattedAnswer });\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"请求失败，请稍后重试。\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tuserQuestion.value = \"\";\r\n\t};\r\n\r\n\tasync function compareTexts() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tchatHistory.value.push({ role: \"assistant\", content: data.result });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function mergedJson() {\r\n\t\tif (!selectText2.value || !selectText3.value) {\r\n\t\t\talert(\"请先选择两段文本！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"merged_json\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\t\tcurrentChartData.value = jsonData;\r\n\t\t\t\t\tcurrentChartType.value = data.chart_classification;\r\n\t\t\t\t\tif (data.yes_no === \"no\" || !jsonData) {\r\n\t\t\t\t\t\trenderNonVisualChart(\".chart-container\", data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法合并\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderChart(jsonData, data.chart_classification);\r\n\t\t\t\t\tbus.emit(\"updateChart1\", {\r\n\t\t\t\t\t\tdivId: \"div1\",\r\n\t\t\t\t\t\tjsonData: data.div1_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbus.emit(\"updateChart3\", {\r\n\t\t\t\t\t\tdivId: \"div3\",\r\n\t\t\t\t\t\tjsonData: data.div3_json,\r\n\t\t\t\t\t\tchartType: data.chart_classification\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理JSON时出错:\", error);\r\n\t\t\talert(\"处理JSON时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\trenderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON 数据无效\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\t\tconst chartContainer = document.querySelector(\".chart-container\");\r\n\r\n\t\tif (chartType === \"Line Chart\") {\r\n\t\t\trenderLineChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Bar Chart\") {\r\n\t\t\trenderBarChart(chartContainer, rawJsonData);\r\n\t\t} else if (chartType === \"Pie Chart\") {\r\n\t\t\trenderPieChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Stacked Bar Chart\") {\r\n\t\t\trenderStackedBarChart(chartContainer, data, options);\r\n\t\t} else if (chartType === \"Radar Chart\") {\r\n\t\t\trenderRadarChart(chartContainer, rawJsonData);\r\n\t\t} else if (chartType === \"Scatter Chart\") {\r\n\t\t\trenderScatterChart(chartContainer, rawJsonData);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在分析 <strong>${leftTitle}</strong> 和 <strong>${rightTitle}</strong> 的 <strong>${fieldKey}</strong> (${fieldLabel}) 数据对比...`\r\n\t\t\t});\r\n\r\n\t\t\tapi.post(\r\n\t\t\t\t\"analyze_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response && response.analysis) {\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message-content p {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 10px 0;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.message-content br {\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}