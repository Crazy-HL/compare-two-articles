{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  data() {\n    return {\n      text: \"\",\n      // 用户输入的文章内容\n      jsonData: null // 后端返回的 JSON 数据\n    };\n  },\n  methods: {\n    // 提交文章内容并获取处理结果\n    async processText() {\n      try {\n        const response = await fetch(\"http://localhost:8888/process_text\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: this.text\n          })\n        });\n        const result = await response.json();\n\n        // 检查是否有错误信息\n        if (result.error) {\n          console.error(\"后端返回的错误:\", result.error);\n          alert(`处理文章内容时出错: ${result.message}`);\n          return;\n        }\n\n        // 处理正常结果\n        this.jsonData = JSON.stringify(result.json_data, null, 2);\n        console.log(\"jsonData:\", this.jsonData);\n        this.renderChart();\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    },\n    // 根据 JSON 数据渲染图表\n    renderChart() {\n      if (!this.jsonData || !Array.isArray(this.jsonData)) {\n        console.error(\"JSON 数据无效:\", this.jsonData);\n        return;\n      }\n\n      // 清空之前的图表\n      d3.select(this.$refs.chart).html(\"\");\n\n      // 遍历 json_data 数组，渲染每个图表\n      this.jsonData.forEach(chartConfig => {\n        const chartType = chartConfig.type; // 图表类型（line, bar, pie 等）\n        const data = chartConfig.data; // 图表数据\n        const options = chartConfig.options; // 图表配置\n\n        if (chartType === \"line\") {\n          this.renderLineChart(data, options);\n        } else if (chartType === \"bar\") {\n          this.renderBarChart(data, options);\n        } else if (chartType === \"pie\") {\n          this.renderPieChart(data, options);\n        } else {\n          console.error(\"未知的图表类型:\", chartType);\n        }\n      });\n    },\n    // 渲染折线图（line）\n    renderLineChart(data, options) {\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 50,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // 解析数据\n      const labels = data.labels; // X 轴标签\n      const datasets = data.datasets; // 数据集\n\n      // 设置比例尺\n      const x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(datasets, d => d3.max(d.data))]).range([height, 0]);\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // 添加折线\n      datasets.forEach(dataset => {\n        const line = d3.line().x((d, i) => x(labels[i]) + x.bandwidth() / 2).y(d => y(d));\n        svg.append(\"path\").datum(dataset.data).attr(\"fill\", \"none\").attr(\"stroke\", dataset.borderColor).attr(\"stroke-width\", 2).attr(\"d\", line);\n\n        // 添加数据点\n        svg.selectAll(`.dot-${dataset.label}`).data(dataset.data).enter().append(\"circle\").attr(\"cx\", (d, i) => x(labels[i]) + x.bandwidth() / 2).attr(\"cy\", d => y(d)).attr(\"r\", 4).attr(\"fill\", dataset.borderColor);\n      });\n\n      // 添加 X 轴标题\n      if (options?.scales?.x?.title?.display) {\n        svg.append(\"text\").attr(\"transform\", `translate(${width / 2},${height + margin.bottom - 10})`).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n      }\n\n      // 添加 Y 轴标题\n      if (options?.scales?.y?.title?.display) {\n        svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 0 - margin.left).attr(\"x\", 0 - height / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n      }\n    },\n    // 渲染柱状图（bar）\n    renderBarChart(data, options) {\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 50,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // 解析数据\n      const labels = data.labels; // X 轴标签\n      const datasets = data.datasets; // 数据集\n\n      // 设置比例尺\n      const x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(datasets, d => d3.max(d.data))]).range([height, 0]);\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // 添加柱状图\n      datasets.forEach(dataset => {\n        svg.selectAll(`.bar-${dataset.label}`).data(dataset.data).enter().append(\"rect\").attr(\"x\", (d, i) => x(labels[i])).attr(\"y\", d => y(d)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - y(d)).attr(\"fill\", dataset.backgroundColor);\n      });\n\n      // 添加 X 轴标题\n      if (options?.scales?.x?.title?.display) {\n        svg.append(\"text\").attr(\"transform\", `translate(${width / 2},${height + margin.bottom - 10})`).style(\"text-anchor\", \"middle\").text(options.scales.x.title.text);\n      }\n\n      // 添加 Y 轴标题\n      if (options?.scales?.y?.title?.display) {\n        svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 0 - margin.left).attr(\"x\", 0 - height / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(options.scales.y.title.text);\n      }\n    },\n    // 渲染饼图（pie）\n    renderPieChart(data, options) {\n      const width = 400;\n      const height = 400;\n      const radius = Math.min(width, height) / 2;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n      // 解析数据\n      const labels = data.labels; // 类别标签\n      const datasets = data.datasets; // 数据集\n\n      // 计算饼图\n      const pie = d3.pie().value(d => d);\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n      // 绘制扇形\n      const arcs = svg.selectAll(\"arc\").data(pie(datasets[0].data)).enter().append(\"g\").attr(\"class\", \"arc\");\n      arcs.append(\"path\").attr(\"d\", arc).attr(\"fill\", (d, i) => datasets[0].backgroundColor[i]);\n\n      // 添加标签\n      arcs.append(\"text\").attr(\"transform\", d => `translate(${arc.centroid(d)})`).attr(\"text-anchor\", \"middle\").text(d => labels[d.index]);\n    }\n  }\n};","map":{"version":3,"names":["d3","data","text","jsonData","methods","processText","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","alert","message","json_data","log","renderChart","Array","isArray","select","$refs","chart","html","forEach","chartConfig","chartType","type","options","renderLineChart","renderBarChart","renderPieChart","margin","top","right","bottom","left","width","height","svg","append","attr","labels","datasets","x","scaleBand","domain","range","padding","y","scaleLinear","max","d","call","axisBottom","selectAll","style","axisLeft","dataset","line","i","bandwidth","datum","borderColor","label","enter","scales","title","display","backgroundColor","radius","Math","min","pie","value","arc","innerRadius","outerRadius","arcs","centroid","index"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis2.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<h1>文章内容可视化工具</h1>\r\n\t\t<div class=\"upload-section\">\r\n\t\t\t<textarea v-model=\"text\" placeholder=\"请输入文章内容\"></textarea>\r\n\t\t\t<button @click=\"processText\">提交并可视化</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"jsonData\" class=\"visualization-section\">\r\n\t\t\t<h2>可视化结果</h2>\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttext: \"\", // 用户输入的文章内容\r\n\t\t\t\tjsonData: null // 后端返回的 JSON 数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交文章内容并获取处理结果\r\n\t\t\tasync processText() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({ text: this.text })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst result = await response.json();\r\n\r\n\t\t\t\t\t// 检查是否有错误信息\r\n\t\t\t\t\tif (result.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 处理正常结果\r\n\t\t\t\t\tthis.jsonData = JSON.stringify(result.json_data, null, 2);\r\n\t\t\t\t\tconsole.log(\"jsonData:\", this.jsonData);\r\n\t\t\t\t\tthis.renderChart();\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 根据 JSON 数据渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\tif (!this.jsonData || !Array.isArray(this.jsonData)) {\r\n\t\t\t\t\tconsole.error(\"JSON 数据无效:\", this.jsonData);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\t// 遍历 json_data 数组，渲染每个图表\r\n\t\t\t\tthis.jsonData.forEach(chartConfig => {\r\n\t\t\t\t\tconst chartType = chartConfig.type; // 图表类型（line, bar, pie 等）\r\n\t\t\t\t\tconst data = chartConfig.data; // 图表数据\r\n\t\t\t\t\tconst options = chartConfig.options; // 图表配置\r\n\r\n\t\t\t\t\tif (chartType === \"line\") {\r\n\t\t\t\t\t\tthis.renderLineChart(data, options);\r\n\t\t\t\t\t} else if (chartType === \"bar\") {\r\n\t\t\t\t\t\tthis.renderBarChart(data, options);\r\n\t\t\t\t\t} else if (chartType === \"pie\") {\r\n\t\t\t\t\t\tthis.renderPieChart(data, options);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染折线图（line）\r\n\t\t\trenderLineChart(data, options) {\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst labels = data.labels; // X 轴标签\r\n\t\t\t\tconst datasets = data.datasets; // 数据集\r\n\r\n\t\t\t\t// 设置比例尺\r\n\t\t\t\tconst x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\r\n\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(datasets, d => d3.max(d.data))])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\");\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\t// 添加折线\r\n\t\t\t\tdatasets.forEach(dataset => {\r\n\t\t\t\t\tconst line = d3\r\n\t\t\t\t\t\t.line()\r\n\t\t\t\t\t\t.x((d, i) => x(labels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.y(d => y(d));\r\n\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t\t.datum(dataset.data)\r\n\t\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t\t.attr(\"stroke\", dataset.borderColor)\r\n\t\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t\t.attr(\"d\", line);\r\n\r\n\t\t\t\t\t// 添加数据点\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.selectAll(`.dot-${dataset.label}`)\r\n\t\t\t\t\t\t.data(dataset.data)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t.attr(\"cx\", (d, i) => x(labels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.attr(\"cy\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"r\", 4)\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.borderColor);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加 X 轴标题\r\n\t\t\t\tif (options?.scales?.x?.title?.display) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t\t`translate(${width / 2},${height + margin.bottom - 10})`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.text(options.scales.x.title.text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 添加 Y 轴标题\r\n\t\t\t\tif (options?.scales?.y?.title?.display) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t\t\t.attr(\"y\", 0 - margin.left)\r\n\t\t\t\t\t\t.attr(\"x\", 0 - height / 2)\r\n\t\t\t\t\t\t.attr(\"dy\", \"1em\")\r\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.text(options.scales.y.title.text);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染柱状图（bar）\r\n\t\t\trenderBarChart(data, options) {\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst labels = data.labels; // X 轴标签\r\n\t\t\t\tconst datasets = data.datasets; // 数据集\r\n\r\n\t\t\t\t// 设置比例尺\r\n\t\t\t\tconst x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\r\n\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(datasets, d => d3.max(d.data))])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\");\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\t// 添加柱状图\r\n\t\t\t\tdatasets.forEach(dataset => {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.selectAll(`.bar-${dataset.label}`)\r\n\t\t\t\t\t\t.data(dataset.data)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"x\", (d, i) => x(labels[i]))\r\n\t\t\t\t\t\t.attr(\"y\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t\t.attr(\"height\", d => height - y(d))\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.backgroundColor);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加 X 轴标题\r\n\t\t\t\tif (options?.scales?.x?.title?.display) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t\t`translate(${width / 2},${height + margin.bottom - 10})`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.text(options.scales.x.title.text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 添加 Y 轴标题\r\n\t\t\t\tif (options?.scales?.y?.title?.display) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t\t\t.attr(\"y\", 0 - margin.left)\r\n\t\t\t\t\t\t.attr(\"x\", 0 - height / 2)\r\n\t\t\t\t\t\t.attr(\"dy\", \"1em\")\r\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.text(options.scales.y.title.text);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染饼图（pie）\r\n\t\t\trenderPieChart(data, options) {\r\n\t\t\t\tconst width = 400;\r\n\t\t\t\tconst height = 400;\r\n\t\t\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\t\t\t// 解析数据\r\n\t\t\t\tconst labels = data.labels; // 类别标签\r\n\t\t\t\tconst datasets = data.datasets; // 数据集\r\n\r\n\t\t\t\t// 计算饼图\r\n\t\t\t\tconst pie = d3.pie().value(d => d);\r\n\t\t\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\t\t\t// 绘制扇形\r\n\t\t\t\tconst arcs = svg\r\n\t\t\t\t\t.selectAll(\"arc\")\r\n\t\t\t\t\t.data(pie(datasets[0].data))\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"arc\");\r\n\r\n\t\t\t\tarcs\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arc)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => datasets[0].backgroundColor[i]);\r\n\r\n\t\t\t\t// 添加标签\r\n\t\t\t\tarcs\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.text(d => labels[d.index]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t#app {\r\n\t\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 60px;\r\n\t}\r\n\r\n\t.upload-section {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 80%;\r\n\t\theight: 150px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}