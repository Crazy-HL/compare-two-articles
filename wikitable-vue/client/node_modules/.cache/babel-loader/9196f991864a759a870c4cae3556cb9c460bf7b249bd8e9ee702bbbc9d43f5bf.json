{"ast":null,"code":"import { ref, watch, onMounted, onUnmounted } from \"vue\";\nimport eventBus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String // \"div1\" 或 \"div3\"\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n\n    // **手动定义关联数组**\n    const linkedOutlineMap = {\n      // 这里手动指定 div1 和 div3 的关联标题\n      \"heading-0-div1\": \"heading-1-div3\",\n      \"heading-2-div1\": \"heading-3-div3\",\n      \"heading-1-div3\": \"heading-0-div1\",\n      \"heading-3-div3\": \"heading-2-div1\"\n    };\n\n    // **切换大纲显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **解析文章，提取 h1-h6 标题**\n    const extractOutline = (content, containerId) => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1));\n        const id = `heading-${index}-${containerId}`;\n        heading.id = id;\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **监听 content 变化，更新大纲**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent, props.divId);\n    }, {\n      immediate: true\n    });\n\n    // **检查是否存在手动关联**\n    const isLinked = item => linkedOutlineMap[item.id] !== undefined;\n\n    // **滚动到章节**\n    const scrollToChapter = id => {\n      const element = document.getElementById(id);\n      if (element) element.scrollIntoView({\n        behavior: \"smooth\"\n      });\n\n      // 如果有手动关联的标题，则同步滚动\n      const linkedId = linkedOutlineMap[id];\n      if (linkedId) {\n        eventBus.emit(\"scroll-to-chapter\", linkedId);\n      }\n    };\n\n    // **监听 eventBus，确保两个组件同步跳转**\n    eventBus.on(\"scroll-to-chapter\", targetId => {\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) targetElement.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    // **初始化**\n    onMounted(() => {\n      outline.value = extractOutline(props.content, props.divId);\n    });\n\n    // **组件销毁时移除事件**\n    onUnmounted(() => {\n      eventBus.off(\"scroll-to-chapter\");\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      linkedOutlineMap,\n      toggleOutline,\n      extractOutline,\n      isLinked,\n      scrollToChapter,\n      ref,\n      watch,\n      onMounted,\n      onUnmounted,\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","eventBus","props","__props","isVisible","outline","linkedOutlineMap","toggleOutline","value","extractOutline","content","containerId","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","text","textContent","newContent","divId","immediate","isLinked","item","undefined","scrollToChapter","element","document","getElementById","scrollIntoView","behavior","linkedId","emit","on","targetId","targetElement","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ highlight: isLinked(item), linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted } from \"vue\";\r\n\timport eventBus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String // \"div1\" 或 \"div3\"\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\r\n\t// **手动定义关联数组**\r\n\tconst linkedOutlineMap = {\r\n\t\t// 这里手动指定 div1 和 div3 的关联标题\r\n\t\t\"heading-0-div1\": \"heading-1-div3\",\r\n\t\t\"heading-2-div1\": \"heading-3-div3\",\r\n\t\t\"heading-1-div3\": \"heading-0-div1\",\r\n\t\t\"heading-3-div3\": \"heading-2-div1\"\r\n\t};\r\n\r\n\t// **切换大纲显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题**\r\n\tconst extractOutline = (content, containerId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${containerId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent, props.divId);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **检查是否存在手动关联**\r\n\tconst isLinked = item => linkedOutlineMap[item.id] !== undefined;\r\n\r\n\t// **滚动到章节**\r\n\tconst scrollToChapter = id => {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\t// 如果有手动关联的标题，则同步滚动\r\n\t\tconst linkedId = linkedOutlineMap[id];\r\n\t\tif (linkedId) {\r\n\t\t\teventBus.emit(\"scroll-to-chapter\", linkedId);\r\n\t\t}\r\n\t};\r\n\r\n\t// **监听 eventBus，确保两个组件同步跳转**\r\n\teventBus.on(\"scroll-to-chapter\", targetId => {\r\n\t\tconst targetElement = document.getElementById(targetId);\r\n\t\tif (targetElement) targetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t});\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content, props.divId);\r\n\t});\r\n\r\n\t// **组件销毁时移除事件**\r\n\tonUnmounted(() => {\r\n\t\teventBus.off(\"scroll-to-chapter\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **按钮样式** */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tz-index: 2000;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* **大纲样式** */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 260px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* **高亮和关联章节样式** */\r\n\t.outline li.highlight a {\r\n\t\tbackground-color: #ffff00;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\r\n\t.outline li.linked a {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":"AAgCC,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACxD,OAAOC,QAAQ,MAAM,kBAAkB;;;;;;;;;;;;;IAEvC,MAAMC,KAAK,GAAGC,OAGZ;IAEF,MAAMC,SAAS,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMQ,OAAO,GAAGR,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMS,gBAAgB,GAAG;MACxB;MACA,gBAAgB,EAAE,gBAAgB;MAClC,gBAAgB,EAAE,gBAAgB;MAClC,gBAAgB,EAAE,gBAAgB;MAClC,gBAAgB,EAAE;IACnB,CAAC;;IAED;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC3BH,SAAS,CAACI,KAAK,GAAG,CAACJ,SAAS,CAACI,KAAK;IACnC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGA,CAACC,OAAO,EAAEC,WAAW,KAAK;MAChD,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACvB,MAAME,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACL,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMM,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAE/D,OAAOC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnD,MAAMC,KAAK,GAAGC,QAAQ,CAACH,OAAO,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpD,MAAMC,EAAE,GAAG,WAAWL,KAAK,IAAIX,WAAW,EAAE;QAC5CU,OAAO,CAACM,EAAE,GAAGA,EAAE;QACf,OAAO;UAAEA,EAAE;UAAEC,IAAI,EAAEP,OAAO,CAACQ,WAAW;UAAEN;QAAM,CAAC;MAChD,CAAC,CAAC;IACH,CAAC;;IAED;IACAzB,KAAK,CACJ,MAAMI,KAAK,CAACQ,OAAO,EACnBoB,UAAU,IAAI;MACbzB,OAAO,CAACG,KAAK,GAAGC,cAAc,CAACqB,UAAU,EAAE5B,KAAK,CAAC6B,KAAK,CAAC;IACxD,CAAC,EACD;MAAEC,SAAS,EAAE;IAAK,CACnB,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGC,IAAI,IAAI5B,gBAAgB,CAAC4B,IAAI,CAACP,EAAE,CAAC,KAAKQ,SAAS;;IAEhE;IACA,MAAMC,eAAe,GAAGT,EAAE,IAAI;MAC7B,MAAMU,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACZ,EAAE,CAAC;MAC3C,IAAIU,OAAO,EAAEA,OAAO,CAACG,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;;MAE3D;MACA,MAAMC,QAAQ,GAAGpC,gBAAgB,CAACqB,EAAE,CAAC;MACrC,IAAIe,QAAQ,EAAE;QACbzC,QAAQ,CAAC0C,IAAI,CAAC,mBAAmB,EAAED,QAAQ,CAAC;MAC7C;IACD,CAAC;;IAED;IACAzC,QAAQ,CAAC2C,EAAE,CAAC,mBAAmB,EAAEC,QAAQ,IAAI;MAC5C,MAAMC,aAAa,GAAGR,QAAQ,CAACC,cAAc,CAACM,QAAQ,CAAC;MACvD,IAAIC,aAAa,EAAEA,aAAa,CAACN,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACxE,CAAC,CAAC;;IAEF;IACA1C,SAAS,CAAC,MAAM;MACfM,OAAO,CAACG,KAAK,GAAGC,cAAc,CAACP,KAAK,CAACQ,OAAO,EAAER,KAAK,CAAC6B,KAAK,CAAC;IAC3D,CAAC,CAAC;;IAEF;IACA/B,WAAW,CAAC,MAAM;MACjBC,QAAQ,CAAC8C,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}