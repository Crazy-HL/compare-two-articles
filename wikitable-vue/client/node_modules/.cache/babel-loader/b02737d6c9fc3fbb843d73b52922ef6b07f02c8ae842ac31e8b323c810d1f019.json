{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  __name: 'WikipediaContent',\n  props: {\n    pageTitle: String // Wikipedia 文章标题\n  },\n  emits: [\"select\", \"loaded\", \"error\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emits = __emit; // 声明事件\n\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch Wikipedia article\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (contentElement) {\n          pageHtml.value = contentElement.innerHTML;\n          emits(\"loaded\"); // 文章加载完成事件\n        }\n\n        // 手动引入 Wikipedia CSS\n        injectWikipediaStyles();\n      } catch (err) {\n        console.error(\"Error fetching Wikipedia content:\", err);\n        emits(\"error\", err); // 触发错误事件\n      }\n    };\n\n    // **手动引入 Wikipedia CSS**\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // **处理文本选择**\n    const handleSelection = () => {\n      const selection = window.getSelection().toString().trim();\n      if (selection) {\n        emits(\"select\", selection); // 触发选中文本事件\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(fetchWikipediaContent);\n    const __returned__ = {\n      props,\n      emits,\n      pageHtml,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      handleSelection,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","props","__props","emits","__emit","pageHtml","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","contentElement","querySelector","value","innerHTML","injectWikipediaStyles","err","console","error","wikipediaStyles","forEach","url","document","styleTag","createElement","rel","href","head","appendChild","handleSelection","selection","window","getSelection","toString","trim"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/WikipediaContent.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\tclass=\"wikipedia-content\"\r\n\t\tv-html=\"pageHtml\"\r\n\t\t@mouseup=\"handleSelection\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, defineEmits } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String // Wikipedia 文章标题\r\n\t});\r\n\r\n\tconst emits = defineEmits([\"select\", \"loaded\", \"error\"]); // 声明事件\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch Wikipedia article\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (contentElement) {\r\n\t\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\t\temits(\"loaded\"); // 文章加载完成事件\r\n\t\t\t}\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error fetching Wikipedia content:\", err);\r\n\t\t\temits(\"error\", err); // 触发错误事件\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **处理文本选择**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection().toString().trim();\r\n\t\tif (selection) {\r\n\t\t\temits(\"select\", selection); // 触发选中文本事件\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(fetchWikipediaContent);\r\n</script>\r\n\r\n<style scoped>\r\n\t.wikipedia-content {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-size: 0.9rem;\r\n\t\tline-height: 1.6;\r\n\t\tbackground: #ffffff;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tborder-radius: 12px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAQC,SAASA,GAAG,EAAEC,SAAsB,QAAQ,KAAK;;;;;;;;;;;;;IAEjD,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,KAAK,GAAGC,MAA0C,CAAC,CAAC;;IAE1D,MAAMC,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE1B;IACA,MAAMO,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACH,MAAMC,MAAM,GAAG,kDAAkDC,kBAAkB,CAClFP,KAAK,CAACQ,SACP,CAAC,EAAE;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;QACpC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QAEtE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACL,IAAI,EAAE,WAAW,CAAC;;QAErD;QACA,MAAMM,cAAc,GAAGF,GAAG,CAACG,aAAa,CAAC,MAAM,CAAC;QAChD,IAAID,cAAc,EAAE;UACnBf,QAAQ,CAACiB,KAAK,GAAGF,cAAc,CAACG,SAAS;UACzCpB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClB;;QAEA;QACAqB,qBAAqB,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACbC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;QACvDtB,KAAK,CAAC,OAAO,EAAEsB,GAAG,CAAC,CAAC,CAAC;MACtB;IACD,CAAC;;IAED;IACA,MAAMD,qBAAqB,GAAGA,CAAA,KAAM;MACnC,MAAMI,eAAe,GAAG,CACvB,yDAAyD,EACzD,6DAA6D,EAC7D,kEAAkE,EAClE,iEAAiE,CACjE;MAEDA,eAAe,CAACC,OAAO,CAACC,GAAG,IAAI;QAC9B,IAAI,CAACC,QAAQ,CAACV,aAAa,CAAC,cAAcS,GAAG,IAAI,CAAC,EAAE;UACnD,MAAME,QAAQ,GAAGD,QAAQ,CAACE,aAAa,CAAC,MAAM,CAAC;UAC/CD,QAAQ,CAACE,GAAG,GAAG,YAAY;UAC3BF,QAAQ,CAACG,IAAI,GAAGL,GAAG;UACnBC,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACL,QAAQ,CAAC;QACpC;MACD,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;MAC7B,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACzD,IAAIJ,SAAS,EAAE;QACdpC,KAAK,CAAC,QAAQ,EAAEoC,SAAS,CAAC,CAAC,CAAC;MAC7B;IACD,CAAC;;IAED;IACAvC,SAAS,CAACM,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}