{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-476f04b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"root\"\n};\nconst _hoisted_2 = {\n  class: \"div0 selectContent1\",\n  id: \"div1\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  class: \"div0\",\n  id: \"div2\"\n};\nconst _hoisted_5 = {\n  class: \"VisContainer\"\n};\nconst _hoisted_6 = {\n  class: \"topContainer container\"\n};\nconst _hoisted_7 = {\n  class: \"div0 selectContent2\",\n  id: \"div3\",\n  ref: \"div3Ref\"\n};\nconst _hoisted_8 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" div1: 确保 div1 有明确的定位和隔离 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    innerHTML: $setup.div1Content,\n    class: \"showHtml\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createCommentVNode(\" div2: 使用 flex 布局来撑开 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"IO\"], {\n    width: \"800px\",\n    height: \"250px\",\n    placeholder: $setup.selectText1\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createCommentVNode(\" <div class=\\\"botContainer container\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"io\\\">\\r\\n\\t\\t\\t\\t\\t\\t<IO width=\\\"400px\\\" height=\\\"250px\\\" :placeholder=\\\"selectText1\\\"></IO>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"io\\\">\\r\\n\\t\\t\\t\\t\\t\\t<IO width=\\\"400px\\\" height=\\\"250px\\\" :placeholder=\\\"selectText1\\\"></IO>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div> \")])]), _createCommentVNode(\" div3: 同样要有隔离，避免影响 div2 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    innerHTML: $setup.div3Content,\n    class: \"showHtml\"\n  }, null, 8 /* PROPS */, _hoisted_8)], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["id","class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","innerHTML","$setup","div1Content","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","width","height","placeholder","selectText1","_hoisted_7","div3Content","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\history.vue"],"sourcesContent":["<template>\r\n\t<div id=\"root\">\r\n\t\t<!-- div1: 确保 div1 有明确的定位和隔离 -->\r\n\t\t<div class=\"div0 selectContent1\" id=\"div1\">\r\n\t\t\t<div v-html=\"div1Content\" class=\"showHtml\"></div>\r\n\t\t</div>\r\n\r\n\t\t<!-- div2: 使用 flex 布局来撑开 -->\r\n\t\t<div class=\"div0\" id=\"div2\">\r\n\t\t\t<div class=\"VisContainer\">\r\n\t\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t\t<IO width=\"800px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- <div class=\"botContainer container\">\r\n\t\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t\t<IO width=\"400px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t\t<IO width=\"400px\" height=\"250px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- div3: 同样要有隔离，避免影响 div2 -->\r\n\t\t<div class=\"div0 selectContent2\" id=\"div3\" ref=\"div3Ref\">\r\n\t\t\t<div v-html=\"div3Content\" class=\"showHtml\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, nextTick } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport MouseSelection from \"@/js/mouse_selection\";\r\n\r\n\t// 用于存储 HTML 内容\r\n\tconst div1Content = ref(\"\");\r\n\tconst div3Content = ref(\"\");\r\n\tconst div3Ref = ref(null);\r\n\r\n\t// 动态 placeholder\r\n\tconst selectText1 = ref(\"1\"); // 初始为 1\r\n\r\n\t// 页面初始化时加载内容\r\n\tonMounted(async () => {\r\n\t\tconst src1 = \"https://baike.baidu.com/item/%E5%94%90%E6%9C%9D/53699\";\r\n\t\tconst src2 = \"https://zh.wikipedia.org/wiki/%E5%94%90%E6%9C%9D\";\r\n\t\t// 获取并加载内容\r\n\t\tawait showHtml(src1, div3Content);\r\n\t\t// await showHtml(src2, div1Content);\r\n\r\n\t\t// 使用 nextTick 确保 v-html 渲染完成后再启动 MouseSelection\r\n\t\tnextTick(() => {\r\n\t\t\tMouseSelection.start({\r\n\t\t\t\trangeSelector: \".selectContent1\" // 传递范围选择器，支持向下检索\r\n\t\t\t});\r\n\t\t\tMouseSelection.start({\r\n\t\t\t\trangeSelector: \".selectContent2\" // 传递范围选择器，支持向下检索\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 每秒增加数字\r\n\t\tsetInterval(() => {\r\n\t\t\tselectText1.value = (parseInt(selectText1.value) + 1).toString(); // 增加数字\r\n\t\t}, 1000); // 每 1 秒更新一次\r\n\t});\r\n\r\n\t// 获取并展示内容\r\n\tasync function showHtml(src, area) {\r\n\t\ttry {\r\n\t\t\tapi.get(\"html\", { url: src }, data => {\r\n\t\t\t\tarea.value = htmlToDom(data);\r\n\t\t\t});\r\n\t\t\t// const res = await axios.get(src);\r\n\t\t\t// const html = res.data;\r\n\t\t\t// area.value = htmlToDom(html);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"请求失败：\", err.message);\r\n\t\t\tarea.value = \"\"; // 如果请求失败，返回空字符串\r\n\t\t}\r\n\t}\r\n\r\n\t// 将 HTML 内容转化为 DOM\r\n\tfunction htmlToDom(html) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn doc.documentElement.outerHTML;\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#root {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: flex-start;\r\n\t\theight: 100vh;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden; /* 确保内容不会超出根容器 */\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\theight: 100%;\r\n\t\tborder: 2px solid red;\r\n\t}\r\n\r\n\t/* 左 */\r\n\t#div1 {\r\n\t\twidth: 30%;\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\tmax-width: 100%; /* 限制宽度不超过父容器的宽度 */\r\n\t\tmax-height: 100%; /* 限制高度不超过父容器的高度 */\r\n\t\toverflow: auto; /* 如果内容超出，添加滚动条 */\r\n\t}\r\n\t/* div2 修改: 使用 flex-grow 来自动撑开 */\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t\tflex-grow: 1; /* 使 div2 自动撑开占据剩余空间 */\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column; /* 保证内部子元素（如 .VisContainer）能自动排布 */\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid black;\r\n\t\tmargin: 10px 10px;\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tmargin: 5px, 10px;\r\n\t\tborder: 1px solid blue;\r\n\t\tmargin: 0 20px;\r\n\t\tpadding: 5px 5px;\r\n\t}\r\n\r\n\t/* 右 */\r\n\t#div3 {\r\n\t\twidth: 30%;\r\n\t}\r\n\r\n\t/* 其它 */\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%; /* 确保 iframe 的内容充满容器 */\r\n\t\tborder: 1px solid #ccc;\r\n\t\toverflow: auto; /* 允许滚动 */\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,EAAE,EAAC;AAAM;;EAERC,KAAK,EAAC,qBAAqB;EAACD,EAAE,EAAC;;mBAHtC;;EAQOC,KAAK,EAAC,MAAM;EAACD,EAAE,EAAC;;;EACfC,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAwB;;EAehCA,KAAK,EAAC,qBAAqB;EAACD,EAAE,EAAC,MAAM;EAACE,GAAG,EAAC;;mBAzBjD;;uBACCC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BLC,mBAAA,6BAAgC,EAChCC,mBAAA,CAEM,OAFNC,UAEM,GADLD,mBAAA,CAAiD;IAA5CE,SAAoB,EAAZC,MAAA,CAAAC,WAAW;IAAET,KAAK,EAAC;0BAJnCU,UAAA,E,GAOEN,mBAAA,yBAA4B,EAC5BC,mBAAA,CAcM,OAdNM,UAcM,GAbLN,mBAAA,CAYM,OAZNO,UAYM,GAXLP,mBAAA,CAEM,OAFNQ,UAEM,GADLC,YAAA,CAAiEN,MAAA;IAA7DO,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAET,MAAA,CAAAU;8CAEhDd,mBAAA,oVAOU,C,KAIZA,mBAAA,4BAA+B,EAC/BC,mBAAA,CAEM,OAFNc,UAEM,GADLd,mBAAA,CAAiD;IAA5CE,SAAoB,EAAZC,MAAA,CAAAY,WAAW;IAAEpB,KAAK,EAAC;0BA1BnCqB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}