{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"field-visualization\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"line-chart\",\n  ref: \"lineChart\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"bar-chart\",\n  ref: \"barChart\"\n};\nconst _hoisted_4 = {\n  key: 3,\n  class: \"text-display\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createCommentVNode(\" 百分比饼图 \"), $setup.visualizationType === 'pie-chart' ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"pie-chart\",\n    ref: \"pieChart\",\n    style: _normalizeStyle({\n      backgroundColor: $props.chartOptions?.backgroundColor\n    })\n  }, null, 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 时间序列折线图 \"), $setup.visualizationType === 'line-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 比较柱状图 \"), $setup.visualizationType === 'bar-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 文本显示 \"), $setup.visualizationType === 'text-only' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [$setup.isArray ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.processedArray, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString($setup.formatTextValue(item)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($setup.formatTextValue($props.field)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"无数据\"))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasData","_Fragment","_createCommentVNode","visualizationType","style","_normalizeStyle","backgroundColor","$props","chartOptions","_hoisted_2","_hoisted_3","_hoisted_4","isArray","_renderList","processedArray","item","index","formatTextValue","_createTextVNode","_toDisplayString","field","_hoisted_5"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"pie-chart\"\r\n\t\t\t\tref=\"pieChart\"\r\n\t\t\t\t:style=\"{ backgroundColor: chartOptions?.backgroundColor }\"></div>\r\n\r\n\t\t\t<!-- 时间序列折线图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 比较柱状图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 文本显示 -->\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tchartOptions: Object,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 数据清洗函数\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 特殊处理常见数据格式\r\n\t\tif (String(value).includes(\"NaN ¥\")) return \"人民币 (CNY)\";\r\n\r\n\t\t// 提取数值（处理带单位的数据）\r\n\t\tconst num = parseFloat(String(value).replace(/[^0-9.-]/g, \"\"));\r\n\t\treturn isNaN(num) ? value : num;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!Array.isArray(props.field)) return [];\r\n\r\n\t\treturn props.field\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 自动提取年份\r\n\t\t\t\tlet year = item.year;\r\n\t\t\t\tif (!year && item.raw) {\r\n\t\t\t\t\tconst yearMatch = String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null);\r\n\t});\r\n\r\n\t// 可视化类型判断（优先级从高到低）\r\n\tconst visualizationType = computed(() => {\r\n\t\t// 1. 使用props指定的类型\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 2. 自动判断逻辑\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\t// 3. 默认文本显示\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 各种数据类型的判断\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(item => {\r\n\t\t\t\tconst hasYear = item.year || String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\tconst isValidValue = typeof item.value === \"number\";\r\n\t\t\t\treturn hasYear && isValidValue;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.length <= 5 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化显示文本\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\t// 处理特殊字段\r\n\t\tif (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\r\n\t\t\treturn \"人民币 (CNY)\";\r\n\t\t}\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString() + (item.unit ? ` ${item.unit}` : \"\");\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 图表绘制方法\r\n\tconst drawPieChart = () => {\r\n\t\tclearChart(pieChart);\r\n\t\tif (!pieChart.value) return;\r\n\r\n\t\tconst percent = Math.min(100, Math.max(0, cleanValue(props.field.value)));\r\n\t\tconst data = [percent, 100 - percent];\r\n\r\n\t\tconst width = 80;\r\n\t\tconst height = 80;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(pieChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(d3.pie()(data))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", (d, i) =>\r\n\t\t\t\ti === 0 ? props.chartOptions?.color || \"#4CAF50\" : \"#eee\"\r\n\t\t\t);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(`${percent}%`)\r\n\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t.style(\"font-weight\", \"bold\");\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tclearChart(barChart);\r\n\t\tif (!barChart.value || processedArray.value.length === 0) return;\r\n\r\n\t\tconst data = processedArray.value.map(item => ({\r\n\t\t\tlabel: item.year || item.raw || \"\",\r\n\t\t\tvalue: item.value\r\n\t\t}));\r\n\r\n\t\tconst width = 150;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(barChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(data.map(d => d.label))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.2);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([props.chartOptions?.minValue || 0, d3.max(data, d => d.value)])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", d => x(d.label))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", props.chartOptions?.color || \"#2196F3\");\r\n\r\n\t\t// 添加数值标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", d => x(d.label) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d =>\r\n\t\t\t\tprops.chartOptions?.yAxisUnit\r\n\t\t\t\t\t? `${d.value}${props.chartOptions.yAxisUnit}`\r\n\t\t\t\t\t: d.value\r\n\t\t\t)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tclearChart(lineChart);\r\n\t\tif (!lineChart.value || processedArray.value.length < 2) return;\r\n\r\n\t\t// 按年份排序\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst width = 200;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 20, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(lineChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([\r\n\t\t\t\tprops.chartOptions?.minValue || 0,\r\n\t\t\t\td3.max(chartData, d => d.value) * 1.1\r\n\t\t\t])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\t// 绘制折线\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", props.chartOptions?.color || \"#9C27B0\")\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\t// 绘制数据点\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.attr(\"fill\", props.chartOptions?.color || \"#9C27B0\");\r\n\r\n\t\t// 添加最新值标签\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 10)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(\r\n\t\t\t\tprops.chartOptions?.yAxisUnit\r\n\t\t\t\t\t? `${lastPoint.value}${props.chartOptions.yAxisUnit}`\r\n\t\t\t\t\t: lastPoint.value\r\n\t\t\t)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst clearChart = element => {\r\n\t\tif (element?.value) d3.select(element.value).selectAll(\"*\").remove();\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, props.type, props.visualization, props.chartOptions],\r\n\t\t() => {\r\n\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true, immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.pie-chart,\r\n\t.bar-chart,\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAqB;;EADjCC,GAAA;EAaID,KAAK,EAAC,YAAY;EAClBE,GAAG,EAAC;;;EAdRD,GAAA;EAmBID,KAAK,EAAC,WAAW;EACjBE,GAAG,EAAC;;;EApBRD,GAAA;EAuBiDD,KAAK,EAAC;;;EAvBvDC,GAAA;EAqCcD,KAAK,EAAC;;;uBApCnBG,mBAAA,CAqCM,OArCNC,UAqCM,GApCWC,MAAA,CAAAC,OAAO,I,cAAvBH,mBAAA,CAkCWI,SAAA;IApCbN,GAAA;EAAA,IAGGO,mBAAA,WAAc,EAEPH,MAAA,CAAAI,iBAAiB,oB,cADxBN,mBAAA,CAImE;IARtEF,GAAA;IAMID,KAAK,EAAC,WAAW;IACjBE,GAAG,EAAC,UAAU;IACbQ,KAAK,EARVC,eAAA;MAAAC,eAAA,EAQ+BC,MAAA,CAAAC,YAAY,EAAEF;IAAe;6BAR5DJ,mBAAA,gBAUGA,mBAAA,aAAgB,EAETH,MAAA,CAAAI,iBAAiB,qB,cADxBN,mBAAA,CAGuB,OAHvBY,UAGuB,iCAd1BP,mBAAA,gBAgBGA,mBAAA,WAAc,EAEPH,MAAA,CAAAI,iBAAiB,oB,cADxBN,mBAAA,CAGsB,OAHtBa,UAGsB,iCApBzBR,mBAAA,gBAsBGA,mBAAA,UAAa,EACFH,MAAA,CAAAI,iBAAiB,oB,cAA5BN,mBAAA,CAYM,OAZNc,UAYM,GAXWZ,MAAA,CAAAa,OAAO,I,kBACtBf,mBAAA,CAKMI,SAAA;IA9BXN,GAAA;EAAA,GAAAkB,WAAA,CA0B8Bd,MAAA,CAAAe,cAAc,EA1B5C,CA0BcC,IAAI,EAAEC,KAAK;yBADpBnB,mBAAA,CAKM;MAHJF,GAAG,EAAEqB,KAAK;MACXtB,KAAK,EAAC;wBACHK,MAAA,CAAAkB,eAAe,CAACF,IAAI;kDAGzBlB,mBAAA,CAEWI,SAAA;IAlCfN,GAAA;EAAA,IAAAuB,gBAAA,CAAAC,gBAAA,CAiCQpB,MAAA,CAAAkB,eAAe,CAACV,MAAA,CAAAa,KAAK,kB,kCAjC7BlB,mBAAA,e,8CAqCEL,mBAAA,CAAqC,OAArCwB,UAAqC,EAAT,KAAG,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}