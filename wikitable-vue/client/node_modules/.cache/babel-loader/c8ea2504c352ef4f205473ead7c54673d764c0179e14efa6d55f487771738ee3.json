{"ast":null,"code":"import { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    sources: {\n      type: Array,\n      default: () => []\n    },\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    const noData = ref(false);\n    let chartInstance = null;\n    const colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\n    const processedData = computed(() => {\n      if (!props.isCombined || !props.data.series) return props.data;\n      return props.data;\n    });\n    const hasValidData = computed(() => {\n      if (props.isCombined) {\n        return processedData.value.series && processedData.value.series.length > 0 && processedData.value.series.some(s => s.data.length > 0);\n      }\n      return props.data && props.data.length > 0;\n    });\n    const initChart = () => {\n      noData.value = !hasValidData.value;\n      if (noData.value) return;\n      if (!chartEl.value) {\n        console.warn(\"Chart container not found\");\n        return;\n      }\n      try {\n        if (chartInstance) {\n          chartInstance.dispose();\n        }\n        chartInstance = echarts.init(chartEl.value);\n        const option = {\n          tooltip: {\n            trigger: \"axis\",\n            formatter: params => {\n              return params.filter(param => param.value != null).map(param => {\n                const year = processedData.value.categories[param.dataIndex];\n                return `${param.seriesName}<br/>${year}: ${param.value}`;\n              }).join(\"<br/>\");\n            }\n          },\n          legend: {\n            show: props.isCombined,\n            data: props.isCombined ? processedData.value.series.map(s => s.name) : []\n          },\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true\n          },\n          xAxis: {\n            type: \"category\",\n            data: props.isCombined ? processedData.value.categories : props.data.map(item => item.year),\n            axisLabel: {\n              formatter: function (value) {\n                return value;\n              }\n            }\n          },\n          yAxis: {\n            type: \"value\"\n          },\n          series: props.isCombined ? processedData.value.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 8,\n            lineStyle: {\n              width: 3,\n              color: series.color\n            },\n            itemStyle: {\n              color: series.color\n            }\n          })) : [{\n            name: \"数据\",\n            data: props.data.map(item => item.value),\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 8,\n            lineStyle: {\n              width: 3,\n              color: colorPalette[0]\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n        window.addEventListener(\"resize\", handleResize);\n      } catch (error) {\n        console.error(\"Chart initialization failed:\", error);\n        noData.value = true;\n      }\n    };\n    const handleResize = () => {\n      if (chartInstance) {\n        try {\n          chartInstance.resize();\n        } catch (error) {\n          console.error(\"Chart resize failed:\", error);\n        }\n      }\n    };\n    onMounted(() => {\n      initChart();\n    });\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n    watch(() => [props.data, props.isCombined, props.sources], () => {\n      initChart();\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      noData,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      processedData,\n      hasValidData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","computed","echarts","props","__props","chartEl","noData","chartInstance","colorPalette","processedData","isCombined","data","series","hasValidData","value","length","some","s","initChart","console","warn","dispose","init","option","tooltip","trigger","formatter","params","filter","param","map","year","categories","dataIndex","seriesName","join","legend","show","name","grid","left","right","bottom","containLabel","xAxis","type","item","axisLabel","yAxis","symbol","symbolSize","lineStyle","width","color","itemStyle","setOption","window","addEventListener","handleResize","error","resize","removeEventListener","sources","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\">\r\n\t\t<div v-if=\"noData\" class=\"no-data-message\">暂无数据可显示</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tconst noData = ref(false);\r\n\tlet chartInstance = null;\r\n\r\n\tconst colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\r\n\r\n\tconst processedData = computed(() => {\r\n\t\tif (!props.isCombined || !props.data.series) return props.data;\r\n\t\treturn props.data;\r\n\t});\r\n\r\n\tconst hasValidData = computed(() => {\r\n\t\tif (props.isCombined) {\r\n\t\t\treturn (\r\n\t\t\t\tprocessedData.value.series &&\r\n\t\t\t\tprocessedData.value.series.length > 0 &&\r\n\t\t\t\tprocessedData.value.series.some(s => s.data.length > 0)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn props.data && props.data.length > 0;\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tnoData.value = !hasValidData.value;\r\n\t\tif (noData.value) return;\r\n\r\n\t\tif (!chartEl.value) {\r\n\t\t\tconsole.warn(\"Chart container not found\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (chartInstance) {\r\n\t\t\t\tchartInstance.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t\tconst option = {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn params\r\n\t\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\t\tconst year = processedData.value.categories[param.dataIndex];\r\n\t\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${year}: ${param.value}`;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tshow: props.isCombined,\r\n\t\t\t\t\tdata: props.isCombined\r\n\t\t\t\t\t\t? processedData.value.series.map(s => s.name)\r\n\t\t\t\t\t\t: []\r\n\t\t\t\t},\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tleft: \"3%\",\r\n\t\t\t\t\tright: \"4%\",\r\n\t\t\t\t\tbottom: \"3%\",\r\n\t\t\t\t\tcontainLabel: true\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tdata: props.isCombined\r\n\t\t\t\t\t\t? processedData.value.categories\r\n\t\t\t\t\t\t: props.data.map(item => item.year),\r\n\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\tformatter: function (value) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: \"value\"\r\n\t\t\t\t},\r\n\t\t\t\tseries: props.isCombined\r\n\t\t\t\t\t? processedData.value.series.map(series => ({\r\n\t\t\t\t\t\t\tname: series.name,\r\n\t\t\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t  }))\r\n\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\t\t\tcolor: colorPalette[0]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t  ]\r\n\t\t\t};\r\n\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Chart initialization failed:\", error);\r\n\t\t\tnoData.value = true;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleResize = () => {\r\n\t\tif (chartInstance) {\r\n\t\t\ttry {\r\n\t\t\t\tchartInstance.resize();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Chart resize failed:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined, props.sources],\r\n\t\t() => {\r\n\t\t\tinitChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t\tfont-size: 16px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAOC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,KAAK;AACtE,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAcZ;IAEF,MAAMC,OAAO,GAAGR,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMS,MAAM,GAAGT,GAAG,CAAC,KAAK,CAAC;IACzB,IAAIU,aAAa,GAAG,IAAI;IAExB,MAAMC,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAE5E,MAAMC,aAAa,GAAGR,QAAQ,CAAC,MAAM;MACpC,IAAI,CAACE,KAAK,CAACO,UAAU,IAAI,CAACP,KAAK,CAACQ,IAAI,CAACC,MAAM,EAAE,OAAOT,KAAK,CAACQ,IAAI;MAC9D,OAAOR,KAAK,CAACQ,IAAI;IAClB,CAAC,CAAC;IAEF,MAAME,YAAY,GAAGZ,QAAQ,CAAC,MAAM;MACnC,IAAIE,KAAK,CAACO,UAAU,EAAE;QACrB,OACCD,aAAa,CAACK,KAAK,CAACF,MAAM,IAC1BH,aAAa,CAACK,KAAK,CAACF,MAAM,CAACG,MAAM,GAAG,CAAC,IACrCN,aAAa,CAACK,KAAK,CAACF,MAAM,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;MAEzD;MACA,OAAOZ,KAAK,CAACQ,IAAI,IAAIR,KAAK,CAACQ,IAAI,CAACI,MAAM,GAAG,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMG,SAAS,GAAGA,CAAA,KAAM;MACvBZ,MAAM,CAACQ,KAAK,GAAG,CAACD,YAAY,CAACC,KAAK;MAClC,IAAIR,MAAM,CAACQ,KAAK,EAAE;MAElB,IAAI,CAACT,OAAO,CAACS,KAAK,EAAE;QACnBK,OAAO,CAACC,IAAI,CAAC,2BAA2B,CAAC;QACzC;MACD;MAEA,IAAI;QACH,IAAIb,aAAa,EAAE;UAClBA,aAAa,CAACc,OAAO,CAAC,CAAC;QACxB;QAEAd,aAAa,GAAGL,OAAO,CAACoB,IAAI,CAACjB,OAAO,CAACS,KAAK,CAAC;QAE3C,MAAMS,MAAM,GAAG;UACdC,OAAO,EAAE;YACRC,OAAO,EAAE,MAAM;YACfC,SAAS,EAAEC,MAAM,IAAI;cACpB,OAAOA,MAAM,CACXC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACf,KAAK,IAAI,IAAI,CAAC,CACpCgB,GAAG,CAACD,KAAK,IAAI;gBACb,MAAME,IAAI,GAAGtB,aAAa,CAACK,KAAK,CAACkB,UAAU,CAACH,KAAK,CAACI,SAAS,CAAC;gBAC5D,OAAO,GAAGJ,KAAK,CAACK,UAAU,QAAQH,IAAI,KAAKF,KAAK,CAACf,KAAK,EAAE;cACzD,CAAC,CAAC,CACDqB,IAAI,CAAC,OAAO,CAAC;YAChB;UACD,CAAC;UACDC,MAAM,EAAE;YACPC,IAAI,EAAElC,KAAK,CAACO,UAAU;YACtBC,IAAI,EAAER,KAAK,CAACO,UAAU,GACnBD,aAAa,CAACK,KAAK,CAACF,MAAM,CAACkB,GAAG,CAACb,CAAC,IAAIA,CAAC,CAACqB,IAAI,CAAC,GAC3C;UACJ,CAAC;UACDC,IAAI,EAAE;YACLC,IAAI,EAAE,IAAI;YACVC,KAAK,EAAE,IAAI;YACXC,MAAM,EAAE,IAAI;YACZC,YAAY,EAAE;UACf,CAAC;UACDC,KAAK,EAAE;YACNC,IAAI,EAAE,UAAU;YAChBlC,IAAI,EAAER,KAAK,CAACO,UAAU,GACnBD,aAAa,CAACK,KAAK,CAACkB,UAAU,GAC9B7B,KAAK,CAACQ,IAAI,CAACmB,GAAG,CAACgB,IAAI,IAAIA,IAAI,CAACf,IAAI,CAAC;YACpCgB,SAAS,EAAE;cACVrB,SAAS,EAAE,SAAAA,CAAUZ,KAAK,EAAE;gBAC3B,OAAOA,KAAK;cACb;YACD;UACD,CAAC;UACDkC,KAAK,EAAE;YACNH,IAAI,EAAE;UACP,CAAC;UACDjC,MAAM,EAAET,KAAK,CAACO,UAAU,GACrBD,aAAa,CAACK,KAAK,CAACF,MAAM,CAACkB,GAAG,CAAClB,MAAM,KAAK;YAC1C0B,IAAI,EAAE1B,MAAM,CAAC0B,IAAI;YACjB3B,IAAI,EAAEC,MAAM,CAACD,IAAI;YACjBkC,IAAI,EAAE,MAAM;YACZI,MAAM,EAAE,QAAQ;YAChBC,UAAU,EAAE,CAAC;YACbC,SAAS,EAAE;cACVC,KAAK,EAAE,CAAC;cACRC,KAAK,EAAEzC,MAAM,CAACyC;YACf,CAAC;YACDC,SAAS,EAAE;cACVD,KAAK,EAAEzC,MAAM,CAACyC;YACf;UACA,CAAC,CAAC,CAAC,GACH,CACA;YACCf,IAAI,EAAE,IAAI;YACV3B,IAAI,EAAER,KAAK,CAACQ,IAAI,CAACmB,GAAG,CAACgB,IAAI,IAAIA,IAAI,CAAChC,KAAK,CAAC;YACxC+B,IAAI,EAAE,MAAM;YACZI,MAAM,EAAE,QAAQ;YAChBC,UAAU,EAAE,CAAC;YACbC,SAAS,EAAE;cACVC,KAAK,EAAE,CAAC;cACRC,KAAK,EAAE7C,YAAY,CAAC,CAAC;YACtB;UACD,CAAC;QAEL,CAAC;QAEDD,aAAa,CAACgD,SAAS,CAAChC,MAAM,CAAC;QAC/BiC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfxC,OAAO,CAACwC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDrD,MAAM,CAACQ,KAAK,GAAG,IAAI;MACpB;IACD,CAAC;IAED,MAAM4C,YAAY,GAAGA,CAAA,KAAM;MAC1B,IAAInD,aAAa,EAAE;QAClB,IAAI;UACHA,aAAa,CAACqD,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,OAAOD,KAAK,EAAE;UACfxC,OAAO,CAACwC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC7C;MACD;IACD,CAAC;IAED7D,SAAS,CAAC,MAAM;MACfoB,SAAS,CAAC,CAAC;IACZ,CAAC,CAAC;IAEFlB,eAAe,CAAC,MAAM;MACrB,IAAIO,aAAa,EAAE;QAClBA,aAAa,CAACc,OAAO,CAAC,CAAC;QACvBmC,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;MACnD;IACD,CAAC,CAAC;IAEF3D,KAAK,CACJ,MAAM,CAACI,KAAK,CAACQ,IAAI,EAAER,KAAK,CAACO,UAAU,EAAEP,KAAK,CAAC2D,OAAO,CAAC,EACnD,MAAM;MACL5C,SAAS,CAAC,CAAC;IACZ,CAAC,EACD;MAAE6C,IAAI,EAAE;IAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}