{"ast":null,"code":"import { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    sources: {\n      type: Array,\n      default: () => []\n    },\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n    const colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\n    const formatNumber = value => {\n      if (value === null || value === undefined) return \"-\";\n      const num = Number(value);\n      if (isNaN(num)) return \"-\";\n\n      // 根据字段类型决定格式化方式\n      if (props.fieldKey === \"GDP growth\" || props.fieldKey === \"Inflation (CPI)\") {\n        return num.toFixed(1) + \"%\";\n      }\n      return num.toLocaleString();\n    };\n    const processedData = computed(() => {\n      if (!props.isCombined || !props.data.series) return props.data;\n      return props.data;\n    });\n    const initChart = () => {\n      if (!chartEl.value) return;\n      if (chartInstance) chartInstance.dispose();\n      chartInstance = echarts.init(chartEl.value);\n      const baseOption = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.filter(param => param.value != null).map(param => {\n              const year = processedData.value.categories[param.dataIndex];\n              return `${param.seriesName}<br/>${year}: ${formatNumber(param.value)}`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          show: props.isCombined,\n          data: props.isCombined ? processedData.value.series.map(s => s.name) : []\n        },\n        grid: {\n          top: props.isCombined ? \"20%\" : \"15%\",\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: processedData.value.categories,\n          axisLabel: {\n            formatter: function (value) {\n              return value; // 显示完整年份\n            },\n            interval: 0,\n            rotate: 0\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: function (value) {\n              // 根据字段类型决定y轴格式\n              if (props.fieldKey === \"GDP growth\" || props.fieldKey === \"Inflation (CPI)\") {\n                return value + \"%\";\n              }\n              return value;\n            }\n          }\n        }\n      };\n      if (props.isCombined) {\n        const option = {\n          ...baseOption,\n          series: processedData.value.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: series.color\n            },\n            itemStyle: {\n              color: series.color\n            },\n            label: {\n              show: true,\n              formatter: formatNumber,\n              color: \"#333\"\n            },\n            emphasis: {\n              itemStyle: {\n                borderWidth: 2,\n                borderColor: \"#fff\"\n              }\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      } else {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: props.data.map(item => item.year)\n          },\n          series: [{\n            name: \"数据\",\n            data: props.data.map(item => item.value),\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: colorPalette[0]\n            },\n            label: {\n              show: true,\n              formatter: formatNumber\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n      window.addEventListener(\"resize\", handleResize);\n    };\n    const handleResize = () => chartInstance?.resize();\n    onMounted(initChart);\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n    watch(() => [props.data, props.isCombined, props.sources], () => initChart(), {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      formatNumber,\n      processedData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","computed","echarts","props","__props","chartEl","chartInstance","colorPalette","formatNumber","value","undefined","num","Number","isNaN","fieldKey","toFixed","toLocaleString","processedData","isCombined","data","series","initChart","dispose","init","baseOption","tooltip","trigger","formatter","params","filter","param","map","year","categories","dataIndex","seriesName","join","legend","show","s","name","grid","top","left","right","bottom","containLabel","xAxis","type","axisLabel","interval","rotate","yAxis","option","symbol","symbolSize","lineStyle","width","color","itemStyle","label","emphasis","borderWidth","borderColor","setOption","item","window","addEventListener","handleResize","resize","removeEventListener","sources","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\r\n\r\n\tconst formatNumber = value => {\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"-\";\r\n\r\n\t\t// 根据字段类型决定格式化方式\r\n\t\tif (\r\n\t\t\tprops.fieldKey === \"GDP growth\" ||\r\n\t\t\tprops.fieldKey === \"Inflation (CPI)\"\r\n\t\t) {\r\n\t\t\treturn num.toFixed(1) + \"%\";\r\n\t\t}\r\n\t\treturn num.toLocaleString();\r\n\t};\r\n\r\n\tconst processedData = computed(() => {\r\n\t\tif (!props.isCombined || !props.data.series) return props.data;\r\n\t\treturn props.data;\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tif (chartInstance) chartInstance.dispose();\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst baseOption = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\tconst year = processedData.value.categories[param.dataIndex];\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${year}: ${formatNumber(\r\n\t\t\t\t\t\t\t\tparam.value\r\n\t\t\t\t\t\t\t)}`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: props.isCombined,\r\n\t\t\t\tdata: props.isCombined\r\n\t\t\t\t\t? processedData.value.series.map(s => s.name)\r\n\t\t\t\t\t: []\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: props.isCombined ? \"20%\" : \"15%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"3%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: processedData.value.categories,\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: function (value) {\r\n\t\t\t\t\t\treturn value; // 显示完整年份\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\trotate: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: function (value) {\r\n\t\t\t\t\t\t// 根据字段类型决定y轴格式\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tprops.fieldKey === \"GDP growth\" ||\r\n\t\t\t\t\t\t\tprops.fieldKey === \"Inflation (CPI)\"\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn value + \"%\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (props.isCombined) {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\tseries: processedData.value.series.map(series => ({\r\n\t\t\t\t\tname: series.name,\r\n\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: series.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: formatNumber,\r\n\t\t\t\t\t\tcolor: \"#333\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tborderColor: \"#fff\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t} else {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: props.data.map(item => item.year)\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\tcolor: colorPalette[0]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tformatter: formatNumber\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\tconst handleResize = () => chartInstance?.resize();\r\n\r\n\tonMounted(initChart);\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined, props.sources],\r\n\t\t() => initChart(),\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}