{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\n\n// 数据状态\n\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 处理数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n\n      // 标准化数据结构\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 可比较字段定义（带可视化类型标记）\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      chartOptions: {\n        yAxisUnit: \"万亿\"\n      }\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      chartOptions: {\n        yAxisUnit: \"%\",\n        minValue: 0\n      }\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"Currency\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\"\n    }];\n\n    // 验证可视化类型\n    const VALID_VISUALIZATION_TYPES = [\"line-chart\", \"bar-chart\", \"pie-chart\", \"text-only\", undefined];\n    COMPARABLE_FIELDS.forEach(field => {\n      if (field.visualization && !VALID_VISUALIZATION_TYPES.includes(field.visualization)) {\n        console.error(`无效的可视化类型: ${field.visualization}`, field);\n      }\n    });\n\n    // 获取字段值（增强版）\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 1. 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return section[fieldKey];\n        }\n      }\n\n      // 2. 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) {\n          console.log(`模糊匹配成功: ${fieldKey} -> ${matchedKey}`);\n          return section[matchedKey];\n        }\n      }\n      console.warn(`字段未匹配: ${fieldKey}`, {\n        availableKeys: Object.values(infobox.data).flatMap(s => Object.keys(s))\n      });\n      return null;\n    };\n\n    // 计算可显示字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        console.log(`字段检查 ${field.key}:`, {\n          left: leftVal,\n          right: rightVal,\n          visualization: field.visualization\n        });\n        return leftVal !== null || rightVal !== null;\n      });\n    });\n\n    // 事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n        console.log(\"左侧数据:\", JSON.parse(JSON.stringify(leftInfobox.value)));\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n        console.log(\"右侧数据:\", JSON.parse(JSON.stringify(rightInfobox.value)));\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      VALID_VISUALIZATION_TYPES,\n      getField,\n      comparableFields,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","sections","COMPARABLE_FIELDS","key","typeLabel","visualization","chartOptions","yAxisUnit","minValue","VALID_VISUALIZATION_TYPES","undefined","forEach","field","includes","console","error","getField","infobox","fieldKey","section","Object","values","cleanKey","toLowerCase","replace","matchedKey","keys","find","k","log","warn","availableKeys","flatMap","s","comparableFields","filter","leftVal","value","rightVal","left","right","on","JSON","parse","stringify"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:chart-options=\"field.chartOptions\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:chart-options=\"field.chartOptions\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 标准化数据结构\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义（带可视化类型标记）\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tchartOptions: {\r\n\t\t\t\tyAxisUnit: \"万亿\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tchartOptions: {\r\n\t\t\t\tyAxisUnit: \"%\",\r\n\t\t\t\tminValue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Currency\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 验证可视化类型\r\n\tconst VALID_VISUALIZATION_TYPES = [\r\n\t\t\"line-chart\",\r\n\t\t\"bar-chart\",\r\n\t\t\"pie-chart\",\r\n\t\t\"text-only\",\r\n\t\tundefined\r\n\t];\r\n\tCOMPARABLE_FIELDS.forEach(field => {\r\n\t\tif (\r\n\t\t\tfield.visualization &&\r\n\t\t\t!VALID_VISUALIZATION_TYPES.includes(field.visualization)\r\n\t\t) {\r\n\t\t\tconsole.error(`无效的可视化类型: ${field.visualization}`, field);\r\n\t\t}\r\n\t});\r\n\r\n\t// 获取字段值（增强版）\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 1. 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\tconsole.log(`模糊匹配成功: ${fieldKey} -> ${matchedKey}`);\r\n\t\t\t\treturn section[matchedKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.warn(`字段未匹配: ${fieldKey}`, {\r\n\t\t\tavailableKeys: Object.values(infobox.data).flatMap(s => Object.keys(s))\r\n\t\t});\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 计算可显示字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\r\n\t\t\tconsole.log(`字段检查 ${field.key}:`, {\r\n\t\t\t\tleft: leftVal,\r\n\t\t\t\tright: rightVal,\r\n\t\t\t\tvisualization: field.visualization\r\n\t\t\t});\r\n\r\n\t\t\treturn leftVal !== null || rightVal !== null;\r\n\t\t});\r\n\t});\r\n\r\n\t// 事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"左侧数据:\", JSON.parse(JSON.stringify(leftInfobox.value)));\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"右侧数据:\", JSON.parse(JSON.stringify(rightInfobox.value)));\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tmin-height: 100px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}