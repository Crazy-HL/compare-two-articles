{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\"); // 用户输入的问题\n    const chatHistory = ref([]); // 历史对话记录\n\n    // 向 GPT 提问\n    async function askQuestion() {\n      if (!userQuestion.value) {\n        alert(\"请输入问题！\");\n        return;\n      }\n\n      // 将用户的问题添加到历史记录\n      chatHistory.value.push({\n        role: \"user\",\n        content: userQuestion.value\n      });\n      try {\n        // 模拟 GPT 回答\n        const response = await new Promise(resolve => setTimeout(() => {\n          resolve({\n            answer: `这是 GPT 的回答：${userQuestion.value}`\n          });\n        }, 1000));\n\n        // 将 GPT 的回答添加到历史记录\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: response.answer\n        });\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n      }\n\n      // 清空输入框\n      userQuestion.value = \"\";\n    }\n\n    // 对比文章\n    async function compareTexts() {\n      alert(\"对比文章功能待实现\");\n    }\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      askQuestion,\n      compareTexts,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","userQuestion","chatHistory","askQuestion","value","alert","push","role","content","response","Promise","resolve","setTimeout","answer","error","console","compareTexts"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis\">\r\n\t\t\t<!-- 可用于显示图形或其他内容 -->\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref } from \"vue\";\r\n\r\n\tconst userQuestion = ref(\"\"); // 用户输入的问题\r\n\tconst chatHistory = ref([]); // 历史对话记录\r\n\r\n\t// 向 GPT 提问\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 将用户的问题添加到历史记录\r\n\t\tchatHistory.value.push({ role: \"user\", content: userQuestion.value });\r\n\r\n\t\ttry {\r\n\t\t\t// 模拟 GPT 回答\r\n\t\t\tconst response = await new Promise(resolve =>\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tresolve({ answer: `这是 GPT 的回答：${userQuestion.value}` });\r\n\t\t\t\t}, 1000)\r\n\t\t\t);\r\n\r\n\t\t\t// 将 GPT 的回答添加到历史记录\r\n\t\t\tchatHistory.value.push({ role: \"assistant\", content: response.answer });\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\r\n\t\t// 清空输入框\r\n\t\tuserQuestion.value = \"\";\r\n\t}\r\n\r\n\t// 对比文章\r\n\tasync function compareTexts() {\r\n\t\talert(\"对比文章功能待实现\");\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 800px;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tflex: 1;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\t/* 视觉内容容器 */\r\n\t.vis {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":";AAsCC,SAASA,GAAG,QAAQ,KAAK;;;;;;;;IAEzB,MAAMC,YAAY,GAAGD,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,MAAME,WAAW,GAAGF,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE7B;IACA,eAAeG,WAAWA,CAAA,EAAG;MAC5B,IAAI,CAACF,YAAY,CAACG,KAAK,EAAE;QACxBC,KAAK,CAAC,QAAQ,CAAC;QACf;MACD;;MAEA;MACAH,WAAW,CAACE,KAAK,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEP,YAAY,CAACG;MAAM,CAAC,CAAC;MAErE,IAAI;QACH;QACA,MAAMK,QAAQ,GAAG,MAAM,IAAIC,OAAO,CAACC,OAAO,IACzCC,UAAU,CAAC,MAAM;UAChBD,OAAO,CAAC;YAAEE,MAAM,EAAE,cAAcZ,YAAY,CAACG,KAAK;UAAG,CAAC,CAAC;QACxD,CAAC,EAAE,IAAI,CACR,CAAC;;QAED;QACAF,WAAW,CAACE,KAAK,CAACE,IAAI,CAAC;UAAEC,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAEC,QAAQ,CAACI;QAAO,CAAC,CAAC;MACxE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC9B;;MAEA;MACAb,YAAY,CAACG,KAAK,GAAG,EAAE;IACxB;;IAEA;IACA,eAAeY,YAAYA,CAAA,EAAG;MAC7BX,KAAK,CAAC,WAAW,CAAC;IACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}