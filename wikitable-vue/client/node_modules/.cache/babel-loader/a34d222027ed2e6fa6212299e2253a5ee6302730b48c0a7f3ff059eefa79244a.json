{"ast":null,"code":"import { computed, ref, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  props: {\n    field: {\n      type: [Object, Array, String, Number],\n      default: null\n    },\n    type: {\n      // e.g., \"percentage\", \"number\", \"text\"\n      type: String,\n      default: \"\"\n    },\n    visualization: {\n      // e.g., \"pie-chart\", \"bar-chart\", \"text-only\"\n      type: String,\n      default: \"\"\n    },\n    fieldKey: {\n      // e.g., \"GDP\", \"Export goods\", \"GDP rank\"\n      type: String,\n      default: \"\"\n    },\n    unifiedMax: {\n      type: Number,\n      default: null\n    }\n  },\n  emits: [\"chartClick\"],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const hoveredIndex = ref(null); // Used by some chart interactions\n    const activeIndex = ref(null); // Used by some chart interactions\n    const isTextHovered = ref(false); // For text-only tooltip\n\n    // DOM element references for D3\n    const pieContainer = ref(null);\n    const barContainer = ref(null);\n    const lineContainer = ref(null);\n    const stackedContainer = ref(null);\n\n    // Color palette for charts\n    const colors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\", \"#1abc9c\", \"#d35400\", \"#8e44ad\", \"#c0392b\", \"#7f8c8d\"];\n    const remainderColor = \"#f0f0f0\"; // For single-value pie charts\n\n    // Fixed data for 'stacked-chart' (Export goods for South Korea)\n    const fixedStackedChartRawData = [{\n      value: 15.35,\n      raw: \"Integrated Circuits 15.35%\"\n    }, {\n      value: 12.81,\n      raw: \"Machinery 12.81%\"\n    }, {\n      value: 11.34,\n      raw: \"Vehicles and their parts 11.34%\"\n    }, {\n      value: 7.01,\n      raw: \"Mineral Fuels 7.01%\"\n    }, {\n      value: 5.86,\n      raw: \"Plastics 5.86%\"\n    }, {\n      value: 4.23,\n      raw: \"Iron and Steel 4.23%\"\n    }, {\n      value: 4.16,\n      raw: \"Instruments and Apparatus 4.16%\"\n    }, {\n      value: 3.85,\n      raw: \"Organic Chemicals 3.85%\"\n    }, {\n      value: 35.39,\n      raw: \"Others 35.39%\"\n    }];\n\n    // Helper to safely convert values to numbers for charts\n    const safeToNumber = value => {\n      if (value === null || value === undefined) return 0;\n      if (typeof value === \"number\" && !isNaN(value)) return value; // Ensure it's not NaN\n      if (typeof value === \"string\") {\n        const cleanedString = value.replace(/[,亿万千]/g, \"\"); // Remove common non-numeric chars for parsing\n        const percentMatch = cleanedString.match(/(-?[\\d.]+)\\s*%/);\n        if (percentMatch) return parseFloat(percentMatch[1]);\n        const num = parseFloat(cleanedString);\n        return isNaN(num) ? 0 : num;\n      }\n      // console.warn(\"safeToNumber could not parse:\", value, \"returning 0\");\n      return 0;\n    };\n\n    // Processes props.field into a consistent format for different chart types\n    const processedField = computed(() => {\n      // console.log(`processedField: START for ${props.fieldKey} (${props.visualization}), props.field:`, JSON.parse(JSON.stringify(props.field)));\n      if (props.visualization === \"stacked-chart\") {\n        const dataForStack = {};\n        const nameValueRegex = /^([a-zA-Z\\s&().]+[\\sa-zA-Z&().-]*?)\\s*([\\d.]+%)$/; // Allow hyphen in name\n        fixedStackedChartRawData.forEach(item => {\n          if (typeof item.raw !== \"string\") return;\n          const match = item.raw.match(nameValueRegex);\n          if (match) {\n            const name = match[1].trim();\n            const value = parseFloat(match[2]);\n            if (!isNaN(value)) dataForStack[name] = value;\n          }\n        });\n        // console.log(`processedField: STACKED data prepared for D3 stack:`, dataForStack);\n        return Object.keys(dataForStack).length > 0 ? [dataForStack] : []; // Ensure it's an array, even if empty object led to empty keys\n      }\n      if (props.field === null || props.field === undefined) {\n        // console.log(`processedField: props.field is null/undefined for ${props.fieldKey}`);\n        return props.visualization === \"text-only\" ? null : []; // text can be null, others expect array\n      }\n      const processItem = itemInput => {\n        if (typeof itemInput !== \"object\" || itemInput === null) {\n          // Handle primitive values directly, especially for text-only or if data is simple\n          const rawText = String(itemInput);\n          return {\n            name: rawText.split(/[:%（(]/)[0].trim() || \"Item\",\n            // Basic name extraction\n            value: props.type !== \"text\" ? safeToNumber(rawText) : rawText,\n            // Convert to number unless it's text type\n            raw: rawText,\n            unit: undefined,\n            type: props.type,\n            year: undefined,\n            currency: undefined\n          };\n        }\n        // Item is an object\n        const name = itemInput.name || (typeof itemInput.raw === \"string\" ? String(itemInput.raw).split(/[:%（(]/)[0].trim() : \"Item\");\n        let value;\n        if (props.type === \"text\" || props.visualization === \"text-only\") {\n          value = itemInput.value !== undefined ? String(itemInput.value) : String(itemInput.raw);\n        } else {\n          value = safeToNumber(itemInput.value !== undefined ? itemInput.value : itemInput.raw);\n        }\n        return {\n          name: name || \"Unknown\",\n          // Ensure name exists\n          value: value,\n          // Value is processed\n          raw: String(itemInput.raw || itemInput.value || JSON.stringify(itemInput) || \"\"),\n          // Ensure raw is string\n          unit: itemInput.unit,\n          type: itemInput.type || props.type,\n          // Prefer item's type, fallback to prop\n          year: itemInput.year,\n          currency: itemInput.currency\n        };\n      };\n      let result;\n      if (Array.isArray(props.field)) {\n        result = props.field.map(processItem).filter(item => item !== null && item.raw.trim() !== \"\");\n      } else {\n        // Single object or primitive\n        result = processItem(props.field);\n        // For non-array results that aren't for text-only, wrap in array if it's an object\n        if (props.visualization !== \"text-only\" && typeof result === \"object\" && result !== null) {\n          result = [result];\n        }\n      }\n      // console.log(`processedField: END for ${props.fieldKey} (${props.visualization}), result:`, JSON.parse(JSON.stringify(result)));\n      return result;\n    });\n\n    // Determines if there's valid data to render a chart\n    const hasData = computed(() => {\n      const data = processedField.value;\n      // console.log(`hasData check for ${props.fieldKey} (${props.visualization}): processedField.value =`, JSON.parse(JSON.stringify(data)));\n      if (data === null || data === undefined) return false;\n      if (props.visualization === \"stacked-chart\") {\n        return Array.isArray(data) && data.length === 1 && typeof data[0] === \"object\" && Object.keys(data[0]).length > 0;\n      }\n      if (Array.isArray(data)) {\n        return data.length > 0;\n      }\n      if (typeof data === \"object\") {\n        // Single object (can happen for text-only if props.field was an object)\n        return Object.keys(data).length > 0 && data.raw !== undefined && String(data.raw).trim() !== \"\" && String(data.raw).trim() !== \"-\";\n      }\n      // Primitives for text-only\n      return String(data).trim().length > 0 && String(data).trim() !== \"-\";\n    });\n\n    // Specific validation for pie chart data\n    const isValidPieData = computed(() => {\n      if (props.visualization !== \"pie-chart\" || !hasData.value) return false;\n      const data = processedField.value; // Already processed\n      if (!Array.isArray(data) || data.length === 0) return false;\n      const valid = data.every(item => item &&\n      // item exists\n      typeof item.name === \"string\" && typeof item.value === \"number\" && !isNaN(item.value) &&\n      // value is a valid number\n      !isYearEntry(item.name) && !isYearEntry(item.raw) // Check raw for year entries too\n      );\n      // console.log(`isValidPieData for ${props.fieldKey}: ${valid}`, JSON.parse(JSON.stringify(data)));\n      return valid;\n    });\n    onMounted(() => {\n      // console.log(`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`);\n      watch(() => [props.visualization, props.fieldKey, props.field, props.type],\n      // Watch all relevant props\n      () => {\n        // console.log(`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, Type: ${props.type}, HasData: ${hasData.value}`);\n        // if (props.visualization === 'stacked-chart') {\n        //      console.log(\"SimpleChart WATCH - Processed field for STACKED chart:\", JSON.parse(JSON.stringify(processedField.value)));\n        // } else if (props.fieldKey === \"GDP rank\") {\n        //      console.log(`SimpleChart WATCH - Processed field for GDP rank:`, JSON.parse(JSON.stringify(processedField.value)));\n        // }\n\n        nextTick(() => {\n          // Clear previous chart before drawing new one\n          if (pieContainer.value) d3.select(pieContainer.value).selectAll(\"*\").remove();\n          if (barContainer.value) d3.select(barContainer.value).selectAll(\"*\").remove();\n          if (lineContainer.value) d3.select(lineContainer.value).selectAll(\"*\").remove();\n          if (stackedContainer.value) d3.select(stackedContainer.value).selectAll(\"*\").remove();\n          if (props.visualization === \"pie-chart\" && hasData.value && isValidPieData.value) {\n            // isValidPieData added\n            // console.log(`SimpleChart: Conditions MET for renderPieChart (${props.fieldKey}).`);\n            renderPieChart();\n          } else if (props.visualization === \"bar-chart\" && hasData.value) {\n            // console.log(`SimpleChart: Conditions MET for renderBarChart (${props.fieldKey}).`);\n            renderBarChart();\n          } else if (props.visualization === \"line-chart\" && hasData.value) {\n            // console.log(`SimpleChart: Conditions MET for renderLineChart (${props.fieldKey}).`);\n            renderLineChart();\n          } else if (props.visualization === \"stacked-chart\" && hasData.value) {\n            // console.log(`SimpleChart: Conditions MET for renderStackedChart (${props.fieldKey}).`);\n            renderStackedChart();\n          } else if (props.visualization === \"text-only\") {\n            // console.log(`SimpleChart: TEXT-ONLY display for ${props.fieldKey}. Data:`, JSON.parse(JSON.stringify(processedField.value)));\n            // No explicit render function, template handles it\n          } else {\n            // console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}, IsValidPie: ${props.visualization === 'pie-chart' ? isValidPieData.value : 'N/A'}`);\n            // Optionally display a \"no data\" message in the container if it's not text-only\n            const containerRef = props.visualization === \"pie-chart\" ? pieContainer : props.visualization === \"bar-chart\" ? barContainer : props.visualization === \"line-chart\" ? lineContainer : props.visualization === \"stacked-chart\" ? stackedContainer : null;\n            if (containerRef && containerRef.value) {\n              d3.select(containerRef.value).html(`<div class=\"no-data\" style=\"text-align:center; width:100%;\">-</div>`);\n            }\n          }\n        });\n      }, {\n        immediate: true,\n        deep: true\n      });\n    });\n    const isYearEntry = value => {\n      // Helper to filter out year-only entries\n      if (typeof value !== \"string\") return false;\n      const trimmedValue = value.trim();\n      return /^(\\(\\d{4}\\)|\\d{4}\\s*est\\.?)$/i.test(trimmedValue) || /^\\(?[FY]+\\s*\\d{4}\\)?/i.test(trimmedValue);\n    };\n\n    // Number formatting function\n    const formatNumber = value => {\n      // console.log(`formatNumber called with value: \"${value}\", props.type: \"${props.type}\" for fieldKey: \"${props.fieldKey}\"`);\n      if (value === undefined || value === null) {\n        // console.warn(\"formatNumber received undefined or null value.\");\n        return \"-\";\n      }\n      const num = Number(value); // Try to convert, handles strings like \"123.45\"\n      if (isNaN(num)) {\n        // console.warn(`formatNumber: Could not convert '${value}' to a valid number. Returning as is or \"-\" if not displayable.`);\n        // For text that couldn't be converted, return the original string if it's not just noise\n        return typeof value === \"string\" && value.trim() !== \"\" && value.trim() !== \"-\" ? value : \"-\";\n      }\n      if (props.type === \"percentage\") return num.toFixed(1) + \"%\";\n      if (num >= 1e8) return (num / 1e8).toFixed(2) + \"亿\";\n      if (num >= 1e4) return (num / 1e4).toFixed(1) + \"万\";\n      if (Number.isInteger(num)) return num.toFixed(0); // No decimals for integers\n      return num.toFixed(1); // Default to 1 decimal for other numbers\n    };\n\n    // Pie chart data pre-processing\n    const pieData = computed(() => {\n      if (props.visualization !== \"pie-chart\" || !hasData.value || !Array.isArray(processedField.value)) return [];\n      return processedField.value.map((item, index) => ({\n        name: String(item.name || \"Unknown\"),\n        value: typeof item.value === \"number\" ? item.value : 0,\n        // Ensure value is number\n        raw: String(item.raw || \"\"),\n        index\n      })).filter(item => !isYearEntry(item.raw) && item.value > 0); // Filter out year entries and zero/negative values for pie\n    });\n    const renderPieChart = () => {\n      if (!pieContainer.value) {\n        /* console.error(\"Pie container not found\"); */return;\n      }\n      // console.log(`renderPieChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(pieData.value)));\n      d3.select(pieContainer.value).selectAll(\"*\").remove(); // Clear previous\n      if (!pieData.value || pieData.value.length === 0) {\n        d3.select(pieContainer.value).html(`<div class=\"no-data\">-</div>`);\n        return;\n      }\n      const container = d3.select(pieContainer.value);\n      const containerWidth = pieContainer.value.clientWidth;\n      const containerHeight = pieContainer.value.clientHeight;\n      const size = Math.min(containerWidth, containerHeight) * 0.95; // Slightly smaller\n      const radius = size / 2;\n      const svg = container.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", `0 0 ${size} ${size}`) // Centered viewport\n      .append(\"g\").attr(\"transform\", `translate(${radius},${radius})`);\n      const isSingleValue = props.fieldKey === \"Inflation (CPI)\"; // Or based on data length if only one item after filtering\n      const dataForPieDisplay = isSingleValue && pieData.value.length === 1 ? [{\n        ...pieData.value[0],\n        color: colors[0]\n      }, {\n        value: Math.max(0, 100 - pieData.value[0].value),\n        name: \"剩余\",\n        color: remainderColor,\n        isRemainder: true\n      }] : pieData.value.map((d, i) => ({\n        ...d,\n        color: colors[i % colors.length]\n      }));\n      const pieGen = d3.pie().value(d => d.value).sort(null);\n      const arcGen = d3.arc().innerRadius(isSingleValue ? radius * 0.7 : 0).outerRadius(radius * 0.9).cornerRadius(3); // Donut for single value\n      const tooltip = d3.select(pieContainer.value).append(\"div\").attr(\"class\", \"d3-tooltip\").style(\"visibility\", \"hidden\");\n      svg.selectAll(\".arc-group\").data(pieGen(dataForPieDisplay)).enter().append(\"g\").attr(\"class\", \"arc-group\").append(\"path\").attr(\"d\", arcGen).attr(\"fill\", d => d.data.color).style(\"opacity\", d => d.data.isRemainder ? 0.5 : 0.9).style(\"stroke\", \"#fff\").style(\"stroke-width\", 1.5).on(\"mouseover\", function (event, d) {\n        if (d.data.isRemainder) return;\n        d3.select(this).transition().duration(150).style(\"opacity\", 1).attr(\"transform\", \"scale(1.03)\");\n        tooltip.style(\"visibility\", \"visible\").html(`<strong>${d.data.name}</strong>: ${d.data.value.toFixed(1)}${props.type === \"percentage\" ? \"%\" : \"\"}`);\n      }).on(\"mousemove\", function (event) {\n        const [mouseX, mouseY] = d3.pointer(event, pieContainer.value); // Position relative to container\n        tooltip.style(\"top\", mouseY + 15 + \"px\").style(\"left\", mouseX + 15 + \"px\");\n      }).on(\"mouseout\", function (event, d) {\n        if (d.data.isRemainder) return;\n        d3.select(this).transition().duration(150).style(\"opacity\", 0.9).attr(\"transform\", \"scale(1)\");\n        tooltip.style(\"visibility\", \"hidden\");\n      }).on(\"click\", function (event, d) {\n        if (d.data.isRemainder) return;\n        emit(\"chartClick\", {\n          type: \"pie\",\n          index: d.index,\n          data: d.data,\n          value: d.data.value\n        }); // d.index from original pieData map\n      });\n      if (isSingleValue && pieData.value.length === 1) {\n        svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \".3em\").text(`${pieData.value[0].value.toFixed(1)}${props.type === \"percentage\" ? \"%\" : \"\"}`).style(\"font-size\", `${Math.max(12, radius * 0.25)}px`).style(\"fill\", \"#333\").style(\"font-weight\", \"bold\");\n      } else if (!isSingleValue && pieData.value.length > 1) {\n        // Legend for multi-value pie chart\n        const legendContainer = d3.select(pieContainer.value).select(\"svg\"); // Attach to SVG, not the 'g'\n        const legendItemSize = 10,\n          legendSpacing = 3,\n          legendPaddingRight = 5,\n          legendPaddingTop = 5;\n        let maxTextW = 0;\n        const tempTextMeasure = d3.select(\"body\").append(\"svg\").attr(\"class\", \"temp-text-measure\").style(\"visibility\", \"hidden\");\n        dataForPieDisplay.filter(d => !d.isRemainder).forEach(d => {\n          maxTextW = Math.max(maxTextW, tempTextMeasure.append(\"text\").text(`${d.name} (${d.value.toFixed(1)}%)`).style(\"font-size\", \"10px\").node().getComputedTextLength());\n        });\n        tempTextMeasure.remove();\n        const legendItemTotalW = legendItemSize + legendSpacing + maxTextW + legendPaddingRight;\n        const legend = legendContainer.append(\"g\").attr(\"class\", \"legend-pie\").selectAll(\"g\").data(dataForPieDisplay.filter(d => !d.isRemainder)).join(\"g\").attr(\"transform\", (d, i) => `translate(${size - legendItemTotalW}, ${legendPaddingTop + i * (legendItemSize + legendSpacing + 2)})`);\n        legend.append(\"rect\").attr(\"width\", legendItemSize).attr(\"height\", legendItemSize).attr(\"fill\", d => d.color);\n        legend.append(\"text\").attr(\"x\", legendItemSize + legendSpacing).attr(\"y\", legendItemSize / 2).attr(\"dy\", \"0.32em\").text(d => `${d.name.substring(0, 15)}${d.name.length > 15 ? \"...\" : \"\"} (${d.value.toFixed(1)}%)`).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n      }\n    };\n\n    // Bar chart data pre-processing\n    const simpleBarData = computed(() => {\n      if (props.visualization !== \"bar-chart\" || !hasData.value || !Array.isArray(processedField.value)) return [];\n      return processedField.value.map((item, index) => ({\n        name: String(item.name || `Bar ${index + 1}`),\n        value: typeof item.value === \"number\" ? item.value : 0,\n        raw: String(item.raw || \"\"),\n        index\n      })).filter(item => !isYearEntry(item.raw));\n    });\n    const renderBarChart = () => {\n      if (!barContainer.value) {\n        /* console.error(\"Bar container not found\"); */return;\n      }\n      // console.log(`renderBarChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(simpleBarData.value)));\n      d3.select(barContainer.value).selectAll(\"*\").remove();\n      if (!simpleBarData.value || simpleBarData.value.length === 0) {\n        d3.select(barContainer.value).html(`<div class=\"no-data\">-</div>`);\n        return;\n      }\n      const container = d3.select(barContainer.value);\n      const width = barContainer.value.clientWidth;\n      const height = barContainer.value.clientHeight;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 25 + (simpleBarData.value.some(d => d.name.length > 7) ? 10 : 0),\n        left: 35\n      }; // Adjust bottom for long labels\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      if (chartWidth <= 0 || chartHeight <= 0) {\n        /* console.warn(\"Bar chart area too small\"); */d3.select(barContainer.value).html(`<div class=\"no-data\">- (Area too small)</div>`);\n        return;\n      }\n      const svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const x = d3.scaleBand().domain(simpleBarData.value.map(d => d.name)).range([0, chartWidth]).padding(0.2);\n      const yValues = simpleBarData.value.map(d => d.value);\n      const yMin = d3.min(yValues);\n      const yMax = d3.max(yValues);\n      const y = d3.scaleLinear().domain([yMin < 0 ? yMin * 1.1 : 0, yMax > 0 ? yMax * 1.1 : props.unifiedMax || 10]) // Handle all zero/negative/positive cases\n      .nice().range([chartHeight, 0]);\n      svg.append(\"g\").call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\n      svg.append(\"g\").attr(\"transform\", `translate(0,${chartHeight})`).call(d3.axisBottom(x)).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-30)\");\n      svg.selectAll(\".bar\").data(simpleBarData.value).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.name)).attr(\"y\", d => d.value >= 0 ? y(d.value) : y(0)) // Handle negative values for y\n      .attr(\"width\", x.bandwidth()).attr(\"height\", d => Math.abs(y(d.value) - y(0))) // Absolute height\n      .attr(\"fill\", (d, i) => colors[i % colors.length]).style(\"opacity\", 0.8).append(\"title\").text(d => `${d.name}: ${formatNumber(d.value)}`);\n\n      // Optional: Value labels on top of bars\n      svg.selectAll(\".bar-value-label\").data(simpleBarData.value).enter().append(\"text\").attr(\"class\", \"bar-value-label\").attr(\"x\", d => x(d.name) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 3).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"9px\").style(\"fill\", \"#444\").text(d => formatNumber(d.value));\n    };\n\n    // Line chart data pre-processing\n    const lineData = computed(() => {\n      if (props.visualization !== \"line-chart\" || !hasData.value || !Array.isArray(processedField.value)) return [];\n      return processedField.value.map((item, index) => ({\n        name: String(item.name || `Point ${index + 1}`),\n        // Name might be year or category\n        value: typeof item.value === \"number\" ? item.value : 0,\n        raw: String(item.raw || \"\"),\n        originalIndex: index // Keep original index if needed for x-axis from name\n      })).filter(item => !isYearEntry(item.raw));\n    });\n    const renderLineChart = () => {\n      if (!lineContainer.value) {\n        /* console.error(\"Line container not found\"); */return;\n      }\n      // console.log(`renderLineChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(lineData.value)));\n      d3.select(lineContainer.value).selectAll(\"*\").remove();\n      if (!lineData.value || lineData.value.length < 1) {\n        // Line chart needs at least 1 point, ideally 2+\n        d3.select(lineContainer.value).html(`<div class=\"no-data\">-</div>`);\n        return;\n      }\n      const container = d3.select(lineContainer.value);\n      const width = lineContainer.value.clientWidth;\n      const height = lineContainer.value.clientHeight;\n      const margin = {\n        top: 10,\n        right: 20,\n        bottom: 25 + (lineData.value.some(d => d.name.length > 7) ? 10 : 0),\n        left: 40\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      if (chartWidth <= 0 || chartHeight <= 0) {\n        /* console.warn(\"Line chart area too small\"); */d3.select(lineContainer.value).html(`<div class=\"no-data\">- (Area too small)</div>`);\n        return;\n      }\n      const svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // X scale: can be index-based or based on 'name' if names are ordered categories/years\n      const x = d3.scalePoint() // Use scalePoint if names are categories\n      .domain(lineData.value.map(d => d.name)).range([0, chartWidth]).padding(0.5);\n      const yValues = lineData.value.map(d => d.value);\n      const y = d3.scaleLinear().domain(d3.extent(yValues)) // Use extent for min/max\n      .nice().range([chartHeight, 0]);\n      svg.append(\"g\").call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\n      svg.append(\"g\").attr(\"transform\", `translate(0,${chartHeight})`).call(d3.axisBottom(x)).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-30)\");\n      const lineGen = d3.line().x(d => x(d.name)).y(d => y(d.value)).curve(d3.curveMonotoneX); // Smoother line\n\n      svg.append(\"path\").datum(lineData.value).attr(\"fill\", \"none\").attr(\"stroke\", colors[0]).attr(\"stroke-width\", 2).attr(\"d\", lineGen);\n      svg.selectAll(\".dot\").data(lineData.value).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"cx\", d => x(d.name)).attr(\"cy\", d => y(d.value)).attr(\"r\", 3).attr(\"fill\", colors[0]).append(\"title\").text(d => `${d.name}: ${formatNumber(d.value)}`);\n    };\n    const renderStackedChart = () => {\n      // 100% 纵向堆叠条形图\n      if (!stackedContainer.value) {\n        /* console.error(\"renderStackedChart: stackedContainer ref is not available.\"); */return;\n      }\n      const rawDataObject = processedField.value && processedField.value.length === 1 ? processedField.value[0] : {};\n      const seriesNames = Object.keys(rawDataObject).filter(key => typeof rawDataObject[key] === \"number\" && rawDataObject[key] > 0); // Only use keys with positive numeric values\n\n      // console.log(`renderStackedChart for ${props.fieldKey}. Series Names:`, seriesNames, \"Raw Data Obj:\", JSON.parse(JSON.stringify(rawDataObject)));\n\n      d3.select(stackedContainer.value).selectAll(\"*\").remove();\n      if (seriesNames.length === 0) {\n        // console.warn(\"renderStackedChart: No series data to render. Clearing container.\");\n        d3.select(stackedContainer.value).html(`<div class=\"no-data\" style=\"text-align:center;\">-</div>`);\n        return;\n      }\n      const container = d3.select(stackedContainer.value);\n      let width = stackedContainer.value.clientWidth;\n      let height = stackedContainer.value.clientHeight;\n      if (width === 0 || height === 0) {\n        /* width = 300; height = 150; */ /* console.warn(\"Stacked container zero dimensions\"); */return;\n      }\n      const margin = {\n        top: 5,\n        right: 130,\n        bottom: 5,\n        left: 5\n      }; // Minimal margins, legend on right\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      if (chartWidth <= 0 || chartHeight <= 0) {\n        // console.warn(\"renderStackedChart: Chart dimensions are invalid after applying margins.\");\n        d3.select(stackedContainer.value).html(`<div class=\"no-data\" style=\"text-align:center;\">- (Area too small)</div>`);\n        return;\n      }\n      const svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const stack = d3.stack().keys(seriesNames).order(d3.stackOrderAppearance).offset(d3.stackOffsetNone);\n      const stackedSeriesInput = [rawDataObject];\n      let series = stack(stackedSeriesInput);\n      const total = d3.sum(seriesNames, key => rawDataObject[key]);\n      series.forEach(s => {\n        s.forEach(d => {\n          d[0] = total > 0 ? d[0] / total * 100 : 0;\n          d[1] = total > 0 ? d[1] / total * 100 : 0;\n        });\n      });\n      // console.log(\"Normalized D3 Stacked Series for 100%:\", JSON.parse(JSON.stringify(series)));\n\n      const y = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\n      const barCategory = [\"Category\"]; // Single category for the bar\n      const x = d3.scaleBand().domain(barCategory).range([0, chartWidth]).paddingInner(0.7).paddingOuter(0.35); // Adjust padding for single bar width\n\n      svg.append(\"g\").selectAll(\"g\").data(series).join(\"g\").attr(\"fill\", (d, i) => colors[i % colors.length]).selectAll(\"rect\").data(d => d).join(\"rect\").attr(\"x\", x(barCategory[0])).attr(\"y\", d => y(d[1])).attr(\"height\", d => Math.max(0, y(d[0]) - y(d[1]))) // Ensure non-negative height\n      .attr(\"width\", x.bandwidth()).append(\"title\").text((d_rect, i_rect, nodes_rect) => {\n        const seriesData = d3.select(nodes_rect[i_rect].parentNode).datum();\n        const originalValue = rawDataObject[seriesData.key];\n        const percentageOfBar = (y(d_rect[0]) - y(d_rect[1])) / chartHeight * 100;\n        return `${seriesData.key}: ${originalValue.toFixed(1)}% (${percentageOfBar.toFixed(1)}% of bar)`;\n      });\n      const legend = svg.append(\"g\").attr(\"class\", \"legend-stacked\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).attr(\"text-anchor\", \"start\").selectAll(\"g\").data(series).join(\"g\").attr(\"transform\", (d, i) => `translate(${chartWidth + 10},${i * 18 + margin.top})`); // Adjusted spacing\n\n      legend.append(\"rect\").attr(\"x\", 0).attr(\"width\", 12).attr(\"height\", 12).attr(\"fill\", (d, i) => colors[i % colors.length]);\n      legend.append(\"text\").attr(\"x\", 16).attr(\"y\", 6).attr(\"dy\", \"0.32em\").text(d => {\n        const name = d.key;\n        const originalValue = rawDataObject[d.key];\n        return `${name.length > 13 ? name.substring(0, 11) + \"...\" : name} (${originalValue.toFixed(1)}%)`;\n      });\n      // console.log(\"renderStackedChart FINISHED drawing (100% stacked bar).\");\n    };\n    const formatSimpleText = value => {\n      if (value === null || value === undefined) return \"-\";\n      let textToShow;\n      if (Array.isArray(value)) {\n        if (value.length === 0) return \"-\";\n        textToShow = value.map(item => {\n          if (typeof item === \"object\" && item !== null) {\n            let text = String(item.raw || item.value || item.name || \"\");\n            // Avoid appending unit/year if already in raw/value for text-only\n            // if (item.unit && !text.includes(item.unit)) text += ` ${item.unit}`;\n            // if (item.year && !text.includes(String(item.year))) text += ` (${item.year})`;\n            return text;\n          }\n          return String(item);\n        }).join(\"; \");\n      } else if (typeof value === \"object\" && value !== null) {\n        textToShow = String(value.raw || value.value || value.name || \"-\");\n      } else {\n        textToShow = String(value);\n      }\n      return textToShow.length > 70 ? textToShow.substring(0, 67) + \"...\" : textToShow;\n    };\n    const handleTextClick = () => {\n      emit(\"chartClick\", {\n        type: \"text\",\n        data: processedField.value,\n        value: processedField.value\n      });\n    };\n    const handleTextHover = () => {\n      isTextHovered.value = true;\n    };\n    const resetHover = () => {\n      isTextHovered.value = false;\n      hoveredIndex.value = null;\n      activeIndex.value = null;\n    };\n    return {\n      pieContainer,\n      barContainer,\n      lineContainer,\n      stackedContainer,\n      formatSimpleText,\n      handleTextClick,\n      handleTextHover,\n      resetHover,\n      isTextHovered,\n      hasData,\n      isValidPieData // These are used in the template v-if conditions\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","watch","nextTick","d3","props","field","type","Object","Array","String","Number","default","visualization","fieldKey","unifiedMax","emits","setup","_ref","emit","hoveredIndex","activeIndex","isTextHovered","pieContainer","barContainer","lineContainer","stackedContainer","colors","remainderColor","fixedStackedChartRawData","value","raw","safeToNumber","undefined","isNaN","cleanedString","replace","percentMatch","match","parseFloat","num","processedField","dataForStack","nameValueRegex","forEach","item","name","trim","keys","length","processItem","itemInput","rawText","split","unit","year","currency","JSON","stringify","result","isArray","map","filter","hasData","data","isValidPieData","valid","every","isYearEntry","select","selectAll","remove","renderPieChart","renderBarChart","renderLineChart","renderStackedChart","containerRef","html","immediate","deep","trimmedValue","test","formatNumber","toFixed","isInteger","pieData","index","container","containerWidth","clientWidth","containerHeight","clientHeight","size","Math","min","radius","svg","append","attr","isSingleValue","dataForPieDisplay","color","max","isRemainder","d","i","pieGen","pie","sort","arcGen","arc","innerRadius","outerRadius","cornerRadius","tooltip","style","enter","on","event","transition","duration","mouseX","mouseY","pointer","text","legendContainer","legendItemSize","legendSpacing","legendPaddingRight","legendPaddingTop","maxTextW","tempTextMeasure","node","getComputedTextLength","legendItemTotalW","legend","join","substring","simpleBarData","width","height","margin","top","right","bottom","some","left","chartWidth","chartHeight","x","scaleBand","domain","range","padding","yValues","yMin","yMax","y","scaleLinear","nice","call","axisLeft","ticks","tickFormat","axisBottom","bandwidth","abs","lineData","originalIndex","scalePoint","extent","lineGen","line","curve","curveMonotoneX","datum","rawDataObject","seriesNames","key","stack","order","stackOrderAppearance","offset","stackOffsetNone","stackedSeriesInput","series","total","sum","s","barCategory","paddingInner","paddingOuter","d_rect","i_rect","nodes_rect","seriesData","parentNode","originalValue","percentageOfBar","formatSimpleText","textToShow","handleTextClick","handleTextHover","resetHover"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData && isValidPieData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"pieContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"barContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"lineContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 堆叠图 (100%纵向堆叠) -->\r\n\t\t<template v-else-if=\"visualization === 'stacked-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"stackedContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\t\t<!-- 默认显示 (理论上所有类型都应被上面覆盖) -->\r\n\t\t<template v-else>\r\n\t\t\t<div class=\"simple-text\">未知图表类型: {{ visualization }}</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { computed, ref, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tfield: {\r\n\t\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\t// e.g., \"percentage\", \"number\", \"text\"\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tvisualization: {\r\n\t\t\t\t// e.g., \"pie-chart\", \"bar-chart\", \"text-only\"\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tfieldKey: {\r\n\t\t\t\t// e.g., \"GDP\", \"Export goods\", \"GDP rank\"\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunifiedMax: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"chartClick\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst hoveredIndex = ref(null); // Used by some chart interactions\r\n\t\t\tconst activeIndex = ref(null); // Used by some chart interactions\r\n\t\t\tconst isTextHovered = ref(false); // For text-only tooltip\r\n\r\n\t\t\t// DOM element references for D3\r\n\t\t\tconst pieContainer = ref(null);\r\n\t\t\tconst barContainer = ref(null);\r\n\t\t\tconst lineContainer = ref(null);\r\n\t\t\tconst stackedContainer = ref(null);\r\n\r\n\t\t\t// Color palette for charts\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#3498db\",\r\n\t\t\t\t\"#e74c3c\",\r\n\t\t\t\t\"#2ecc71\",\r\n\t\t\t\t\"#f39c12\",\r\n\t\t\t\t\"#9b59b6\",\r\n\t\t\t\t\"#1abc9c\",\r\n\t\t\t\t\"#d35400\",\r\n\t\t\t\t\"#8e44ad\",\r\n\t\t\t\t\"#c0392b\",\r\n\t\t\t\t\"#7f8c8d\"\r\n\t\t\t];\r\n\t\t\tconst remainderColor = \"#f0f0f0\"; // For single-value pie charts\r\n\r\n\t\t\t// Fixed data for 'stacked-chart' (Export goods for South Korea)\r\n\t\t\tconst fixedStackedChartRawData = [\r\n\t\t\t\t{ value: 15.35, raw: \"Integrated Circuits 15.35%\" },\r\n\t\t\t\t{ value: 12.81, raw: \"Machinery 12.81%\" },\r\n\t\t\t\t{ value: 11.34, raw: \"Vehicles and their parts 11.34%\" },\r\n\t\t\t\t{ value: 7.01, raw: \"Mineral Fuels 7.01%\" },\r\n\t\t\t\t{ value: 5.86, raw: \"Plastics 5.86%\" },\r\n\t\t\t\t{ value: 4.23, raw: \"Iron and Steel 4.23%\" },\r\n\t\t\t\t{ value: 4.16, raw: \"Instruments and Apparatus 4.16%\" },\r\n\t\t\t\t{ value: 3.85, raw: \"Organic Chemicals 3.85%\" },\r\n\t\t\t\t{ value: 35.39, raw: \"Others 35.39%\" }\r\n\t\t\t];\r\n\r\n\t\t\t// Helper to safely convert values to numbers for charts\r\n\t\t\tconst safeToNumber = value => {\r\n\t\t\t\tif (value === null || value === undefined) return 0;\r\n\t\t\t\tif (typeof value === \"number\" && !isNaN(value)) return value; // Ensure it's not NaN\r\n\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\tconst cleanedString = value.replace(/[,亿万千]/g, \"\"); // Remove common non-numeric chars for parsing\r\n\t\t\t\t\tconst percentMatch = cleanedString.match(/(-?[\\d.]+)\\s*%/);\r\n\t\t\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\t\t\tconst num = parseFloat(cleanedString);\r\n\t\t\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t\t\t}\r\n\t\t\t\t// console.warn(\"safeToNumber could not parse:\", value, \"returning 0\");\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\r\n\t\t\t// Processes props.field into a consistent format for different chart types\r\n\t\t\tconst processedField = computed(() => {\r\n\t\t\t\t// console.log(`processedField: START for ${props.fieldKey} (${props.visualization}), props.field:`, JSON.parse(JSON.stringify(props.field)));\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\tconst dataForStack = {};\r\n\t\t\t\t\tconst nameValueRegex =\r\n\t\t\t\t\t\t/^([a-zA-Z\\s&().]+[\\sa-zA-Z&().-]*?)\\s*([\\d.]+%)$/; // Allow hyphen in name\r\n\t\t\t\t\tfixedStackedChartRawData.forEach(item => {\r\n\t\t\t\t\t\tif (typeof item.raw !== \"string\") return;\r\n\t\t\t\t\t\tconst match = item.raw.match(nameValueRegex);\r\n\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\tconst name = match[1].trim();\r\n\t\t\t\t\t\t\tconst value = parseFloat(match[2]);\r\n\t\t\t\t\t\t\tif (!isNaN(value)) dataForStack[name] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// console.log(`processedField: STACKED data prepared for D3 stack:`, dataForStack);\r\n\t\t\t\t\treturn Object.keys(dataForStack).length > 0 ? [dataForStack] : []; // Ensure it's an array, even if empty object led to empty keys\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (props.field === null || props.field === undefined) {\r\n\t\t\t\t\t// console.log(`processedField: props.field is null/undefined for ${props.fieldKey}`);\r\n\t\t\t\t\treturn props.visualization === \"text-only\" ? null : []; // text can be null, others expect array\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst processItem = itemInput => {\r\n\t\t\t\t\tif (typeof itemInput !== \"object\" || itemInput === null) {\r\n\t\t\t\t\t\t// Handle primitive values directly, especially for text-only or if data is simple\r\n\t\t\t\t\t\tconst rawText = String(itemInput);\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: rawText.split(/[:%（(]/)[0].trim() || \"Item\", // Basic name extraction\r\n\t\t\t\t\t\t\tvalue: props.type !== \"text\" ? safeToNumber(rawText) : rawText, // Convert to number unless it's text type\r\n\t\t\t\t\t\t\traw: rawText,\r\n\t\t\t\t\t\t\tunit: undefined,\r\n\t\t\t\t\t\t\ttype: props.type,\r\n\t\t\t\t\t\t\tyear: undefined,\r\n\t\t\t\t\t\t\tcurrency: undefined\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Item is an object\r\n\t\t\t\t\tconst name =\r\n\t\t\t\t\t\titemInput.name ||\r\n\t\t\t\t\t\t(typeof itemInput.raw === \"string\"\r\n\t\t\t\t\t\t\t? String(itemInput.raw)\r\n\t\t\t\t\t\t\t\t\t.split(/[:%（(]/)[0]\r\n\t\t\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t: \"Item\");\r\n\t\t\t\t\tlet value;\r\n\t\t\t\t\tif (props.type === \"text\" || props.visualization === \"text-only\") {\r\n\t\t\t\t\t\tvalue =\r\n\t\t\t\t\t\t\titemInput.value !== undefined\r\n\t\t\t\t\t\t\t\t? String(itemInput.value)\r\n\t\t\t\t\t\t\t\t: String(itemInput.raw);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalue = safeToNumber(\r\n\t\t\t\t\t\t\titemInput.value !== undefined ? itemInput.value : itemInput.raw\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: name || \"Unknown\", // Ensure name exists\r\n\t\t\t\t\t\tvalue: value, // Value is processed\r\n\t\t\t\t\t\traw: String(\r\n\t\t\t\t\t\t\titemInput.raw ||\r\n\t\t\t\t\t\t\t\titemInput.value ||\r\n\t\t\t\t\t\t\t\tJSON.stringify(itemInput) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t), // Ensure raw is string\r\n\t\t\t\t\t\tunit: itemInput.unit,\r\n\t\t\t\t\t\ttype: itemInput.type || props.type, // Prefer item's type, fallback to prop\r\n\t\t\t\t\t\tyear: itemInput.year,\r\n\t\t\t\t\t\tcurrency: itemInput.currency\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet result;\r\n\t\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\t\tresult = props.field\r\n\t\t\t\t\t\t.map(processItem)\r\n\t\t\t\t\t\t.filter(item => item !== null && item.raw.trim() !== \"\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Single object or primitive\r\n\t\t\t\t\tresult = processItem(props.field);\r\n\t\t\t\t\t// For non-array results that aren't for text-only, wrap in array if it's an object\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.visualization !== \"text-only\" &&\r\n\t\t\t\t\t\ttypeof result === \"object\" &&\r\n\t\t\t\t\t\tresult !== null\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tresult = [result];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(`processedField: END for ${props.fieldKey} (${props.visualization}), result:`, JSON.parse(JSON.stringify(result)));\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t\t// Determines if there's valid data to render a chart\r\n\t\t\tconst hasData = computed(() => {\r\n\t\t\t\tconst data = processedField.value;\r\n\t\t\t\t// console.log(`hasData check for ${props.fieldKey} (${props.visualization}): processedField.value =`, JSON.parse(JSON.stringify(data)));\r\n\t\t\t\tif (data === null || data === undefined) return false;\r\n\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tArray.isArray(data) &&\r\n\t\t\t\t\t\tdata.length === 1 &&\r\n\t\t\t\t\t\ttypeof data[0] === \"object\" &&\r\n\t\t\t\t\t\tObject.keys(data[0]).length > 0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(data)) {\r\n\t\t\t\t\treturn data.length > 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t// Single object (can happen for text-only if props.field was an object)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tObject.keys(data).length > 0 &&\r\n\t\t\t\t\t\tdata.raw !== undefined &&\r\n\t\t\t\t\t\tString(data.raw).trim() !== \"\" &&\r\n\t\t\t\t\t\tString(data.raw).trim() !== \"-\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// Primitives for text-only\r\n\t\t\t\treturn String(data).trim().length > 0 && String(data).trim() !== \"-\";\r\n\t\t\t});\r\n\r\n\t\t\t// Specific validation for pie chart data\r\n\t\t\tconst isValidPieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\" || !hasData.value) return false;\r\n\t\t\t\tconst data = processedField.value; // Already processed\r\n\t\t\t\tif (!Array.isArray(data) || data.length === 0) return false;\r\n\t\t\t\tconst valid = data.every(\r\n\t\t\t\t\titem =>\r\n\t\t\t\t\t\titem && // item exists\r\n\t\t\t\t\t\ttypeof item.name === \"string\" &&\r\n\t\t\t\t\t\ttypeof item.value === \"number\" &&\r\n\t\t\t\t\t\t!isNaN(item.value) && // value is a valid number\r\n\t\t\t\t\t\t!isYearEntry(item.name) &&\r\n\t\t\t\t\t\t!isYearEntry(item.raw) // Check raw for year entries too\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(`isValidPieData for ${props.fieldKey}: ${valid}`, JSON.parse(JSON.stringify(data)));\r\n\t\t\t\treturn valid;\r\n\t\t\t});\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\t// console.log(`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`);\r\n\t\t\t\twatch(\r\n\t\t\t\t\t() => [props.visualization, props.fieldKey, props.field, props.type], // Watch all relevant props\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// console.log(`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, Type: ${props.type}, HasData: ${hasData.value}`);\r\n\t\t\t\t\t\t// if (props.visualization === 'stacked-chart') {\r\n\t\t\t\t\t\t//      console.log(\"SimpleChart WATCH - Processed field for STACKED chart:\", JSON.parse(JSON.stringify(processedField.value)));\r\n\t\t\t\t\t\t// } else if (props.fieldKey === \"GDP rank\") {\r\n\t\t\t\t\t\t//      console.log(`SimpleChart WATCH - Processed field for GDP rank:`, JSON.parse(JSON.stringify(processedField.value)));\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\t\t// Clear previous chart before drawing new one\r\n\t\t\t\t\t\t\tif (pieContainer.value)\r\n\t\t\t\t\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\t\t\tif (barContainer.value)\r\n\t\t\t\t\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\t\t\tif (lineContainer.value)\r\n\t\t\t\t\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\t\t\tif (stackedContainer.value)\r\n\t\t\t\t\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value &&\r\n\t\t\t\t\t\t\t\tisValidPieData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t// isValidPieData added\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions MET for renderPieChart (${props.fieldKey}).`);\r\n\t\t\t\t\t\t\t\trenderPieChart();\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"bar-chart\" && hasData.value) {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions MET for renderBarChart (${props.fieldKey}).`);\r\n\t\t\t\t\t\t\t\trenderBarChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"line-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions MET for renderLineChart (${props.fieldKey}).`);\r\n\t\t\t\t\t\t\t\trenderLineChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"stacked-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions MET for renderStackedChart (${props.fieldKey}).`);\r\n\t\t\t\t\t\t\t\trenderStackedChart();\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"text-only\") {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: TEXT-ONLY display for ${props.fieldKey}. Data:`, JSON.parse(JSON.stringify(processedField.value)));\r\n\t\t\t\t\t\t\t\t// No explicit render function, template handles it\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}, IsValidPie: ${props.visualization === 'pie-chart' ? isValidPieData.value : 'N/A'}`);\r\n\t\t\t\t\t\t\t\t// Optionally display a \"no data\" message in the container if it's not text-only\r\n\t\t\t\t\t\t\t\tconst containerRef =\r\n\t\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\"\r\n\t\t\t\t\t\t\t\t\t\t? pieContainer\r\n\t\t\t\t\t\t\t\t\t\t: props.visualization === \"bar-chart\"\r\n\t\t\t\t\t\t\t\t\t\t? barContainer\r\n\t\t\t\t\t\t\t\t\t\t: props.visualization === \"line-chart\"\r\n\t\t\t\t\t\t\t\t\t\t? lineContainer\r\n\t\t\t\t\t\t\t\t\t\t: props.visualization === \"stacked-chart\"\r\n\t\t\t\t\t\t\t\t\t\t? stackedContainer\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tif (containerRef && containerRef.value) {\r\n\t\t\t\t\t\t\t\t\td3.select(containerRef.value).html(\r\n\t\t\t\t\t\t\t\t\t\t`<div class=\"no-data\" style=\"text-align:center; width:100%;\">-</div>`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst isYearEntry = value => {\r\n\t\t\t\t// Helper to filter out year-only entries\r\n\t\t\t\tif (typeof value !== \"string\") return false;\r\n\t\t\t\tconst trimmedValue = value.trim();\r\n\t\t\t\treturn (\r\n\t\t\t\t\t/^(\\(\\d{4}\\)|\\d{4}\\s*est\\.?)$/i.test(trimmedValue) ||\r\n\t\t\t\t\t/^\\(?[FY]+\\s*\\d{4}\\)?/i.test(trimmedValue)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\t// Number formatting function\r\n\t\t\tconst formatNumber = value => {\r\n\t\t\t\t// console.log(`formatNumber called with value: \"${value}\", props.type: \"${props.type}\" for fieldKey: \"${props.fieldKey}\"`);\r\n\t\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\t\t// console.warn(\"formatNumber received undefined or null value.\");\r\n\t\t\t\t\treturn \"-\";\r\n\t\t\t\t}\r\n\t\t\t\tconst num = Number(value); // Try to convert, handles strings like \"123.45\"\r\n\t\t\t\tif (isNaN(num)) {\r\n\t\t\t\t\t// console.warn(`formatNumber: Could not convert '${value}' to a valid number. Returning as is or \"-\" if not displayable.`);\r\n\t\t\t\t\t// For text that couldn't be converted, return the original string if it's not just noise\r\n\t\t\t\t\treturn typeof value === \"string\" &&\r\n\t\t\t\t\t\tvalue.trim() !== \"\" &&\r\n\t\t\t\t\t\tvalue.trim() !== \"-\"\r\n\t\t\t\t\t\t? value\r\n\t\t\t\t\t\t: \"-\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (props.type === \"percentage\") return num.toFixed(1) + \"%\";\r\n\t\t\t\tif (num >= 1e8) return (num / 1e8).toFixed(2) + \"亿\";\r\n\t\t\t\tif (num >= 1e4) return (num / 1e4).toFixed(1) + \"万\";\r\n\t\t\t\tif (Number.isInteger(num)) return num.toFixed(0); // No decimals for integers\r\n\t\t\t\treturn num.toFixed(1); // Default to 1 decimal for other numbers\r\n\t\t\t};\r\n\r\n\t\t\t// Pie chart data pre-processing\r\n\t\t\tconst pieData = computed(() => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tprops.visualization !== \"pie-chart\" ||\r\n\t\t\t\t\t!hasData.value ||\r\n\t\t\t\t\t!Array.isArray(processedField.value)\r\n\t\t\t\t)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\treturn processedField.value\r\n\t\t\t\t\t.map((item, index) => ({\r\n\t\t\t\t\t\tname: String(item.name || \"Unknown\"),\r\n\t\t\t\t\t\tvalue: typeof item.value === \"number\" ? item.value : 0, // Ensure value is number\r\n\t\t\t\t\t\traw: String(item.raw || \"\"),\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.filter(item => !isYearEntry(item.raw) && item.value > 0); // Filter out year entries and zero/negative values for pie\r\n\t\t\t});\r\n\r\n\t\t\tconst renderPieChart = () => {\r\n\t\t\t\tif (!pieContainer.value) {\r\n\t\t\t\t\t/* console.error(\"Pie container not found\"); */ return;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(`renderPieChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(pieData.value)));\r\n\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove(); // Clear previous\r\n\t\t\t\tif (!pieData.value || pieData.value.length === 0) {\r\n\t\t\t\t\td3.select(pieContainer.value).html(`<div class=\"no-data\">-</div>`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst container = d3.select(pieContainer.value);\r\n\t\t\t\tconst containerWidth = pieContainer.value.clientWidth;\r\n\t\t\t\tconst containerHeight = pieContainer.value.clientHeight;\r\n\t\t\t\tconst size = Math.min(containerWidth, containerHeight) * 0.95; // Slightly smaller\r\n\t\t\t\tconst radius = size / 2;\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${size} ${size}`) // Centered viewport\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${radius},${radius})`);\r\n\r\n\t\t\t\tconst isSingleValue = props.fieldKey === \"Inflation (CPI)\"; // Or based on data length if only one item after filtering\r\n\t\t\t\tconst dataForPieDisplay =\r\n\t\t\t\t\tisSingleValue && pieData.value.length === 1\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t{ ...pieData.value[0], color: colors[0] },\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvalue: Math.max(0, 100 - pieData.value[0].value),\r\n\t\t\t\t\t\t\t\t\tname: \"剩余\",\r\n\t\t\t\t\t\t\t\t\tcolor: remainderColor,\r\n\t\t\t\t\t\t\t\t\tisRemainder: true\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: pieData.value.map((d, i) => ({\r\n\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\tcolor: colors[i % colors.length]\r\n\t\t\t\t\t\t  }));\r\n\r\n\t\t\t\tconst pieGen = d3\r\n\t\t\t\t\t.pie()\r\n\t\t\t\t\t.value(d => d.value)\r\n\t\t\t\t\t.sort(null);\r\n\t\t\t\tconst arcGen = d3\r\n\t\t\t\t\t.arc()\r\n\t\t\t\t\t.innerRadius(isSingleValue ? radius * 0.7 : 0)\r\n\t\t\t\t\t.outerRadius(radius * 0.9)\r\n\t\t\t\t\t.cornerRadius(3); // Donut for single value\r\n\t\t\t\tconst tooltip = d3\r\n\t\t\t\t\t.select(pieContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"d3-tooltip\")\r\n\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".arc-group\")\r\n\t\t\t\t\t.data(pieGen(dataForPieDisplay))\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"arc-group\")\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arcGen)\r\n\t\t\t\t\t.attr(\"fill\", d => d.data.color)\r\n\t\t\t\t\t.style(\"opacity\", d => (d.data.isRemainder ? 0.5 : 0.9))\r\n\t\t\t\t\t.style(\"stroke\", \"#fff\")\r\n\t\t\t\t\t.style(\"stroke-width\", 1.5)\r\n\t\t\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(150)\r\n\t\t\t\t\t\t\t.style(\"opacity\", 1)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1.03)\");\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"visibility\", \"visible\")\r\n\t\t\t\t\t\t\t.html(\r\n\t\t\t\t\t\t\t\t`<strong>${d.data.name}</strong>: ${d.data.value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mousemove\", function (event) {\r\n\t\t\t\t\t\tconst [mouseX, mouseY] = d3.pointer(event, pieContainer.value); // Position relative to container\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"top\", mouseY + 15 + \"px\")\r\n\t\t\t\t\t\t\t.style(\"left\", mouseX + 15 + \"px\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(150)\r\n\t\t\t\t\t\t\t.style(\"opacity\", 0.9)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1)\");\r\n\t\t\t\t\t\ttooltip.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"click\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\t\t\tindex: d.index,\r\n\t\t\t\t\t\t\tdata: d.data,\r\n\t\t\t\t\t\t\tvalue: d.data.value\r\n\t\t\t\t\t\t}); // d.index from original pieData map\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (isSingleValue && pieData.value.length === 1) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.attr(\"dy\", \".3em\")\r\n\t\t\t\t\t\t.text(\r\n\t\t\t\t\t\t\t`${pieData.value[0].value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"font-size\", `${Math.max(12, radius * 0.25)}px`)\r\n\t\t\t\t\t\t.style(\"fill\", \"#333\")\r\n\t\t\t\t\t\t.style(\"font-weight\", \"bold\");\r\n\t\t\t\t} else if (!isSingleValue && pieData.value.length > 1) {\r\n\t\t\t\t\t// Legend for multi-value pie chart\r\n\t\t\t\t\tconst legendContainer = d3.select(pieContainer.value).select(\"svg\"); // Attach to SVG, not the 'g'\r\n\t\t\t\t\tconst legendItemSize = 10,\r\n\t\t\t\t\t\tlegendSpacing = 3,\r\n\t\t\t\t\t\tlegendPaddingRight = 5,\r\n\t\t\t\t\t\tlegendPaddingTop = 5;\r\n\t\t\t\t\tlet maxTextW = 0;\r\n\t\t\t\t\tconst tempTextMeasure = d3\r\n\t\t\t\t\t\t.select(\"body\")\r\n\t\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t\t.attr(\"class\", \"temp-text-measure\")\r\n\t\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\tdataForPieDisplay\r\n\t\t\t\t\t\t.filter(d => !d.isRemainder)\r\n\t\t\t\t\t\t.forEach(d => {\r\n\t\t\t\t\t\t\tmaxTextW = Math.max(\r\n\t\t\t\t\t\t\t\tmaxTextW,\r\n\t\t\t\t\t\t\t\ttempTextMeasure\r\n\t\t\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t\t\t.text(`${d.name} (${d.value.toFixed(1)}%)`)\r\n\t\t\t\t\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t\t\t\t\t.node()\r\n\t\t\t\t\t\t\t\t\t.getComputedTextLength()\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\ttempTextMeasure.remove();\r\n\t\t\t\t\tconst legendItemTotalW =\r\n\t\t\t\t\t\tlegendItemSize + legendSpacing + maxTextW + legendPaddingRight;\r\n\r\n\t\t\t\t\tconst legend = legendContainer\r\n\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"class\", \"legend-pie\")\r\n\t\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t\t.data(dataForPieDisplay.filter(d => !d.isRemainder))\r\n\t\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t\t(d, i) =>\r\n\t\t\t\t\t\t\t\t`translate(${size - legendItemTotalW}, ${\r\n\t\t\t\t\t\t\t\t\tlegendPaddingTop + i * (legendItemSize + legendSpacing + 2)\r\n\t\t\t\t\t\t\t\t})`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\tlegend\r\n\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"width\", legendItemSize)\r\n\t\t\t\t\t\t.attr(\"height\", legendItemSize)\r\n\t\t\t\t\t\t.attr(\"fill\", d => d.color);\r\n\t\t\t\t\tlegend\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"x\", legendItemSize + legendSpacing)\r\n\t\t\t\t\t\t.attr(\"y\", legendItemSize / 2)\r\n\t\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t\t.text(\r\n\t\t\t\t\t\t\td =>\r\n\t\t\t\t\t\t\t\t`${d.name.substring(0, 15)}${\r\n\t\t\t\t\t\t\t\t\td.name.length > 15 ? \"...\" : \"\"\r\n\t\t\t\t\t\t\t\t} (${d.value.toFixed(1)}%)`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t\t.style(\"fill\", \"#333\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Bar chart data pre-processing\r\n\t\t\tconst simpleBarData = computed(() => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tprops.visualization !== \"bar-chart\" ||\r\n\t\t\t\t\t!hasData.value ||\r\n\t\t\t\t\t!Array.isArray(processedField.value)\r\n\t\t\t\t)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\treturn processedField.value\r\n\t\t\t\t\t.map((item, index) => ({\r\n\t\t\t\t\t\tname: String(item.name || `Bar ${index + 1}`),\r\n\t\t\t\t\t\tvalue: typeof item.value === \"number\" ? item.value : 0,\r\n\t\t\t\t\t\traw: String(item.raw || \"\"),\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.filter(item => !isYearEntry(item.raw));\r\n\t\t\t});\r\n\r\n\t\t\tconst renderBarChart = () => {\r\n\t\t\t\tif (!barContainer.value) {\r\n\t\t\t\t\t/* console.error(\"Bar container not found\"); */ return;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(`renderBarChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(simpleBarData.value)));\r\n\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!simpleBarData.value || simpleBarData.value.length === 0) {\r\n\t\t\t\t\td3.select(barContainer.value).html(`<div class=\"no-data\">-</div>`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst container = d3.select(barContainer.value);\r\n\t\t\t\tconst width = barContainer.value.clientWidth;\r\n\t\t\t\tconst height = barContainer.value.clientHeight;\r\n\t\t\t\tconst margin = {\r\n\t\t\t\t\ttop: 10,\r\n\t\t\t\t\tright: 10,\r\n\t\t\t\t\tbottom:\r\n\t\t\t\t\t\t25 + (simpleBarData.value.some(d => d.name.length > 7) ? 10 : 0),\r\n\t\t\t\t\tleft: 35\r\n\t\t\t\t}; // Adjust bottom for long labels\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\t/* console.warn(\"Bar chart area too small\"); */ d3.select(\r\n\t\t\t\t\t\tbarContainer.value\r\n\t\t\t\t\t).html(`<div class=\"no-data\">- (Area too small)</div>`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(simpleBarData.value.map(d => d.name))\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.2);\r\n\r\n\t\t\t\tconst yValues = simpleBarData.value.map(d => d.value);\r\n\t\t\t\tconst yMin = d3.min(yValues);\r\n\t\t\t\tconst yMax = d3.max(yValues);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([\r\n\t\t\t\t\t\tyMin < 0 ? yMin * 1.1 : 0,\r\n\t\t\t\t\t\tyMax > 0 ? yMax * 1.1 : props.unifiedMax || 10\r\n\t\t\t\t\t]) // Handle all zero/negative/positive cases\r\n\t\t\t\t\t.nice()\r\n\t\t\t\t\t.range([chartHeight, 0]);\r\n\r\n\t\t\t\tsvg.append(\"g\").call(\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.axisLeft(y)\r\n\t\t\t\t\t\t.ticks(5)\r\n\t\t\t\t\t\t.tickFormat(d => formatNumber(d))\r\n\t\t\t\t);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${chartHeight})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-30)\");\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name))\r\n\t\t\t\t\t.attr(\"y\", d => (d.value >= 0 ? y(d.value) : y(0))) // Handle negative values for y\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"height\", d => Math.abs(y(d.value) - y(0))) // Absolute height\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.style(\"opacity\", 0.8)\r\n\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t.text(d => `${d.name}: ${formatNumber(d.value)}`);\r\n\r\n\t\t\t\t// Optional: Value labels on top of bars\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar-value-label\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"bar-value-label\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name) + x.bandwidth() / 2)\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value) - 3)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.style(\"font-size\", \"9px\")\r\n\t\t\t\t\t.style(\"fill\", \"#444\")\r\n\t\t\t\t\t.text(d => formatNumber(d.value));\r\n\t\t\t};\r\n\r\n\t\t\t// Line chart data pre-processing\r\n\t\t\tconst lineData = computed(() => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tprops.visualization !== \"line-chart\" ||\r\n\t\t\t\t\t!hasData.value ||\r\n\t\t\t\t\t!Array.isArray(processedField.value)\r\n\t\t\t\t)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\treturn processedField.value\r\n\t\t\t\t\t.map((item, index) => ({\r\n\t\t\t\t\t\tname: String(item.name || `Point ${index + 1}`), // Name might be year or category\r\n\t\t\t\t\t\tvalue: typeof item.value === \"number\" ? item.value : 0,\r\n\t\t\t\t\t\traw: String(item.raw || \"\"),\r\n\t\t\t\t\t\toriginalIndex: index // Keep original index if needed for x-axis from name\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.filter(item => !isYearEntry(item.raw));\r\n\t\t\t});\r\n\r\n\t\t\tconst renderLineChart = () => {\r\n\t\t\t\tif (!lineContainer.value) {\r\n\t\t\t\t\t/* console.error(\"Line container not found\"); */ return;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(`renderLineChart for ${props.fieldKey}, data:`, JSON.parse(JSON.stringify(lineData.value)));\r\n\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!lineData.value || lineData.value.length < 1) {\r\n\t\t\t\t\t// Line chart needs at least 1 point, ideally 2+\r\n\t\t\t\t\td3.select(lineContainer.value).html(`<div class=\"no-data\">-</div>`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst container = d3.select(lineContainer.value);\r\n\t\t\t\tconst width = lineContainer.value.clientWidth;\r\n\t\t\t\tconst height = lineContainer.value.clientHeight;\r\n\t\t\t\tconst margin = {\r\n\t\t\t\t\ttop: 10,\r\n\t\t\t\t\tright: 20,\r\n\t\t\t\t\tbottom: 25 + (lineData.value.some(d => d.name.length > 7) ? 10 : 0),\r\n\t\t\t\t\tleft: 40\r\n\t\t\t\t};\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\t/* console.warn(\"Line chart area too small\"); */ d3.select(\r\n\t\t\t\t\t\tlineContainer.value\r\n\t\t\t\t\t).html(`<div class=\"no-data\">- (Area too small)</div>`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// X scale: can be index-based or based on 'name' if names are ordered categories/years\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scalePoint() // Use scalePoint if names are categories\r\n\t\t\t\t\t.domain(lineData.value.map(d => d.name))\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.5);\r\n\r\n\t\t\t\tconst yValues = lineData.value.map(d => d.value);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain(d3.extent(yValues)) // Use extent for min/max\r\n\t\t\t\t\t.nice()\r\n\t\t\t\t\t.range([chartHeight, 0]);\r\n\r\n\t\t\t\tsvg.append(\"g\").call(\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.axisLeft(y)\r\n\t\t\t\t\t\t.ticks(5)\r\n\t\t\t\t\t\t.tickFormat(d => formatNumber(d))\r\n\t\t\t\t);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${chartHeight})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-30)\");\r\n\r\n\t\t\t\tconst lineGen = d3\r\n\t\t\t\t\t.line()\r\n\t\t\t\t\t.x(d => x(d.name))\r\n\t\t\t\t\t.y(d => y(d.value))\r\n\t\t\t\t\t.curve(d3.curveMonotoneX); // Smoother line\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.datum(lineData.value)\r\n\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t.attr(\"stroke\", colors[0])\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.attr(\"d\", lineGen);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".dot\")\r\n\t\t\t\t\t.data(lineData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"class\", \"dot\")\r\n\t\t\t\t\t.attr(\"cx\", d => x(d.name))\r\n\t\t\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t\t.attr(\"fill\", colors[0])\r\n\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t.text(d => `${d.name}: ${formatNumber(d.value)}`);\r\n\t\t\t};\r\n\r\n\t\t\tconst renderStackedChart = () => {\r\n\t\t\t\t// 100% 纵向堆叠条形图\r\n\t\t\t\tif (!stackedContainer.value) {\r\n\t\t\t\t\t/* console.error(\"renderStackedChart: stackedContainer ref is not available.\"); */ return;\r\n\t\t\t\t}\r\n\t\t\t\tconst rawDataObject =\r\n\t\t\t\t\tprocessedField.value && processedField.value.length === 1\r\n\t\t\t\t\t\t? processedField.value[0]\r\n\t\t\t\t\t\t: {};\r\n\t\t\t\tconst seriesNames = Object.keys(rawDataObject).filter(\r\n\t\t\t\t\tkey =>\r\n\t\t\t\t\t\ttypeof rawDataObject[key] === \"number\" && rawDataObject[key] > 0\r\n\t\t\t\t); // Only use keys with positive numeric values\r\n\r\n\t\t\t\t// console.log(`renderStackedChart for ${props.fieldKey}. Series Names:`, seriesNames, \"Raw Data Obj:\", JSON.parse(JSON.stringify(rawDataObject)));\r\n\r\n\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (seriesNames.length === 0) {\r\n\t\t\t\t\t// console.warn(\"renderStackedChart: No series data to render. Clearing container.\");\r\n\t\t\t\t\td3.select(stackedContainer.value).html(\r\n\t\t\t\t\t\t`<div class=\"no-data\" style=\"text-align:center;\">-</div>`\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst container = d3.select(stackedContainer.value);\r\n\t\t\t\tlet width = stackedContainer.value.clientWidth;\r\n\t\t\t\tlet height = stackedContainer.value.clientHeight;\r\n\t\t\t\tif (width === 0 || height === 0) {\r\n\t\t\t\t\t/* width = 300; height = 150; */ /* console.warn(\"Stacked container zero dimensions\"); */ return;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst margin = { top: 5, right: 130, bottom: 5, left: 5 }; // Minimal margins, legend on right\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\t// console.warn(\"renderStackedChart: Chart dimensions are invalid after applying margins.\");\r\n\t\t\t\t\td3.select(stackedContainer.value).html(\r\n\t\t\t\t\t\t`<div class=\"no-data\" style=\"text-align:center;\">- (Area too small)</div>`\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst stack = d3\r\n\t\t\t\t\t.stack()\r\n\t\t\t\t\t.keys(seriesNames)\r\n\t\t\t\t\t.order(d3.stackOrderAppearance)\r\n\t\t\t\t\t.offset(d3.stackOffsetNone);\r\n\t\t\t\tconst stackedSeriesInput = [rawDataObject];\r\n\t\t\t\tlet series = stack(stackedSeriesInput);\r\n\r\n\t\t\t\tconst total = d3.sum(seriesNames, key => rawDataObject[key]);\r\n\t\t\t\tseries.forEach(s => {\r\n\t\t\t\t\ts.forEach(d => {\r\n\t\t\t\t\t\td[0] = total > 0 ? (d[0] / total) * 100 : 0;\r\n\t\t\t\t\t\td[1] = total > 0 ? (d[1] / total) * 100 : 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(\"Normalized D3 Stacked Series for 100%:\", JSON.parse(JSON.stringify(series)));\r\n\r\n\t\t\t\tconst y = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\r\n\t\t\t\tconst barCategory = [\"Category\"]; // Single category for the bar\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(barCategory)\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.paddingInner(0.7)\r\n\t\t\t\t\t.paddingOuter(0.35); // Adjust padding for single bar width\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series)\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(d => d)\r\n\t\t\t\t\t.join(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", x(barCategory[0]))\r\n\t\t\t\t\t.attr(\"y\", d => y(d[1]))\r\n\t\t\t\t\t.attr(\"height\", d => Math.max(0, y(d[0]) - y(d[1]))) // Ensure non-negative height\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t.text((d_rect, i_rect, nodes_rect) => {\r\n\t\t\t\t\t\tconst seriesData = d3.select(nodes_rect[i_rect].parentNode).datum();\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[seriesData.key];\r\n\t\t\t\t\t\tconst percentageOfBar =\r\n\t\t\t\t\t\t\t((y(d_rect[0]) - y(d_rect[1])) / chartHeight) * 100;\r\n\t\t\t\t\t\treturn `${seriesData.key}: ${originalValue.toFixed(\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t)}% (${percentageOfBar.toFixed(1)}% of bar)`;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"legend-stacked\")\r\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\r\n\t\t\t\t\t.attr(\"font-size\", 10)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series)\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t(d, i) => `translate(${chartWidth + 10},${i * 18 + margin.top})`\r\n\t\t\t\t\t); // Adjusted spacing\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", 0)\r\n\t\t\t\t\t.attr(\"width\", 12)\r\n\t\t\t\t\t.attr(\"height\", 12)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length]);\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", 16)\r\n\t\t\t\t\t.attr(\"y\", 6)\r\n\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t.text(d => {\r\n\t\t\t\t\t\tconst name = d.key;\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[d.key];\r\n\t\t\t\t\t\treturn `${\r\n\t\t\t\t\t\t\tname.length > 13 ? name.substring(0, 11) + \"...\" : name\r\n\t\t\t\t\t\t} (${originalValue.toFixed(1)}%)`;\r\n\t\t\t\t\t});\r\n\t\t\t\t// console.log(\"renderStackedChart FINISHED drawing (100% stacked bar).\");\r\n\t\t\t};\r\n\r\n\t\t\tconst formatSimpleText = value => {\r\n\t\t\t\tif (value === null || value === undefined) return \"-\";\r\n\t\t\t\tlet textToShow;\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tif (value.length === 0) return \"-\";\r\n\t\t\t\t\ttextToShow = value\r\n\t\t\t\t\t\t.map(item => {\r\n\t\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\t\tlet text = String(item.raw || item.value || item.name || \"\");\r\n\t\t\t\t\t\t\t\t// Avoid appending unit/year if already in raw/value for text-only\r\n\t\t\t\t\t\t\t\t// if (item.unit && !text.includes(item.unit)) text += ` ${item.unit}`;\r\n\t\t\t\t\t\t\t\t// if (item.year && !text.includes(String(item.year))) text += ` (${item.year})`;\r\n\t\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn String(item);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"; \");\r\n\t\t\t\t} else if (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\ttextToShow = String(value.raw || value.value || value.name || \"-\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextToShow = String(value);\r\n\t\t\t\t}\r\n\t\t\t\treturn textToShow.length > 70\r\n\t\t\t\t\t? textToShow.substring(0, 67) + \"...\"\r\n\t\t\t\t\t: textToShow;\r\n\t\t\t};\r\n\r\n\t\t\tconst handleTextClick = () => {\r\n\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tdata: processedField.value,\r\n\t\t\t\t\tvalue: processedField.value\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tconst handleTextHover = () => {\r\n\t\t\t\tisTextHovered.value = true;\r\n\t\t\t};\r\n\t\t\tconst resetHover = () => {\r\n\t\t\t\tisTextHovered.value = false;\r\n\t\t\t\thoveredIndex.value = null;\r\n\t\t\t\tactiveIndex.value = null;\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpieContainer,\r\n\t\t\t\tbarContainer,\r\n\t\t\t\tlineContainer,\r\n\t\t\t\tstackedContainer,\r\n\t\t\t\tformatSimpleText,\r\n\t\t\t\thandleTextClick,\r\n\t\t\t\thandleTextHover,\r\n\t\t\t\tresetHover,\r\n\t\t\t\tisTextHovered,\r\n\t\t\t\thasData,\r\n\t\t\t\tisValidPieData // These are used in the template v-if conditions\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 13px; /* Slightly smaller for more text */\r\n\t\tline-height: 1.3;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 6px; /* Reduced padding */\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%; /* Ensure text doesn't overflow cell */\r\n\t\toverflow-y: auto; /* Allow scroll if text too long */\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -22px; /* Adjust if needed */\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 3px 7px;\r\n\t\tborder-radius: 3px;\r\n\t\tfont-size: 11px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.d3-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\toverflow: visible; /* Important for legends outside main chart area */\r\n\t}\r\n\r\n\t:deep(.d3-tooltip) {\r\n\t\tposition: absolute;\r\n\t\tz-index: 20; /* Higher z-index for tooltips */\r\n\t\twhite-space: nowrap;\r\n\t\tpointer-events: none;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n\t\tbackground: rgba(40, 40, 40, 0.9); /* Darker tooltip */\r\n\t\tcolor: white;\r\n\t\tpadding: 5px 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 11px;\r\n\t\tline-height: 1.4;\r\n\t}\r\n\t:deep(.d3-tooltip strong) {\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: 2px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #888; /* Slightly darker */\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 12px; /* Smaller no-data text */\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\talign-self: center; /* Vertically center */\r\n\t}\r\n\r\n\t/* Styles for D3 generated elements */\r\n\t:deep(.tick text) {\r\n\t\tfont-size: 9px;\r\n\t\tfill: #444; /* Darker tick text */\r\n\t}\r\n\t:deep(.tick line) {\r\n\t\tstroke: #d0d0d0; /* Lighter tick lines */\r\n\t}\r\n\t:deep(path.domain) {\r\n\t\t/* Axis line */\r\n\t\tstroke: #888;\r\n\t}\r\n\t:deep(.legend-pie text),\r\n\t:deep(.legend-stacked text) {\r\n\t\t/* Common legend text style */\r\n\t\tfont-size: 9.5px; /* Slightly larger legend text */\r\n\t\tfill: #333;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t:deep(.bar:hover),\r\n\t:deep(.stack-bar rect:hover) {\r\n\t\t/* target the rect inside stack-bar group */\r\n\t\topacity: 1 !important;\r\n\t\t/* stroke: #333; */ /* Optional: add hover stroke */\r\n\t\t/* stroke-width: 1px; */\r\n\t}\r\n\t:deep(.bar-value-label),\r\n\t:deep(.stack-value-label),\r\n\t:deep(.line-label) {\r\n\t\tpointer-events: none;\r\n\t\tfont-size: 9px;\r\n\t\tfill: #333;\r\n\t}\r\n\t:deep(.dot:hover) {\r\n\t\tr: 4.5px !important; /* Enlarge dot on hover */\r\n\t\tstroke: #000;\r\n\t\tstroke-width: 1px;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-text {\r\n\t\t\tfont-size: 11px;\r\n\t\t\tpadding: 4px;\r\n\t\t}\r\n\t\t:deep(.tick text) {\r\n\t\t\tfont-size: 7.5px;\r\n\t\t}\r\n\t\t:deep(.legend-pie text),\r\n\t\t:deep(.legend-stacked text) {\r\n\t\t\tfont-size: 7.5px;\r\n\t\t}\r\n\t\t.text-tooltip {\r\n\t\t\tfont-size: 10px;\r\n\t\t\tpadding: 2px 5px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}