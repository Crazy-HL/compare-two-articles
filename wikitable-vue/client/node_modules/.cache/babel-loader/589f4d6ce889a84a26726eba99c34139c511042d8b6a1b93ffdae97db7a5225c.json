{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"div0\",\n  id: \"div2\"\n};\nconst _hoisted_2 = {\n  class: \"VisContainer\"\n};\nconst _hoisted_3 = {\n  class: \"topContainer container\"\n};\nconst _hoisted_4 = {\n  class: \"botContainer container\"\n};\nconst _hoisted_5 = {\n  class: \"io\"\n};\nconst _hoisted_6 = {\n  class: \"io\"\n};\nconst _hoisted_7 = {\n  class: \"question-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 顶部输出框 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"IO\"], {\n    width: \"100%\",\n    height: \"200px\",\n    placeholder: $setup.outputPlaceholder\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createCommentVNode(\" 底部输入框 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"IO\"], {\n    width: \"100%\",\n    height: \"150px\",\n    placeholder: $setup.selectText2\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"IO\"], {\n    width: \"100%\",\n    height: \"150px\",\n    placeholder: $setup.selectText3\n  }, null, 8 /* PROPS */, [\"placeholder\"])])]), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", {\n    class: \"button-container\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.compareTexts\n  }, \"对比文章\"), _createElementVNode(\"button\", {\n    onClick: $setup.askQuestion\n  }, \"向 ChatGPT 提问\")]), _createCommentVNode(\" 提问框 \"), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userQuestion = $event),\n    rows: \"4\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_createVNode","$setup","width","height","placeholder","outputPlaceholder","_hoisted_4","_hoisted_5","selectText2","_hoisted_6","selectText3","onClick","compareTexts","askQuestion","_hoisted_7","_cache","$event","userQuestion","rows"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0\" id=\"div2\">\r\n\t\t<div class=\"VisContainer\">\r\n\t\t\t<!-- 顶部输出框 -->\r\n\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t<IO width=\"100%\" height=\"200px\" :placeholder=\"outputPlaceholder\"></IO>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 底部输入框 -->\r\n\t\t\t<div class=\"botContainer container\">\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"100%\" height=\"150px\" :placeholder=\"selectText2\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"100%\" height=\"150px\" :placeholder=\"selectText3\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 操作按钮 -->\r\n\t\t\t<div class=\"button-container\">\r\n\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t<button @click=\"askQuestion\">向 ChatGPT 提问</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 提问框 -->\r\n\t\t\t<div class=\"question-box\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst selectText2 = ref(\"\"); // 左侧选中文本\r\n\tconst selectText3 = ref(\"\"); // 右侧选中文本\r\n\tconst userQuestion = ref(\"\"); // 用户提问\r\n\tconst outputPlaceholder = ref(\"对比结果或 GPT 回答将显示在这里\"); // 顶部输出框的占位符\r\n\r\n\tlet offDiv1, offDiv3;\r\n\r\n\tonMounted(() => {\r\n\t\toffDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\r\n\t\toffDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\toffDiv1();\r\n\t\toffDiv3();\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 向 GPT 提问\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\r\n\t\t\t\t\"gpt_ask\",\r\n\t\t\t\t{ question: userQuestion.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\toutputPlaceholder.value = data.answer; // 显示 GPT 的回答\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"提问失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t// 对比文章\r\n\tasync function compareTexts() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\toutputPlaceholder.value = data.result; // 显示对比结果\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 容器样式 */\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t\theight: 100%;\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #f9f9f9;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tmargin: 10px 0;\r\n\t\tflex-grow: 1;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\r\n\t.topContainer {\r\n\t\theight: 200px;\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f1f1f1;\r\n\t}\r\n\r\n\t/* 按钮容器 */\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-top: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t/* 提问框样式 */\r\n\t.question-box {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\tresize: none;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t/* 输出框占位符样式 */\r\n\t.output-placeholder {\r\n\t\tcolor: #888;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,MAAM;EAACC,EAAE,EAAC;;;EACfD,KAAK,EAAC;AAAc;;EAEnBA,KAAK,EAAC;AAAwB;;EAK9BA,KAAK,EAAC;AAAwB;;EAC7BA,KAAK,EAAC;AAAI;;EAGVA,KAAK,EAAC;AAAI;;EAYXA,KAAK,EAAC;AAAc;;uBAxB3BE,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BLC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BLC,mBAAA,WAAc,EACdF,mBAAA,CAEM,OAFNG,UAEM,GADLC,YAAA,CAAsEC,MAAA;IAAlEC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAI;8CAG/CP,mBAAA,WAAc,EACdF,mBAAA,CAOM,OAPNU,UAOM,GANLV,mBAAA,CAEM,OAFNW,UAEM,GADLP,YAAA,CAAgEC,MAAA;IAA5DC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAO;8CAE/CZ,mBAAA,CAEM,OAFNa,UAEM,GADLT,YAAA,CAAgEC,MAAA;IAA5DC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAS;gDAIhDZ,mBAAA,UAAa,EACbF,mBAAA,CAGM;IAHDJ,KAAK,EAAC;EAAkB,IAC5BI,mBAAA,CAA2C;IAAlCe,OAAK,EAAEV,MAAA,CAAAW;EAAY,GAAE,MAAI,GAClChB,mBAAA,CAAkD;IAAzCe,OAAK,EAAEV,MAAA,CAAAY;EAAW,GAAE,cAAY,E,GAG1Cf,mBAAA,SAAY,EACZF,mBAAA,CAKM,OALNkB,UAKM,G,gBAJLlB,mBAAA,CAGuC;IA7B3C,uBAAAmB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA2Bcf,MAAA,CAAAgB,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRd,WAAW,EAAC;iDAFHH,MAAA,CAAAgB,YAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}