{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\n\n// Infobox 数据状态\n\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 处理接收到的 Infobox 数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n\n      // 标准化数据结构\n      const result = {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: {}\n      };\n\n      // 处理 sections 或直接 data\n      if (data.sections) {\n        for (const [section, fields] of Object.entries(data.sections)) {\n          Object.assign(result.data, fields);\n        }\n      } else if (data.data) {\n        Object.assign(result.data, data.data);\n      }\n      return result;\n    };\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [\n    // 经济指标\n    {\n      key: \"gdp\",\n      displayName: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      matchKeywords: [\"gdp\", \"国内生产总值\"]\n    }, {\n      key: \"population\",\n      displayName: \"人口\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\",\n      matchKeywords: [\"population\", \"人口\"]\n    }, {\n      key: \"gdpGrowth\",\n      displayName: \"GDP增长率\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      matchKeywords: [\"growth\", \"增长率\"]\n    }, {\n      key: \"inflation\",\n      displayName: \"通货膨胀率\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      matchKeywords: [\"inflation\", \"通胀率\"]\n    }\n    // 可以继续添加更多可比较字段...\n    ];\n\n    // 获取字段值\n    const getField = (infobox, fieldKey) => {\n      // 先尝试精确匹配\n      if (infobox.data[fieldKey]) return infobox.data[fieldKey];\n\n      // 模糊匹配（中文关键词）\n      const fieldDef = COMPARABLE_FIELDS.find(f => f.key === fieldKey);\n      if (fieldDef) {\n        for (const keyword of fieldDef.matchKeywords) {\n          const matchedKey = Object.keys(infobox.data).find(k => k.toLowerCase().includes(keyword));\n          if (matchedKey) return infobox.data[matchedKey];\n        }\n      }\n      return null;\n    };\n\n    // 计算可比较字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftField = getField(leftInfobox.value, field.key);\n        const rightField = getField(rightInfobox.value, field.key);\n        return leftField || rightField; // 只要有一方有数据就显示\n      });\n    });\n\n    // 设置事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      getField,\n      comparableFields,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","result","sections","section","fields","Object","entries","assign","COMPARABLE_FIELDS","key","displayName","typeLabel","matchKeywords","getField","infobox","fieldKey","fieldDef","find","f","keyword","matchedKey","keys","k","toLowerCase","includes","comparableFields","filter","field","leftField","value","rightField","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 - 显示所有可比较字段 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.displayName }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// Infobox 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理接收到的 Infobox 数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 标准化数据结构\r\n\t\tconst result = {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: {}\r\n\t\t};\r\n\r\n\t\t// 处理 sections 或直接 data\r\n\t\tif (data.sections) {\r\n\t\t\tfor (const [section, fields] of Object.entries(data.sections)) {\r\n\t\t\t\tObject.assign(result.data, fields);\r\n\t\t\t}\r\n\t\t} else if (data.data) {\r\n\t\t\tObject.assign(result.data, data.data);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t// 经济指标\r\n\t\t{\r\n\t\t\tkey: \"gdp\",\r\n\t\t\tdisplayName: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tmatchKeywords: [\"gdp\", \"国内生产总值\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"population\",\r\n\t\t\tdisplayName: \"人口\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tmatchKeywords: [\"population\", \"人口\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"gdpGrowth\",\r\n\t\t\tdisplayName: \"GDP增长率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tmatchKeywords: [\"growth\", \"增长率\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"inflation\",\r\n\t\t\tdisplayName: \"通货膨胀率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tmatchKeywords: [\"inflation\", \"通胀率\"]\r\n\t\t}\r\n\t\t// 可以继续添加更多可比较字段...\r\n\t];\r\n\r\n\t// 获取字段值\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\t// 先尝试精确匹配\r\n\t\tif (infobox.data[fieldKey]) return infobox.data[fieldKey];\r\n\r\n\t\t// 模糊匹配（中文关键词）\r\n\t\tconst fieldDef = COMPARABLE_FIELDS.find(f => f.key === fieldKey);\r\n\t\tif (fieldDef) {\r\n\t\t\tfor (const keyword of fieldDef.matchKeywords) {\r\n\t\t\t\tconst matchedKey = Object.keys(infobox.data).find(k =>\r\n\t\t\t\t\tk.toLowerCase().includes(keyword)\r\n\t\t\t\t);\r\n\t\t\t\tif (matchedKey) return infobox.data[matchedKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 计算可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftField = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightField = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftField || rightField; // 只要有一方有数据就显示\r\n\t\t});\r\n\t});\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.header h2 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.title-box.center {\r\n\t\tflex: 0.5;\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tmin-height: 100px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}