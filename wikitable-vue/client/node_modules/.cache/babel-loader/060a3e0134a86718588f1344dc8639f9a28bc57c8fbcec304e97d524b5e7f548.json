{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"Êï∞ÂÄº(‰∏á‰∫øÁæéÂÖÉ)\",\n      visualization: \"bar-chart\",\n      legend: \"ÂõΩÂÜÖÁîü‰∫ßÊÄªÂÄºÔºàÂçï‰ΩçÔºö‰∏á‰∫øÁæéÂÖÉÔºâ\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"Êï∞ÂÄº(‰∫∫)\",\n      visualization: \"bar-chart\",\n      legend: \"‰∫∫Âè£Êï∞ÈáèÔºàÂçï‰ΩçÔºö‰∫ø‰∫∫Ôºâ\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"ÁôæÂàÜÊØî(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDPÂπ¥Â¢ûÈïøÁéáÔºà%Ôºâ\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"ÁôæÂàÜÊØî(%)\",\n      visualization: \"pie-chart\",\n      legend: \"Ê∂àË¥πËÄÖ‰ª∑Ê†ºÊåáÊï∞ÂèòÂåñ\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"ÁôæÂàÜÊØî(%)\",\n      visualization: \"pie-chart\",\n      legend: \"Âä≥Âä®ÂäõÂàÜÂ∏ÉÊØî‰æã\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"ÊñáÊú¨\",\n      visualization: \"text-only\",\n      legend: \"ÂÖ®ÁêÉGDPÊéíÂêç\"\n    }];\n\n    // Êñ∞Â¢ûÂ∑ÆÂºÇËÆ°ÁÆóÂáΩÊï∞\n    const calculateDifference = (leftData, rightData, fieldType) => {\n      if (!leftData.length || !rightData.length) return 0;\n      if (fieldType === \"number\") {\n        const leftValue = parseFloat(leftData[0]);\n        const rightValue = parseFloat(rightData[0]);\n        return Math.abs(leftValue - rightValue);\n      } else if (fieldType === \"percentage\") {\n        const leftValue = parseFloat(leftData[0].replace(\"%\", \"\"));\n        const rightValue = parseFloat(rightData[0].replace(\"%\", \"\"));\n        return Math.abs(leftValue - rightValue);\n      } else if (fieldType === \"text\") {\n        return 0;\n      }\n      return 0;\n    };\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: infobox.title,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`highlight-${divId}-paragraphs`, fieldKey);\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`clear-${divId}-highlights`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n      return [];\n    };\n    const handleMiddleColumnClick = field => {\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: getField(leftInfobox.value, field.key),\n        rightData: getField(rightInfobox.value, field.key),\n        leftTitle: leftInfobox.value.title,\n        rightTitle: rightInfobox.value.title,\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n      bus.emit(\"highlight-div1-paragraphs\", field.key);\n      bus.emit(\"highlight-div3-paragraphs\", field.key);\n    };\n    const showCombinedChart = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      currentChart.value = {\n        title: `ÂêàÂπ∂ÂõæË°® - ${field.key}`,\n        field: field,\n        data: [...leftData, ...rightData]\n      };\n      showFullChartModal.value = true;\n    };\n\n    // ‰øÆÊîπÂêéÁöÑ comparableFields ËÆ°ÁÆóÂ±ûÊÄßÂåÖÂê´ÊéíÂ∫èÈÄªËæë\n    const comparableFields = computed(() => {\n      const fields = COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n      return fields.sort((a, b) => {\n        const leftDataA = getField(leftInfobox.value, a.key);\n        const rightDataA = getField(rightInfobox.value, a.key);\n        const leftDataB = getField(leftInfobox.value, b.key);\n        const rightDataB = getField(rightInfobox.value, b.key);\n        const diffA = calculateDifference(leftDataA, rightDataA, a.type);\n        const diffB = calculateDifference(leftDataB, rightDataB, b.type);\n        if (diffB !== diffA) return diffB - diffA;\n        if (a.type === \"text\") return 1;\n        if (b.type === \"text\") return -1;\n        return 0;\n      });\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"Êó†Ê†áÈ¢ò\",\n        type: data.type || \"Êú™Áü•Á±ªÂûã\",\n        data: data.sections || {}\n      };\n    };\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      COMPARABLE_FIELDS,\n      calculateDifference,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      getField,\n      handleMiddleColumnClick,\n      showCombinedChart,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","calculateDifference","leftData","rightData","fieldType","length","leftValue","parseFloat","rightValue","Math","abs","replace","showFullChart","infobox","value","getField","closeFullChart","hoverInfobox","fieldKey","side","infoboxTitle","divId","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","section","Object","values","undefined","Array","isArray","handleMiddleColumnClick","leftTitle","rightTitle","fieldLabel","showCombinedChart","comparableFields","fields","filter","leftVal","rightVal","sort","a","b","leftDataA","rightDataA","leftDataB","rightDataB","diffA","diffB","processInfoboxData","sections","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">ÂØπÊØîÂ±ûÊÄß</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"ÂØπÊØîÂàÜÊûê\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t‚öñÔ∏è\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"ÂêàÂπ∂ÂõæË°®\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\tüìä\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">√ó</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(‰∏á‰∫øÁæéÂÖÉ)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"ÂõΩÂÜÖÁîü‰∫ßÊÄªÂÄºÔºàÂçï‰ΩçÔºö‰∏á‰∫øÁæéÂÖÉÔºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"Êï∞ÂÄº(‰∫∫)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"‰∫∫Âè£Êï∞ÈáèÔºàÂçï‰ΩçÔºö‰∫ø‰∫∫Ôºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDPÂπ¥Â¢ûÈïøÁéáÔºà%Ôºâ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"Ê∂àË¥πËÄÖ‰ª∑Ê†ºÊåáÊï∞ÂèòÂåñ\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"ÁôæÂàÜÊØî(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"Âä≥Âä®ÂäõÂàÜÂ∏ÉÊØî‰æã\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"ÊñáÊú¨\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"ÂÖ®ÁêÉGDPÊéíÂêç\"\r\n\t\t}\r\n\t];\r\n\r\n\t// Êñ∞Â¢ûÂ∑ÆÂºÇËÆ°ÁÆóÂáΩÊï∞\r\n\tconst calculateDifference = (leftData, rightData, fieldType) => {\r\n\t\tif (!leftData.length || !rightData.length) return 0;\r\n\r\n\t\tif (fieldType === \"number\") {\r\n\t\t\tconst leftValue = parseFloat(leftData[0]);\r\n\t\t\tconst rightValue = parseFloat(rightData[0]);\r\n\t\t\treturn Math.abs(leftValue - rightValue);\r\n\t\t} else if (fieldType === \"percentage\") {\r\n\t\t\tconst leftValue = parseFloat(leftData[0].replace(\"%\", \"\"));\r\n\t\t\tconst rightValue = parseFloat(rightData[0].replace(\"%\", \"\"));\r\n\t\t\treturn Math.abs(leftValue - rightValue);\r\n\t\t} else if (fieldType === \"text\") {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `ÂêàÂπ∂ÂõæË°® - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\t// ‰øÆÊîπÂêéÁöÑ comparableFields ËÆ°ÁÆóÂ±ûÊÄßÂåÖÂê´ÊéíÂ∫èÈÄªËæë\r\n\tconst comparableFields = computed(() => {\r\n\t\tconst fields = COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\r\n\t\treturn fields.sort((a, b) => {\r\n\t\t\tconst leftDataA = getField(leftInfobox.value, a.key);\r\n\t\t\tconst rightDataA = getField(rightInfobox.value, a.key);\r\n\t\t\tconst leftDataB = getField(leftInfobox.value, b.key);\r\n\t\t\tconst rightDataB = getField(rightInfobox.value, b.key);\r\n\r\n\t\t\tconst diffA = calculateDifference(leftDataA, rightDataA, a.type);\r\n\t\t\tconst diffB = calculateDifference(leftDataB, rightDataB, b.type);\r\n\r\n\t\t\tif (diffB !== diffA) return diffB - diffA;\r\n\r\n\t\t\tif (a.type === \"text\") return 1;\r\n\t\t\tif (b.type === \"text\") return -1;\r\n\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t});\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"Êó†Ê†áÈ¢ò\",\r\n\t\t\ttype: data.type || \"Êú™Áü•Á±ªÂûã\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}