{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\n\n// Infobox数据\n\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 处理Infobox数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.data || {}\n      };\n    };\n\n    // 可比较字段定义\n    const FIELD_DEFINITIONS = {\n      // 经济指标\n      gdp: {\n        displayName: \"GDP\",\n        type: \"currency\",\n        unit: \"美元\",\n        chartType: \"line\"\n      },\n      population: {\n        displayName: \"人口\",\n        type: \"number\",\n        unit: \"人\",\n        chartType: \"bar\"\n      },\n      gdpGrowth: {\n        displayName: \"GDP增长率\",\n        type: \"percentage\",\n        unit: \"%\",\n        chartType: \"line\"\n      },\n      inflation: {\n        displayName: \"通货膨胀率\",\n        type: \"percentage\",\n        unit: \"%\",\n        chartType: \"line\"\n      },\n      unemployment: {\n        displayName: \"失业率\",\n        type: \"percentage\",\n        unit: \"%\",\n        chartType: \"bar\"\n      }\n      // 更多字段定义...\n    };\n\n    // 获取可比较字段\n    const comparableFields = computed(() => {\n      const fields = [];\n\n      // 检查两个Infobox共有的字段\n      const leftFields = Object.keys(leftInfobox.value.data);\n      const rightFields = Object.keys(rightInfobox.value.data);\n      const commonFields = [...new Set([...leftFields, ...rightFields])];\n      commonFields.forEach(fieldKey => {\n        // 检查是否是我们定义的比较字段\n        const matchedField = Object.entries(FIELD_DEFINITIONS).find(_ref2 => {\n          let [key] = _ref2;\n          return fieldKey.toLowerCase().includes(key);\n        });\n        if (matchedField) {\n          const [key, definition] = matchedField;\n\n          // 检查数据是否适合可视化\n          const leftData = leftInfobox.value.data[fieldKey];\n          const rightData = rightInfobox.value.data[fieldKey];\n          if (isVisualizable(leftData) && isVisualizable(rightData)) {\n            fields.push({\n              key: fieldKey,\n              displayName: definition.displayName,\n              type: definition.type,\n              unit: definition.unit,\n              chartType: definition.chartType\n            });\n          }\n        }\n      });\n      return fields;\n    });\n\n    // 检查数据是否适合可视化\n    const isVisualizable = fieldData => {\n      if (!fieldData) return false;\n\n      // 如果是数值或带单位的数值\n      if (typeof fieldData.value === \"number\") return true;\n\n      // 如果是时间序列数据\n      if (Array.isArray(fieldData) && fieldData.every(item => item.value && item.year)) {\n        return true;\n      }\n\n      // 如果是纯文本数字\n      if (typeof fieldData.text === \"string\" && !isNaN(parseFloat(fieldData.text))) {\n        return true;\n      }\n      return false;\n    };\n\n    // 设置事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      FIELD_DEFINITIONS,\n      comparableFields,\n      isVisualizable,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","FIELD_DEFINITIONS","gdp","displayName","unit","chartType","population","gdpGrowth","inflation","unemployment","comparableFields","fields","leftFields","Object","keys","value","rightFields","commonFields","Set","forEach","fieldKey","matchedField","entries","find","_ref2","key","toLowerCase","includes","definition","leftData","rightData","isVisualizable","push","fieldData","Array","isArray","every","item","year","text","isNaN","parseFloat","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据可视化</div>\r\n\t\t\t<div class=\"column-header middle-column\">比较属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据可视化</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"leftInfobox.data[field.key]\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.displayName }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.type }}</div>\r\n\t\t\t\t\t<div class=\"field-unit\" v-if=\"field.unit\">{{ field.unit }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"rightInfobox.data[field.key]\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// Infobox数据\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.data || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义\r\n\tconst FIELD_DEFINITIONS = {\r\n\t\t// 经济指标\r\n\t\tgdp: {\r\n\t\t\tdisplayName: \"GDP\",\r\n\t\t\ttype: \"currency\",\r\n\t\t\tunit: \"美元\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tpopulation: {\r\n\t\t\tdisplayName: \"人口\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tunit: \"人\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t},\r\n\t\tgdpGrowth: {\r\n\t\t\tdisplayName: \"GDP增长率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tinflation: {\r\n\t\t\tdisplayName: \"通货膨胀率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"line\"\r\n\t\t},\r\n\t\tunemployment: {\r\n\t\t\tdisplayName: \"失业率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\tunit: \"%\",\r\n\t\t\tchartType: \"bar\"\r\n\t\t}\r\n\t\t// 更多字段定义...\r\n\t};\r\n\r\n\t// 获取可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\tconst fields = [];\r\n\r\n\t\t// 检查两个Infobox共有的字段\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.data);\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.data);\r\n\t\tconst commonFields = [...new Set([...leftFields, ...rightFields])];\r\n\r\n\t\tcommonFields.forEach(fieldKey => {\r\n\t\t\t// 检查是否是我们定义的比较字段\r\n\t\t\tconst matchedField = Object.entries(FIELD_DEFINITIONS).find(([key]) =>\r\n\t\t\t\tfieldKey.toLowerCase().includes(key)\r\n\t\t\t);\r\n\r\n\t\t\tif (matchedField) {\r\n\t\t\t\tconst [key, definition] = matchedField;\r\n\r\n\t\t\t\t// 检查数据是否适合可视化\r\n\t\t\t\tconst leftData = leftInfobox.value.data[fieldKey];\r\n\t\t\t\tconst rightData = rightInfobox.value.data[fieldKey];\r\n\r\n\t\t\t\tif (isVisualizable(leftData) && isVisualizable(rightData)) {\r\n\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\tkey: fieldKey,\r\n\t\t\t\t\t\tdisplayName: definition.displayName,\r\n\t\t\t\t\t\ttype: definition.type,\r\n\t\t\t\t\t\tunit: definition.unit,\r\n\t\t\t\t\t\tchartType: definition.chartType\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t});\r\n\r\n\t// 检查数据是否适合可视化\r\n\tconst isVisualizable = fieldData => {\r\n\t\tif (!fieldData) return false;\r\n\r\n\t\t// 如果是数值或带单位的数值\r\n\t\tif (typeof fieldData.value === \"number\") return true;\r\n\r\n\t\t// 如果是时间序列数据\r\n\t\tif (\r\n\t\t\tArray.isArray(fieldData) &&\r\n\t\t\tfieldData.every(item => item.value && item.year)\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// 如果是纯文本数字\r\n\t\tif (\r\n\t\t\ttypeof fieldData.text === \"string\" &&\r\n\t\t\t!isNaN(parseFloat(fieldData.text))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-top: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\twidth: 48%;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 10px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\tmin-height: 120px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.field-unit {\r\n\t\tcolor: #888;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}