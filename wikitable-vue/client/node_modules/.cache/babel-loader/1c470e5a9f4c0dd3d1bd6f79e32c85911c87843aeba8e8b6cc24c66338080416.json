{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  __name: 'div1',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const content = ref(\"\"); // 内容\n\n    onMounted(async () => {\n      const src = \"https://baike.baidu.com/item/%E5%94%90%E6%9C%9D/53699\";\n      await showHtml(src, content);\n    });\n\n    // 获取并展示内容\n    async function showHtml(src, area) {\n      try {\n        api.get(\"html\", {\n          url: src\n        }, data => {\n          area.value = htmlToDom(data);\n        });\n      } catch (err) {\n        console.log(\"请求失败：\", err.message);\n        area.value = \"\"; // 如果请求失败，返回空字符串\n      }\n    }\n\n    // 将 HTML 内容转化为 DOM\n    function htmlToDom(html) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      return doc.documentElement.outerHTML;\n    }\n    const __returned__ = {\n      content,\n      showHtml,\n      htmlToDom,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","content","onMounted","src","showHtml","area","api","get","url","data","value","htmlToDom","err","console","log","message","html","parser","DOMParser","doc","parseFromString","documentElement","outerHTML"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/div1.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0 selectContent1\" id=\"div1\">\r\n\t\t<div v-html=\"content\" class=\"showHtml\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref } from \"vue\";\r\n\r\n\tconst content = ref(\"\"); // 内容\r\n\r\n\tonMounted(async () => {\r\n\t\tconst src = \"https://baike.baidu.com/item/%E5%94%90%E6%9C%9D/53699\";\r\n\t\tawait showHtml(src, content);\r\n\t});\r\n\r\n\t// 获取并展示内容\r\n\tasync function showHtml(src, area) {\r\n\t\ttry {\r\n\t\t\tapi.get(\"html\", { url: src }, data => {\r\n\t\t\t\tarea.value = htmlToDom(data);\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"请求失败：\", err.message);\r\n\t\t\tarea.value = \"\"; // 如果请求失败，返回空字符串\r\n\t\t}\r\n\t}\r\n\r\n\t// 将 HTML 内容转化为 DOM\r\n\tfunction htmlToDom(html) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn doc.documentElement.outerHTML;\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#div1 {\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #ccc;\r\n\t\toverflow: auto;\r\n\t}\r\n</style>\r\n"],"mappings":"AAOC,SAASA,GAAG,QAAQ,KAAK;;;;;;;;IAEzB,MAAMC,OAAO,GAAGD,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEzBE,SAAS,CAAC,YAAY;MACrB,MAAMC,GAAG,GAAG,uDAAuD;MACnE,MAAMC,QAAQ,CAACD,GAAG,EAAEF,OAAO,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACA,eAAeG,QAAQA,CAACD,GAAG,EAAEE,IAAI,EAAE;MAClC,IAAI;QACHC,GAAG,CAACC,GAAG,CAAC,MAAM,EAAE;UAAEC,GAAG,EAAEL;QAAI,CAAC,EAAEM,IAAI,IAAI;UACrCJ,IAAI,CAACK,KAAK,GAAGC,SAAS,CAACF,IAAI,CAAC;QAC7B,CAAC,CAAC;MACH,CAAC,CAAC,OAAOG,GAAG,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;QACjCV,IAAI,CAACK,KAAK,GAAG,EAAE,CAAC,CAAC;MAClB;IACD;;IAEA;IACA,SAASC,SAASA,CAACK,IAAI,EAAE;MACxB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,IAAI,EAAE,WAAW,CAAC;MACrD,OAAOG,GAAG,CAACE,eAAe,CAACC,SAAS;IACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}