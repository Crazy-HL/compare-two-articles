{"ast":null,"code":"// src/js/chartUtils.js\nimport * as d3 from 'd3';\n\n// 通用图表配置\nconst chartConfig = {\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 40,\n    left: 40\n  },\n  colors: d3.schemeTableau10,\n  transitionDuration: 500\n};\n\n/**\r\n * 渲染柱状图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\nexport const renderBarChart = (container, config) => {\n  if (!container) return;\n\n  // 清空容器\n  container.innerHTML = '';\n\n  // 提取数据\n  const data = config.data || [];\n  const title = config.title || '';\n\n  // 设置尺寸\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n  const innerWidth = width - chartConfig.margin.left - chartConfig.margin.right;\n  const innerHeight = height - chartConfig.margin.top - chartConfig.margin.bottom;\n\n  // 创建SVG\n  const svg = d3.select(container).append('svg').attr('width', width).attr('height', height);\n\n  // 添加标题\n  svg.append('text').attr('x', width / 2).attr('y', 15).attr('text-anchor', 'middle').style('font-size', '12px').text(title);\n\n  // 创建主图形区域\n  const g = svg.append('g').attr('transform', `translate(${chartConfig.margin.left}, ${chartConfig.margin.top})`);\n\n  // 设置比例尺\n  const x = d3.scaleBand().domain(data.map(d => d.name)).range([0, innerWidth]).padding(0.2);\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).nice().range([innerHeight, 0]);\n\n  // 添加X轴\n  g.append('g').attr('class', 'axis axis-x').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(x)).selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-45)');\n\n  // 添加Y轴\n  g.append('g').attr('class', 'axis axis-y').call(d3.axisLeft(y).ticks(5));\n\n  // 添加柱状\n  g.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.name)).attr('y', d => y(d.value)).attr('width', x.bandwidth()).attr('height', d => innerHeight - y(d.value)).attr('fill', (d, i) => chartConfig.colors[i % chartConfig.colors.length]);\n\n  // 添加数值标签\n  g.selectAll('.bar-label').data(data).enter().append('text').attr('class', 'bar-label').attr('x', d => x(d.name) + x.bandwidth() / 2).attr('y', d => y(d.value) - 5).attr('text-anchor', 'middle').text(d => d.value);\n};\n\n/**\r\n * 渲染饼图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\nexport const renderPieChart = (container, config) => {\n  if (!container) return;\n\n  // 清空容器\n  container.innerHTML = '';\n\n  // 提取数据\n  const data = config.data || [];\n  const title = config.title || '';\n\n  // 设置尺寸\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n  const radius = Math.min(width, height) / 2 - 20;\n\n  // 创建SVG\n  const svg = d3.select(container).append('svg').attr('width', width).attr('height', height);\n\n  // 添加标题\n  svg.append('text').attr('x', width / 2).attr('y', 15).attr('text-anchor', 'middle').style('font-size', '12px').text(title);\n\n  // 创建主图形区域\n  const g = svg.append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n  // 创建饼图布局\n  const pie = d3.pie().value(d => d.value).sort(null);\n\n  // 创建弧生成器\n  const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  // 创建颜色比例尺\n  const color = d3.scaleOrdinal().domain(data.map(d => d.name)).range(chartConfig.colors);\n\n  // 绘制扇形\n  const arcs = g.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n  arcs.append('path').attr('d', arc).attr('fill', d => color(d.data.name)).attr('stroke', '#fff').attr('stroke-width', 1);\n\n  // 添加标签\n  arcs.append('text').attr('transform', d => `translate(${arc.centroid(d)})`).attr('dy', '0.35em').style('text-anchor', 'middle').style('font-size', '10px').text(d => `${d.data.name}: ${d.data.value}`);\n};\n\n/**\r\n * 渲染折线图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\nexport const renderLineChart = (container, config) => {\n  if (!container) return;\n\n  // 清空容器\n  container.innerHTML = '';\n\n  // 提取数据\n  const data = config.data || [];\n  const title = config.title || '';\n\n  // 设置尺寸\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n  const innerWidth = width - chartConfig.margin.left - chartConfig.margin.right;\n  const innerHeight = height - chartConfig.margin.top - chartConfig.margin.bottom;\n\n  // 创建SVG\n  const svg = d3.select(container).append('svg').attr('width', width).attr('height', height);\n\n  // 添加标题\n  svg.append('text').attr('x', width / 2).attr('y', 15).attr('text-anchor', 'middle').style('font-size', '12px').text(title);\n\n  // 创建主图形区域\n  const g = svg.append('g').attr('transform', `translate(${chartConfig.margin.left}, ${chartConfig.margin.top})`);\n\n  // 设置比例尺\n  const x = d3.scalePoint().domain(data.map(d => d.name)).range([0, innerWidth]).padding(0.5);\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).nice().range([innerHeight, 0]);\n\n  // 创建折线生成器\n  const line = d3.line().x(d => x(d.name)).y(d => y(d.value)).curve(d3.curveMonotoneX);\n\n  // 添加X轴\n  g.append('g').attr('class', 'axis axis-x').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(x));\n\n  // 添加Y轴\n  g.append('g').attr('class', 'axis axis-y').call(d3.axisLeft(y).ticks(5));\n\n  // 添加折线路径\n  g.append('path').datum(data).attr('class', 'line').attr('d', line).attr('fill', 'none').attr('stroke', chartConfig.colors[0]).attr('stroke-width', 2);\n\n  // 添加数据点\n  g.selectAll('.dot').data(data).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.name)).attr('cy', d => y(d.value)).attr('r', 4).attr('fill', chartConfig.colors[0]);\n};\n\n/**\r\n * 渲染简单数值显示（用于非可视化数据）\r\n * @param {HTMLElement} container - 容器元素\r\n * @param {Object} config - 配置对象\r\n * @param {String} config.message - 显示的消息\r\n */\nexport const renderNonVisualChart = (container, config) => {\n  if (!container) return;\n  container.innerHTML = `\n    <div class=\"non-visual-message\">\n      <div class=\"message\">${config.message || '无可视化数据'}</div>\n      ${config.value ? `<div class=\"value\">${config.value}</div>` : ''}\n    </div>\n  `;\n};\n\n/**\r\n * 智能图表渲染（自动选择最合适的图表类型）\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} data - 要渲染的数据\r\n * @param {String} title - 图表标题\r\n */\nexport const renderChart = function (container, data) {\n  let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (!container) return;\n\n  // 根据数据类型自动选择图表类型\n  if (Array.isArray(data)) {\n    if (data.length > 8) {\n      renderLineChart(container, {\n        data,\n        title\n      });\n    } else {\n      renderBarChart(container, {\n        data,\n        title\n      });\n    }\n  } else if (typeof data === 'object' && data !== null) {\n    const entries = Object.entries(data);\n    if (entries.length <= 6) {\n      renderPieChart(container, {\n        data: entries.map(_ref => {\n          let [name, value] = _ref;\n          return {\n            name,\n            value\n          };\n        }),\n        title\n      });\n    } else {\n      renderBarChart(container, {\n        data: entries.map(_ref2 => {\n          let [name, value] = _ref2;\n          return {\n            name,\n            value\n          };\n        }),\n        title\n      });\n    }\n  } else {\n    renderNonVisualChart(container, {\n      message: '简单数值',\n      value: data\n    });\n  }\n};","map":{"version":3,"names":["d3","chartConfig","margin","top","right","bottom","left","colors","schemeTableau10","transitionDuration","renderBarChart","container","config","innerHTML","data","title","width","clientWidth","height","clientHeight","innerWidth","innerHeight","svg","select","append","attr","style","text","g","x","scaleBand","domain","map","d","name","range","padding","y","scaleLinear","max","value","nice","call","axisBottom","selectAll","axisLeft","ticks","enter","bandwidth","i","length","renderPieChart","radius","Math","min","pie","sort","arc","innerRadius","outerRadius","color","scaleOrdinal","arcs","centroid","renderLineChart","scalePoint","line","curve","curveMonotoneX","datum","renderNonVisualChart","message","renderChart","arguments","undefined","Array","isArray","entries","Object","_ref","_ref2"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/js/chartUtils2.js"],"sourcesContent":["// src/js/chartUtils.js\r\nimport * as d3 from 'd3';\r\n\r\n// 通用图表配置\r\nconst chartConfig = {\r\n  margin: { top: 20, right: 20, bottom: 40, left: 40 },\r\n  colors: d3.schemeTableau10,\r\n  transitionDuration: 500\r\n};\r\n\r\n/**\r\n * 渲染柱状图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\r\nexport const renderBarChart = (container, config) => {\r\n  if (!container) return;\r\n\r\n  // 清空容器\r\n  container.innerHTML = '';\r\n\r\n  // 提取数据\r\n  const data = config.data || [];\r\n  const title = config.title || '';\r\n\r\n  // 设置尺寸\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  const innerWidth = width - chartConfig.margin.left - chartConfig.margin.right;\r\n  const innerHeight = height - chartConfig.margin.top - chartConfig.margin.bottom;\r\n\r\n  // 创建SVG\r\n  const svg = d3.select(container)\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n\r\n  // 添加标题\r\n  svg.append('text')\r\n    .attr('x', width / 2)\r\n    .attr('y', 15)\r\n    .attr('text-anchor', 'middle')\r\n    .style('font-size', '12px')\r\n    .text(title);\r\n\r\n  // 创建主图形区域\r\n  const g = svg.append('g')\r\n    .attr('transform', `translate(${chartConfig.margin.left}, ${chartConfig.margin.top})`);\r\n\r\n  // 设置比例尺\r\n  const x = d3.scaleBand()\r\n    .domain(data.map(d => d.name))\r\n    .range([0, innerWidth])\r\n    .padding(0.2);\r\n\r\n  const y = d3.scaleLinear()\r\n    .domain([0, d3.max(data, d => d.value)])\r\n    .nice()\r\n    .range([innerHeight, 0]);\r\n\r\n  // 添加X轴\r\n  g.append('g')\r\n    .attr('class', 'axis axis-x')\r\n    .attr('transform', `translate(0, ${innerHeight})`)\r\n    .call(d3.axisBottom(x))\r\n    .selectAll('text')\r\n    .style('text-anchor', 'end')\r\n    .attr('dx', '-.8em')\r\n    .attr('dy', '.15em')\r\n    .attr('transform', 'rotate(-45)');\r\n\r\n  // 添加Y轴\r\n  g.append('g')\r\n    .attr('class', 'axis axis-y')\r\n    .call(d3.axisLeft(y).ticks(5));\r\n\r\n  // 添加柱状\r\n  g.selectAll('.bar')\r\n    .data(data)\r\n    .enter()\r\n    .append('rect')\r\n    .attr('class', 'bar')\r\n    .attr('x', d => x(d.name))\r\n    .attr('y', d => y(d.value))\r\n    .attr('width', x.bandwidth())\r\n    .attr('height', d => innerHeight - y(d.value))\r\n    .attr('fill', (d, i) => chartConfig.colors[i % chartConfig.colors.length]);\r\n\r\n  // 添加数值标签\r\n  g.selectAll('.bar-label')\r\n    .data(data)\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'bar-label')\r\n    .attr('x', d => x(d.name) + x.bandwidth() / 2)\r\n    .attr('y', d => y(d.value) - 5)\r\n    .attr('text-anchor', 'middle')\r\n    .text(d => d.value);\r\n};\r\n\r\n/**\r\n * 渲染饼图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\r\nexport const renderPieChart = (container, config) => {\r\n  if (!container) return;\r\n\r\n  // 清空容器\r\n  container.innerHTML = '';\r\n\r\n  // 提取数据\r\n  const data = config.data || [];\r\n  const title = config.title || '';\r\n\r\n  // 设置尺寸\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  const radius = Math.min(width, height) / 2 - 20;\r\n\r\n  // 创建SVG\r\n  const svg = d3.select(container)\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n\r\n  // 添加标题\r\n  svg.append('text')\r\n    .attr('x', width / 2)\r\n    .attr('y', 15)\r\n    .attr('text-anchor', 'middle')\r\n    .style('font-size', '12px')\r\n    .text(title);\r\n\r\n  // 创建主图形区域\r\n  const g = svg.append('g')\r\n    .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n  // 创建饼图布局\r\n  const pie = d3.pie()\r\n    .value(d => d.value)\r\n    .sort(null);\r\n\r\n  // 创建弧生成器\r\n  const arc = d3.arc()\r\n    .innerRadius(0)\r\n    .outerRadius(radius);\r\n\r\n  // 创建颜色比例尺\r\n  const color = d3.scaleOrdinal()\r\n    .domain(data.map(d => d.name))\r\n    .range(chartConfig.colors);\r\n\r\n  // 绘制扇形\r\n  const arcs = g.selectAll('.arc')\r\n    .data(pie(data))\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'arc');\r\n\r\n  arcs.append('path')\r\n    .attr('d', arc)\r\n    .attr('fill', d => color(d.data.name))\r\n    .attr('stroke', '#fff')\r\n    .attr('stroke-width', 1);\r\n\r\n  // 添加标签\r\n  arcs.append('text')\r\n    .attr('transform', d => `translate(${arc.centroid(d)})`)\r\n    .attr('dy', '0.35em')\r\n    .style('text-anchor', 'middle')\r\n    .style('font-size', '10px')\r\n    .text(d => `${d.data.name}: ${d.data.value}`);\r\n};\r\n\r\n/**\r\n * 渲染折线图\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} config - 图表配置\r\n * @param {Array} config.data - 数据数组 [{name, value}]\r\n * @param {String} config.title - 图表标题\r\n */\r\nexport const renderLineChart = (container, config) => {\r\n  if (!container) return;\r\n\r\n  // 清空容器\r\n  container.innerHTML = '';\r\n\r\n  // 提取数据\r\n  const data = config.data || [];\r\n  const title = config.title || '';\r\n\r\n  // 设置尺寸\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  const innerWidth = width - chartConfig.margin.left - chartConfig.margin.right;\r\n  const innerHeight = height - chartConfig.margin.top - chartConfig.margin.bottom;\r\n\r\n  // 创建SVG\r\n  const svg = d3.select(container)\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n\r\n  // 添加标题\r\n  svg.append('text')\r\n    .attr('x', width / 2)\r\n    .attr('y', 15)\r\n    .attr('text-anchor', 'middle')\r\n    .style('font-size', '12px')\r\n    .text(title);\r\n\r\n  // 创建主图形区域\r\n  const g = svg.append('g')\r\n    .attr('transform', `translate(${chartConfig.margin.left}, ${chartConfig.margin.top})`);\r\n\r\n  // 设置比例尺\r\n  const x = d3.scalePoint()\r\n    .domain(data.map(d => d.name))\r\n    .range([0, innerWidth])\r\n    .padding(0.5);\r\n\r\n  const y = d3.scaleLinear()\r\n    .domain([0, d3.max(data, d => d.value)])\r\n    .nice()\r\n    .range([innerHeight, 0]);\r\n\r\n  // 创建折线生成器\r\n  const line = d3.line()\r\n    .x(d => x(d.name))\r\n    .y(d => y(d.value))\r\n    .curve(d3.curveMonotoneX);\r\n\r\n  // 添加X轴\r\n  g.append('g')\r\n    .attr('class', 'axis axis-x')\r\n    .attr('transform', `translate(0, ${innerHeight})`)\r\n    .call(d3.axisBottom(x));\r\n\r\n  // 添加Y轴\r\n  g.append('g')\r\n    .attr('class', 'axis axis-y')\r\n    .call(d3.axisLeft(y).ticks(5));\r\n\r\n  // 添加折线路径\r\n  g.append('path')\r\n    .datum(data)\r\n    .attr('class', 'line')\r\n    .attr('d', line)\r\n    .attr('fill', 'none')\r\n    .attr('stroke', chartConfig.colors[0])\r\n    .attr('stroke-width', 2);\r\n\r\n  // 添加数据点\r\n  g.selectAll('.dot')\r\n    .data(data)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'dot')\r\n    .attr('cx', d => x(d.name))\r\n    .attr('cy', d => y(d.value))\r\n    .attr('r', 4)\r\n    .attr('fill', chartConfig.colors[0]);\r\n};\r\n\r\n/**\r\n * 渲染简单数值显示（用于非可视化数据）\r\n * @param {HTMLElement} container - 容器元素\r\n * @param {Object} config - 配置对象\r\n * @param {String} config.message - 显示的消息\r\n */\r\nexport const renderNonVisualChart = (container, config) => {\r\n  if (!container) return;\r\n  \r\n  container.innerHTML = `\r\n    <div class=\"non-visual-message\">\r\n      <div class=\"message\">${config.message || '无可视化数据'}</div>\r\n      ${config.value ? `<div class=\"value\">${config.value}</div>` : ''}\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * 智能图表渲染（自动选择最合适的图表类型）\r\n * @param {HTMLElement} container - 图表容器\r\n * @param {Object} data - 要渲染的数据\r\n * @param {String} title - 图表标题\r\n */\r\nexport const renderChart = (container, data, title = '') => {\r\n  if (!container) return;\r\n\r\n  // 根据数据类型自动选择图表类型\r\n  if (Array.isArray(data)) {\r\n    if (data.length > 8) {\r\n      renderLineChart(container, { data, title });\r\n    } else {\r\n      renderBarChart(container, { data, title });\r\n    }\r\n  } else if (typeof data === 'object' && data !== null) {\r\n    const entries = Object.entries(data);\r\n    if (entries.length <= 6) {\r\n      renderPieChart(container, { \r\n        data: entries.map(([name, value]) => ({ name, value })), \r\n        title \r\n      });\r\n    } else {\r\n      renderBarChart(container, { \r\n        data: entries.map(([name, value]) => ({ name, value })), \r\n        title \r\n      });\r\n    }\r\n  } else {\r\n    renderNonVisualChart(container, { \r\n      message: '简单数值', \r\n      value: data \r\n    });\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}