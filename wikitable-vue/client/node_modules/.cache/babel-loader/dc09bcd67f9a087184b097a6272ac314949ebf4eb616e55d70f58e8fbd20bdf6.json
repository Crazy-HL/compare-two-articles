{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"heatmap-control\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"sorting-heatmap\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"heatmap-header\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"排序\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"属性\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"类型\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"差异分数\")], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"field-rank\"\n};\nconst _hoisted_6 = {\n  class: \"field-name\"\n};\nconst _hoisted_7 = {\n  class: \"field-type\"\n};\nconst _hoisted_8 = {\n  class: \"field-score\"\n};\nconst _hoisted_9 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_10 = {\n  class: \"header left-column\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"header right-column\"\n};\nconst _hoisted_13 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_14 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_15 = {\n  class: \"field-name\"\n};\nconst _hoisted_16 = {\n  class: \"field-type\"\n};\nconst _hoisted_17 = {\n  class: \"cell right-column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 排序热力图开关 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showSortingHeatmap = !$setup.showSortingHeatmap)\n  }, _toDisplayString($setup.showSortingHeatmap ? \"隐藏\" : \"显示\") + \"排序热力图 \", 1 /* TEXT */)]), _createCommentVNode(\" 排序热力图可视化 \"), $setup.showSortingHeatmap ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFieldsWithScores, (field, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"heatmap-row\",\n      key: field.key,\n      style: _normalizeStyle({\n        backgroundColor: $setup.getHeatmapColor(field.score),\n        borderLeft: `4px solid ${$setup.getHeatmapColor(field.score)}`\n      })\n    }, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(field.typeLabel), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(field.score.toFixed(1)), 1 /* TEXT */)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 主对比表格 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_11, _createElementVNode(\"div\", _hoisted_12, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFieldsWithScores, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.getFieldDisplay($setup.leftInfobox, field.key)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_16, _toDisplayString(field.typeLabel), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, _toDisplayString($setup.getFieldDisplay($setup.rightInfobox, field.key)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","$event","$setup","showSortingHeatmap","_hoisted_3","_hoisted_4","_Fragment","_renderList","sortedFieldsWithScores","field","index","style","_normalizeStyle","getHeatmapColor","score","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","typeLabel","_hoisted_8","toFixed","_hoisted_9","_hoisted_10","leftInfobox","title","_hoisted_11","_hoisted_12","rightInfobox","_hoisted_13","getFieldDisplay","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- 排序热力图开关 -->\r\n\t\t<div class=\"heatmap-control\">\r\n\t\t\t<button @click=\"showSortingHeatmap = !showSortingHeatmap\">\r\n\t\t\t\t{{ showSortingHeatmap ? \"隐藏\" : \"显示\" }}排序热力图\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 排序热力图可视化 -->\r\n\t\t<div class=\"sorting-heatmap\" v-if=\"showSortingHeatmap\">\r\n\t\t\t<div class=\"heatmap-header\">\r\n\t\t\t\t<span>排序</span>\r\n\t\t\t\t<span>属性</span>\r\n\t\t\t\t<span>类型</span>\r\n\t\t\t\t<span>差异分数</span>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"heatmap-row\"\r\n\t\t\t\tv-for=\"(field, index) in sortedFieldsWithScores\"\r\n\t\t\t\t:key=\"field.key\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tbackgroundColor: getHeatmapColor(field.score),\r\n\t\t\t\t\tborderLeft: `4px solid ${getHeatmapColor(field.score)}`\r\n\t\t\t\t}\">\r\n\t\t\t\t<span class=\"field-rank\">{{ index + 1 }}</span>\r\n\t\t\t\t<span class=\"field-name\">{{ field.key }}</span>\r\n\t\t\t\t<span class=\"field-type\">{{ field.typeLabel }}</span>\r\n\t\t\t\t<span class=\"field-score\">{{ field.score.toFixed(1) }}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主对比表格 -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFieldsWithScores\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t{{ getFieldDisplay(leftInfobox, field.key) }}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t{{ getFieldDisplay(rightInfobox, field.key) }}\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: { sections: {} } });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: { sections: {} } });\r\n\tconst showSortingHeatmap = ref(true);\r\n\r\n\t// 可比较字段配置\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{ key: \"GDP\", type: \"number\" },\r\n\t\t{ key: \"Population\", type: \"number\" },\r\n\t\t{ key: \"GDP growth\", type: \"percentage\" },\r\n\t\t{ key: \"Inflation (CPI)\", type: \"percentage\" },\r\n\t\t{ key: \"Labor force by occupation\", type: \"percentage\" },\r\n\t\t{ key: \"GDP rank\", type: \"text\" }\r\n\t];\r\n\r\n\t// 计算带分数的排序字段\r\n\tconst sortedFieldsWithScores = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t})\r\n\t\t\t.map(field => ({\r\n\t\t\t\t...field,\r\n\t\t\t\tscore: calculateDifferenceScore(field),\r\n\t\t\t\ttypeLabel: getTypeLabel(field.type)\r\n\t\t\t}))\r\n\t\t\t.sort((a, b) => b.score - a.score);\r\n\t});\r\n\r\n\t// 获取类型标签\r\n\tconst getTypeLabel = type => {\r\n\t\tconst labels = {\r\n\t\t\tnumber: \"数值\",\r\n\t\t\tpercentage: \"百分比(%)\",\r\n\t\t\ttext: \"文本\"\r\n\t\t};\r\n\t\treturn labels[type] || type;\r\n\t};\r\n\r\n\t// 计算差异分数\r\n\tconst calculateDifferenceScore = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tif (!leftData.length || !rightData.length) return 0;\r\n\r\n\t\t// 文本类型比较\r\n\t\tif (field.type === \"text\") {\r\n\t\t\treturn leftData[0] === rightData[0] ? 1 : 5;\r\n\t\t}\r\n\r\n\t\t// 数值类型比较\r\n\t\tconst leftVal = parseFloat(leftData[0]);\r\n\t\tconst rightVal = parseFloat(rightData[0]);\r\n\r\n\t\tif (isNaN(leftVal) || isNaN(rightVal)) return 0;\r\n\r\n\t\tconst absDiff = Math.abs(leftVal - rightVal);\r\n\t\tlet score = absDiff * getFieldWeight(field.key);\r\n\r\n\t\t// 趋势相反（大幅加分）\r\n\t\tif ((leftVal > 0 && rightVal < 0) || (leftVal < 0 && rightVal > 0)) {\r\n\t\t\tscore += 50;\r\n\t\t}\r\n\r\n\t\treturn score;\r\n\t};\r\n\r\n\t// 字段权重\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 2.0,\r\n\t\t\tPopulation: 1.5,\r\n\t\t\t\"GDP growth\": 1.8,\r\n\t\t\tInflation: 1.3,\r\n\t\t\tLabor: 1.2\r\n\t\t};\r\n\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t};\r\n\r\n\t// 获取字段值\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data?.sections) return [];\r\n\r\n\t\t// 创建不区分大小写的正则表达式\r\n\t\tconst fieldRegex = new RegExp(fieldKey.replace(/[-\\s]/g, \"[\\\\s-]*\"), \"i\");\r\n\r\n\t\tfor (const section of Object.values(infobox.data.sections)) {\r\n\t\t\tfor (const [key, value] of Object.entries(section)) {\r\n\t\t\t\tif (fieldRegex.test(key)) {\r\n\t\t\t\t\treturn Array.isArray(value) ? value : [value];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 获取字段显示值\r\n\tconst getFieldDisplay = (infobox, fieldKey) => {\r\n\t\tconst value = getField(infobox, fieldKey);\r\n\t\treturn value.length > 0 ? value[0] : \"无数据\";\r\n\t};\r\n\r\n\t// 热力图颜色\r\n\tconst getHeatmapColor = score => {\r\n\t\tconst maxScore = 100;\r\n\t\tconst ratio = Math.min(score / maxScore, 1);\r\n\t\tconst hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\r\n\t\treturn `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\r\n\t};\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: { sections: {} } };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.data || { sections: {} }\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Left Infobox Data:\", leftInfobox.value);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Right Infobox Data:\", rightInfobox.value);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.heatmap-control {\r\n\t\tmargin-bottom: 10px;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.heatmap-control button {\r\n\t\tpadding: 6px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sorting-heatmap {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #eee;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.heatmap-header {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.heatmap-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\r\n\t.heatmap-row:hover {\r\n\t\ttransform: scale(1.01);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.field-rank {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.field-score {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 60px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8f9fa;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}