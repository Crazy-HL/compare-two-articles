{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a89cbc96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"simple-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"pieContainer\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"barContainer\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"lineContainer\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"d3-chart-container\",\n  ref: \"stackedContainer\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-tooltip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 文本显示 \"), $props.visualization === 'text-only' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.handleTextClick && $setup.handleTextClick(...arguments);\n    }),\n    onMouseenter: _cache[1] || (_cache[1] = function () {\n      return $setup.handleTextHover && $setup.handleTextHover(...arguments);\n    }),\n    onMouseleave: _cache[2] || (_cache[2] = function () {\n      return $setup.resetHover && $setup.resetHover(...arguments);\n    })\n  }, _toDisplayString($setup.formatSimpleText(_ctx.processedField)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'pie-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 饼图 (D3实现) \"), $setup.hasData && $setup.isValidPieData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'bar-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 柱状图 (D3实现) \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'line-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" 折线图 (D3实现) \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"-\"))], 64 /* STABLE_FRAGMENT */)) : $props.visualization === 'stacked-chart' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" 堆叠图 (100%纵向堆叠) \"), $setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"- (Stacked Data Not Ready)\"))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 5\n  }, [_createCommentVNode(\" 默认显示 \"), _createElementVNode(\"div\", {\n    class: \"simple-text\",\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $setup.handleTextClick && $setup.handleTextClick(...arguments);\n    }),\n    onMouseenter: _cache[4] || (_cache[4] = function () {\n      return $setup.handleTextHover && $setup.handleTextHover(...arguments);\n    }),\n    onMouseleave: _cache[5] || (_cache[5] = function () {\n      return $setup.resetHover && $setup.resetHover(...arguments);\n    })\n  }, _toDisplayString($setup.formatSimpleText(_ctx.processedField)), 33 /* TEXT, NEED_HYDRATION */), $setup.isTextHovered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"点击查看详情\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","$props","visualization","_Fragment","_createElementVNode","onClick","_cache","$setup","handleTextClick","arguments","onMouseenter","handleTextHover","onMouseleave","resetHover","formatSimpleText","_ctx","processedField","isTextHovered","_hoisted_2","hasData","isValidPieData","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData && isValidPieData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"pieContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"barContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"lineContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">-</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 堆叠图 (100%纵向堆叠) -->\r\n\t\t<template v-else-if=\"visualization === 'stacked-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"stackedContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Stacked Data Not Ready)</div>\r\n\t\t</template>\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { computed, ref, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tfield: {\r\n\t\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tvisualization: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tfieldKey: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunifiedMax: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"chartClick\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst hoveredIndex = ref(null);\r\n\t\t\tconst activeIndex = ref(null);\r\n\t\t\tconst isTextHovered = ref(false);\r\n\r\n\t\t\tconst pieContainer = ref(null);\r\n\t\t\tconst barContainer = ref(null);\r\n\t\t\tconst lineContainer = ref(null);\r\n\t\t\tconst stackedContainer = ref(null);\r\n\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#3498db\",\r\n\t\t\t\t\"#e74c3c\",\r\n\t\t\t\t\"#2ecc71\",\r\n\t\t\t\t\"#f39c12\",\r\n\t\t\t\t\"#9b59b6\",\r\n\t\t\t\t\"#1abc9c\",\r\n\t\t\t\t\"#d35400\",\r\n\t\t\t\t\"#8e44ad\",\r\n\t\t\t\t\"#c0392b\",\r\n\t\t\t\t\"#7f8c8d\"\r\n\t\t\t];\r\n\t\t\tconst remainderColor = \"#f0f0f0\";\r\n\r\n\t\t\tconst fixedStackedChartRawData = [\r\n\t\t\t\t// 保持原始结构，方便提取 name 和 value\r\n\t\t\t\t{ value: 15.35, raw: \"Integrated Circuits 15.35%\" },\r\n\t\t\t\t{ value: 12.81, raw: \"Machinery 12.81%\" },\r\n\t\t\t\t{ value: 11.34, raw: \"Vehicles and their parts 11.34%\" },\r\n\t\t\t\t{ value: 7.01, raw: \"Mineral Fuels 7.01%\" },\r\n\t\t\t\t{ value: 5.86, raw: \"Plastics 5.86%\" },\r\n\t\t\t\t{ value: 4.23, raw: \"Iron and Steel 4.23%\" },\r\n\t\t\t\t{ value: 4.16, raw: \"Instruments and Apparatus 4.16%\" },\r\n\t\t\t\t{ value: 3.85, raw: \"Organic Chemicals 3.85%\" },\r\n\t\t\t\t{ value: 35.39, raw: \"Others 35.39%\" }\r\n\t\t\t];\r\n\r\n\t\t\tconst processedField = computed(() => {\r\n\t\t\t\t// 如果是堆叠图，我们使用内部定义的 fixedStackedChartData 并转换为 D3 stack 需要的格式\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t// D3 stack generator 需要的是一个对象数组，每个对象代表一个数据点（在这里我们只有一个数据点，即“总和”）\r\n\t\t\t\t\t// 这个对象的每个属性代表一个系列（即一个商品类别）的值。\r\n\t\t\t\t\tconst dataForStack = {};\r\n\t\t\t\t\tconst nameValueRegex =\r\n\t\t\t\t\t\t/^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/;\r\n\t\t\t\t\tfixedStackedChartRawData.forEach(item => {\r\n\t\t\t\t\t\tconst match = String(item.raw).match(nameValueRegex);\r\n\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\tconst name = match[1].trim();\r\n\t\t\t\t\t\t\tconst value = parseFloat(match[2]);\r\n\t\t\t\t\t\t\tdataForStack[name] = value; // key 是商品名, value 是其百分比\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// D3 stack 通常作用于一个数组，即使只有一个元素\r\n\t\t\t\t\t// console.log(\"Data prepared for D3 stack (single item with categories as keys):\", dataForStack);\r\n\t\t\t\t\treturn [dataForStack]; // 返回包含单个对象的数组\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 对于其他图表类型，沿用之前的逻辑处理 props.field\r\n\t\t\t\tif (!props.field) return null;\r\n\t\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\t\treturn props.field.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tconst valueMatch =\r\n\t\t\t\t\t\t\t\ttypeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t? String(item.raw).match(/([\\d.]+)/)\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\tconst name =\r\n\t\t\t\t\t\t\t\titem.name ||\r\n\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t? String(item.raw).split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t\t: \"Item\");\r\n\t\t\t\t\t\t\tlet value = item.value;\r\n\t\t\t\t\t\t\tif (value === undefined && valueMatch)\r\n\t\t\t\t\t\t\t\tvalue = parseFloat(valueMatch[0]);\r\n\t\t\t\t\t\t\tif (value === undefined) value = 0;\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\t\t\t\ttype: item.type,\r\n\t\t\t\t\t\t\t\tyear: item.year,\r\n\t\t\t\t\t\t\t\tcurrency: item.currency\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn { name: String(item), value: 0, raw: String(item) };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof props.field === \"object\" && props.field !== null) {\r\n\t\t\t\t\tconst valueMatch =\r\n\t\t\t\t\t\ttypeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t? String(props.field.raw).match(/([\\d.]+)/)\r\n\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\tconst name =\r\n\t\t\t\t\t\tprops.field.name ||\r\n\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t? String(props.field.raw).split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t: \"Item\");\r\n\t\t\t\t\tlet value = props.field.value;\r\n\t\t\t\t\tif (value === undefined && valueMatch)\r\n\t\t\t\t\t\tvalue = parseFloat(valueMatch[0]);\r\n\t\t\t\t\tif (value === undefined) value = 0;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\traw: props.field.raw,\r\n\t\t\t\t\t\tunit: props.field.unit,\r\n\t\t\t\t\t\ttype: props.field.type,\r\n\t\t\t\t\t\tyear: props.field.year,\r\n\t\t\t\t\t\tcurrency: props.field.currency\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: String(props.field),\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\traw: String(props.field)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconst hasData = computed(() => {\r\n\t\t\t\tif (!processedField.value) return false;\r\n\t\t\t\t// 对于堆叠图，processedField.value 是一个包含单个对象的数组，该对象包含所有系列\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tArray.isArray(processedField.value) &&\r\n\t\t\t\t\t\tprocessedField.value.length === 1 &&\r\n\t\t\t\t\t\ttypeof processedField.value[0] === \"object\" &&\r\n\t\t\t\t\t\tObject.keys(processedField.value[0]).length > 0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// 其他图表类型的判断逻辑\r\n\t\t\t\tif (Array.isArray(processedField.value))\r\n\t\t\t\t\treturn processedField.value.length > 0;\r\n\t\t\t\tif (typeof processedField.value === \"object\") {\r\n\t\t\t\t\tif (Object.keys(processedField.value).length === 0) return false;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value.value !== undefined ||\r\n\t\t\t\t\t\t(typeof processedField.value.raw === \"string\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"-\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\tString(processedField.value).trim().length > 0 &&\r\n\t\t\t\t\tString(processedField.value).trim() !== \"-\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`\r\n\t\t\t\t);\r\n\t\t\t\twatch(\r\n\t\t\t\t\t() => [props.visualization, props.fieldKey, props.field],\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"SimpleChart WATCH - Processed field for STACKED chart:\",\r\n\t\t\t\t\t\t\t\tJSON.parse(JSON.stringify(processedField.value))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value &&\r\n\t\t\t\t\t\t\t\tisValidPieData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderPieChart.\");\r\n\t\t\t\t\t\t\t\trenderPieChart();\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"bar-chart\" && hasData.value) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderBarChart.\");\r\n\t\t\t\t\t\t\t\trenderBarChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"line-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderLineChart.\");\r\n\t\t\t\t\t\t\t\trenderLineChart();\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"stacked-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\trenderStackedChart();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst isYearEntry = value => {\r\n\t\t\t\tif (typeof value !== \"string\") return false;\r\n\t\t\t\tconst trimmedValue = value.trim();\r\n\t\t\t\treturn (\r\n\t\t\t\t\t/^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) ||\r\n\t\t\t\t\t/^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst safeToNumber = value => {\r\n\t\t\t\tif (value === null || value === undefined) return 0;\r\n\t\t\t\tif (typeof value === \"number\") return value;\r\n\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\tconst yiMatch = value.match(/(-?[\\d.]+)亿/);\r\n\t\t\t\t\tif (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\r\n\t\t\t\t\tconst wanMatch = value.match(/(-?[\\d.]+)万/);\r\n\t\t\t\t\tif (wanMatch) return parseFloat(wanMatch[1]) * 10000;\r\n\t\t\t\t\tconst qianMatch = value.match(/(-?[\\d.]+)千/);\r\n\t\t\t\t\tif (qianMatch) return parseFloat(qianMatch[1]) * 1000;\r\n\t\t\t\t\tconst percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\r\n\t\t\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\t\t\tconst num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\r\n\t\t\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\") {\r\n\t\t\t\t\t// Should not happen if data is processed correctly\r\n\t\t\t\t\treturn safeToNumber(value.value || value.raw);\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\r\n\t\t\t// --- 恢复其他图表的渲染逻辑 ---\r\n\t\t\tconst renderPieChart = () => {\r\n\t\t\t\tif (!pieContainer.value) return;\r\n\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!isValidPieData.value || pieData.value.length === 0) {\r\n\t\t\t\t\td3.select(pieContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst container = d3.select(pieContainer.value);\r\n\t\t\t\tconst containerWidth = pieContainer.value.clientWidth;\r\n\t\t\t\tconst containerHeight = pieContainer.value.clientHeight;\r\n\t\t\t\tconst size = Math.min(containerWidth, containerHeight);\r\n\t\t\t\tconst radius = size / 2;\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${size} ${size}`)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${radius},${radius})`);\r\n\r\n\t\t\t\tconst isSingleValue = props.fieldKey === \"Inflation (CPI)\";\r\n\t\t\t\tconst dataForPie =\r\n\t\t\t\t\tisSingleValue && pieData.value.length === 1\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t{ ...pieData.value[0], color: colors[0], isMainValue: true },\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvalue: Math.max(0, 100 - pieData.value[0].value),\r\n\t\t\t\t\t\t\t\t\tname: \"剩余\",\r\n\t\t\t\t\t\t\t\t\tcolor: remainderColor,\r\n\t\t\t\t\t\t\t\t\tisRemainder: true,\r\n\t\t\t\t\t\t\t\t\tindex: 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: pieData.value.map((d, i) => ({\r\n\t\t\t\t\t\t\t\t...d,\r\n\t\t\t\t\t\t\t\tcolor: colors[i % colors.length],\r\n\t\t\t\t\t\t\t\tisMainValue: true,\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t  }));\r\n\r\n\t\t\t\tconst pieGen = d3\r\n\t\t\t\t\t.pie()\r\n\t\t\t\t\t.value(d => d.value)\r\n\t\t\t\t\t.sort(null);\r\n\t\t\t\tconst arcGen = d3\r\n\t\t\t\t\t.arc()\r\n\t\t\t\t\t.innerRadius(0)\r\n\t\t\t\t\t.outerRadius(radius * 0.9)\r\n\t\t\t\t\t.cornerRadius(2);\r\n\t\t\t\tconst tooltip = d3\r\n\t\t\t\t\t.select(pieContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"d3-tooltip\")\r\n\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".arc\")\r\n\t\t\t\t\t.data(pieGen(dataForPie))\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"arc\")\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", arcGen)\r\n\t\t\t\t\t.attr(\"fill\", d => d.data.color)\r\n\t\t\t\t\t.style(\"opacity\", d => (d.data.isRemainder ? 0.6 : 0.8))\r\n\t\t\t\t\t.style(\"stroke\", \"#fff\")\r\n\t\t\t\t\t.style(\"stroke-width\", 1)\r\n\t\t\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(200)\r\n\t\t\t\t\t\t\t.style(\"opacity\", 1)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1.05)\");\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"visibility\", \"visible\")\r\n\t\t\t\t\t\t\t.html(\r\n\t\t\t\t\t\t\t\t`${d.data.name}: ${d.data.value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mousemove\", function (event) {\r\n\t\t\t\t\t\tconst [mouseX, mouseY] = d3.pointer(event, pieContainer.value);\r\n\t\t\t\t\t\ttooltip\r\n\t\t\t\t\t\t\t.style(\"top\", mouseY + 10 + \"px\")\r\n\t\t\t\t\t\t\t.style(\"left\", mouseX + 10 + \"px\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(200)\r\n\t\t\t\t\t\t\t.style(\"opacity\", d.data.isRemainder ? 0.6 : 0.8)\r\n\t\t\t\t\t\t\t.attr(\"transform\", \"scale(1)\");\r\n\t\t\t\t\t\ttooltip.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"click\", function (event, d) {\r\n\t\t\t\t\t\tif (d.data.isRemainder) return;\r\n\t\t\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\t\t\tindex: d.data.index,\r\n\t\t\t\t\t\t\tdata: d.data,\r\n\t\t\t\t\t\t\tvalue: d.data.value\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (isSingleValue && pieData.value.length === 1) {\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.attr(\"dy\", \".3em\")\r\n\t\t\t\t\t\t.text(\r\n\t\t\t\t\t\t\t`${pieData.value[0].value.toFixed(1)}${\r\n\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t\t\t\t.style(\"fill\", \"#333\");\r\n\t\t\t\t} else if (!isSingleValue && pieData.value.length > 1) {\r\n\t\t\t\t\tconst legendGroup = d3\r\n\t\t\t\t\t\t.select(pieContainer.value)\r\n\t\t\t\t\t\t.select(\"svg\")\r\n\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"class\", \"legend\");\r\n\t\t\t\t\tconst legendItemSize = 10,\r\n\t\t\t\t\t\tlegendSpacing = 4,\r\n\t\t\t\t\t\tlegendPaddingRight = 5,\r\n\t\t\t\t\t\tlegendPaddingTop = 5;\r\n\t\t\t\t\tlet maxLegendTextWidth = 0;\r\n\t\t\t\t\tconst tempSvgForTextMeasure = d3\r\n\t\t\t\t\t\t.select(\"body\")\r\n\t\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t\t.style(\"visibility\", \"hidden\");\r\n\t\t\t\t\tpieData.value.forEach(d => {\r\n\t\t\t\t\t\tconst tempText = tempSvgForTextMeasure\r\n\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t.text(`${d.name}: ${d.value.toFixed(1)}%`)\r\n\t\t\t\t\t\t\t.style(\"font-size\", \"10px\");\r\n\t\t\t\t\t\tmaxLegendTextWidth = Math.max(\r\n\t\t\t\t\t\t\tmaxLegendTextWidth,\r\n\t\t\t\t\t\t\ttempText.node().getComputedTextLength()\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttempSvgForTextMeasure.remove();\r\n\t\t\t\t\tconst legendItemTotalWidth =\r\n\t\t\t\t\t\tlegendItemSize + 4 + maxLegendTextWidth + 5;\r\n\r\n\t\t\t\t\tpieData.value.forEach((d, i) => {\r\n\t\t\t\t\t\tconst legendX = size - legendItemTotalWidth - legendPaddingRight;\r\n\t\t\t\t\t\tconst legendY =\r\n\t\t\t\t\t\t\tlegendPaddingTop + i * (legendItemSize + legendSpacing);\r\n\t\t\t\t\t\tconst legendItem = legendGroup\r\n\t\t\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t\t\t.attr(\"transform\", `translate(${legendX}, ${legendY})`);\r\n\t\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t\t\t.attr(\"width\", legendItemSize)\r\n\t\t\t\t\t\t\t.attr(\"height\", legendItemSize)\r\n\t\t\t\t\t\t\t.attr(\"fill\", colors[i % colors.length]);\r\n\t\t\t\t\t\tlegendItem\r\n\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t.attr(\"x\", legendItemSize + 4)\r\n\t\t\t\t\t\t\t.attr(\"y\", legendItemSize - 1)\r\n\t\t\t\t\t\t\t.text(`${d.name}: ${d.value.toFixed(1)}%`)\r\n\t\t\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t\t\t.style(\"fill\", \"#333\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"renderPieChart FINISHED.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst renderBarChart = () => {\r\n\t\t\t\tif (!barContainer.value) return;\r\n\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!simpleBarData.value || simpleBarData.value.length === 0) {\r\n\t\t\t\t\td3.select(barContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst container = d3.select(barContainer.value);\r\n\t\t\t\tconst width = barContainer.value.clientWidth;\r\n\t\t\t\tconst height = barContainer.value.clientHeight;\r\n\t\t\t\tconst margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\t\t\t\tconst maxYValue =\r\n\t\t\t\t\tprops.unifiedMax !== null\r\n\t\t\t\t\t\t? props.unifiedMax\r\n\t\t\t\t\t\t: d3.max(simpleBarData.value, d => d.value) * 1.1 || 1;\r\n\t\t\t\tconst minYValue = Math.min(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\td3.min(simpleBarData.value, d => d.value) || 0\r\n\t\t\t\t);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([minYValue, maxYValue])\r\n\t\t\t\t\t.range([height - margin.bottom, margin.top]);\r\n\t\t\t\tconst maxBarWidth = 60,\r\n\t\t\t\t\tminSpacing = 10;\r\n\t\t\t\tconst availableWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst barCount = simpleBarData.value.length;\r\n\t\t\t\tconst barWidth =\r\n\t\t\t\t\tbarCount > 0\r\n\t\t\t\t\t\t? Math.min(\r\n\t\t\t\t\t\t\t\tmaxBarWidth,\r\n\t\t\t\t\t\t\t\tMath.max(20, availableWidth / barCount - minSpacing)\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: 20;\r\n\t\t\t\tconst totalBarsWidth =\r\n\t\t\t\t\tbarWidth * barCount + minSpacing * (barCount > 1 ? barCount - 1 : 0);\r\n\t\t\t\tconst startX = margin.left + (availableWidth - totalBarsWidth) / 2;\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => startX + i * (barWidth + minSpacing))\r\n\t\t\t\t\t.attr(\"y\", d => y(Math.max(0, d.value)))\r\n\t\t\t\t\t.attr(\"width\", barWidth)\r\n\t\t\t\t\t.attr(\"height\", d => Math.abs(y(d.value) - y(0)))\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.style(\"opacity\", 0.8);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".bar-label\")\r\n\t\t\t\t\t.data(simpleBarData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"bar-label\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"x\",\r\n\t\t\t\t\t\t(d, i) => startX + i * (barWidth + minSpacing) + barWidth / 2\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.attr(\"y\", height - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t\t\t.attr(\"fill\", \"#666\")\r\n\t\t\t\t\t.text(d => formatNumber(d.value)); // formatNumber was missing props.fieldKey, pass it or simplify\r\n\t\t\t\tconsole.log(\"renderBarChart FINISHED.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst renderLineChart = () => {\r\n\t\t\t\tif (!lineContainer.value) return;\r\n\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tif (!lineData.value || lineData.value.length === 0) {\r\n\t\t\t\t\td3.select(lineContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.text(\"-\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst container = d3.select(lineContainer.value);\r\n\t\t\t\tconst width = lineContainer.value.clientWidth;\r\n\t\t\t\tconst height = lineContainer.value.clientHeight;\r\n\t\t\t\tconst margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t\t\t.attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tlineData.value.length > 1 ? lineData.value.length - 1 : 1\r\n\t\t\t\t\t])\r\n\t\t\t\t\t.range([margin.left, width - margin.right]);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain(d3.extent(lineData.value, d => d.y))\r\n\t\t\t\t\t.range([height - margin.bottom, margin.top]);\r\n\t\t\t\tconst lineGen = d3\r\n\t\t\t\t\t.line()\r\n\t\t\t\t\t.x((d, i) => x(i))\r\n\t\t\t\t\t.y(d => y(d.y))\r\n\t\t\t\t\t.curve(d3.curveMonotoneX);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.datum(lineData.value)\r\n\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t.attr(\"stroke\", \"#3498db\")\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.attr(\"d\", lineGen);\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".dot\")\r\n\t\t\t\t\t.data(lineData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"class\", \"dot\")\r\n\t\t\t\t\t.attr(\"cx\", (d, i) => x(i))\r\n\t\t\t\t\t.attr(\"cy\", d => y(d.y))\r\n\t\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t\t.attr(\"fill\", \"#3498db\");\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".line-label\")\r\n\t\t\t\t\t.data(lineData.value)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"line-label\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => x(i))\r\n\t\t\t\t\t.attr(\"y\", height - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t\t\t.attr(\"fill\", \"#666\")\r\n\t\t\t\t\t.text(d => formatNumber(d.y));\r\n\t\t\t\tconsole.log(\"renderLineChart FINISHED.\");\r\n\t\t\t};\r\n\t\t\t// --- End: 恢复其他图表的渲染逻辑 ---\r\n\r\n\t\t\tconst renderStackedChart = () => {\r\n\t\t\t\t// 100% 纵向堆叠条形图\r\n\t\t\t\tif (!stackedContainer.value) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"renderStackedChart: stackedContainer ref is not available.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// processedField.value for stacked-chart is an array with a single object: [{ \"Cat A\": valA, \"Cat B\": valB, ... }]\r\n\t\t\t\tconst rawDataObject =\r\n\t\t\t\t\tprocessedField.value && processedField.value.length > 0\r\n\t\t\t\t\t\t? processedField.value[0]\r\n\t\t\t\t\t\t: {};\r\n\t\t\t\tconst seriesNames = Object.keys(rawDataObject); // 这些是商品类别名称\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart CALLED. Series Names:\",\r\n\t\t\t\t\tseriesNames,\r\n\t\t\t\t\t\"Raw Data Object:\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(rawDataObject))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (seriesNames.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No series data to render. Clearing container.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No data for chart)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\tconst container = d3.select(stackedContainer.value);\r\n\t\t\t\tlet width = stackedContainer.value.clientWidth;\r\n\t\t\t\tlet height = stackedContainer.value.clientHeight;\r\n\r\n\t\t\t\tif (width === 0 || height === 0) {\r\n\t\t\t\t\tconst parentBounds =\r\n\t\t\t\t\t\tstackedContainer.value.parentElement.getBoundingClientRect();\r\n\t\t\t\t\twidth = parentBounds.width > 0 ? parentBounds.width : 300;\r\n\t\t\t\t\theight = parentBounds.height > 0 ? parentBounds.height : 150;\r\n\t\t\t\t\t// console.warn(`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 为图例调整边距，图例放右边\r\n\t\t\t\tconst margin = { top: 10, right: 150, bottom: 10, left: 10 };\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: Chart dimensions are invalid after applying margins.\",\r\n\t\t\t\t\t\t{ width, height, chartWidth, chartHeight }\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (Chart area too small)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\t// D3 stack generator\r\n\t\t\t\tconst stack = d3\r\n\t\t\t\t\t.stack()\r\n\t\t\t\t\t.keys(seriesNames) // 告诉 stack 如何从数据对象中获取每个系列的值\r\n\t\t\t\t\t.order(d3.stackOrderNone) // 可以根据需要改变堆叠顺序\r\n\t\t\t\t\t.offset(d3.stackOffsetNone); // 我们将手动归一化为百分比\r\n\r\n\t\t\t\tconst stackedSeriesInput = [rawDataObject]; // stack() 需要一个数组作为输入\r\n\t\t\t\tlet series = stack(stackedSeriesInput);\r\n\r\n\t\t\t\t// 计算总和并归一化为0-100的百分比\r\n\t\t\t\tconst total = d3.sum(seriesNames, key => rawDataObject[key]);\r\n\t\t\t\tseries.forEach(s => {\r\n\t\t\t\t\ts.forEach(d => {\r\n\t\t\t\t\t\td[0] = total > 0 ? (d[0] / total) * 100 : 0; // 下边界\r\n\t\t\t\t\t\td[1] = total > 0 ? (d[1] / total) * 100 : 0; // 上边界\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(\"Normalized D3 Stacked Series for 100%:\", JSON.parse(JSON.stringify(series)));\r\n\r\n\t\t\t\t// Y 轴比例尺 (代表整个条的高度，0到100%)\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, 100]) // 0% 到 100%\r\n\t\t\t\t\t.range([chartHeight, 0]); // 反向，0在顶部\r\n\r\n\t\t\t\t// X 轴只有一个条，所以用 scaleBand 但只有一个域\r\n\t\t\t\tconst barCategory = [\"堆叠条\"]; // 只是一个占位符\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(barCategory)\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.6); // 调整条的宽度，使其看起来像一个单独的条\r\n\r\n\t\t\t\t// 绘制堆叠的矩形\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series) // series 是一个数组，每个元素代表一个商品类别（一个堆叠层）\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(d => d) // d 是一个数组，通常只有一个元素，代表这个系列在条上的部分\r\n\t\t\t\t\t.join(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => x(barCategory[i])) // 只有一个条，所以 i 总是0\r\n\t\t\t\t\t.attr(\"y\", d => y(d[1])) // d[1] 是堆叠部分的顶部y坐标\r\n\t\t\t\t\t.attr(\"height\", d => y(d[0]) - y(d[1])) // 高度是底部和顶部y坐标之差\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.append(\"title\") // 添加 tooltip\r\n\t\t\t\t\t.text((d, i, nodes) => {\r\n\t\t\t\t\t\tconst seriesData = d3.select(nodes[i].parentNode).datum(); // 获取系列数据 (包含 key)\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[seriesData.key];\r\n\t\t\t\t\t\tconst percentage = y(d[0]) - y(d[1]); // 高度百分比\r\n\t\t\t\t\t\treturn `${seriesData.key}: ${originalValue.toFixed(\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t)}% (${percentage.toFixed(1)}% of bar)`;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// 添加图例\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\r\n\t\t\t\t\t.attr(\"font-size\", 10)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series) // 使用 series 来获取 key (商品名) 和颜色\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t(d, i) => `translate(${chartWidth + 15},${i * 20})`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", 0)\r\n\t\t\t\t\t.attr(\"width\", 15)\r\n\t\t\t\t\t.attr(\"height\", 15)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length]);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t\t.attr(\"y\", 9.5)\r\n\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t.text(d => {\r\n\t\t\t\t\t\tconst name = d.key; // d.key 是商品名称\r\n\t\t\t\t\t\tconst originalValue = rawDataObject[d.key];\r\n\t\t\t\t\t\treturn `${\r\n\t\t\t\t\t\t\tname.length > 15 ? name.substring(0, 13) + \"...\" : name\r\n\t\t\t\t\t\t} (${originalValue.toFixed(1)}%)`;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(\"renderStackedChart FINISHED drawing (100% stacked bar).\");\r\n\t\t\t};\r\n\r\n\t\t\tconst formatSimpleText = value => {\r\n\t\t\t\tif (!value) return \"-\";\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tconst items = value.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tlet text = item.raw || item.value || JSON.stringify(item);\r\n\t\t\t\t\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\t\t\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn items.length > 2\r\n\t\t\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t\t\t: items.join(\"; \");\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\tlet text = value.raw || item.value || \"-\"; // 修正：应为 value.raw 或 value.value\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tvalue.raw === undefined &&\r\n\t\t\t\t\t\tvalue.value === undefined &&\r\n\t\t\t\t\t\tvalue.name\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\ttext = value.name; // 如果只有name\r\n\t\t\t\t\tif (value.unit) text += ` ${value.unit}`;\r\n\t\t\t\t\tif (value.year) text += ` (${value.year})`;\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\treturn value.toString().length > 50\r\n\t\t\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t\t\t: value.toString();\r\n\t\t\t};\r\n\r\n\t\t\tconst handleTextClick = () => {\r\n\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tdata: processedField.value,\r\n\t\t\t\t\tvalue: processedField.value\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tconst handleTextHover = () => {\r\n\t\t\t\tisTextHovered.value = true;\r\n\t\t\t};\r\n\t\t\tconst resetHover = () => {\r\n\t\t\t\tisTextHovered.value = false;\r\n\t\t\t};\r\n\r\n\t\t\tconst isValidPieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return false;\r\n\t\t\t\treturn (\r\n\t\t\t\t\tpieData.value &&\r\n\t\t\t\t\tpieData.value.length > 0 &&\r\n\t\t\t\t\tpieData.value.every(\r\n\t\t\t\t\t\titem =>\r\n\t\t\t\t\t\t\ttypeof item.name === \"string\" &&\r\n\t\t\t\t\t\t\ttypeof item.value === \"number\" &&\r\n\t\t\t\t\t\t\t!isYearEntry(item.name) &&\r\n\t\t\t\t\t\t\t!isYearEntry(String(item.value))\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst pieData = computed(() => {\r\n\t\t\t\t// 恢复 pieData 逻辑\r\n\t\t\t\tif (props.visualization !== \"pie-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tconst processItem = (item, index) => {\r\n\t\t\t\t\tlet rawValue =\r\n\t\t\t\t\t\ttypeof item === \"object\" && item !== null\r\n\t\t\t\t\t\t\t? item.raw || item.value || item\r\n\t\t\t\t\t\t\t: item;\r\n\t\t\t\t\tif (isYearEntry(rawValue)) return null;\r\n\t\t\t\t\tconst value = safeToNumber(rawValue);\r\n\t\t\t\t\tif (value === null) return null;\r\n\r\n\t\t\t\t\tlet name = \"项目\";\r\n\t\t\t\t\tif (typeof item === \"object\" && item !== null && item.name)\r\n\t\t\t\t\t\tname = item.name;\r\n\t\t\t\t\telse if (typeof item === \"object\" && item !== null && item.raw) {\r\n\t\t\t\t\t\tconst rawText = String(item.raw);\r\n\t\t\t\t\t\tname = rawText.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\r\n\t\t\t\t\t} else if (typeof item === \"string\") {\r\n\t\t\t\t\t\tname = item.replace(/:\\s*[\\d.]+\\%?/g, \"\").trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isYearEntry(name)) return null;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: Math.min(100, Math.max(0, value)),\r\n\t\t\t\t\t\tname: name || \"项目\",\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\treturn processedField.value\r\n\t\t\t\t\t\t.map(processItem)\r\n\t\t\t\t\t\t.filter(item => item !== null);\r\n\t\t\t\t}\r\n\t\t\t\tconst result = processItem(processedField.value, 0);\r\n\t\t\t\treturn result ? [result] : [];\r\n\t\t\t});\r\n\r\n\t\t\tconst simpleBarData = computed(() => {\r\n\t\t\t\t// 恢复 simpleBarData 逻辑\r\n\t\t\t\tif (props.visualization !== \"bar-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tlet values = [];\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\tvalues = processedField.value\r\n\t\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\t\tconst val = item?.value || item?.raw;\r\n\t\t\t\t\t\t\treturn val !== undefined && val !== null && !isYearEntry(val);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.map(item => ({\r\n\t\t\t\t\t\t\tvalue: safeToNumber(item.value || item.raw),\r\n\t\t\t\t\t\t\tname: item.name || \"Bar\"\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst val = processedField.value.value || processedField.value.raw;\r\n\t\t\t\t\tif (val !== undefined && val !== null && !isYearEntry(val)) {\r\n\t\t\t\t\t\tvalues = [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalue: safeToNumber(val),\r\n\t\t\t\t\t\t\t\tname: processedField.value.name || \"Bar\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn values.map((d, index) => ({\r\n\t\t\t\t\t...d,\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tcolor: colors[index % colors.length]\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\r\n\t\t\tconst lineData = computed(() => {\r\n\t\t\t\t// 恢复 lineData 逻辑\r\n\t\t\t\tif (props.visualization !== \"line-chart\" || !processedField.value)\r\n\t\t\t\t\treturn [];\r\n\t\t\t\tif (Array.isArray(processedField.value)) {\r\n\t\t\t\t\treturn processedField.value\r\n\t\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\t\tconst val = item?.value || item?.raw;\r\n\t\t\t\t\t\t\treturn val !== undefined && val !== null && !isYearEntry(val);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.map((item, index) => ({\r\n\t\t\t\t\t\t\tx: index,\r\n\t\t\t\t\t\t\ty: safeToNumber(item.value || item.raw),\r\n\t\t\t\t\t\t\traw: item.raw || item.value,\r\n\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tconst val = processedField.value.value || processedField.value.raw;\r\n\t\t\t\tif (val !== undefined && val !== null && !isYearEntry(val)) {\r\n\t\t\t\t\treturn [{ x: 0, y: safeToNumber(val), raw: val, index: 0 }];\r\n\t\t\t\t}\r\n\t\t\t\treturn [];\r\n\t\t\t});\r\n\r\n\t\t\tconst formatNumber = value => {\r\n\t\t\t\t// 简化版，具体格式化可根据需要调整\r\n\t\t\t\tconst num = Number(value);\r\n\t\t\t\tif (isNaN(num)) return \"0\";\r\n\t\t\t\tif (props.type === \"percentage\") return num.toFixed(1) + \"%\";\r\n\t\t\t\tif (num >= 1e8) return (num / 1e8).toFixed(2) + \"亿\";\r\n\t\t\t\tif (num >= 1e4) return (num / 1e4).toFixed(1) + \"万\";\r\n\t\t\t\treturn num.toFixed(0);\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpieContainer,\r\n\t\t\t\tbarContainer,\r\n\t\t\t\tlineContainer,\r\n\t\t\t\tstackedContainer,\r\n\t\t\t\tformatSimpleText,\r\n\t\t\t\thandleTextClick,\r\n\t\t\t\thandleTextHover,\r\n\t\t\t\tresetHover,\r\n\t\t\t\tisTextHovered,\r\n\t\t\t\thasData,\r\n\t\t\t\tisValidPieData\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -25px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.d3-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\toverflow: visible; /* 改为 visible，允许图例在 margin 外显示 */\r\n\t}\r\n\r\n\t:deep(.d3-tooltip) {\r\n\t\tposition: absolute;\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tpointer-events: none;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tbackground: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t:deep(.tick text) {\r\n\t\tfont-size: 9px;\r\n\t\tfill: #555;\r\n\t}\r\n\t:deep(.tick line) {\r\n\t\tstroke: #e0e0e0;\r\n\t}\r\n\t:deep(path.domain) {\r\n\t\tstroke: #aaa;\r\n\t}\r\n\r\n\t:deep(.stack-bar:hover),\r\n\t:deep(.bar:hover) {\r\n\t\t/* 统一悬停效果 */\r\n\t\topacity: 1 !important;\r\n\t}\r\n\t:deep(.stack-value-label),\r\n\t:deep(.bar-label),\r\n\t:deep(.line-label) {\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-text {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\t\t:deep(.tick text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t\t:deep(.legend text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t} /* 如果图例有 text 元素 */\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAc;;EAD1BC,GAAA;EAW6BD,KAAK,EAAC;;;EAXnCC,GAAA;EAkBID,KAAK,EAAC,oBAAoB;EAC1BE,GAAG,EAAC;;;EAnBRD,GAAA;EAoBeD,KAAK,EAAC;;;EApBrBC,GAAA;EAyBuBD,KAAK,EAAC,oBAAoB;EAACE,GAAG,EAAC;;;EAzBtDD,GAAA;EA0BeD,KAAK,EAAC;;;EA1BrBC,GAAA;EA+BuBD,KAAK,EAAC,oBAAoB;EAACE,GAAG,EAAC;;;EA/BtDD,GAAA;EAgCeD,KAAK,EAAC;;;EAhCrBC,GAAA;EAuCID,KAAK,EAAC,oBAAoB;EAC1BE,GAAG,EAAC;;;EAxCRD,GAAA;EAyCeD,KAAK,EAAC;;;EAzCrBC,GAAA;EAoD6BD,KAAK,EAAC;;;uBAnDlCG,mBAAA,CAqDM,OArDNC,UAqDM,GApDLC,mBAAA,UAAa,EACGC,MAAA,CAAAC,aAAa,oB,cAA7BJ,mBAAA,CASWK,SAAA;IAZbP,GAAA;EAAA,IAIGQ,mBAAA,CAMM;IALLT,KAAK,EAAC,aAAa;IAClBU,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAC,SAAA,CAAe;IAAA;IACtBC,YAAU,EAAAJ,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAI,eAAA,IAAAJ,MAAA,CAAAI,eAAA,IAAAF,SAAA,CAAe;IAAA;IAC3BG,YAAU,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAM,UAAA,IAAAN,MAAA,CAAAM,UAAA,IAAAJ,SAAA,CAAU;IAAA;sBACpBF,MAAA,CAAAO,gBAAgB,CAACC,IAAA,CAAAC,cAAc,oCAExBT,MAAA,CAAAU,aAAa,I,cAAxBnB,mBAAA,CAA2D,OAA3DoB,UAA2D,EAAZ,QAAM,KAXxDlB,mBAAA,e,+BAeuBC,MAAA,CAAAC,aAAa,oB,cAAlCJ,mBAAA,CAMWK,SAAA;IArBbP,GAAA;EAAA,IAcEI,mBAAA,eAAkB,EAGVO,MAAA,CAAAY,OAAO,IAAIZ,MAAA,CAAAa,cAAc,I,cADhCtB,mBAAA,CAG0B,OAH1BuB,UAG0B,kC,cAC1BvB,mBAAA,CAAmC,OAAnCwB,UAAmC,EAAP,GAAC,G,+BAITrB,MAAA,CAAAC,aAAa,oB,cAAlCJ,mBAAA,CAGWK,SAAA;IA3BbP,GAAA;EAAA,IAuBEI,mBAAA,gBAAmB,EAEPO,MAAA,CAAAY,OAAO,I,cAAlBrB,mBAAA,CAAwE,OAAxEyB,UAAwE,kC,cACxEzB,mBAAA,CAAmC,OAAnC0B,UAAmC,EAAP,GAAC,G,+BAITvB,MAAA,CAAAC,aAAa,qB,cAAlCJ,mBAAA,CAGWK,SAAA;IAjCbP,GAAA;EAAA,IA6BEI,mBAAA,gBAAmB,EAEPO,MAAA,CAAAY,OAAO,I,cAAlBrB,mBAAA,CAAyE,OAAzE2B,UAAyE,kC,cACzE3B,mBAAA,CAAmC,OAAnC4B,UAAmC,EAAP,GAAC,G,+BAITzB,MAAA,CAAAC,aAAa,wB,cAAlCJ,mBAAA,CAMWK,SAAA;IA1CbP,GAAA;EAAA,IAmCEI,mBAAA,oBAAuB,EAGfO,MAAA,CAAAY,OAAO,I,cADdrB,mBAAA,CAG8B,OAH9B6B,UAG8B,kC,cAC9B7B,mBAAA,CAA4D,OAA5D8B,WAA4D,EAAhC,4BAA0B,G,8CAGvD9B,mBAAA,CASWK,SAAA;IArDbP,GAAA;EAAA,IA2CEI,mBAAA,UAAa,EAEZI,mBAAA,CAMM;IALLT,KAAK,EAAC,aAAa;IAClBU,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAC,SAAA,CAAe;IAAA;IACtBC,YAAU,EAAAJ,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAI,eAAA,IAAAJ,MAAA,CAAAI,eAAA,IAAAF,SAAA,CAAe;IAAA;IAC3BG,YAAU,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAM,UAAA,IAAAN,MAAA,CAAAM,UAAA,IAAAJ,SAAA,CAAU;IAAA;sBACpBF,MAAA,CAAAO,gBAAgB,CAACC,IAAA,CAAAC,cAAc,oCAExBT,MAAA,CAAAU,aAAa,I,cAAxBnB,mBAAA,CAA2D,OAA3D+B,WAA2D,EAAZ,QAAM,KApDxD7B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}