{"ast":null,"code":"import { ref, computed, onMounted, watch } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: {\n      type: String,\n      default: \"number\"\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n\n    // 数据清洗和类型判断\n    const cleanedValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n\n      // 处理百分比和货币符号\n      const strValue = String(value).replace(/[$,%¥€£]/g, \"\").replace(/\\(.*?\\)/g, \"\") // 移除括号内容\n      .trim();\n      const num = parseFloat(strValue);\n      return isNaN(num) ? strValue : num;\n    };\n\n    // 处理后的数组数据\n    const processedArray = computed(() => {\n      if (!Array.isArray(props.field)) return [];\n      return props.field.map(item => ({\n        value: cleanedValue(item.value),\n        unit: item.unit,\n        year: item.year,\n        raw: item.value\n      })).filter(item => item.value !== null);\n    });\n\n    // 判断显示类型\n    const isSinglePercentage = computed(() => {\n      return props.type === \"percentage\" && !Array.isArray(props.field) && typeof cleanedValue(props.field?.value) === \"number\";\n    });\n    const isTimeSeries = computed(() => {\n      return processedArray.value.length >= 2 && processedArray.value.every(item => item.year && typeof item.value === \"number\");\n    });\n    const isComparison = computed(() => {\n      return processedArray.value.length >= 1 && processedArray.value.length <= 3 && processedArray.value.every(item => typeof item.value === \"number\");\n    });\n    const hasData = computed(() => {\n      if (props.field === null || props.field === undefined) return false;\n      if (Array.isArray(props.field)) return processedArray.value.length > 0;\n      return props.field.value !== undefined && props.field.value !== null;\n    });\n    const isArray = computed(() => Array.isArray(props.field));\n\n    // 格式化文本显示\n    const formatTextValue = item => {\n      if (item.value === null || item.value === undefined) return \"-\";\n      if (typeof item.value === \"number\") {\n        if (props.type === \"percentage\") return `${item.value}%`;\n        return item.value.toLocaleString() + (item.unit ? ` ${item.unit}` : \"\");\n      }\n      return item.raw || item.value || \"-\";\n    };\n\n    // 图表绘制方法\n    const drawPieChart = () => {\n      clearChart(pieChart);\n      if (!pieChart.value) return;\n      const percent = Math.min(100, Math.max(0, cleanedValue(props.field.value)));\n      const data = [percent, 100 - percent];\n      const color = d3.scaleOrdinal([\"#4CAF50\", \"#eee\"]);\n      const width = 80;\n      const height = 80;\n      const radius = Math.min(width, height) / 2;\n      const svg = d3.select(pieChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      const pie = d3.pie();\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n      svg.selectAll(\"path\").data(pie(data)).enter().append(\"path\").attr(\"d\", arc).attr(\"fill\", d => color(d.index));\n      svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.3em\").text(`${percent}%`).style(\"font-size\", \"14px\").style(\"font-weight\", \"bold\");\n    };\n    const drawBarChart = () => {\n      clearChart(barChart);\n      if (!barChart.value || !processedArray.value.length) return;\n      const width = 150;\n      const height = 80;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const data = processedArray.value.map(item => ({\n        label: item.year || item.raw || \"\",\n        value: item.value\n      }));\n      const svg = d3.select(barChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleBand().domain(data.map(d => d.label)).range([margin.left, width - margin.right]).padding(0.2);\n      const y = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).nice().range([height - margin.bottom, margin.top]);\n      svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", d => x(d.label)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => y(0) - y(d.value)).attr(\"fill\", \"#2196F3\");\n      svg.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", d => x(d.label) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => props.type === \"percentage\" ? `${d.value}%` : d.value).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n    };\n    const drawLineChart = () => {\n      clearChart(lineChart);\n      if (!lineChart.value || processedArray.value.length < 2) return;\n      const width = 200;\n      const height = 80;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(lineChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleLinear().domain(d3.extent(processedArray.value, d => d.year)).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain([0, d3.max(processedArray.value, d => d.value)]).nice().range([height - margin.bottom, margin.top]);\n      const line = d3.line().x(d => x(d.year)).y(d => y(d.value)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(processedArray.value).attr(\"fill\", \"none\").attr(\"stroke\", \"#9C27B0\").attr(\"stroke-width\", 2).attr(\"d\", line);\n      svg.selectAll(\"circle\").data(processedArray.value).enter().append(\"circle\").attr(\"cx\", d => x(d.year)).attr(\"cy\", d => y(d.value)).attr(\"r\", 3).attr(\"fill\", \"#9C27B0\");\n      const lastPoint = processedArray.value[processedArray.value.length - 1];\n      svg.append(\"text\").attr(\"x\", x(lastPoint.year) + 10).attr(\"y\", y(lastPoint.value)).attr(\"dy\", \"0.3em\").text(props.type === \"percentage\" ? `${lastPoint.value}%` : lastPoint.value).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n    };\n    const clearChart = element => {\n      if (element?.value) d3.select(element.value).selectAll(\"*\").remove();\n    };\n\n    // 监听数据变化\n    watch(() => [props.field, props.type], () => {\n      if (!hasData.value) return;\n      if (isSinglePercentage.value) drawPieChart();else if (isTimeSeries.value) drawLineChart();else if (isComparison.value) drawBarChart();\n    }, {\n      deep: true,\n      immediate: true\n    });\n    onMounted(() => {\n      if (!hasData.value) return;\n      if (isSinglePercentage.value) drawPieChart();else if (isTimeSeries.value) drawLineChart();else if (isComparison.value) drawBarChart();\n    });\n    const __returned__ = {\n      props,\n      pieChart,\n      barChart,\n      lineChart,\n      cleanedValue,\n      processedArray,\n      isSinglePercentage,\n      isTimeSeries,\n      isComparison,\n      hasData,\n      isArray,\n      formatTextValue,\n      drawPieChart,\n      drawBarChart,\n      drawLineChart,\n      clearChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","d3","props","__props","pieChart","barChart","lineChart","cleanedValue","value","undefined","strValue","String","replace","trim","num","parseFloat","isNaN","processedArray","Array","isArray","field","map","item","unit","year","raw","filter","isSinglePercentage","type","isTimeSeries","length","every","isComparison","hasData","formatTextValue","toLocaleString","drawPieChart","clearChart","percent","Math","min","max","data","color","scaleOrdinal","width","height","radius","svg","select","append","attr","pie","arc","innerRadius","outerRadius","selectAll","enter","d","index","text","style","drawBarChart","margin","top","right","bottom","left","label","x","scaleBand","domain","range","padding","y","scaleLinear","nice","bandwidth","drawLineChart","extent","line","curve","curveMonotoneX","datum","lastPoint","element","remove","deep","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比数据（单个值） -->\r\n\t\t\t<div v-if=\"isSinglePercentage\" class=\"pie-chart\" ref=\"pieChart\"></div>\r\n\r\n\t\t\t<!-- 时间序列数据（折线图） -->\r\n\t\t\t<div v-else-if=\"isTimeSeries\" class=\"line-chart\" ref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 比较数据（柱状图） -->\r\n\t\t\t<div v-else-if=\"isComparison\" class=\"bar-chart\" ref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 纯文本数据 -->\r\n\t\t\t<div v-else class=\"text-value\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div v-for=\"(item, index) in processedArray\" :key=\"index\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"number\"\r\n\t\t}\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 数据清洗和类型判断\r\n\tconst cleanedValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 处理百分比和货币符号\r\n\t\tconst strValue = String(value)\r\n\t\t\t.replace(/[$,%¥€£]/g, \"\")\r\n\t\t\t.replace(/\\(.*?\\)/g, \"\") // 移除括号内容\r\n\t\t\t.trim();\r\n\r\n\t\tconst num = parseFloat(strValue);\r\n\t\treturn isNaN(num) ? strValue : num;\r\n\t};\r\n\r\n\t// 处理后的数组数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!Array.isArray(props.field)) return [];\r\n\t\treturn props.field\r\n\t\t\t.map(item => ({\r\n\t\t\t\tvalue: cleanedValue(item.value),\r\n\t\t\t\tunit: item.unit,\r\n\t\t\t\tyear: item.year,\r\n\t\t\t\traw: item.value\r\n\t\t\t}))\r\n\t\t\t.filter(item => item.value !== null);\r\n\t});\r\n\r\n\t// 判断显示类型\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanedValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst isTimeSeries = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(\r\n\t\t\t\titem => item.year && typeof item.value === \"number\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparison = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.length <= 3 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化文本显示\r\n\tconst formatTextValue = item => {\r\n\t\tif (item.value === null || item.value === undefined) return \"-\";\r\n\r\n\t\tif (typeof item.value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${item.value}%`;\r\n\t\t\treturn item.value.toLocaleString() + (item.unit ? ` ${item.unit}` : \"\");\r\n\t\t}\r\n\r\n\t\treturn item.raw || item.value || \"-\";\r\n\t};\r\n\r\n\t// 图表绘制方法\r\n\tconst drawPieChart = () => {\r\n\t\tclearChart(pieChart);\r\n\t\tif (!pieChart.value) return;\r\n\r\n\t\tconst percent = Math.min(100, Math.max(0, cleanedValue(props.field.value)));\r\n\t\tconst data = [percent, 100 - percent];\r\n\t\tconst color = d3.scaleOrdinal([\"#4CAF50\", \"#eee\"]);\r\n\r\n\t\tconst width = 80;\r\n\t\tconst height = 80;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(pieChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst pie = d3.pie();\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(pie(data))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", d => color(d.index));\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(`${percent}%`)\r\n\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t.style(\"font-weight\", \"bold\");\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tclearChart(barChart);\r\n\t\tif (!barChart.value || !processedArray.value.length) return;\r\n\r\n\t\tconst width = 150;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst data = processedArray.value.map(item => ({\r\n\t\t\tlabel: item.year || item.raw || \"\",\r\n\t\t\tvalue: item.value\r\n\t\t}));\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(barChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(data.map(d => d.label))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.2);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(data, d => d.value)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", d => x(d.label))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => y(0) - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", d => x(d.label) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => (props.type === \"percentage\" ? `${d.value}%` : d.value))\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tclearChart(lineChart);\r\n\t\tif (!lineChart.value || processedArray.value.length < 2) return;\r\n\r\n\t\tconst width = 200;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(lineChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(processedArray.value, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(processedArray.value, d => d.value)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(processedArray.value)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"stroke\", \"#9C27B0\")\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"d\", line);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.attr(\"fill\", \"#9C27B0\");\r\n\r\n\t\tconst lastPoint = processedArray.value[processedArray.value.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 10)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(\r\n\t\t\t\tprops.type === \"percentage\" ? `${lastPoint.value}%` : lastPoint.value\r\n\t\t\t)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst clearChart = element => {\r\n\t\tif (element?.value) d3.select(element.value).selectAll(\"*\").remove();\r\n\t};\r\n\r\n\t// 监听数据变化\r\n\twatch(\r\n\t\t() => [props.field, props.type],\r\n\t\t() => {\r\n\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\tif (isSinglePercentage.value) drawPieChart();\r\n\t\t\telse if (isTimeSeries.value) drawLineChart();\r\n\t\t\telse if (isComparison.value) drawBarChart();\r\n\t\t},\r\n\t\t{ deep: true, immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\tif (!hasData.value) return;\r\n\r\n\t\tif (isSinglePercentage.value) drawPieChart();\r\n\t\telse if (isTimeSeries.value) drawLineChart();\r\n\t\telse if (isComparison.value) drawBarChart();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.text-value {\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.pie-chart,\r\n\t.bar-chart,\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}