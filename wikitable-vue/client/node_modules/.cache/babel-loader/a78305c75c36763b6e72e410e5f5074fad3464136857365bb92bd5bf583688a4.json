{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-db33a0a4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartContainer\",\n  class: \"bar-chart-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"-\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","key","_createElementBlock","_hoisted_1","$setup","hasData","_hoisted_2","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\BarChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"bar-chart-container\">\r\n\t\t<div v-if=\"!hasData\" class=\"no-data\">-</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => value.every(item => \"name\" in item && \"value\" in item)\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"barClick\"]);\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst colors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\"];\r\n\tconst maxBarWidth = 60;\r\n\r\n\tconst hasData = computed(() => props.data.length > 0);\r\n\r\n\tlet svg, x, y, tooltip;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartContainer.value || !hasData.value) return;\r\n\r\n\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\tconst container = d3.select(chartContainer.value);\r\n\t\tconst width = chartContainer.value.clientWidth;\r\n\t\tconst height = chartContainer.value.clientHeight;\r\n\t\tconst margin = { top: 20, right: 120, bottom: 40, left: 40 };\r\n\r\n\t\tsvg = container\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\r\n\t\tconst barsGroup = svg.append(\"g\").attr(\"class\", \"bars-group\");\r\n\r\n\t\tconst legendGroup = svg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t.attr(\"transform\", `translate(${width - 110}, 20)`);\r\n\r\n\t\ttooltip = container\r\n\t\t\t.append(\"div\")\r\n\t\t\t.attr(\"class\", \"chart-tooltip\")\r\n\t\t\t.style(\"opacity\", 0);\r\n\r\n\t\tx = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(props.data.map((d, i) => i))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.2);\r\n\r\n\t\ty = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(props.data, d => d.value)])\r\n\t\t\t.nice()\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst xAxis = d3\r\n\t\t\t.axisBottom(x)\r\n\t\t\t.tickFormat(i => props.data[i].name || `项目${i + 1}`)\r\n\t\t\t.tickSizeOuter(0);\r\n\r\n\t\tconst yAxis = d3.axisLeft(y).tickSizeOuter(0);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"x-axis\")\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(xAxis)\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t.style(\"font-size\", \"11px\")\r\n\t\t\t.style(\"fill\", \"#666\");\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"y-axis\")\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(yAxis)\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.style(\"font-size\", \"11px\")\r\n\t\t\t.style(\"fill\", \"#666\");\r\n\r\n\t\tbarsGroup\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(props.data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\"x\", (d, i) =>\r\n\t\t\t\tprops.data.length === 1\r\n\t\t\t\t\t? (chartContainer.value.clientWidth - maxBarWidth) / 2\r\n\t\t\t\t\t: x(i)\r\n\t\t\t)\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", Math.min(x.bandwidth(), maxBarWidth))\r\n\t\t\t.attr(\"height\", d => y(0) - y(d.value))\r\n\t\t\t.attr(\"rx\", 3)\r\n\t\t\t.attr(\"ry\", 3)\r\n\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t.style(\"opacity\", 0.85)\r\n\t\t\t.style(\"transition\", \"all 0.2s ease\")\r\n\t\t\t.style(\"cursor\", \"pointer\")\r\n\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\td3.select(this)\r\n\t\t\t\t\t.transition()\r\n\t\t\t\t\t.duration(150)\r\n\t\t\t\t\t.style(\"opacity\", 1)\r\n\t\t\t\t\t.attr(\"y\", y(d.value) - 5)\r\n\t\t\t\t\t.attr(\"height\", y(0) - y(d.value) + 5);\r\n\r\n\t\t\t\ttooltip.transition().duration(200).style(\"opacity\", 1);\r\n\r\n\t\t\t\ttooltip\r\n\t\t\t\t\t.html(\r\n\t\t\t\t\t\t`\r\n        <div class=\"tooltip-title\">${d.name || \"数据项\"}</div>\r\n        <div class=\"tooltip-value\">${d.value.toFixed(2)}</div>\r\n      `\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.style(\"left\", event.pageX + 15 + \"px\")\r\n\t\t\t\t\t.style(\"top\", event.pageY - 30 + \"px\");\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", function () {\r\n\t\t\t\td3.select(this)\r\n\t\t\t\t\t.transition()\r\n\t\t\t\t\t.duration(150)\r\n\t\t\t\t\t.style(\"opacity\", 0.85)\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t\t\t.attr(\"height\", d => y(0) - y(d.value));\r\n\r\n\t\t\t\ttooltip.transition().duration(200).style(\"opacity\", 0);\r\n\t\t\t})\r\n\t\t\t.on(\"click\", (event, d) => {\r\n\t\t\t\temit(\"barClick\", d);\r\n\t\t\t});\r\n\r\n\t\tif (props.data.length > 1) {\r\n\t\t\tconst legendItems = legendGroup\r\n\t\t\t\t.selectAll(\".legend-item\")\r\n\t\t\t\t.data(props.data)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"legend-item\")\r\n\t\t\t\t.attr(\"transform\", (d, i) => `translate(0, ${i * 24})`)\r\n\t\t\t\t.style(\"cursor\", \"pointer\")\r\n\t\t\t\t.on(\"click\", (event, d) => emit(\"barClick\", d));\r\n\r\n\t\t\tlegendItems\r\n\t\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"width\", 14)\r\n\t\t\t\t.attr(\"height\", 14)\r\n\t\t\t\t.attr(\"rx\", 3)\r\n\t\t\t\t.attr(\"ry\", 3)\r\n\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t.style(\"opacity\", 0.85)\r\n\t\t\t\t.style(\"transition\", \"opacity 0.2s\")\r\n\t\t\t\t.on(\"mouseover\", function () {\r\n\t\t\t\t\td3.select(this).style(\"opacity\", 1);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\", function () {\r\n\t\t\t\t\td3.select(this).style(\"opacity\", 0.85);\r\n\t\t\t\t});\r\n\r\n\t\t\tlegendItems\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t.attr(\"y\", 11)\r\n\t\t\t\t.text(d => d.name || `项目${d.index + 1}`)\r\n\t\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t\t.style(\"fill\", \"#333\")\r\n\t\t\t\t.style(\"font-family\", \"Arial, sans-serif\");\r\n\r\n\t\t\tlegendItems\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t.attr(\"y\", 25)\r\n\t\t\t\t.text(d => d.value.toFixed(2))\r\n\t\t\t\t.style(\"font-size\", \"11px\")\r\n\t\t\t\t.style(\"fill\", \"#666\");\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", initChart);\r\n\t});\r\n\r\n\twatch(() => props.data, initChart, { deep: true });\r\n</script>\r\n\r\n<style scoped>\r\n\t.bar-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 240px;\r\n\t\tposition: relative;\r\n\t\tbackground: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\ttransition: box-shadow 0.3s ease;\r\n\t}\r\n\r\n\t.bar-chart-container:hover {\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t\tfont-size: 14px;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.chart-tooltip {\r\n\t\tposition: absolute;\r\n\t\tpadding: 10px 12px;\r\n\t\tbackground: rgba(0, 0, 0, 0.85);\r\n\t\tcolor: white;\r\n\t\tborder-radius: 6px;\r\n\t\tfont-size: 13px;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t\ttransition: all 0.2s;\r\n\t\tbox-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);\r\n\t\tmin-width: 120px;\r\n\t}\r\n\r\n\t.tooltip-title {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t.tooltip-value {\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #f0f0f0;\r\n\t}\r\n\r\n\t:deep(.x-axis path),\r\n\t:deep(.y-axis path) {\r\n\t\tstroke: #eee;\r\n\t}\r\n\r\n\t:deep(.x-axis line),\r\n\t:deep(.y-axis line) {\r\n\t\tstroke: #eee;\r\n\t\tstroke-dasharray: 2, 2;\r\n\t}\r\n\r\n\t:deep(.legend-item text) {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tuser-select: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;EADjCC,GAAA;EAEuBD,KAAK,EAAC;;;uBAD5BE,mBAAA,CAEM,OAFNC,UAEM,G,CADOC,MAAA,CAAAC,OAAO,I,cAAnBH,mBAAA,CAA4C,OAA5CI,UAA4C,EAAP,GAAC,KAFxCC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}