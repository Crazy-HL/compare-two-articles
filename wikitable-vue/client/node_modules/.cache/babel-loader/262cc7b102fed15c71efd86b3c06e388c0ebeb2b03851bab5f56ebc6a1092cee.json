{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, watch } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'BarChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    yRange: {\n      type: Array,\n      default: null\n    },\n    compareData: {\n      type: [Array, Object],\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 确保compareData是数组\n    const normalizedCompareData = computed(() => {\n      if (Array.isArray(props.compareData)) return props.compareData;\n      if (props.compareData && typeof props.compareData === \"object\") return [props.compareData];\n      return [];\n    });\n\n    // 格式化数值显示\n    const formatNumber = value => {\n      const num = Number(value);\n      if (isNaN(num)) return \"0\";\n      if (num >= 1e12) return `${(num / 1e12).toFixed(2)}T`;\n      if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\n      if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\n      return num.toFixed(2);\n    };\n    const initChart = () => {\n      if (!chartEl.value) return;\n      chartInstance = echarts.init(chartEl.value);\n\n      // 自动计算Y轴范围\n      const allValues = [...props.data.map(item => Number(item.value) || 0), ...normalizedCompareData.value.map(item => Number(item.value) || 0)].filter(v => !isNaN(v));\n      const maxValue = allValues.length ? Math.max(...allValues) : 100;\n      const minValue = allValues.length ? Math.min(0, ...allValues) : 0;\n      const series = [{\n        name: \"当前数据\",\n        type: \"bar\",\n        barWidth: \"40%\",\n        data: props.data.map(item => Number(item.value) || 0),\n        itemStyle: {\n          color: \"#3498db\"\n        },\n        label: {\n          show: true,\n          position: \"top\",\n          formatter: params => {\n            return formatNumber(params.value);\n          }\n        }\n      }];\n\n      // 使用normalizedCompareData\n      if (normalizedCompareData.value.length > 0) {\n        series.push({\n          name: \"对比数据\",\n          type: \"bar\",\n          barWidth: \"40%\",\n          data: normalizedCompareData.value.map(item => Number(item.value) || 0),\n          itemStyle: {\n            color: \"#e74c3c\"\n          },\n          label: {\n            show: true,\n            position: \"top\",\n            formatter: params => {\n              return formatNumber(params.value);\n            }\n          }\n        });\n      }\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          },\n          formatter: params => {\n            return params.map(param => {\n              return `${param.seriesName}<br/>${param.name}: ${formatNumber(param.value)}`;\n            }).join(\"<br/>\");\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: props.data.map(item => item.name),\n          axisLabel: {\n            interval: 0,\n            rotate: props.data.length > 3 ? 30 : 0\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          min: props.yRange?.[0] ?? minValue,\n          max: props.yRange?.[1] ?? maxValue * 1.1,\n          axisLabel: {\n            formatter: value => {\n              if (value >= 1e12) return `${(value / 1e12).toFixed(1)}T`;\n              if (value >= 1e9) return `${(value / 1e9).toFixed(1)}B`;\n              if (value >= 1e6) return `${(value / 1e6).toFixed(1)}M`;\n              return value;\n            }\n          }\n        },\n        series\n      };\n      chartInstance.setOption(option);\n    };\n    onMounted(() => {\n      initChart();\n      window.addEventListener(\"resize\", () => chartInstance?.resize());\n    });\n    watch(() => [props.data, normalizedCompareData.value, props.yRange], () => {\n      if (chartInstance) {\n        initChart();\n      }\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      normalizedCompareData,\n      formatNumber,\n      initChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","echarts","props","__props","chartEl","chartInstance","normalizedCompareData","Array","isArray","compareData","formatNumber","value","num","Number","isNaN","toFixed","initChart","init","allValues","data","map","item","filter","v","maxValue","length","Math","max","minValue","min","series","name","type","barWidth","itemStyle","color","label","show","position","formatter","params","push","option","tooltip","trigger","axisPointer","param","seriesName","join","grid","left","right","bottom","containLabel","xAxis","axisLabel","interval","rotate","yAxis","yRange","setOption","window","addEventListener","resize","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/BarChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"bar-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tyRange: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tcompareData: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 确保compareData是数组\r\n\tconst normalizedCompareData = computed(() => {\r\n\t\tif (Array.isArray(props.compareData)) return props.compareData;\r\n\t\tif (props.compareData && typeof props.compareData === \"object\")\r\n\t\t\treturn [props.compareData];\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 格式化数值显示\r\n\tconst formatNumber = value => {\r\n\t\tconst num = Number(value);\r\n\t\tif (isNaN(num)) return \"0\";\r\n\r\n\t\tif (num >= 1e12) return `${(num / 1e12).toFixed(2)}T`;\r\n\t\tif (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n\t\tif (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n\t\treturn num.toFixed(2);\r\n\t};\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t// 自动计算Y轴范围\r\n\t\tconst allValues = [\r\n\t\t\t...props.data.map(item => Number(item.value) || 0),\r\n\t\t\t...normalizedCompareData.value.map(item => Number(item.value) || 0)\r\n\t\t].filter(v => !isNaN(v));\r\n\r\n\t\tconst maxValue = allValues.length ? Math.max(...allValues) : 100;\r\n\t\tconst minValue = allValues.length ? Math.min(0, ...allValues) : 0;\r\n\r\n\t\tconst series = [\r\n\t\t\t{\r\n\t\t\t\tname: \"当前数据\",\r\n\t\t\t\ttype: \"bar\",\r\n\t\t\t\tbarWidth: \"40%\",\r\n\t\t\t\tdata: props.data.map(item => Number(item.value) || 0),\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: \"#3498db\"\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tposition: \"top\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn formatNumber(params.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\t// 使用normalizedCompareData\r\n\t\tif (normalizedCompareData.value.length > 0) {\r\n\t\t\tseries.push({\r\n\t\t\t\tname: \"对比数据\",\r\n\t\t\t\ttype: \"bar\",\r\n\t\t\t\tbarWidth: \"40%\",\r\n\t\t\t\tdata: normalizedCompareData.value.map(item => Number(item.value) || 0),\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: \"#e74c3c\"\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tposition: \"top\",\r\n\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\treturn formatNumber(params.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst option = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\taxisPointer: {\r\n\t\t\t\t\ttype: \"shadow\"\r\n\t\t\t\t},\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${param.name}: ${formatNumber(\r\n\t\t\t\t\t\t\t\tparam.value\r\n\t\t\t\t\t\t\t)}`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"3%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: props.data.map(item => item.name),\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\trotate: props.data.length > 3 ? 30 : 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\tmin: props.yRange?.[0] ?? minValue,\r\n\t\t\t\tmax: props.yRange?.[1] ?? maxValue * 1.1,\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: value => {\r\n\t\t\t\t\t\tif (value >= 1e12) return `${(value / 1e12).toFixed(1)}T`;\r\n\t\t\t\t\t\tif (value >= 1e9) return `${(value / 1e9).toFixed(1)}B`;\r\n\t\t\t\t\t\tif (value >= 1e6) return `${(value / 1e6).toFixed(1)}M`;\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(\r\n\t\t() => [props.data, normalizedCompareData.value, props.yRange],\r\n\t\t() => {\r\n\t\t\tif (chartInstance) {\r\n\t\t\t\tinitChart();\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.bar-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 150px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}