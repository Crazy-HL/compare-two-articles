{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"field-visualization\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"debug-overlay\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"chart-container pie-chart\",\n  ref: \"pieChart\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"chart-container line-chart\",\n  ref: \"lineChart\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"chart-container bar-chart\",\n  ref: \"barChart\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"text-display\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.debugMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"类型: \" + _toDisplayString($setup.visualizationType), 1 /* TEXT */), _createElementVNode(\"p\", null, \"数据: \" + _toDisplayString(JSON.stringify($setup.processedArray)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _ctx.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [$setup.visualizationType === 'pie-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : $setup.visualizationType === 'line-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)) : $setup.visualizationType === 'bar-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createCommentVNode(\" 文本显示内容 \")]))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"无数据\"))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","debugMode","_hoisted_2","_createElementVNode","_toDisplayString","visualizationType","JSON","stringify","processedArray","_createCommentVNode","_ctx","hasData","_Fragment","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<div v-if=\"debugMode\" class=\"debug-overlay\">\r\n\t\t\t<p>类型: {{ visualizationType }}</p>\r\n\t\t\t<p>数据: {{ JSON.stringify(processedArray) }}</p>\r\n\t\t</div>\r\n\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-else-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-else-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<div v-else class=\"text-display\">\r\n\t\t\t\t<!-- 文本显示内容 -->\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst debugMode = true; // 设为false关闭调试信息\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 增强的数据清洗\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 特殊处理常见格式\r\n\t\tconst strVal = String(value).trim();\r\n\t\tif (strVal === \"NaN ¥\") return \"人民币 (CNY)\";\r\n\r\n\t\t// 提取数值\r\n\t\tconst num = parseFloat(strVal.replace(/[^0-9.-]/g, \"\"));\r\n\t\treturn isNaN(num) ? value : num;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!Array.isArray(props.field)) return [];\r\n\r\n\t\treturn props.field\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 提取年份\r\n\t\t\t\tlet year = item.year;\r\n\t\t\t\tif (!year && item.raw) {\r\n\t\t\t\t\tconst match = String(item.raw).match(/(\\d{4})/);\r\n\t\t\t\t\tyear = match ? parseInt(match[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null);\r\n\t});\r\n\r\n\t// 可视化类型判断\r\n\tconst visualizationType = computed(() => {\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 自动判断逻辑\r\n\t\tif (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(i => i.year && typeof i.value === \"number\")\r\n\t\t) {\r\n\t\t\treturn \"line-chart\";\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tprocessedArray.value.length > 0 &&\r\n\t\t\tprocessedArray.value.every(i => typeof i.value === \"number\")\r\n\t\t) {\r\n\t\t\treturn \"bar-chart\";\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t) {\r\n\t\t\treturn \"pie-chart\";\r\n\t\t}\r\n\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 基础绘图方法\r\n\tconst drawBaseChart = (element, type) => {\r\n\t\tif (!element?.value) return;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(element.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\");\r\n\r\n\t\t// 测试绘制\r\n\t\tsvg\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"fill\", \"#f0f0f0\");\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", \"50%\")\r\n\t\t\t.attr(\"y\", \"50%\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(`${type} chart`);\r\n\r\n\t\tif (debugMode) {\r\n\t\t\tconsole.log(`基本${type}图表测试绘制完成`, element.value);\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tif (debugMode) {\r\n\t\t\t\tconsole.log(\"字段变化:\", {\r\n\t\t\t\t\tkey: props.fieldKey,\r\n\t\t\t\t\ttype: visualizationType.value,\r\n\t\t\t\t\tdata: processedArray.value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// 先绘制基础图表测试\r\n\t\t\tif (visualizationType.value === \"line-chart\") {\r\n\t\t\t\tdrawBaseChart(lineChart, \"line\");\r\n\t\t\t} else if (visualizationType.value === \"bar-chart\") {\r\n\t\t\t\tdrawBaseChart(barChart, \"bar\");\r\n\t\t\t} else if (visualizationType.value === \"pie-chart\") {\r\n\t\t\t\tdrawBaseChart(pieChart, \"pie\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.debug-overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tpadding: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tz-index: 100;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAqB;;EADjCC,GAAA;EAEwBD,KAAK,EAAC;;;EAF9BC,GAAA;EAUID,KAAK,EAAC,2BAA2B;EACjCE,GAAG,EAAC;;;EAXRD,GAAA;EAeID,KAAK,EAAC,4BAA4B;EAClCE,GAAG,EAAC;;;EAhBRD,GAAA;EAoBID,KAAK,EAAC,2BAA2B;EACjCE,GAAG,EAAC;;;EArBRD,GAAA;EAuBeD,KAAK,EAAC;;;EAvBrBC,GAAA;EA2BcD,KAAK,EAAC;;;uBA1BnBG,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BMC,MAAA,CAAAC,SAAS,I,cAApBH,mBAAA,CAGM,OAHNI,UAGM,GAFLC,mBAAA,CAAkC,WAA/B,MAAI,GAAAC,gBAAA,CAAGJ,MAAA,CAAAK,iBAAiB,kBAC3BF,mBAAA,CAA+C,WAA5C,MAAI,GAAAC,gBAAA,CAAGE,IAAI,CAACC,SAAS,CAACP,MAAA,CAAAQ,cAAc,kB,KAJ1CC,mBAAA,gBAOkBC,IAAA,CAAAC,OAAO,I,cAAvBb,mBAAA,CAmBWc,SAAA;IA1BbhB,GAAA;EAAA,IASUI,MAAA,CAAAK,iBAAiB,oB,cADxBP,mBAAA,CAGsB,OAHtBe,UAGsB,iCAGVb,MAAA,CAAAK,iBAAiB,qB,cAD7BP,mBAAA,CAGuB,OAHvBgB,UAGuB,iCAGXd,MAAA,CAAAK,iBAAiB,oB,cAD7BP,mBAAA,CAGsB,OAHtBiB,UAGsB,kC,cAEtBjB,mBAAA,CAEM,OAFNkB,UAEM,GADLP,mBAAA,YAAe,C,iDAGjBX,mBAAA,CAAqC,OAArCmB,UAAqC,EAAT,KAAG,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}