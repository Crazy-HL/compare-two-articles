{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\",\n  ref: \"containerRef\"\n};\nconst _hoisted_2 = {\n  class: \"mode-toggle\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"table-grid\"\n};\nconst _hoisted_5 = {\n  class: \"header left-column\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"header right-column\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_11 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_12 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"chart-wrapper\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"infobox-grid\"\n};\nconst _hoisted_17 = {\n  class: \"header left-column\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"header right-column\"\n};\nconst _hoisted_20 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_21 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_22 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_23 = {\n  class: \"data-type\"\n};\nconst _hoisted_24 = {\n  class: \"cell right-column\"\n};\nconst _hoisted_25 = {\n  key: 1,\n  class: \"no-infobox-data\"\n};\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-data-message\"\n}, \"未找到可对比的信息框数据\", -1 /* HOISTED */));\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"suggestion\"\n}, [/*#__PURE__*/_createTextVNode(\" 可能原因： \"), /*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"页面不包含标准信息框\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"数据仍在加载中\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"网络请求失败\")])], -1 /* HOISTED */));\nconst _hoisted_28 = [_hoisted_26, _hoisted_27];\nconst _hoisted_29 = {\n  key: 2,\n  class: \"debug-panel\"\n};\nexport function render(_ctx, _cache) {\n  const _component_SparklineChart = _resolveComponent(\"SparklineChart\");\n  const _component_InfoboxField = _resolveComponent(\"InfoboxField\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: _ctx.viewMode === 'chart'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.viewMode = 'chart')\n  }, \" 图表对比模式 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: _ctx.viewMode === 'infobox'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.viewMode = 'infobox'),\n    disabled: !_ctx.hasInfoboxData\n  }, \" 信息框对比模式 \", 10 /* CLASS, PROPS */, _hoisted_3)]), _ctx.viewMode === 'chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 图表对比模式内容 \"), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.processedTable1.title || \"表格1\"), 1 /* TEXT */), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.processedTable2.title || \"表格2\"), 1 /* TEXT */), _ctx.hasData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: attr\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => _ctx.showFullChart(attr, 'left')\n    }, [_ctx.hasDataForAttribute(_ctx.processedTable1, attr) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_SparklineChart, {\n      data: _ctx.processedTable1.timeSeriesData[attr],\n      \"compare-data\": _ctx.processedTable2.timeSeriesData[attr],\n      \"max-width\": _ctx.chartMaxWidth,\n      \"max-height\": _ctx.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": _ctx.leftChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"无数据\"))], 8 /* PROPS */, _hoisted_8), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString(attr), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => _ctx.showFullChart(attr, 'right')\n    }, [_ctx.hasDataForAttribute(_ctx.processedTable2, attr) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createVNode(_component_SparklineChart, {\n      data: _ctx.processedTable2.timeSeriesData[attr],\n      \"compare-data\": _ctx.processedTable1.timeSeriesData[attr],\n      \"max-width\": _ctx.chartMaxWidth,\n      \"max-height\": _ctx.chartMaxHeight,\n      \"show-year-markers\": true,\n      \"line-color\": _ctx.rightChartColor\n    }, null, 8 /* PROPS */, [\"data\", \"compare-data\", \"max-width\", \"max-height\", \"line-color\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \"无数据\"))], 8 /* PROPS */, _hoisted_13)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString(_ctx.leftInfobox.title || \"信息框1\"), 1 /* TEXT */), _hoisted_18, _createElementVNode(\"div\", _hoisted_19, _toDisplayString(_ctx.rightInfobox.title || \"信息框2\"), 1 /* TEXT */), _ctx.hasInfoboxData ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.commonInfoboxFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field\n    }, [_createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_InfoboxField, {\n      value: _ctx.leftInfobox.data[field]\n    }, null, 8 /* PROPS */, [\"value\"])]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, _toDisplayString(field), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_23, _toDisplayString(_ctx.leftInfobox.data[field]?.dataType || \"text\"), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_InfoboxField, {\n      value: _ctx.rightInfobox.data[field]\n    }, null, 8 /* PROPS */, [\"value\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [..._hoisted_28]))])), _createCommentVNode(\" 调试面板（开发时使用） \"), _ctx.isDev ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return _ctx.forceRerender && _ctx.forceRerender(...arguments);\n    })\n  }, \"强制刷新\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return _ctx.logData && _ctx.logData(...arguments);\n    })\n  }, \"打印数据\"), _createElementVNode(\"div\", null, \"Left Infobox Fields: \" + _toDisplayString(Object.keys(_ctx.leftInfobox.data).length), 1 /* TEXT */), _createElementVNode(\"div\", null, \" Right Infobox Fields: \" + _toDisplayString(Object.keys(_ctx.rightInfobox.data).length), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementVNode","_createTextVNode","_hoisted_26","_hoisted_27","_createElementBlock","_hoisted_1","_hoisted_2","_normalizeClass","active","_ctx","viewMode","onClick","_cache","$event","disabled","hasInfoboxData","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_toDisplayString","processedTable1","title","_hoisted_6","_hoisted_7","processedTable2","hasData","_Fragment","_renderList","commonAttributes","attr","showFullChart","hasDataForAttribute","_hoisted_9","_createVNode","_component_SparklineChart","data","timeSeriesData","chartMaxWidth","chartMaxHeight","leftChartColor","_hoisted_10","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_14","rightChartColor","_hoisted_15","_hoisted_13","_hoisted_16","_hoisted_17","leftInfobox","_hoisted_18","_hoisted_19","rightInfobox","commonInfoboxFields","field","_hoisted_20","_component_InfoboxField","value","_hoisted_21","_hoisted_22","_hoisted_23","dataType","_hoisted_24","_hoisted_25","_hoisted_28","isDev","_hoisted_29","forceRerender","arguments","logData","Object","keys","length"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\"\r\n\t\t\t\t:disabled=\"!hasInfoboxData\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"viewMode === 'chart'\" class=\"table-grid\">\r\n\t\t\t<!-- 图表对比模式内容 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-else class=\"infobox-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"field in commonInfoboxFields\" :key=\"field\">\r\n\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"leftInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t\t<div class=\"data-type\">\r\n\t\t\t\t\t\t\t{{ leftInfobox.data[field]?.dataType || \"text\" }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"rightInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<div v-else class=\"no-infobox-data\">\r\n\t\t\t\t<div class=\"no-data-message\">未找到可对比的信息框数据</div>\r\n\t\t\t\t<div class=\"suggestion\">\r\n\t\t\t\t\t可能原因：\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>页面不包含标准信息框</li>\r\n\t\t\t\t\t\t<li>数据仍在加载中</li>\r\n\t\t\t\t\t\t<li>网络请求失败</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 调试面板（开发时使用） -->\r\n\t\t<div v-if=\"isDev\" class=\"debug-panel\">\r\n\t\t\t<button @click=\"forceRerender\">强制刷新</button>\r\n\t\t\t<button @click=\"logData\">打印数据</button>\r\n\t\t\t<div>Left Infobox Fields: {{ Object.keys(leftInfobox.data).length }}</div>\r\n\t\t\t<div>\r\n\t\t\t\tRight Infobox Fields: {{ Object.keys(rightInfobox.data).length }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\t\timport { ref, computed, watch, onMounted, nextTick } from \"vue\";\r\n\t\timport SparklineChart from \"./SparklineChart.vue\";\r\n\t\timport InfoboxField from \"./InfoboxField.vue\";\r\n\r\n\t\tconst props = defineProps({\r\n\t\t\tdiv1RawData: String,\r\n\t\t\tdiv3RawData: String,\r\n\t\t});\r\n\r\n\t\tconst isDev = process.env.NODE_ENV === \"development\";\r\n\t\tconst viewMode = ref(\"chart\");\r\n\t\tconst containerRef = ref(null);\r\n\t\tconst chartMaxWidth = ref(250);\r\n\t\tconst chartMaxHeight = ref(80);\r\n\r\n\t\t// 信息框数据（使用响应式引用）\r\n\t\tconst leftInfobox = ref({\r\n\t\t\ttitle: \"\",\r\n\t\t\ttype: \"none\",\r\n\t\t\tdata: {}\r\n\t\t});\r\n\t\tconst rightInfobox = ref({\r\n\t\t\ttitle: \"\",\r\n\t\t\ttype: \"none\",\r\n\t\t\tdata: {}\r\n\t\t});\r\n\r\n\t\t// 从总线接收数据的方法\r\n\tconst setupBusListeners = () => {\r\n\t  // 监听div1的数据\r\n\t  bus.on('div1_InfoboxData', (data) => {\r\n\t    console.log(\"Received div1 infobox data:\", data);\r\n\t    leftInfobox.value = processInfoboxData(data);\r\n\t  });\r\n\r\n\t  // 监听div3的数据\r\n\t  bus.on('div3_InfoboxData', (data) => {\r\n\t    console.log(\"Received div3 infobox data:\", data);\r\n\t    rightInfobox.value = processInfoboxData(data);\r\n\t  });\r\n\t};\r\n\r\n\t\t// 处理Proxy对象数据\r\n\t\tconst processInfoboxData = data => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!data) return { title: \"\", type: \"none\", data: {} };\r\n\r\n\t\t\t\t// 处理Proxy对象转换为普通对象\r\n\t\t\t\tconst rawData = JSON.parse(JSON.stringify(data));\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: rawData.title || \"无标题\",\r\n\t\t\t\t\ttype: rawData.type || \"未知类型\",\r\n\t\t\t\t\tdata: rawData.data || {}\r\n\t\t\t\t};\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"处理信息框数据失败:\", e);\r\n\t\t\t\treturn { title: \"数据错误\", type: \"error\", data: {} };\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tonMounted(() => {\r\n\t  setupBusListeners();\r\n\r\n\t  // 调试用：模拟数据接收\r\n\t  if (process.env.NODE_ENV === 'development') {\r\n\t    setTimeout(() => {\r\n\t      console.log(\"Simulating bus data...\");\r\n\t      bus.emit('div1_InfoboxData', {\r\n\t        title: \"测试标题1\",\r\n\t        type: \"人物\",\r\n\t        data: { 名称: { text: \"测试1\" } }\r\n\t      });\r\n\t      bus.emit('div3_InfoboxData', {\r\n\t        title: \"测试标题2\",\r\n\t        type: \"人物\",\r\n\t        data: { 名称: { text: \"测试2\" } }\r\n\t      );\r\n\t    }, 2000);\r\n\t  }\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t  bus.off('div1_InfoboxData');\r\n\t  bus.off('div3_InfoboxData');\r\n\t});\r\n\t\t// 监听props变化\r\n\t\twatch(\r\n\t\t\t() => props.div1InfoboxData,\r\n\t\t\tnewData => {\r\n\t\t\t\tleftInfobox.value = processInfoboxData(newData);\r\n\t\t\t\tconsole.log(\"左侧信息框数据:\", leftInfobox.value);\r\n\t\t\t},\r\n\t\t\t{ immediate: true, deep: true }\r\n\t\t);\r\n\r\n\t\twatch(\r\n\t\t\t() => props.div3InfoboxData,\r\n\t\t\tnewData => {\r\n\t\t\t\trightInfobox.value = processInfoboxData(newData);\r\n\t\t\t\tconsole.log(\"右侧信息框数据:\", rightInfobox.value);\r\n\t\t\t},\r\n\t\t\t{ immediate: true, deep: true }\r\n\t\t);\r\n\r\n\t\t// 计算属性\r\n\t\tconst hasInfoboxData = computed(() => {\r\n\t\t\tconst leftFields = Object.keys(leftInfobox.value.data || {});\r\n\t\t\tconst rightFields = Object.keys(rightInfobox.value.data || {});\r\n\t\t\treturn leftFields.length > 0 || rightFields.length > 0;\r\n\t\t});\r\n\r\n\t\tconst commonInfoboxFields = computed(() => {\r\n\t\t\tconst leftFields = Object.keys(leftInfobox.value.data || {});\r\n\t\t\tconst rightFields = Object.keys(rightInfobox.value.data || {});\r\n\t\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t\t});\r\n\r\n\t\t// 调试方法\r\n\t\tconst forceRerender = () => {\r\n\t\t\tleftInfobox.value = { ...leftInfobox.value };\r\n\t\t\trightInfobox.value = { ...rightInfobox.value };\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tconsole.log(\"强制刷新完成\");\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst logData = () => {\r\n\t\t\tconsole.group(\"当前数据状态\");\r\n\t\t\tconsole.log(\"左侧信息框:\", leftInfobox.value);\r\n\t\t\tconsole.log(\"右侧信息框:\", rightInfobox.value);\r\n\t\t\tconsole.log(\"共有字段:\", commonInfoboxFields.value);\r\n\t\t\tconsole.groupEnd();\r\n\t\t};\r\n\r\n\t\t// 开发模式下每5秒自动检查数据\r\n\t\tif (isDev) {\r\n\t\t\tsetInterval(() => {\r\n\t\t\t\tconsole.log(\"数据检查:\", {\r\n\t\t\t\t\tleft: leftInfobox.value,\r\n\t\t\t\t\tright: rightInfobox.value,\r\n\t\t\t\t\thasData: hasInfoboxData.value\r\n\t\t\t\t});\r\n\t\t\t}, 5000);\r\n\t\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.mode-toggle {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.mode-toggle button {\r\n\t\tpadding: 8px 16px;\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.mode-toggle button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.mode-toggle button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 信息框网格样式 */\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tmin-height: 80px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.data-type {\r\n\t\tfont-size: 0.75em;\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-infobox-data {\r\n\t\tgrid-column: 1 / -1;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.suggestion ul {\r\n\t\ttext-align: left;\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 5px auto;\r\n\t}\r\n\r\n\t/* 调试面板 */\r\n\t.debug-panel {\r\n\t\tposition: fixed;\r\n\t\tbottom: 10px;\r\n\t\tright: 10px;\r\n\t\tbackground: rgba(0, 0, 0, 0.7);\r\n\t\tcolor: white;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.debug-panel button {\r\n\t\tmargin: 0 5px;\r\n\t\tpadding: 5px 10px;\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 3px;\r\n\t\tcursor: pointer;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}