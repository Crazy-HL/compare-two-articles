{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d881255\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartEl\",\n  class: \"fixed-pie-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\PieChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"fixed-pie-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: data => {\r\n\t\t\t\treturn data.every(item => {\r\n\t\t\t\t\t// 支持两种格式：\r\n\t\t\t\t\t// 1. { name: \"Agriculture\", value: 22.8, year: \"2023\" }\r\n\t\t\t\t\t// 2. \"Agriculture: 22.8% (2023)\"\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t(item.name && !isNaN(item.value)) ||\r\n\t\t\t\t\t\t(typeof item === \"string\" && item.includes(\":\"))\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\ttitle: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 标准化数据格式\r\n\tconst normalizedData = computed(() => {\r\n\t\treturn props.data\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 处理字符串格式 \"Label: 22.8% (2023)\"\r\n\t\t\t\tif (typeof item === \"string\") {\r\n\t\t\t\t\tconst match = item.match(/(.*?):\\s*([\\d.]+)%?\\s*(?:\\((\\d{4})\\))?/);\r\n\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: match[1].trim(),\r\n\t\t\t\t\t\t\tvalue: parseFloat(match[2]),\r\n\t\t\t\t\t\t\tyear: match[3] || \"\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn { name: item, value: 0 };\r\n\t\t\t\t}\r\n\t\t\t\t// 处理对象格式\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: item.name,\r\n\t\t\t\t\tvalue: parseFloat(item.value),\r\n\t\t\t\t\tyear: item.year || \"\"\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => !isNaN(item.value));\r\n\t});\r\n\r\n\t// 计算比例（确保总和为100%）\r\n\tconst proportionalData = computed(() => {\r\n\t\tconst total = normalizedData.value.reduce(\r\n\t\t\t(sum, item) => sum + Math.abs(item.value),\r\n\t\t\t0\r\n\t\t);\r\n\t\treturn normalizedData.value.map(item => ({\r\n\t\t\t...item,\r\n\t\t\tdisplayValue: total > 0 ? (item.value / total) * 100 : 0\r\n\t\t}));\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value || proportionalData.value.length === 0) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: props.title,\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttop: 10,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\tfontWeight: \"bold\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"item\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\tconst data = proportionalData.value[params.dataIndex];\r\n\t\t\t\t\treturn `\r\n\t          <div style=\"font-weight:bold\">${data.name}</div>\r\n\t          <div>比例: ${params.percent}%</div>\r\n\t          ${data.year ? `<div>年份: ${data.year}</div>` : \"\"}\r\n\t          <div>原始值: ${data.value}%</div>\r\n\t        `;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\torient: \"vertical\",\r\n\t\t\t\tright: 10,\r\n\t\t\t\ttop: \"center\",\r\n\t\t\t\tformatter: name => {\r\n\t\t\t\t\tconst item = proportionalData.value.find(d => d.name === name);\r\n\t\t\t\t\treturn `${name}: ${item?.value}%`;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\tradius: [\"40%\", \"70%\"],\r\n\t\t\t\t\tcenter: [\"50%\", \"55%\"],\r\n\t\t\t\t\tdata: proportionalData.value.map((item, index) => ({\r\n\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\tvalue: item.displayValue,\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tcolor: [\r\n\t\t\t\t\t\t\t\t\"#5470c6\",\r\n\t\t\t\t\t\t\t\t\"#91cc75\",\r\n\t\t\t\t\t\t\t\t\"#fac858\",\r\n\t\t\t\t\t\t\t\t\"#ee6666\",\r\n\t\t\t\t\t\t\t\t\"#73c0de\",\r\n\t\t\t\t\t\t\t\t\"#3ba272\",\r\n\t\t\t\t\t\t\t\t\"#9a60b4\",\r\n\t\t\t\t\t\t\t\t\"#ea7ccc\"\r\n\t\t\t\t\t\t\t][index % 8]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tformatter: `{b}: {d}%`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})),\r\n\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tshadowBlur: 10,\r\n\t\t\t\t\t\t\tshadowOffsetX: 0,\r\n\t\t\t\t\t\t\tshadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(() => [props.data, props.title], initChart, { deep: true });\r\n</script>\r\n\r\n<style scoped>\r\n\t.fixed-pie-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC;;;uBAAzBC,mBAAA,CAAiD,OAAjDC,UAAiD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}