{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    sources: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 颜色集合（确保颜色对比明显）\n    const colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\n\n    // 格式化数值显示\n    const formatNumber = value => {\n      const num = Number(value);\n      return isNaN(num) ? \"0%\" : num.toFixed(2) + \"%\";\n    };\n\n    // 处理合并数据 - 修复数据分组和颜色分配\n    const processedData = computed(() => {\n      if (!props.isCombined || !Array.isArray(props.data)) return props.data;\n\n      // 获取所有有效数据源（优先用props.sources，否则自动从data提取）\n      const validSources = props.sources?.length > 0 ? props.sources : [...new Set(props.data.map(item => item?.source))].filter(Boolean);\n\n      // 按数据源分组，并分配颜色\n      const seriesData = validSources.map((source, index) => {\n        const sourceData = props.data.filter(item => item?.source === source);\n        return {\n          name: source,\n          data: sourceData.map(item => ({\n            value: item.value,\n            year: item.year,\n            unit: item.unit || \"%\"\n          })),\n          color: colorPalette[index % colorPalette.length] // 按索引分配固定颜色\n        };\n      });\n\n      // 获取所有年份用于x轴\n      const allYears = [...new Set(props.data.map(item => item.year))].sort((a, b) => a - b);\n      return {\n        series: seriesData,\n        categories: allYears\n      };\n    });\n    const initChart = () => {\n      if (!chartEl.value) return;\n\n      // 销毁旧图表（避免内存泄漏）\n      if (chartInstance) chartInstance.dispose();\n      chartInstance = echarts.init(chartEl.value);\n\n      // 通用配置\n      const baseOption = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.filter(param => param.value != null).map(param => {\n              return `${param.seriesName}<br/>${param.data.year}: ${formatNumber(param.value)}`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          show: props.isCombined,\n          // 仅合并图表显示图例\n          data: props.isCombined ? processedData.value.series.map(s => s.name) : []\n        },\n        grid: {\n          top: props.isCombined ? \"20%\" : \"15%\",\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          axisLabel: {\n            interval: 0,\n            rotate: 0\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          }\n        }\n      };\n\n      // 合并图表配置\n      if (props.isCombined) {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: processedData.value.categories\n          },\n          yAxis: {\n            ...baseOption.yAxis,\n            min: value => Math.max(0, value.min - 1) // 确保y轴从0开始\n          },\n          series: processedData.value.series.map(series => ({\n            name: series.name,\n            data: series.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: series.color // 线条颜色\n            },\n            itemStyle: {\n              color: series.color // 数据点颜色\n            },\n            label: {\n              show: true,\n              formatter: formatNumber,\n              color: \"#333\"\n            },\n            emphasis: {\n              itemStyle: {\n                borderWidth: 2,\n                borderColor: \"#fff\"\n              }\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      }\n      // 普通折线图配置\n      else {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: props.data.map(item => item.year)\n          },\n          series: [{\n            name: \"数据\",\n            data: props.data.map(item => ({\n              value: item.value,\n              year: item.year\n            })),\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 10,\n            lineStyle: {\n              width: 3,\n              color: colorPalette[0] // 默认第一个颜色\n            },\n            label: {\n              show: true,\n              formatter: formatNumber\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n\n      // 响应式调整大小\n      window.addEventListener(\"resize\", handleResize);\n    };\n    const handleResize = () => chartInstance?.resize();\n\n    // 生命周期和监听\n    onMounted(initChart);\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n\n    // 深度监听数据变化\n    watch(() => [props.data, props.isCombined, props.sources], () => initChart(), {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      formatNumber,\n      processedData,\n      initChart,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","computed","echarts","props","__props","chartEl","chartInstance","colorPalette","formatNumber","value","num","Number","isNaN","toFixed","processedData","isCombined","Array","isArray","data","validSources","sources","length","Set","map","item","source","filter","Boolean","seriesData","index","sourceData","name","year","unit","color","allYears","sort","a","b","series","categories","initChart","dispose","init","baseOption","tooltip","trigger","formatter","params","param","seriesName","join","legend","show","s","grid","top","left","right","bottom","containLabel","xAxis","type","axisLabel","interval","rotate","yAxis","option","min","Math","max","symbol","symbolSize","lineStyle","width","itemStyle","label","emphasis","borderWidth","borderColor","setOption","window","addEventListener","handleResize","resize","removeEventListener","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount, computed } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tsources: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 颜色集合（确保颜色对比明显）\r\n\tconst colorPalette = [\"#4e79a7\", \"#e15759\", \"#76b7b2\", \"#f28e2b\", \"#59a14f\"];\r\n\r\n\t// 格式化数值显示\r\n\tconst formatNumber = value => {\r\n\t\tconst num = Number(value);\r\n\t\treturn isNaN(num) ? \"0%\" : num.toFixed(2) + \"%\";\r\n\t};\r\n\r\n\t// 处理合并数据 - 修复数据分组和颜色分配\r\n\tconst processedData = computed(() => {\r\n\t\tif (!props.isCombined || !Array.isArray(props.data)) return props.data;\r\n\r\n\t\t// 获取所有有效数据源（优先用props.sources，否则自动从data提取）\r\n\t\tconst validSources =\r\n\t\t\tprops.sources?.length > 0\r\n\t\t\t\t? props.sources\r\n\t\t\t\t: [...new Set(props.data.map(item => item?.source))].filter(Boolean);\r\n\r\n\t\t// 按数据源分组，并分配颜色\r\n\t\tconst seriesData = validSources.map((source, index) => {\r\n\t\t\tconst sourceData = props.data.filter(item => item?.source === source);\r\n\t\t\treturn {\r\n\t\t\t\tname: source,\r\n\t\t\t\tdata: sourceData.map(item => ({\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tyear: item.year,\r\n\t\t\t\t\tunit: item.unit || \"%\"\r\n\t\t\t\t})),\r\n\t\t\t\tcolor: colorPalette[index % colorPalette.length] // 按索引分配固定颜色\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// 获取所有年份用于x轴\r\n\t\tconst allYears = [...new Set(props.data.map(item => item.year))].sort(\r\n\t\t\t(a, b) => a - b\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tseries: seriesData,\r\n\t\t\tcategories: allYears\r\n\t\t};\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\t// 销毁旧图表（避免内存泄漏）\r\n\t\tif (chartInstance) chartInstance.dispose();\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t// 通用配置\r\n\t\tconst baseOption = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${\r\n\t\t\t\t\t\t\t\tparam.data.year\r\n\t\t\t\t\t\t\t}: ${formatNumber(param.value)}`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: props.isCombined, // 仅合并图表显示图例\r\n\t\t\t\tdata: props.isCombined\r\n\t\t\t\t\t? processedData.value.series.map(s => s.name)\r\n\t\t\t\t\t: []\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: props.isCombined ? \"20%\" : \"15%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"3%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tinterval: 0,\r\n\t\t\t\t\trotate: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 合并图表配置\r\n\t\tif (props.isCombined) {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: processedData.value.categories\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\t...baseOption.yAxis,\r\n\t\t\t\t\tmin: value => Math.max(0, value.min - 1) // 确保y轴从0开始\r\n\t\t\t\t},\r\n\t\t\t\tseries: processedData.value.series.map(series => ({\r\n\t\t\t\t\tname: series.name,\r\n\t\t\t\t\tdata: series.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\tcolor: series.color // 线条颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: series.color // 数据点颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tformatter: formatNumber,\r\n\t\t\t\t\t\tcolor: \"#333\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tborderColor: \"#fff\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\t\t// 普通折线图配置\r\n\t\telse {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: props.data.map(item => item.year)\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\tdata: props.data.map(item => ({\r\n\t\t\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\t\t\tyear: item.year\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\tsymbolSize: 10,\r\n\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\tcolor: colorPalette[0] // 默认第一个颜色\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tformatter: formatNumber\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\r\n\t\t// 响应式调整大小\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\tconst handleResize = () => chartInstance?.resize();\r\n\r\n\t// 生命周期和监听\r\n\tonMounted(initChart);\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\t// 深度监听数据变化\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined, props.sources],\r\n\t\t() => initChart(),\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}