{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-db33a0a4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartEl\",\n  class: \"bar-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\BarChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"bar-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: data => {\r\n\t\t\t\t// 验证数据格式：[{name, value}]\r\n\t\t\t\treturn data.every(item => item.name && !isNaN(item.value));\r\n\t\t\t}\r\n\t\t},\r\n\t\ttitle: String\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value || props.data.length === 0) return;\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: props.title,\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttop: 10,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 14\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\taxisPointer: {\r\n\t\t\t\t\ttype: \"shadow\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tdata: props.data.map(item => item.name),\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\trotate: 45,\r\n\t\t\t\t\tinterval: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\"\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"值\",\r\n\t\t\t\t\ttype: \"bar\",\r\n\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: \"#5470c6\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(() => [props.data, props.title], initChart, { deep: true });\r\n</script>\r\n\r\n<style scoped>\r\n\t.bar-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC;;;uBAAzBC,mBAAA,CAA2C,OAA3CC,UAA2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}