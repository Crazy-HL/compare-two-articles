{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"劳动力分布比例\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n\n    // 按差异程度排序的字段（确保文本排在最后）\n    const sortedFields = computed(() => {\n      if (!comparableFields.value.length) return [];\n      return [...comparableFields.value].sort((a, b) => {\n        const aScore = calculateDifferenceScore(a);\n        const bScore = calculateDifferenceScore(b);\n\n        // 数值差异大的排前面，文本差异排最后\n        if (a.type === \"text\" && b.type !== \"text\") return 1;\n        if (a.type !== \"text\" && b.type === \"text\") return -1;\n        if (a.type === \"text\" && b.type === \"text\") {\n          // 文本相同排最后\n          return aScore - bScore;\n        }\n\n        // 数值类型按差异程度排序\n        return bScore - aScore;\n      });\n    });\n\n    // 计算字段差异分数（确保文本得分最低）\n    const calculateDifferenceScore = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      if (!leftData.length || !rightData.length) return 0;\n\n      // 文本类型比较（得分设为负数确保排在最后）\n      if (field.type === \"text\") {\n        return leftData[0] === rightData[0] ? -20 : -10; // 相同得-20，不同得-10\n      }\n\n      // 数值类型比较（确保基础得分高于文本）\n      if (field.type === \"number\" || field.type === \"percentage\") {\n        const leftVal = parseFloat(leftData[0]);\n        const rightVal = parseFloat(rightData[0]);\n        if (isNaN(leftVal) || isNaN(rightVal)) return 0;\n        const absDiff = Math.abs(leftVal - rightVal);\n        let score = 50 + absDiff * getFieldWeight(field.key); // 基础分50\n\n        // 趋势相反（额外加50分）\n        if (leftVal > 0 && rightVal < 0 || leftVal < 0 && rightVal > 0) {\n          score += 150;\n        }\n\n        // 特殊比例关系（额外加30分）\n        if (field.key.toLowerCase().includes(\"per capita\") || field.key.toLowerCase().includes(\"ratio\")) {\n          score += 30;\n        }\n        return score;\n      }\n      return 0;\n    };\n\n    // 字段重要性权重（GDP最重要）\n    const getFieldWeight = fieldKey => {\n      const weights = {\n        GDP: 2.0,\n        // GDP权重最高\n        Population: 1.5,\n        // 人口次之\n        \"GDP growth\": 1.8,\n        // 增长率重要\n        Inflation: 1.3,\n        // 通胀率\n        Labor: 1.2 // 劳动力\n        // 其他字段默认权重为1\n      };\n\n      // 查找匹配的权重（支持部分匹配）\n      for (const [key, weight] of Object.entries(weights)) {\n        if (fieldKey.toLowerCase().includes(key.toLowerCase())) {\n          return weight;\n        }\n      }\n      return 1; // 默认权重\n    };\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: infobox.title,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`highlight-${divId}-paragraphs`, fieldKey);\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`clear-${divId}-highlights`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n      return [];\n    };\n    const handleMiddleColumnClick = field => {\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: getField(leftInfobox.value, field.key),\n        rightData: getField(rightInfobox.value, field.key),\n        leftTitle: leftInfobox.value.title,\n        rightTitle: rightInfobox.value.title,\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n      bus.emit(\"highlight-div1-paragraphs\", field.key);\n      bus.emit(\"highlight-div3-paragraphs\", field.key);\n    };\n    const showCombinedChart = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      currentChart.value = {\n        title: `合并图表 - ${field.key}`,\n        field: field,\n        data: [...leftData, ...rightData]\n      };\n      showFullChartModal.value = true;\n    };\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      COMPARABLE_FIELDS,\n      sortedFields,\n      calculateDifferenceScore,\n      getFieldWeight,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      getField,\n      handleMiddleColumnClick,\n      showCombinedChart,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","sortedFields","comparableFields","value","length","sort","a","b","aScore","calculateDifferenceScore","bScore","leftData","getField","rightData","leftVal","parseFloat","rightVal","isNaN","absDiff","Math","abs","score","getFieldWeight","toLowerCase","includes","fieldKey","weights","GDP","Population","Inflation","Labor","weight","Object","entries","showFullChart","infobox","closeFullChart","hoverInfobox","side","infoboxTitle","divId","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","section","values","undefined","Array","isArray","handleMiddleColumnClick","leftTitle","rightTitle","fieldType","fieldLabel","showCombinedChart","filter","processInfoboxData","sections","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"对比分析\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t⚖️\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"合并图表\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\t📊\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"劳动力分布比例\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 按差异程度排序的字段（确保文本排在最后）\r\n\tconst sortedFields = computed(() => {\r\n\t\tif (!comparableFields.value.length) return [];\r\n\r\n\t\treturn [...comparableFields.value].sort((a, b) => {\r\n\t\t\tconst aScore = calculateDifferenceScore(a);\r\n\t\t\tconst bScore = calculateDifferenceScore(b);\r\n\r\n\t\t\t// 数值差异大的排前面，文本差异排最后\r\n\t\t\tif (a.type === \"text\" && b.type !== \"text\") return 1;\r\n\t\t\tif (a.type !== \"text\" && b.type === \"text\") return -1;\r\n\t\t\tif (a.type === \"text\" && b.type === \"text\") {\r\n\t\t\t\t// 文本相同排最后\r\n\t\t\t\treturn aScore - bScore;\r\n\t\t\t}\r\n\r\n\t\t\t// 数值类型按差异程度排序\r\n\t\t\treturn bScore - aScore;\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算字段差异分数（确保文本得分最低）\r\n\tconst calculateDifferenceScore = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tif (!leftData.length || !rightData.length) return 0;\r\n\r\n\t\t// 文本类型比较（得分设为负数确保排在最后）\r\n\t\tif (field.type === \"text\") {\r\n\t\t\treturn leftData[0] === rightData[0] ? -20 : -10; // 相同得-20，不同得-10\r\n\t\t}\r\n\r\n\t\t// 数值类型比较（确保基础得分高于文本）\r\n\t\tif (field.type === \"number\" || field.type === \"percentage\") {\r\n\t\t\tconst leftVal = parseFloat(leftData[0]);\r\n\t\t\tconst rightVal = parseFloat(rightData[0]);\r\n\r\n\t\t\tif (isNaN(leftVal) || isNaN(rightVal)) return 0;\r\n\r\n\t\t\tconst absDiff = Math.abs(leftVal - rightVal);\r\n\t\t\tlet score = 50 + absDiff * getFieldWeight(field.key); // 基础分50\r\n\r\n\t\t\t// 趋势相反（额外加50分）\r\n\t\t\tif ((leftVal > 0 && rightVal < 0) || (leftVal < 0 && rightVal > 0)) {\r\n\t\t\t\tscore += 150;\r\n\t\t\t}\r\n\r\n\t\t\t// 特殊比例关系（额外加30分）\r\n\t\t\tif (\r\n\t\t\t\tfield.key.toLowerCase().includes(\"per capita\") ||\r\n\t\t\t\tfield.key.toLowerCase().includes(\"ratio\")\r\n\t\t\t) {\r\n\t\t\t\tscore += 30;\r\n\t\t\t}\r\n\r\n\t\t\treturn score;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 字段重要性权重（GDP最重要）\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 2.0, // GDP权重最高\r\n\t\t\tPopulation: 1.5, // 人口次之\r\n\t\t\t\"GDP growth\": 1.8, // 增长率重要\r\n\t\t\tInflation: 1.3, // 通胀率\r\n\t\t\tLabor: 1.2 // 劳动力\r\n\t\t\t// 其他字段默认权重为1\r\n\t\t};\r\n\r\n\t\t// 查找匹配的权重（支持部分匹配）\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1; // 默认权重\r\n\t};\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}