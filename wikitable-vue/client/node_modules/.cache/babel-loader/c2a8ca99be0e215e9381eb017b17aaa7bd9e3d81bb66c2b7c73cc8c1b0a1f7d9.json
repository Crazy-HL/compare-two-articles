{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  __name: 'BaseWikipedia',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref(\"\"); // 选中的文字\n    const showPopup = ref(false); // 是否显示弹出框\n    const popupStyle = ref({}); // 控制弹出框位置\n    const divRef = ref(null); // `Div1` 的 DOM 参考\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **高亮并放大选中文字**\n    const handleSelection = event => {\n      const selection = window.getSelection();\n      const text = selection.toString().trim();\n      if (text) {\n        selectedText.value = text;\n        showPopup.value = true;\n\n        // 获取 Div1 的位置信息\n        const divRect = divRef.value.getBoundingClientRect();\n\n        // 计算弹出框的绝对位置（居中显示）\n        const popupTop = divRect.top + divRect.height / 2;\n        const popupLeft = divRect.left + divRect.width / 2;\n\n        // 设置弹出框样式\n        popupStyle.value = {\n          top: `${popupTop}px`,\n          left: `${popupLeft}px`,\n          transform: \"translate(-50%, -50%)\",\n          width: \"80%\",\n          maxWidth: \"500px\",\n          fontSize: \"1.5rem\"\n        };\n      }\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value = false;\n      selectedText.value = \"\";\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(() => {\n      fetchWikipediaContent();\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      popupStyle,\n      divRef,\n      fetchWikipediaContent,\n      handleSelection,\n      closePopup,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","props","__props","pageHtml","loading","error","selectedText","showPopup","popupStyle","divRef","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","contentElement","querySelector","value","innerHTML","err","message","handleSelection","event","selection","window","getSelection","toString","trim","divRect","getBoundingClientRect","popupTop","top","height","popupLeft","left","width","transform","maxWidth","fontSize","closePopup"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\t:class=\"['div0', selectContentClass]\"\r\n\t\t:id=\"divId\"\r\n\t\tref=\"divRef\"\r\n\t\t@click=\"closePopup\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<div v-if=\"loading\" class=\"loading-container\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">Loading...</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<div v-else-if=\"error\" class=\"error-container\">\r\n\t\t\t<div class=\"error-icon\">⚠️</div>\r\n\t\t\t<div class=\"error-message\">{{ error }}</div>\r\n\t\t\t<button class=\"retry-button\" @click=\"fetchWikipediaContent\">重试</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 选中内容放大显示（仅限 Div1 内部） -->\r\n\t\t<div v-if=\"showPopup\" class=\"text-popup\" :style=\"popupStyle\" @click.stop>\r\n\t\t\t<p>{{ selectedText }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst popupStyle = ref({}); // 控制弹出框位置\r\n\tconst divRef = ref(null); // `Div1` 的 DOM 参考\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **高亮并放大选中文字**\r\n\tconst handleSelection = event => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tconst text = selection.toString().trim();\r\n\r\n\t\tif (text) {\r\n\t\t\tselectedText.value = text;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 获取 Div1 的位置信息\r\n\t\t\tconst divRect = divRef.value.getBoundingClientRect();\r\n\r\n\t\t\t// 计算弹出框的绝对位置（居中显示）\r\n\t\t\tconst popupTop = divRect.top + divRect.height / 2;\r\n\t\t\tconst popupLeft = divRect.left + divRect.width / 2;\r\n\r\n\t\t\t// 设置弹出框样式\r\n\t\t\tpopupStyle.value = {\r\n\t\t\t\ttop: `${popupTop}px`,\r\n\t\t\t\tleft: `${popupLeft}px`,\r\n\t\t\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t\t\twidth: \"80%\",\r\n\t\t\t\tmaxWidth: \"500px\",\r\n\t\t\t\tfontSize: \"1.5rem\"\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* Wikipedia 内容 */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tfont-size: 0.6vw;\r\n\t}\r\n\r\n\t/* 选中内容的弹出框（仅限 Div1 内部） */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\tbackground: rgba(255, 255, 255, 0.95);\r\n\t\tpadding: 15px 20px;\r\n\t\tbox-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);\r\n\t\tborder-radius: 8px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #333;\r\n\t\tz-index: 10;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 加载动画 */\r\n\t.loading-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 200px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: scale(0.9);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}