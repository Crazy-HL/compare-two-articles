{"ast":null,"code":"import { computed } from \"vue\";\nimport InfoboxField from \"./InfoboxField.vue\";\nimport PieChart from \"./charts/PieChart.vue\";\nimport BarChart from \"./charts/BarChart.vue\";\nimport LineChart from \"./charts/LineChart.vue\";\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String,\n    yRange: Array,\n    compareData: [Array, Object]\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 确保compareData始终是数组\n    const normalizedCompareData = computed(() => {\n      if (Array.isArray(props.compareData)) return props.compareData;\n      if (props.compareData && typeof props.compareData === \"object\") return [props.compareData];\n      return [];\n    });\n\n    // 格式化文本值\n    const formatTextValue = value => {\n      if (!value) return \"-\";\n      if (Array.isArray(value)) {\n        return value.map(item => item.raw || item.value || item).join(\"; \");\n      }\n      if (typeof value === \"object\") {\n        return value.raw || value.value || JSON.stringify(value);\n      }\n      return value;\n    };\n\n    // 提取数值从字符串中（处理$、¥等货币符号和单位）\n    const extractNumber = str => {\n      if (typeof str === \"number\") return str;\n      if (!str) return null;\n\n      // 处理类似 \"$19.53 trillion (nominal; 2025)\" 的字符串\n      const match = str.toString().match(/(\\$|¥)?\\s*([\\d,.]+)\\s*(million|billion|trillion)?/);\n      if (match) {\n        let num = parseFloat(match[2].replace(/,/g, \"\"));\n\n        // 处理单位换算\n        if (match[3] === \"million\") num *= 1e6;\n        if (match[3] === \"billion\") num *= 1e9;\n        if (match[3] === \"trillion\") num *= 1e12;\n        return num;\n      }\n      return parseFloat(str) || null;\n    };\n\n    // 提取图表数据 - 饼图\n    const pieChartData = computed(() => {\n      if (!props.field) return [];\n\n      // 处理百分比数据\n      if (props.type === \"percentage\") {\n        // 处理数组数据\n        if (Array.isArray(props.field)) {\n          return props.field.filter(item => {\n            const value = item.value || item.raw;\n            return value && extractNumber(value) !== null;\n          }).map((item, index) => {\n            let value = extractNumber(item.value || item.raw);\n            // 确保百分比值在0-100之间\n            value = Math.min(100, Math.max(0, value || 0));\n            return {\n              name: item.raw ? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : `项目${index + 1}`,\n              value\n            };\n          });\n        }\n\n        // 处理对象数据\n        if (typeof props.field === \"object\") {\n          const value = extractNumber(props.field.value || props.field.raw);\n          if (value !== null) {\n            const adjustedValue = Math.min(100, Math.max(0, value));\n            return [{\n              name: props.field.raw ? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : \"项目\",\n              value: adjustedValue,\n              // 单个数据点时添加一个对比项\n              ...(adjustedValue === 100 ? [] : {\n                _contrast: {\n                  name: \"对比\",\n                  value: 100 - adjustedValue\n                }\n              })\n            }];\n          }\n        }\n      }\n      return [];\n    });\n\n    // 提取图表数据 - 柱状图\n    const barChartData = computed(() => {\n      if (!props.field) return [];\n\n      // 处理数组数据\n      if (Array.isArray(props.field)) {\n        return props.field.filter(item => {\n          const value = item.value || item.raw;\n          return value && extractNumber(value) !== null;\n        }).map((item, index) => {\n          const value = extractNumber(item.value || item.raw);\n          return {\n            name: item.raw ? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : `项目${index + 1}`,\n            value: value || 0\n          };\n        });\n      }\n\n      // 处理对象数据\n      if (typeof props.field === \"object\") {\n        const value = extractNumber(props.field.value || props.field.raw);\n        if (value !== null) {\n          return [{\n            name: props.field.raw ? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\") : \"项目\",\n            value\n          }];\n        }\n      }\n\n      // 处理简单值\n      if (typeof props.field === \"string\" || typeof props.field === \"number\") {\n        const value = extractNumber(props.field);\n        if (value !== null) {\n          return [{\n            name: props.fieldKey || \"值\",\n            value\n          }];\n        }\n      }\n      return [];\n    });\n\n    // 提取图表数据 - 折线图\n    const lineChartData = computed(() => {\n      if (!props.field) return [];\n\n      // 处理数组数据\n      if (Array.isArray(props.field)) {\n        return props.field.filter(item => item.value !== undefined).map((item, index) => {\n          const value = parseFloat(item.value) || 0;\n          const year = item.year || index + 1;\n          return {\n            year,\n            value\n          };\n        }).sort((a, b) => a.year - b.year);\n      }\n\n      // 处理对象数据\n      if (typeof props.field === \"object\" && props.field.value !== undefined) {\n        const value = parseFloat(props.field.value) || 0;\n        const year = props.field.year || 1;\n        return [{\n          year,\n          value\n        }];\n      }\n      return [];\n    });\n    const hasChartData = computed(() => {\n      switch (props.visualization) {\n        case \"pie-chart\":\n          return pieChartData.value.length > 0;\n        case \"bar-chart\":\n          return barChartData.value.length > 0;\n        case \"line-chart\":\n          return lineChartData.value.length > 0;\n        default:\n          return false;\n      }\n    });\n    const __returned__ = {\n      props,\n      normalizedCompareData,\n      formatTextValue,\n      extractNumber,\n      pieChartData,\n      barChartData,\n      lineChartData,\n      hasChartData,\n      computed,\n      InfoboxField,\n      PieChart,\n      BarChart,\n      LineChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","InfoboxField","PieChart","BarChart","LineChart","props","__props","normalizedCompareData","Array","isArray","compareData","formatTextValue","value","map","item","raw","join","JSON","stringify","extractNumber","str","match","toString","num","parseFloat","replace","pieChartData","field","type","filter","index","Math","min","max","name","adjustedValue","_contrast","barChartData","fieldKey","lineChartData","undefined","year","sort","a","b","hasChartData","visualization","length"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\" :data-viz=\"visualization\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<InfoboxField :value=\"formatTextValue(field)\" />\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<PieChart :data=\"pieChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<BarChart\r\n\t\t\t\t\t:data=\"barChartData\"\r\n\t\t\t\t\t:y-range=\"yRange\"\r\n\t\t\t\t\t:compare-data=\"normalizedCompareData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasChartData\" class=\"chart-container\">\r\n\t\t\t\t<LineChart :data=\"lineChartData\" />\r\n\t\t\t</div>\r\n\t\t\t<div v-else class=\"no-data\">无可用数据</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<InfoboxField :value=\"field\" />\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport PieChart from \"./charts/PieChart.vue\";\r\n\timport BarChart from \"./charts/BarChart.vue\";\r\n\timport LineChart from \"./charts/LineChart.vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String,\r\n\t\tyRange: Array,\r\n\t\tcompareData: [Array, Object]\r\n\t});\r\n\r\n\t// 确保compareData始终是数组\r\n\tconst normalizedCompareData = computed(() => {\r\n\t\tif (Array.isArray(props.compareData)) return props.compareData;\r\n\t\tif (props.compareData && typeof props.compareData === \"object\")\r\n\t\t\treturn [props.compareData];\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 格式化文本值\r\n\tconst formatTextValue = value => {\r\n\t\tif (!value) return \"-\";\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value.map(item => item.raw || item.value || item).join(\"; \");\r\n\t\t}\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\treturn value.raw || value.value || JSON.stringify(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 提取数值从字符串中（处理$、¥等货币符号和单位）\r\n\tconst extractNumber = str => {\r\n\t\tif (typeof str === \"number\") return str;\r\n\t\tif (!str) return null;\r\n\r\n\t\t// 处理类似 \"$19.53 trillion (nominal; 2025)\" 的字符串\r\n\t\tconst match = str\r\n\t\t\t.toString()\r\n\t\t\t.match(/(\\$|¥)?\\s*([\\d,.]+)\\s*(million|billion|trillion)?/);\r\n\t\tif (match) {\r\n\t\t\tlet num = parseFloat(match[2].replace(/,/g, \"\"));\r\n\r\n\t\t\t// 处理单位换算\r\n\t\t\tif (match[3] === \"million\") num *= 1e6;\r\n\t\t\tif (match[3] === \"billion\") num *= 1e9;\r\n\t\t\tif (match[3] === \"trillion\") num *= 1e12;\r\n\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\treturn parseFloat(str) || null;\r\n\t};\r\n\r\n\t// 提取图表数据 - 饼图\r\n\tconst pieChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理百分比数据\r\n\t\tif (props.type === \"percentage\") {\r\n\t\t\t// 处理数组数据\r\n\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\treturn props.field\r\n\t\t\t\t\t.filter(item => {\r\n\t\t\t\t\t\tconst value = item.value || item.raw;\r\n\t\t\t\t\t\treturn value && extractNumber(value) !== null;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\t\tlet value = extractNumber(item.value || item.raw);\r\n\t\t\t\t\t\t// 确保百分比值在0-100之间\r\n\t\t\t\t\t\tvalue = Math.min(100, Math.max(0, value || 0));\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// 处理对象数据\r\n\t\t\tif (typeof props.field === \"object\") {\r\n\t\t\t\tconst value = extractNumber(props.field.value || props.field.raw);\r\n\t\t\t\tif (value !== null) {\r\n\t\t\t\t\tconst adjustedValue = Math.min(100, Math.max(0, value));\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\t\t\tvalue: adjustedValue,\r\n\t\t\t\t\t\t\t// 单个数据点时添加一个对比项\r\n\t\t\t\t\t\t\t...(adjustedValue === 100\r\n\t\t\t\t\t\t\t\t? []\r\n\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t_contrast: {\r\n\t\t\t\t\t\t\t\t\t\t\tname: \"对比\",\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 100 - adjustedValue\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 提取图表数据 - 柱状图\r\n\tconst barChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => {\r\n\t\t\t\t\tconst value = item.value || item.raw;\r\n\t\t\t\t\treturn value && extractNumber(value) !== null;\r\n\t\t\t\t})\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = extractNumber(item.value || item.raw);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: item.raw\r\n\t\t\t\t\t\t\t? item.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: `项目${index + 1}`,\r\n\t\t\t\t\t\tvalue: value || 0\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 处理对象数据\r\n\t\tif (typeof props.field === \"object\") {\r\n\t\t\tconst value = extractNumber(props.field.value || props.field.raw);\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: props.field.raw\r\n\t\t\t\t\t\t\t? props.field.raw.replace(/:\\s*\\d+\\.?\\d*%?/g, \"\")\r\n\t\t\t\t\t\t\t: \"项目\",\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tif (typeof props.field === \"string\" || typeof props.field === \"number\") {\r\n\t\t\tconst value = extractNumber(props.field);\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: props.fieldKey || \"值\",\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\t// 提取图表数据 - 折线图\r\n\tconst lineChartData = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理数组数据\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => item.value !== undefined)\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\tconst value = parseFloat(item.value) || 0;\r\n\t\t\t\t\tconst year = item.year || index + 1;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tyear,\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.sort((a, b) => a.year - b.year);\r\n\t\t}\r\n\r\n\t\t// 处理对象数据\r\n\t\tif (typeof props.field === \"object\" && props.field.value !== undefined) {\r\n\t\t\tconst value = parseFloat(props.field.value) || 0;\r\n\t\t\tconst year = props.field.year || 1;\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\tconst hasChartData = computed(() => {\r\n\t\tswitch (props.visualization) {\r\n\t\t\tcase \"pie-chart\":\r\n\t\t\t\treturn pieChartData.value.length > 0;\r\n\t\t\tcase \"bar-chart\":\r\n\t\t\t\treturn barChartData.value.length > 0;\r\n\t\t\tcase \"line-chart\":\r\n\t\t\t\treturn lineChartData.value.length > 0;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}