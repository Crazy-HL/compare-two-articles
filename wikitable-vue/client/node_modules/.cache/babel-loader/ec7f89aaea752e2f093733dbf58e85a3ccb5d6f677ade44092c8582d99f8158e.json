{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref({}); // 存储每个 div 的选中内容\n    const showPopup = ref({}); // 存储每个 div 的弹窗显示状态\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n\n    const fetchSections = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/w/api.php?action=parse&page=${encodeURIComponent(props.pageTitle)}&prop=sections&format=json`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch sections\");\n        const data = await response.json();\n        sections.value = data.parse.sections.map(section => ({\n          id: section.anchor,\n          text: section.line,\n          anchor: section.anchor\n        }));\n      } catch (err) {\n        console.error(\"Error fetching sections:\", err);\n      }\n    };\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // 动态注入 Wikipedia 样式\n        const styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\n        styles.forEach(link => {\n          if (!document.querySelector(`link[href=\"${link.href}\"]`)) {\n            const styleTag = document.createElement(\"link\");\n            styleTag.rel = \"stylesheet\";\n            styleTag.href = link.href;\n            document.head.appendChild(styleTag);\n          }\n        });\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n        // 获取章节信息\n        await fetchSections();\n        // 手动引入 Wikipedia CSS\n        injectWikipediaStyles();\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **手动引入 Wikipedia CSS**\n    const injectWikipediaStyles = () => {\n      const wikipediaStyles = [\"https://en.wikipedia.org/w/load.php?modules=site.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\", \"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\", \"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"];\n      wikipediaStyles.forEach(url => {\n        if (!document.querySelector(`link[href=\"${url}\"]`)) {\n          const styleTag = document.createElement(\"link\");\n          styleTag.rel = \"stylesheet\";\n          styleTag.href = url;\n          document.head.appendChild(styleTag);\n        }\n      });\n    };\n\n    // **处理选中内容**\n    const handleSelection = content => {\n      // 如果弹出框已经显示并且有内容，则不更新\n      if (showPopup.value[props.divId] && selectedText.value[props.divId]) {\n        console.log(\"弹出框中已有内容，不更新\");\n        return;\n      }\n      selectedText.value[props.divId] = content; // 根据 divId 存储选中内容\n      console.log(`${props.divId}选中的文字###:`, content);\n      // 传递选中内容\n      bus.emit(`${props.divId}Event`, {\n        content\n      });\n      showPopup.value[props.divId] = true; // 根据 divId 显示弹窗\n\n      // 确保弹窗位置更新\n      nextTick(() => {\n        updatePopupPosition();\n      });\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value[props.divId] = false; // 根据 divId 关闭弹窗\n      selectedText.value[props.divId] = \"\"; // 根据 divId 清除选中内容\n\n      // 根据 divId 清空对应的容器\n      const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n      d3.select(container).html(\"\");\n    };\n\n    // **更新遮罩层和弹出框的位置**\n    const updatePopupPosition = () => {\n      if (showPopup.value[props.divId] && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        const overlay = divRef.value.querySelector(\".overlay\");\n        if (popup && overlay) {\n          const rect = divRef.value.getBoundingClientRect();\n          const scrollTop = divRef.value.scrollTop;\n          const scrollLeft = divRef.value.scrollLeft;\n\n          // 动态调整遮罩层和弹出框的位置\n          overlay.style.top = `${scrollTop}px`;\n          overlay.style.left = `${scrollLeft}px`;\n          overlay.style.width = `${divRef.value.clientWidth}px`;\n          overlay.style.height = `${divRef.value.clientHeight}px`;\n          popup.style.top = `${rect.height / 2 + scrollTop}px`;\n          popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n        }\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(() => {\n      // 确保 divRef 已初始化\n      if (divRef.value) {\n        console.log(\"divRef 已绑定到 DOM 元素:\", divRef.value);\n      } else {\n        console.error(\"divRef 未绑定到 DOM 元素\");\n      }\n      fetchWikipediaContent();\n\n      // 监听父容器滚动事件\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n\n    // **组件卸载时解绑事件**\n    onUnmounted(() => {\n      // 解绑父容器滚动事件\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      fetchSections,\n      fetchWikipediaContent,\n      injectWikipediaStyles,\n      handleSelection,\n      closePopup,\n      updatePopupPosition,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","d3","bus","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","fetchSections","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","data","json","sections","value","parse","map","section","id","anchor","text","line","err","console","fetchWikipediaContent","html","parser","DOMParser","doc","parseFromString","styles","Array","from","querySelectorAll","forEach","link","document","querySelector","href","styleTag","createElement","rel","head","appendChild","contentElement","innerHTML","injectWikipediaStyles","message","wikipediaStyles","url","handleSelection","content","divId","log","emit","updatePopupPosition","closePopup","container","select","popup","overlay","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","left","width","clientWidth","height","clientHeight","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\r\n\tconst fetchSections = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/w/api.php?action=parse&page=${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}&prop=sections&format=json`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch sections\");\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsections.value = data.parse.sections.map(section => ({\r\n\t\t\t\tid: section.anchor,\r\n\t\t\t\ttext: section.line,\r\n\t\t\t\tanchor: section.anchor\r\n\t\t\t}));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error fetching sections:\", err);\r\n\t\t}\r\n\t};\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 动态注入 Wikipedia 样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\t// 获取章节信息\r\n\t\t\tawait fetchSections();\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **处理选中内容**\r\n\tconst handleSelection = content => {\r\n\t\t// 如果弹出框已经显示并且有内容，则不更新\r\n\t\tif (showPopup.value[props.divId] && selectedText.value[props.divId]) {\r\n\t\t\tconsole.log(\"弹出框中已有内容，不更新\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tselectedText.value[props.divId] = content; // 根据 divId 存储选中内容\r\n\t\tconsole.log(`${props.divId}选中的文字###:`, content);\r\n\t\t// 传递选中内容\r\n\t\tbus.emit(`${props.divId}Event`, { content });\r\n\t\tshowPopup.value[props.divId] = true; // 根据 divId 显示弹窗\r\n\r\n\t\t// 确保弹窗位置更新\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false; // 根据 divId 关闭弹窗\r\n\t\tselectedText.value[props.divId] = \"\"; // 根据 divId 清除选中内容\r\n\r\n\t\t// 根据 divId 清空对应的容器\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\t// **更新遮罩层和弹出框的位置**\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\t\tif (popup && overlay) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\t// 动态调整遮罩层和弹出框的位置\r\n\t\t\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\t\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\t\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\t\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\t// 确保 divRef 已初始化\r\n\t\tif (divRef.value) {\r\n\t\t\tconsole.log(\"divRef 已绑定到 DOM 元素:\", divRef.value);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"divRef 未绑定到 DOM 元素\");\r\n\t\t}\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 监听父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\t// 解绑父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* 选中文本的高亮样式 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}