{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    divId: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 数据状态\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 模态框状态\n    const showModal = ref(false);\n    const modalTitle = ref(\"\");\n    const modalData = ref(null);\n    const modalType = ref(\"\");\n    const modalVisualization = ref(\"\");\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\"\n    }];\n\n    // 点击表格属性时触发\n    const handleFieldClick = fieldKey => {\n      // 发送事件给父组件，通知哪个属性被点击了\n      bus.emit(`${props.divId}_FieldClicked`, fieldKey);\n\n      // 临时高亮当前行\n      highlightCurrentRow(fieldKey);\n    };\n\n    // 高亮当前点击的行\n    const highlightCurrentRow = fieldKey => {\n      // 移除之前的高亮\n      const previousHighlights = document.querySelectorAll(\".highlighted-row\");\n      previousHighlights.forEach(el => {\n        el.classList.remove(\"highlighted-row\");\n      });\n\n      // 高亮当前行\n      const rows = document.querySelectorAll(\".middle-column\");\n      rows.forEach(row => {\n        if (row.textContent.includes(fieldKey)) {\n          row.parentElement.classList.add(\"highlighted-row\");\n        }\n      });\n    };\n\n    // 监听infobox字段点击事件\n    const highlightTableField = fieldName => {\n      // 找到对应的字段行\n      const rows = document.querySelectorAll(\".middle-column\");\n      let found = false;\n      rows.forEach(row => {\n        if (row.textContent.toLowerCase().includes(fieldName.toLowerCase())) {\n          // 添加高亮类\n          row.parentElement.classList.add(\"highlighted-row\");\n          found = true;\n\n          // 滚动到该行\n          row.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\"\n          });\n        }\n      });\n      if (!found) {\n        console.log(`Field ${fieldName} not found in table`);\n      }\n    };\n\n    // 打开模态框\n    const openModal = (infobox, fieldKey) => {\n      const field = getField(infobox, fieldKey);\n      if (!field || field.length === 0) return;\n      modalTitle.value = `${infobox.title} - ${fieldKey}`;\n      modalData.value = field;\n      modalType.value = COMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\n      modalVisualization.value = COMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\n      showModal.value = true;\n    };\n\n    // 关闭模态框\n    const closeModal = () => {\n      showModal.value = false;\n    };\n\n    // 获取字段值（确保始终返回数组）\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) {\n          return Array.isArray(section[matchedKey]) ? section[matchedKey] : [section[matchedKey]];\n        }\n      }\n      return [];\n    };\n\n    // 计算可显示字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n\n      // 监听infobox字段点击事件\n      bus.on(\"scrollToTableField\", _ref2 => {\n        let {\n          divId,\n          fieldName\n        } = _ref2;\n        if (divId === props.divId) {\n          highlightTableField(fieldName);\n        }\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n      bus.off(\"scrollToTableField\");\n    });\n\n    // 处理数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n    const __returned__ = {\n      props,\n      leftInfobox,\n      rightInfobox,\n      showModal,\n      modalTitle,\n      modalData,\n      modalType,\n      modalVisualization,\n      COMPARABLE_FIELDS,\n      handleFieldClick,\n      highlightCurrentRow,\n      highlightTableField,\n      openModal,\n      closeModal,\n      getField,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","SimpleChart","FullChart","bus","props","__props","leftInfobox","title","type","data","rightInfobox","showModal","modalTitle","modalData","modalType","modalVisualization","COMPARABLE_FIELDS","key","typeLabel","visualization","handleFieldClick","fieldKey","emit","divId","highlightCurrentRow","previousHighlights","document","querySelectorAll","forEach","el","classList","remove","rows","row","textContent","includes","parentElement","add","highlightTableField","fieldName","found","toLowerCase","scrollIntoView","behavior","block","console","log","openModal","infobox","field","getField","length","value","find","f","closeModal","section","Object","values","undefined","Array","isArray","cleanKey","replace","matchedKey","keys","k","comparableFields","filter","leftVal","rightVal","on","processInfoboxData","_ref2","off","sections"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 内容行 - 固定高度 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@click=\"openModal(leftInfobox, field.key)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\" @click=\"handleFieldClick(field.key)\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@click=\"openModal(rightInfobox, field.key)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 模态框 -->\r\n\t\t<div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeModal\">×</button>\r\n\t\t\t\t<h3>{{ modalTitle }}</h3>\r\n\t\t\t\t<div class=\"full-chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"modalData\"\r\n\t\t\t\t\t\t:type=\"modalType\"\r\n\t\t\t\t\t\t:visualization=\"modalVisualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdivId: String\r\n\t});\r\n\r\n\t// 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 模态框状态\r\n\tconst showModal = ref(false);\r\n\tconst modalTitle = ref(\"\");\r\n\tconst modalData = ref(null);\r\n\tconst modalType = ref(\"\");\r\n\tconst modalVisualization = ref(\"\");\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 点击表格属性时触发\r\n\tconst handleFieldClick = fieldKey => {\r\n\t\t// 发送事件给父组件，通知哪个属性被点击了\r\n\t\tbus.emit(`${props.divId}_FieldClicked`, fieldKey);\r\n\r\n\t\t// 临时高亮当前行\r\n\t\thighlightCurrentRow(fieldKey);\r\n\t};\r\n\r\n\t// 高亮当前点击的行\r\n\tconst highlightCurrentRow = fieldKey => {\r\n\t\t// 移除之前的高亮\r\n\t\tconst previousHighlights = document.querySelectorAll(\".highlighted-row\");\r\n\t\tpreviousHighlights.forEach(el => {\r\n\t\t\tel.classList.remove(\"highlighted-row\");\r\n\t\t});\r\n\r\n\t\t// 高亮当前行\r\n\t\tconst rows = document.querySelectorAll(\".middle-column\");\r\n\t\trows.forEach(row => {\r\n\t\t\tif (row.textContent.includes(fieldKey)) {\r\n\t\t\t\trow.parentElement.classList.add(\"highlighted-row\");\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 监听infobox字段点击事件\r\n\tconst highlightTableField = fieldName => {\r\n\t\t// 找到对应的字段行\r\n\t\tconst rows = document.querySelectorAll(\".middle-column\");\r\n\t\tlet found = false;\r\n\r\n\t\trows.forEach(row => {\r\n\t\t\tif (row.textContent.toLowerCase().includes(fieldName.toLowerCase())) {\r\n\t\t\t\t// 添加高亮类\r\n\t\t\t\trow.parentElement.classList.add(\"highlighted-row\");\r\n\t\t\t\tfound = true;\r\n\r\n\t\t\t\t// 滚动到该行\r\n\t\t\t\trow.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!found) {\r\n\t\t\tconsole.log(`Field ${fieldName} not found in table`);\r\n\t\t}\r\n\t};\r\n\r\n\t// 打开模态框\r\n\tconst openModal = (infobox, fieldKey) => {\r\n\t\tconst field = getField(infobox, fieldKey);\r\n\t\tif (!field || field.length === 0) return;\r\n\r\n\t\tmodalTitle.value = `${infobox.title} - ${fieldKey}`;\r\n\t\tmodalData.value = field;\r\n\t\tmodalType.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\r\n\t\tmodalVisualization.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\r\n\t\tshowModal.value = true;\r\n\t};\r\n\r\n\t// 关闭模态框\r\n\tconst closeModal = () => {\r\n\t\tshowModal.value = false;\r\n\t};\r\n\r\n\t// 获取字段值（确保始终返回数组）\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\treturn Array.isArray(section[matchedKey])\r\n\t\t\t\t\t? section[matchedKey]\r\n\t\t\t\t\t: [section[matchedKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 计算可显示字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\t// 监听infobox字段点击事件\r\n\t\tbus.on(\"scrollToTableField\", ({ divId, fieldName }) => {\r\n\t\t\tif (divId === props.divId) {\r\n\t\t\t\thighlightTableField(fieldName);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t\tbus.off(\"scrollToTableField\");\r\n\t});\r\n\r\n\t// 处理数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\theight: 160px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tcursor: pointer;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.highlighted-row {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\t/* 模态框样式 */\r\n\t.modal-overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 80%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.full-chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tfont-size: 24px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}