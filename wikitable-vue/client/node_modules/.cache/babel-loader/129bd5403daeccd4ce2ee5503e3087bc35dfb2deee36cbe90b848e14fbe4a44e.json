{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted } from \"vue\";\nexport default {\n  __name: 'TextPopup',\n  props: {\n    visible: Boolean,\n    // 是否显示弹出框\n    content: String,\n    // 弹出框内容\n    containerClass: String,\n    // 图表容器类名\n    containerRef: Object // 父容器的引用\n  },\n  emits: [\"close\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit; // 定义 close 事件\n\n    const popupRef = ref(null); // 弹出框的引用\n    const currentView = ref(\"text\"); // 当前视图模式：text 或 visual\n    const loading = ref(false); // 可视化图表加载状态\n    const popupStyle = ref({}); // 弹出框的样式\n\n    // 判断内容是否是表格\n    const isTable = computed(() => {\n      return /<table.*?>.*?<\\/table>/s.test(props.content);\n    });\n\n    // 关闭弹出框\n    const close = () => {\n      emit(\"close\");\n    };\n\n    // 切换视图\n    const switchView = async view => {\n      currentView.value = view;\n      if (view === \"visual\") {\n        loading.value = true;\n        await processText(); // 调用后端处理文本并渲染图表\n        loading.value = false;\n      }\n    };\n\n    // 获取可视化 JSON 数据\n    async function processText() {\n      try {\n        api.post(\"process_text\", {\n          text: props.content.toString().trim()\n        }, data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          const jsonData = data.json_data;\n          console.log(\"后端返回的数据:\", jsonData);\n\n          // 清空之前的图表\n          d3.select(`.${props.containerClass}`).html(\"\");\n          if (data.data_type === \"Non-Visual\") {\n            renderNonVisualChart(`.${props.containerClass}`, data, {\n              message: \"当前数据无法可视化\"\n            });\n          } else {\n            renderChart(jsonData, data.chart_classification);\n          }\n        });\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    }\n\n    // 渲染图表\n    function renderChart(rawJsonData, chartType) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\n        renderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\n          message: \"JSON 数据无效\"\n        });\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n\n      // 根据图表类型渲染\n      if (chartType === \"Line Chart\") {\n        renderLineChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Bar Chart\") {\n        renderBarChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Pie Chart\") {\n        renderPieChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Stacked Bar Chart\") {\n        renderStackedBarChart(`.${props.containerClass}`, data, options);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n\n    // 更新弹出框的位置和尺寸\n    const updatePopupPosition = () => {\n      if (props.visible && props.containerRef.value) {\n        const containerRect = props.containerRef.value.getBoundingClientRect();\n        popupStyle.value = {\n          position: \"absolute\",\n          top: `${containerRect.top + window.scrollY}px`,\n          left: `${containerRect.left + window.scrollX}px`,\n          width: `${containerRect.width}px`,\n          maxHeight: `${containerRect.height}px`\n        };\n      }\n    };\n\n    // 监听窗口大小变化和容器滚动\n    onMounted(() => {\n      window.addEventListener(\"resize\", updatePopupPosition);\n      if (props.containerRef.value) {\n        props.containerRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n    onUnmounted(() => {\n      window.removeEventListener(\"resize\", updatePopupPosition);\n      if (props.containerRef.value) {\n        props.containerRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      popupRef,\n      currentView,\n      loading,\n      popupStyle,\n      isTable,\n      close,\n      switchView,\n      processText,\n      renderChart,\n      updatePopupPosition,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","props","__props","emit","__emit","popupRef","currentView","loading","popupStyle","isTable","test","content","close","switchView","view","value","processText","api","post","text","toString","trim","data","error","console","alert","message","jsonData","json_data","log","d3","select","containerClass","html","data_type","renderNonVisualChart","renderChart","chart_classification","rawJsonData","chartType","options","renderLineChart","renderBarChart","renderPieChart","renderStackedBarChart","updatePopupPosition","visible","containerRef","containerRect","getBoundingClientRect","position","top","window","scrollY","left","scrollX","width","maxHeight","height","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/TextPopup.vue"],"sourcesContent":["<template>\r\n\t<!-- 遮罩层 -->\r\n\t<div v-if=\"visible\" class=\"overlay\" @click=\"close\"></div>\r\n\r\n\t<!-- 弹出框 -->\r\n\t<div\r\n\t\tv-if=\"visible\"\r\n\t\tref=\"popupRef\"\r\n\t\tclass=\"text-popup\"\r\n\t\t:style=\"popupStyle\"\r\n\t\t@click.stop>\r\n\t\t<!-- 切换视图按钮 -->\r\n\t\t<div class=\"view-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('text')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'text' }\"\r\n\t\t\t\ttitle=\"文本视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'align-left']\" />\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('visual')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'visual' }\"\r\n\t\t\t\ttitle=\"可视化视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'chart-bar']\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文本视图 -->\r\n\t\t<div v-if=\"currentView === 'text'\">\r\n\t\t\t<div v-if=\"isTable\" class=\"table-container\" v-html=\"content\"></div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<p>{{ content }}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化视图 -->\r\n\t\t<div v-if=\"currentView === 'visual'\" class=\"visualization-container\">\r\n\t\t\t<div v-if=\"loading\" class=\"loading-spinner\"></div>\r\n\t\t\t<div v-else :class=\"containerClass\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onUnmounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tvisible: Boolean, // 是否显示弹出框\r\n\t\tcontent: String, // 弹出框内容\r\n\t\tcontainerClass: String, // 图表容器类名\r\n\t\tcontainerRef: Object // 父容器的引用\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"close\"]); // 定义 close 事件\r\n\r\n\tconst popupRef = ref(null); // 弹出框的引用\r\n\tconst currentView = ref(\"text\"); // 当前视图模式：text 或 visual\r\n\tconst loading = ref(false); // 可视化图表加载状态\r\n\tconst popupStyle = ref({}); // 弹出框的样式\r\n\r\n\t// 判断内容是否是表格\r\n\tconst isTable = computed(() => {\r\n\t\treturn /<table.*?>.*?<\\/table>/s.test(props.content);\r\n\t});\r\n\r\n\t// 关闭弹出框\r\n\tconst close = () => {\r\n\t\temit(\"close\");\r\n\t};\r\n\r\n\t// 切换视图\r\n\tconst switchView = async view => {\r\n\t\tcurrentView.value = view;\r\n\t\tif (view === \"visual\") {\r\n\t\t\tloading.value = true;\r\n\t\t\tawait processText(); // 调用后端处理文本并渲染图表\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 获取可视化 JSON 数据\r\n\tasync function processText() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"process_text\",\r\n\t\t\t\t{ text: props.content.toString().trim() },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", jsonData);\r\n\r\n\t\t\t\t\t// 清空之前的图表\r\n\t\t\t\t\td3.select(`.${props.containerClass}`).html(\"\");\r\n\r\n\t\t\t\t\tif (data.data_type === \"Non-Visual\") {\r\n\t\t\t\t\t\trenderNonVisualChart(`.${props.containerClass}`, data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法可视化\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderChart(jsonData, data.chart_classification);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\t// 渲染图表\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\" || !rawJsonData.data) {\r\n\t\t\trenderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON 数据无效\"\r\n\t\t\t});\r\n\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\t// 根据图表类型渲染\r\n\t\tif (chartType === \"Line Chart\") {\r\n\t\t\trenderLineChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Bar Chart\") {\r\n\t\t\trenderBarChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Pie Chart\") {\r\n\t\t\trenderPieChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Stacked Bar Chart\") {\r\n\t\t\trenderStackedBarChart(`.${props.containerClass}`, data, options);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n\r\n\t// 更新弹出框的位置和尺寸\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (props.visible && props.containerRef.value) {\r\n\t\t\tconst containerRect = props.containerRef.value.getBoundingClientRect();\r\n\t\t\tpopupStyle.value = {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: `${containerRect.top + window.scrollY}px`,\r\n\t\t\t\tleft: `${containerRect.left + window.scrollX}px`,\r\n\t\t\t\twidth: `${containerRect.width}px`,\r\n\t\t\t\tmaxHeight: `${containerRect.height}px`\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听窗口大小变化和容器滚动\r\n\tonMounted(() => {\r\n\t\twindow.addEventListener(\"resize\", updatePopupPosition);\r\n\t\tif (props.containerRef.value) {\r\n\t\t\tprops.containerRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\twindow.removeEventListener(\"resize\", updatePopupPosition);\r\n\t\tif (props.containerRef.value) {\r\n\t\t\tprops.containerRef.value.removeEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tupdatePopupPosition\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n</script>\r\n<style scoped>\r\n\t/* 遮罩层 */\r\n\t.overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.1);\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tz-index: 90;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 弹出框 */\r\n\t.text-popup {\r\n\t\tposition: fixed;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 90%;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tbackground: rgba(255, 255, 255, 0.98);\r\n\t\tpadding: 25px;\r\n\t\tbox-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 12px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 0.8vw;\r\n\t\tfont-weight: 500;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(20px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t\tborder: 1px solid rgba(255, 255, 255, 0.2);\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t/* 视图切换按钮 */\r\n\t.view-switcher {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.view-switcher button {\r\n\t\tpadding: 25px;\r\n\t\tmargin: 0 5px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s ease, transform 0.2s ease;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.view-switcher button:hover {\r\n\t\tbackground-color: #ddd;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t.view-switcher button.active {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t/* 可视化容器 */\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 300px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t/* 表格样式 */\r\n\t.table-container {\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t}\r\n\r\n\t.text-popup p {\r\n\t\tmargin: 0;\r\n\t\tpadding: 10px 15px;\r\n\t\tfont-size: 1.2rem;\r\n\t\tcolor: #333;\r\n\t\ttext-align: justify;\r\n\t\tline-height: 1.8;\r\n\t\tword-break: break-word;\r\n\t\twhite-space: pre-wrap;\r\n\t\tmax-width: 90%;\r\n\t\tborder-left: 4px solid #3498db;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tbox-shadow: inset 2px 2px 8px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\t/* 使用 ::v-deep 穿透 scoped 样式 */\r\n\t::v-deep .custom-table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tmargin: 5px auto;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 1px solid #0077b6; /* 外边框颜色 */\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t\tfont-size: 16px; /* 设置整体字体大小 */\r\n\t\tcolor: #333333; /* 设置默认文字颜色 */\r\n\t}\r\n\r\n\t/* 表头样式 */\r\n\t::v-deep .custom-table th {\r\n\t\tbackground-color: #0077b6; /* 深蓝色表头 */\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #ffffff; /* 文字白色 */\r\n\t\ttext-align: left;\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6; /* 表头单元格边框 */\r\n\t\tfont-size: 18px; /* 表头字体稍大，增强层次感 */\r\n\t}\r\n\r\n\t/* 单元格样式 */\r\n\t::v-deep .custom-table th,\r\n\t::v-deep .custom-table td {\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6; /* 统一的单元格边框 */\r\n\t\tfont-size: 16px; /* 调整字体大小 */\r\n\t}\r\n\r\n\t/* 悬停行高亮 */\r\n\t::v-deep .custom-table tr:hover {\r\n\t\tbackground-color: #cbe8f6; /* 浅蓝色 */\r\n\t\ttransition: background-color 0.3s ease-in-out;\r\n\t}\r\n</style>\r\n"],"mappings":"AA6CC,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;IAE3D,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAsB,CAAC,CAAC;;IAErC,MAAMC,QAAQ,GAAGR,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B,MAAMS,WAAW,GAAGT,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B,MAAMW,UAAU,GAAGX,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE5B;IACA,MAAMY,OAAO,GAAGX,QAAQ,CAAC,MAAM;MAC9B,OAAO,yBAAyB,CAACY,IAAI,CAACT,KAAK,CAACU,OAAO,CAAC;IACrD,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;MACnBT,IAAI,CAAC,OAAO,CAAC;IACd,CAAC;;IAED;IACA,MAAMU,UAAU,GAAG,MAAMC,IAAI,IAAI;MAChCR,WAAW,CAACS,KAAK,GAAGD,IAAI;MACxB,IAAIA,IAAI,KAAK,QAAQ,EAAE;QACtBP,OAAO,CAACQ,KAAK,GAAG,IAAI;QACpB,MAAMC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrBT,OAAO,CAACQ,KAAK,GAAG,KAAK;MACtB;IACD,CAAC;;IAED;IACA,eAAeC,WAAWA,CAAA,EAAG;MAC5B,IAAI;QACHC,GAAG,CAACC,IAAI,CACP,cAAc,EACd;UAAEC,IAAI,EAAElB,KAAK,CAACU,OAAO,CAACS,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC;QAAE,CAAC,EACzCC,IAAI,IAAI;UACP,IAAIA,IAAI,CAACC,KAAK,EAAE;YACfC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAED,IAAI,CAACC,KAAK,CAAC;YACrCE,KAAK,CAAC,cAAcH,IAAI,CAACI,OAAO,EAAE,CAAC;YACnC;UACD;UAEA,MAAMC,QAAQ,GAAGL,IAAI,CAACM,SAAS;UAC/BJ,OAAO,CAACK,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;;UAEjC;UACAG,EAAE,CAACC,MAAM,CAAC,IAAI9B,KAAK,CAAC+B,cAAc,EAAE,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;UAE9C,IAAIX,IAAI,CAACY,SAAS,KAAK,YAAY,EAAE;YACpCC,oBAAoB,CAAC,IAAIlC,KAAK,CAAC+B,cAAc,EAAE,EAAEV,IAAI,EAAE;cACtDI,OAAO,EAAE;YACV,CAAC,CAAC;UACH,CAAC,MAAM;YACNU,WAAW,CAACT,QAAQ,EAAEL,IAAI,CAACe,oBAAoB,CAAC;UACjD;QACD,CACD,CAAC;MACF,CAAC,CAAC,OAAOd,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCE,KAAK,CAAC,iBAAiB,CAAC;MACzB;IACD;;IAEA;IACA,SAASW,WAAWA,CAACE,WAAW,EAAEC,SAAS,EAAE;MAC5C,IAAI,CAACD,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAI,CAACA,WAAW,CAAChB,IAAI,EAAE;QACzEa,oBAAoB,CAAC,IAAIlC,KAAK,CAAC+B,cAAc,EAAE,EAAEM,WAAW,EAAE;UAC7DZ,OAAO,EAAE;QACV,CAAC,CAAC;QACFF,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEe,WAAW,CAAC;QACxC;MACD;MAEA,MAAMhB,IAAI,GAAGgB,WAAW,CAAChB,IAAI;MAC7B,MAAMkB,OAAO,GAAGF,WAAW,CAACE,OAAO,IAAI,CAAC,CAAC;;MAEzC;MACA,IAAID,SAAS,KAAK,YAAY,EAAE;QAC/BE,eAAe,CAAC,IAAIxC,KAAK,CAAC+B,cAAc,EAAE,EAAEV,IAAI,EAAEkB,OAAO,CAAC;MAC3D,CAAC,MAAM,IAAID,SAAS,KAAK,WAAW,EAAE;QACrCG,cAAc,CAAC,IAAIzC,KAAK,CAAC+B,cAAc,EAAE,EAAEV,IAAI,EAAEkB,OAAO,CAAC;MAC1D,CAAC,MAAM,IAAID,SAAS,KAAK,WAAW,EAAE;QACrCI,cAAc,CAAC,IAAI1C,KAAK,CAAC+B,cAAc,EAAE,EAAEV,IAAI,EAAEkB,OAAO,CAAC;MAC1D,CAAC,MAAM,IAAID,SAAS,KAAK,mBAAmB,EAAE;QAC7CK,qBAAqB,CAAC,IAAI3C,KAAK,CAAC+B,cAAc,EAAE,EAAEV,IAAI,EAAEkB,OAAO,CAAC;MACjE,CAAC,MAAM;QACNhB,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEgB,SAAS,CAAC;MACrC;IACD;;IAEA;IACA,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;MACjC,IAAI5C,KAAK,CAAC6C,OAAO,IAAI7C,KAAK,CAAC8C,YAAY,CAAChC,KAAK,EAAE;QAC9C,MAAMiC,aAAa,GAAG/C,KAAK,CAAC8C,YAAY,CAAChC,KAAK,CAACkC,qBAAqB,CAAC,CAAC;QACtEzC,UAAU,CAACO,KAAK,GAAG;UAClBmC,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAE,GAAGH,aAAa,CAACG,GAAG,GAAGC,MAAM,CAACC,OAAO,IAAI;UAC9CC,IAAI,EAAE,GAAGN,aAAa,CAACM,IAAI,GAAGF,MAAM,CAACG,OAAO,IAAI;UAChDC,KAAK,EAAE,GAAGR,aAAa,CAACQ,KAAK,IAAI;UACjCC,SAAS,EAAE,GAAGT,aAAa,CAACU,MAAM;QACnC,CAAC;MACF;IACD,CAAC;;IAED;IACA3D,SAAS,CAAC,MAAM;MACfqD,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAEd,mBAAmB,CAAC;MACtD,IAAI5C,KAAK,CAAC8C,YAAY,CAAChC,KAAK,EAAE;QAC7Bd,KAAK,CAAC8C,YAAY,CAAChC,KAAK,CAAC4C,gBAAgB,CAAC,QAAQ,EAAEd,mBAAmB,CAAC;MACzE;IACD,CAAC,CAAC;IAEF7C,WAAW,CAAC,MAAM;MACjBoD,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEf,mBAAmB,CAAC;MACzD,IAAI5C,KAAK,CAAC8C,YAAY,CAAChC,KAAK,EAAE;QAC7Bd,KAAK,CAAC8C,YAAY,CAAChC,KAAK,CAAC6C,mBAAmB,CAC3C,QAAQ,EACRf,mBACD,CAAC;MACF;IACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}