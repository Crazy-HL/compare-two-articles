{"ast":null,"code":"import { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 状态变量\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const showSortingHeatmap = ref(true);\n    const leftDataLoaded = ref(false);\n    const rightDataLoaded = ref(false);\n    const sortedFieldsWithScores = ref([]);\n\n    // 可比较字段配置\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n\n    // 修改后的getField方法\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) {\n        console.warn(`Infobox数据未加载: ${infobox.title}`);\n        return [];\n      }\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          const fieldData = section[fieldKey];\n\n          // 如果是数组（如列表项），提取value或原始值\n          if (Array.isArray(fieldData)) {\n            return fieldData.map(item => {\n              // 如果是对象（新解析器结构），优先返回value字段\n              if (typeof item === \"object\" && item !== null) {\n                return item.value ?? item.raw ?? item;\n              }\n              return item;\n            });\n          }\n\n          // 如果是对象（新解析器结构），提取value或原始值\n          if (typeof fieldData === \"object\" && fieldData !== null) {\n            return [fieldData.value ?? fieldData.raw ?? fieldData];\n          }\n\n          // 旧格式直接返回\n          return [fieldData];\n        }\n      }\n      return [];\n    };\n\n    // 修改后的calculateDifferenceScore方法\n    const calculateDifferenceScore = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      console.log(\"比较字段:\", {\n        field: field.key,\n        left: leftData,\n        right: rightData,\n        type: field.type,\n        time: new Date().toISOString()\n      });\n      if (!leftData.length || !rightData.length) {\n        console.warn(`缺少比较数据: ${field.key}`);\n        return 0;\n      }\n\n      // 提取实际值（兼容新旧数据结构）\n      const getComparableValue = data => {\n        const val = data[0];\n        // 如果是对象且包含value字段（新解析器）\n        if (typeof val === \"object\" && val !== null && \"value\" in val) {\n          return val.value;\n        }\n        return val;\n      };\n      const leftVal = getComparableValue(leftData);\n      const rightVal = getComparableValue(rightData);\n\n      // 文本类型比较\n      if (field.type === \"text\") {\n        const isSame = String(leftVal).trim() === String(rightVal).trim();\n        return isSame ? 1 : 5;\n      }\n\n      // 数值类型比较\n      if (field.type === \"number\" || field.type === \"percentage\") {\n        const leftNum = parseFloat(leftVal);\n        const rightNum = parseFloat(rightVal);\n        if (isNaN(leftNum) || isNaN(rightNum)) {\n          console.warn(`非数值数据: ${field.key}`, {\n            leftVal,\n            rightVal\n          });\n          return 0;\n        }\n        const absDiff = Math.abs(leftNum - rightNum);\n        const weight = getFieldWeight(field.key);\n        let score = 10 + absDiff * weight;\n\n        // 趋势相反（大幅加分）\n        if (leftNum > 0 && rightNum < 0 || leftNum < 0 && rightNum > 0) {\n          score += 50;\n        }\n        console.log(`差异分数: ${field.key} = ${score} (差异: ${absDiff}, 权重: ${weight})`);\n        return score;\n      }\n      return 0;\n    };\n\n    // 字段权重\n    const getFieldWeight = fieldKey => {\n      const weights = {\n        GDP: 2.0,\n        Population: 1.5,\n        \"GDP growth\": 1.8,\n        Inflation: 1.3,\n        Labor: 1.2\n      };\n      for (const [key, weight] of Object.entries(weights)) {\n        if (fieldKey.toLowerCase().includes(key.toLowerCase())) {\n          return weight;\n        }\n      }\n      return 1;\n    };\n\n    // 热力图颜色\n    const getHeatmapColor = score => {\n      const maxScore = 100;\n      const ratio = Math.min(score / maxScore, 1);\n      const hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\n      return `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\n    };\n\n    // 不带分数的排序字段（用于显示）\n    const sortedFields = computed(() => {\n      return sortedFieldsWithScores.value;\n    });\n\n    // 可比较字段过滤\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 新增方法：确保两侧数据都加载后才计算\n    const tryCalculateScores = () => {\n      if (leftDataLoaded.value && rightDataLoaded.value) {\n        console.log(\"两侧数据已加载完成，开始计算差异分数\", {\n          left: leftInfobox.value,\n          right: rightInfobox.value\n        });\n        sortedFieldsWithScores.value = comparableFields.value.map(field => ({\n          ...field,\n          score: calculateDifferenceScore(field)\n        })).sort((a, b) => {\n          // 确保数值类型排在文本类型前面\n          if (a.type !== \"text\" && b.type === \"text\") return -1;\n          if (a.type === \"text\" && b.type !== \"text\") return 1;\n          // 同类型按分数降序\n          return b.score - a.score;\n        });\n      }\n    };\n\n    // 其他方法保持不变\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: infobox.title,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`highlight-${divId}-paragraphs`, fieldKey);\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`clear-${divId}-highlights`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const handleMiddleColumnClick = field => {\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: getField(leftInfobox.value, field.key),\n        rightData: getField(rightInfobox.value, field.key),\n        leftTitle: leftInfobox.value.title,\n        rightTitle: rightInfobox.value.title,\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n      bus.emit(\"highlight-div1-paragraphs\", field.key);\n      bus.emit(\"highlight-div3-paragraphs\", field.key);\n    };\n    const showCombinedChart = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      currentChart.value = {\n        title: `合并图表 - ${field.key}`,\n        field: field,\n        data: [...leftData, ...rightData]\n      };\n      showFullChartModal.value = true;\n    };\n    const processInfoboxData = data => {\n      if (!data) {\n        console.warn(\"接收到空Infobox数据\");\n        return {\n          title: \"\",\n          type: \"\",\n          data: {}\n        };\n      }\n      console.log(\"处理Infobox数据:\", data);\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 修改总线监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        console.log(\"接收到左侧Infobox数据\", data);\n        leftInfobox.value = processInfoboxData(data);\n        leftDataLoaded.value = true;\n        tryCalculateScores();\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        console.log(\"接收到右侧Infobox数据\", data);\n        rightInfobox.value = processInfoboxData(data);\n        rightDataLoaded.value = true;\n        tryCalculateScores();\n      });\n    });\n\n    // 添加watch作为双重保障\n    watch([() => leftDataLoaded.value, () => rightDataLoaded.value], _ref2 => {\n      let [leftLoaded, rightLoaded] = _ref2;\n      if (leftLoaded && rightLoaded) {\n        console.log(\"watch检测到两侧数据加载完成\");\n        tryCalculateScores();\n      }\n    });\n\n    // 组件卸载时清理\n    onUnmounted(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      showSortingHeatmap,\n      leftDataLoaded,\n      rightDataLoaded,\n      sortedFieldsWithScores,\n      COMPARABLE_FIELDS,\n      getField,\n      calculateDifferenceScore,\n      getFieldWeight,\n      getHeatmapColor,\n      sortedFields,\n      comparableFields,\n      tryCalculateScores,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      handleMiddleColumnClick,\n      showCombinedChart,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      onUnmounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","onUnmounted","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","showSortingHeatmap","leftDataLoaded","rightDataLoaded","sortedFieldsWithScores","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","getField","infobox","fieldKey","console","warn","section","Object","values","undefined","fieldData","Array","isArray","map","item","value","raw","calculateDifferenceScore","leftData","rightData","log","left","right","time","Date","toISOString","length","getComparableValue","val","leftVal","rightVal","isSame","String","trim","leftNum","parseFloat","rightNum","isNaN","absDiff","Math","abs","weight","getFieldWeight","score","weights","GDP","Population","Inflation","Labor","entries","toLowerCase","includes","getHeatmapColor","maxScore","ratio","min","hue","sortedFields","comparableFields","filter","tryCalculateScores","sort","a","b","showFullChart","closeFullChart","hoverInfobox","side","infoboxTitle","divId","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","handleMiddleColumnClick","leftTitle","rightTitle","fieldType","fieldLabel","showCombinedChart","processInfoboxData","sections","on","_ref2","leftLoaded","rightLoaded","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<!-- 原有模板代码完全保持不变 -->\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- 排序热力图开关 -->\r\n\t\t<div class=\"heatmap-control\">\r\n\t\t\t<button @click=\"showSortingHeatmap = !showSortingHeatmap\">\r\n\t\t\t\t{{ showSortingHeatmap ? \"隐藏\" : \"显示\" }}排序热力图\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 排序热力图可视化 -->\r\n\t\t<div class=\"sorting-heatmap\" v-if=\"showSortingHeatmap\">\r\n\t\t\t<div class=\"heatmap-header\">\r\n\t\t\t\t<span>排序</span>\r\n\t\t\t\t<span>属性</span>\r\n\t\t\t\t<span>类型</span>\r\n\t\t\t\t<span>差异分数</span>\r\n\t\t\t\t<span>权重</span>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"heatmap-row\"\r\n\t\t\t\tv-for=\"(field, index) in sortedFieldsWithScores\"\r\n\t\t\t\t:key=\"field.key\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tbackgroundColor: getHeatmapColor(field.score),\r\n\t\t\t\t\tborderLeft: `4px solid ${getHeatmapColor(field.score)}`\r\n\t\t\t\t}\">\r\n\t\t\t\t<span class=\"field-rank\">{{ index + 1 }}</span>\r\n\t\t\t\t<span class=\"field-name\">{{ field.key }}</span>\r\n\t\t\t\t<span class=\"field-type\">{{ field.typeLabel }}</span>\r\n\t\t\t\t<span class=\"field-score\">{{ field.score.toFixed(1) }}</span>\r\n\t\t\t\t<span class=\"field-weight\">{{\r\n\t\t\t\t\tgetFieldWeight(field.key).toFixed(1)\r\n\t\t\t\t}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主对比表格 -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"对比分析\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t⚖️\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"合并图表\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\t📊\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\t// 状态变量\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst showSortingHeatmap = ref(true);\r\n\tconst leftDataLoaded = ref(false);\r\n\tconst rightDataLoaded = ref(false);\r\n\tconst sortedFieldsWithScores = ref([]);\r\n\r\n\t// 可比较字段配置\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 修改后的getField方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) {\r\n\t\t\tconsole.warn(`Infobox数据未加载: ${infobox.title}`);\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\tconst fieldData = section[fieldKey];\r\n\r\n\t\t\t\t// 如果是数组（如列表项），提取value或原始值\r\n\t\t\t\tif (Array.isArray(fieldData)) {\r\n\t\t\t\t\treturn fieldData.map(item => {\r\n\t\t\t\t\t\t// 如果是对象（新解析器结构），优先返回value字段\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\treturn item.value ?? item.raw ?? item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 如果是对象（新解析器结构），提取value或原始值\r\n\t\t\t\tif (typeof fieldData === \"object\" && fieldData !== null) {\r\n\t\t\t\t\treturn [fieldData.value ?? fieldData.raw ?? fieldData];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 旧格式直接返回\r\n\t\t\t\treturn [fieldData];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 修改后的calculateDifferenceScore方法\r\n\tconst calculateDifferenceScore = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tconsole.log(\"比较字段:\", {\r\n\t\t\tfield: field.key,\r\n\t\t\tleft: leftData,\r\n\t\t\tright: rightData,\r\n\t\t\ttype: field.type,\r\n\t\t\ttime: new Date().toISOString()\r\n\t\t});\r\n\r\n\t\tif (!leftData.length || !rightData.length) {\r\n\t\t\tconsole.warn(`缺少比较数据: ${field.key}`);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// 提取实际值（兼容新旧数据结构）\r\n\t\tconst getComparableValue = data => {\r\n\t\t\tconst val = data[0];\r\n\t\t\t// 如果是对象且包含value字段（新解析器）\r\n\t\t\tif (typeof val === \"object\" && val !== null && \"value\" in val) {\r\n\t\t\t\treturn val.value;\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t};\r\n\r\n\t\tconst leftVal = getComparableValue(leftData);\r\n\t\tconst rightVal = getComparableValue(rightData);\r\n\r\n\t\t// 文本类型比较\r\n\t\tif (field.type === \"text\") {\r\n\t\t\tconst isSame = String(leftVal).trim() === String(rightVal).trim();\r\n\t\t\treturn isSame ? 1 : 5;\r\n\t\t}\r\n\r\n\t\t// 数值类型比较\r\n\t\tif (field.type === \"number\" || field.type === \"percentage\") {\r\n\t\t\tconst leftNum = parseFloat(leftVal);\r\n\t\t\tconst rightNum = parseFloat(rightVal);\r\n\r\n\t\t\tif (isNaN(leftNum) || isNaN(rightNum)) {\r\n\t\t\t\tconsole.warn(`非数值数据: ${field.key}`, { leftVal, rightVal });\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst absDiff = Math.abs(leftNum - rightNum);\r\n\t\t\tconst weight = getFieldWeight(field.key);\r\n\t\t\tlet score = 10 + absDiff * weight;\r\n\r\n\t\t\t// 趋势相反（大幅加分）\r\n\t\t\tif ((leftNum > 0 && rightNum < 0) || (leftNum < 0 && rightNum > 0)) {\r\n\t\t\t\tscore += 50;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`差异分数: ${field.key} = ${score} (差异: ${absDiff}, 权重: ${weight})`\r\n\t\t\t);\r\n\t\t\treturn score;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 字段权重\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 2.0,\r\n\t\t\tPopulation: 1.5,\r\n\t\t\t\"GDP growth\": 1.8,\r\n\t\t\tInflation: 1.3,\r\n\t\t\tLabor: 1.2\r\n\t\t};\r\n\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t};\r\n\r\n\t// 热力图颜色\r\n\tconst getHeatmapColor = score => {\r\n\t\tconst maxScore = 100;\r\n\t\tconst ratio = Math.min(score / maxScore, 1);\r\n\t\tconst hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\r\n\t\treturn `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\r\n\t};\r\n\r\n\t// 不带分数的排序字段（用于显示）\r\n\tconst sortedFields = computed(() => {\r\n\t\treturn sortedFieldsWithScores.value;\r\n\t});\r\n\r\n\t// 可比较字段过滤\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 新增方法：确保两侧数据都加载后才计算\r\n\tconst tryCalculateScores = () => {\r\n\t\tif (leftDataLoaded.value && rightDataLoaded.value) {\r\n\t\t\tconsole.log(\"两侧数据已加载完成，开始计算差异分数\", {\r\n\t\t\t\tleft: leftInfobox.value,\r\n\t\t\t\tright: rightInfobox.value\r\n\t\t\t});\r\n\r\n\t\t\tsortedFieldsWithScores.value = comparableFields.value\r\n\t\t\t\t.map(field => ({\r\n\t\t\t\t\t...field,\r\n\t\t\t\t\tscore: calculateDifferenceScore(field)\r\n\t\t\t\t}))\r\n\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\t// 确保数值类型排在文本类型前面\r\n\t\t\t\t\tif (a.type !== \"text\" && b.type === \"text\") return -1;\r\n\t\t\t\t\tif (a.type === \"text\" && b.type !== \"text\") return 1;\r\n\t\t\t\t\t// 同类型按分数降序\r\n\t\t\t\t\treturn b.score - a.score;\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// 其他方法保持不变\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) {\r\n\t\t\tconsole.warn(\"接收到空Infobox数据\");\r\n\t\t\treturn { title: \"\", type: \"\", data: {} };\r\n\t\t}\r\n\t\tconsole.log(\"处理Infobox数据:\", data);\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 修改总线监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"接收到左侧Infobox数据\", data);\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tleftDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"接收到右侧Infobox数据\", data);\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\trightDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\t});\r\n\r\n\t// 添加watch作为双重保障\r\n\twatch(\r\n\t\t[() => leftDataLoaded.value, () => rightDataLoaded.value],\r\n\t\t([leftLoaded, rightLoaded]) => {\r\n\t\t\tif (leftLoaded && rightLoaded) {\r\n\t\t\t\tconsole.log(\"watch检测到两侧数据加载完成\");\r\n\t\t\t\ttryCalculateScores();\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\t// 组件卸载时清理\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式完全保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.heatmap-control {\r\n\t\tmargin-bottom: 10px;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.heatmap-control button {\r\n\t\tpadding: 6px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sorting-heatmap {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #eee;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.heatmap-header {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.heatmap-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\r\n\t.heatmap-row:hover {\r\n\t\ttransform: scale(1.01);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.field-rank {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.field-score {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t}\r\n\r\n\t.field-weight {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}