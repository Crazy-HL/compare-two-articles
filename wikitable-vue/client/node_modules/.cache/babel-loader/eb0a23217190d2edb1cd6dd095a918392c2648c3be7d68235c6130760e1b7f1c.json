{"ast":null,"code":"import { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 状态变量\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const showSortingHeatmap = ref(true);\n    const leftDataLoaded = ref(false);\n    const rightDataLoaded = ref(false);\n    const sortedFieldsWithScores = ref([]);\n\n    // 可比较字段配置\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n\n    // 修改后的getField方法\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) {\n        console.warn(`Infobox数据未加载: ${infobox.title}`);\n        return [];\n      }\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          const fieldData = section[fieldKey];\n\n          // 如果是数组（如列表项），提取value或原始值\n          if (Array.isArray(fieldData)) {\n            return fieldData.map(item => {\n              // 如果是对象（新解析器结构），优先返回value字段\n              if (typeof item === \"object\" && item !== null) {\n                return item.value ?? item.raw ?? item;\n              }\n              return item;\n            });\n          }\n\n          // 如果是对象（新解析器结构），提取value或原始值\n          if (typeof fieldData === \"object\" && fieldData !== null) {\n            return [fieldData.value ?? fieldData.raw ?? fieldData];\n          }\n\n          // 旧格式直接返回\n          return [fieldData];\n        }\n      }\n      return [];\n    };\n    const calculateDifferenceScore = field => {\n      // 强制开启调试输出（即使在生产环境也显示）\n      const debug = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        console.log(`[DEBUG][${field.key}]`, ...args);\n        // 同时显示在页面上的调试面板（如果有）\n        if (window.showDebugInfo) {\n          const debugPanel = document.getElementById(\"debug-panel\") || createDebugPanel();\n          debugPanel.innerHTML += `<div>${args.join(\" \")}</div>`;\n        }\n      };\n\n      // 创建调试面板（用于页面内显示）\n      function createDebugPanel() {\n        const panel = document.createElement(\"div\");\n        panel.id = \"debug-panel\";\n        panel.style.position = \"fixed\";\n        panel.style.bottom = \"0\";\n        panel.style.right = \"0\";\n        panel.style.background = \"white\";\n        panel.style.zIndex = \"9999\";\n        panel.style.padding = \"10px\";\n        panel.style.border = \"1px solid red\";\n        document.body.appendChild(panel);\n        return panel;\n      }\n      debug(\"开始计算差异分数\", field);\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      debug(\"原始数据:\", {\n        left: leftData,\n        right: rightData\n      });\n      if (!leftData.length || !rightData.length) {\n        debug(\"数据缺失，返回0分\");\n        return 0;\n      }\n\n      // 增强版数值提取（处理多值情况）\n      const getNumericValue = data => {\n        const val = data[0];\n        if (!val) return {\n          num: NaN,\n          raw: \"\"\n        };\n\n        // 处理新解析器结构\n        if (typeof val === \"object\") {\n          const num = Number(val.value ?? val.raw);\n          return {\n            num: isNaN(num) ? NaN : num,\n            raw: val.raw || String(val.value) || \"\"\n          };\n        }\n\n        // 处理旧格式\n        const num = Number(val);\n        return {\n          num: isNaN(num) ? NaN : num,\n          raw: String(val)\n        };\n      };\n      const left = getNumericValue(leftData);\n      const right = getNumericValue(rightData);\n      debug(\"解析后的数值:\", {\n        leftNum: left.num,\n        rightNum: right.num,\n        leftRaw: left.raw,\n        rightRaw: right.raw\n      });\n\n      // 无效值处理\n      if (isNaN(left.num) || isNaN(right.num)) {\n        debug(\"无效数值:\", {\n          left: left.raw,\n          right: right.raw\n        });\n        return 0;\n      }\n\n      /* 核心改进：强化趋势检测 */\n      const isOppositeTrend = (() => {\n        // 情况1：明确的正负相反（严格模式）\n        if (left.num > 0.3 && right.num < -0.3 || left.num < -0.3 && right.num > 0.3) {\n          debug(\"明确正负相反\", {\n            threshold: 0.3,\n            left: left.num,\n            right: right.num\n          });\n          return true;\n        }\n\n        // 情况2：零增长 vs 显著变化（宽松模式）\n        const isLeftSignificant = Math.abs(left.num) >= 1;\n        const isRightSignificant = Math.abs(right.num) >= 1;\n        if (!isLeftSignificant && isRightSignificant || isLeftSignificant && !isRightSignificant) {\n          debug(\"零vs显著变化\", {\n            threshold: 1,\n            left: left.num,\n            right: right.num\n          });\n          return true;\n        }\n        return false;\n      })();\n\n      // 差异计算（使用相对比例）\n      const minVal = Math.min(Math.abs(left.num), Math.abs(right.num));\n      const maxVal = Math.max(Math.abs(left.num), Math.abs(right.num));\n      const ratio = maxVal > 0 ? minVal / maxVal : 0;\n\n      // 动态分数计算\n      let score;\n      if (isOppositeTrend) {\n        // 趋势相反：基础95分 + 差异加成（0-5分）\n        score = 95 + 5 * (1 - ratio);\n        debug(\"趋势相反分数\", {\n          base: 95,\n          ratio,\n          added: 5 * (1 - ratio),\n          total: score\n        });\n      } else {\n        // 趋势相同：基础10分 + 差异加成（0-40分）\n        score = 10 + 40 * (1 - ratio);\n      }\n\n      // GDP growth特别加权（3倍权重）\n      const baseWeight = getFieldWeight(field.key);\n      const weight = field.key.toLowerCase().includes(\"gdp growth\") ? baseWeight * 3 : baseWeight;\n      const finalScore = Math.min(100, Math.round(score * weight));\n      debug(\"最终计算结果\", {\n        isOppositeTrend,\n        leftValue: left.num,\n        rightValue: right.num,\n        ratio,\n        baseScore: score,\n        weight,\n        finalScore\n      });\n      return finalScore;\n    };\n\n    // 字段权重也需要相应调整（更合理的范围）\n    const getFieldWeight = fieldKey => {\n      const weights = {\n        GDP: 1.5,\n        Population: 1.3,\n        \"GDP growth\": 2.0,\n        // 增长率差异更重要\n        Inflation: 1.8,\n        Labor: 1.2\n      };\n      for (const [key, weight] of Object.entries(weights)) {\n        if (fieldKey.toLowerCase().includes(key.toLowerCase())) {\n          return weight;\n        }\n      }\n      return 1.0; // 默认权重\n    };\n\n    // 热力图颜色\n    const getHeatmapColor = score => {\n      const maxScore = 100;\n      const ratio = Math.min(score / maxScore, 1);\n      const hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\n      return `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\n    };\n\n    // 不带分数的排序字段（用于显示）\n    const sortedFields = computed(() => {\n      return sortedFieldsWithScores.value;\n    });\n\n    // 可比较字段过滤\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 新增方法：确保两侧数据都加载后才计算\n    const tryCalculateScores = () => {\n      if (leftDataLoaded.value && rightDataLoaded.value) {\n        console.log(\"两侧数据已加载完成，开始计算差异分数\", {\n          left: leftInfobox.value,\n          right: rightInfobox.value\n        });\n        sortedFieldsWithScores.value = comparableFields.value.map(field => ({\n          ...field,\n          score: calculateDifferenceScore(field)\n        })).sort((a, b) => {\n          // 确保数值类型排在文本类型前面\n          if (a.type !== \"text\" && b.type === \"text\") return -1;\n          if (a.type === \"text\" && b.type !== \"text\") return 1;\n          // 同类型按分数降序\n          return b.score - a.score;\n        });\n      }\n    };\n\n    // 其他方法保持不变\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: infobox.title,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`highlight-${divId}-paragraphs`, fieldKey);\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n      const divId = side === \"left\" ? \"div1\" : \"div3\";\n      bus.emit(`clear-${divId}-highlights`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const handleMiddleColumnClick = field => {\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: getField(leftInfobox.value, field.key),\n        rightData: getField(rightInfobox.value, field.key),\n        leftTitle: leftInfobox.value.title,\n        rightTitle: rightInfobox.value.title,\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n      bus.emit(\"highlight-div1-paragraphs\", field.key);\n      bus.emit(\"highlight-div3-paragraphs\", field.key);\n    };\n    const showCombinedChart = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      currentChart.value = {\n        title: `合并图表 - ${field.key}`,\n        field: field,\n        data: [...leftData, ...rightData]\n      };\n      showFullChartModal.value = true;\n    };\n    const processInfoboxData = data => {\n      if (!data) {\n        console.warn(\"接收到空Infobox数据\");\n        return {\n          title: \"\",\n          type: \"\",\n          data: {}\n        };\n      }\n      console.log(\"处理Infobox数据:\", data);\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 修改总线监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        console.log(\"接收到左侧Infobox数据\", data);\n        leftInfobox.value = processInfoboxData(data);\n        leftDataLoaded.value = true;\n        tryCalculateScores();\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        console.log(\"接收到右侧Infobox数据\", data);\n        rightInfobox.value = processInfoboxData(data);\n        rightDataLoaded.value = true;\n        tryCalculateScores();\n      });\n    });\n\n    // 添加watch作为双重保障\n    watch([() => leftDataLoaded.value, () => rightDataLoaded.value], _ref2 => {\n      let [leftLoaded, rightLoaded] = _ref2;\n      if (leftLoaded && rightLoaded) {\n        console.log(\"watch检测到两侧数据加载完成\");\n        tryCalculateScores();\n      }\n    });\n\n    // 组件卸载时清理\n    onUnmounted(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      showSortingHeatmap,\n      leftDataLoaded,\n      rightDataLoaded,\n      sortedFieldsWithScores,\n      COMPARABLE_FIELDS,\n      getField,\n      calculateDifferenceScore,\n      getFieldWeight,\n      getHeatmapColor,\n      sortedFields,\n      comparableFields,\n      tryCalculateScores,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      handleMiddleColumnClick,\n      showCombinedChart,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      onUnmounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","onUnmounted","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","showSortingHeatmap","leftDataLoaded","rightDataLoaded","sortedFieldsWithScores","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","getField","infobox","fieldKey","console","warn","section","Object","values","undefined","fieldData","Array","isArray","map","item","value","raw","calculateDifferenceScore","debug","_len","arguments","length","args","_key","log","window","showDebugInfo","debugPanel","document","getElementById","createDebugPanel","innerHTML","join","panel","createElement","id","style","position","bottom","right","background","zIndex","padding","border","body","appendChild","leftData","rightData","left","getNumericValue","val","num","NaN","Number","isNaN","String","leftNum","rightNum","leftRaw","rightRaw","isOppositeTrend","threshold","isLeftSignificant","Math","abs","isRightSignificant","minVal","min","maxVal","max","ratio","score","base","added","total","baseWeight","getFieldWeight","weight","toLowerCase","includes","finalScore","round","leftValue","rightValue","baseScore","weights","GDP","Population","Inflation","Labor","entries","getHeatmapColor","maxScore","hue","sortedFields","comparableFields","filter","leftVal","rightVal","tryCalculateScores","sort","a","b","showFullChart","closeFullChart","hoverInfobox","side","infoboxTitle","divId","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","handleMiddleColumnClick","leftTitle","rightTitle","fieldType","fieldLabel","showCombinedChart","processInfoboxData","sections","on","_ref2","leftLoaded","rightLoaded","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<!-- 原有模板代码完全保持不变 -->\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- 排序热力图开关 -->\r\n\t\t<div class=\"heatmap-control\">\r\n\t\t\t<button @click=\"showSortingHeatmap = !showSortingHeatmap\">\r\n\t\t\t\t{{ showSortingHeatmap ? \"隐藏\" : \"显示\" }}排序热力图\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 排序热力图可视化 -->\r\n\t\t<div class=\"sorting-heatmap\" v-if=\"showSortingHeatmap\">\r\n\t\t\t<div class=\"heatmap-header\">\r\n\t\t\t\t<span>排序</span>\r\n\t\t\t\t<span>属性</span>\r\n\t\t\t\t<span>类型</span>\r\n\t\t\t\t<span>差异分数</span>\r\n\t\t\t\t<span>权重</span>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"heatmap-row\"\r\n\t\t\t\tv-for=\"(field, index) in sortedFieldsWithScores\"\r\n\t\t\t\t:key=\"field.key\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tbackgroundColor: getHeatmapColor(field.score),\r\n\t\t\t\t\tborderLeft: `4px solid ${getHeatmapColor(field.score)}`\r\n\t\t\t\t}\">\r\n\t\t\t\t<span class=\"field-rank\">{{ index + 1 }}</span>\r\n\t\t\t\t<span class=\"field-name\">{{ field.key }}</span>\r\n\t\t\t\t<span class=\"field-type\">{{ field.typeLabel }}</span>\r\n\t\t\t\t<span class=\"field-score\">{{ field.score.toFixed(1) }}</span>\r\n\t\t\t\t<span class=\"field-weight\">{{\r\n\t\t\t\t\tgetFieldWeight(field.key).toFixed(1)\r\n\t\t\t\t}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主对比表格 -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"对比分析\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t⚖️\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"合并图表\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\t📊\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, onUnmounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\t// 状态变量\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst showSortingHeatmap = ref(true);\r\n\tconst leftDataLoaded = ref(false);\r\n\tconst rightDataLoaded = ref(false);\r\n\tconst sortedFieldsWithScores = ref([]);\r\n\r\n\t// 可比较字段配置\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 修改后的getField方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) {\r\n\t\t\tconsole.warn(`Infobox数据未加载: ${infobox.title}`);\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\tconst fieldData = section[fieldKey];\r\n\r\n\t\t\t\t// 如果是数组（如列表项），提取value或原始值\r\n\t\t\t\tif (Array.isArray(fieldData)) {\r\n\t\t\t\t\treturn fieldData.map(item => {\r\n\t\t\t\t\t\t// 如果是对象（新解析器结构），优先返回value字段\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\treturn item.value ?? item.raw ?? item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 如果是对象（新解析器结构），提取value或原始值\r\n\t\t\t\tif (typeof fieldData === \"object\" && fieldData !== null) {\r\n\t\t\t\t\treturn [fieldData.value ?? fieldData.raw ?? fieldData];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 旧格式直接返回\r\n\t\t\t\treturn [fieldData];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst calculateDifferenceScore = field => {\r\n\t\t// 强制开启调试输出（即使在生产环境也显示）\r\n\t\tconst debug = (...args) => {\r\n\t\t\tconsole.log(`[DEBUG][${field.key}]`, ...args);\r\n\t\t\t// 同时显示在页面上的调试面板（如果有）\r\n\t\t\tif (window.showDebugInfo) {\r\n\t\t\t\tconst debugPanel =\r\n\t\t\t\t\tdocument.getElementById(\"debug-panel\") || createDebugPanel();\r\n\t\t\t\tdebugPanel.innerHTML += `<div>${args.join(\" \")}</div>`;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 创建调试面板（用于页面内显示）\r\n\t\tfunction createDebugPanel() {\r\n\t\t\tconst panel = document.createElement(\"div\");\r\n\t\t\tpanel.id = \"debug-panel\";\r\n\t\t\tpanel.style.position = \"fixed\";\r\n\t\t\tpanel.style.bottom = \"0\";\r\n\t\t\tpanel.style.right = \"0\";\r\n\t\t\tpanel.style.background = \"white\";\r\n\t\t\tpanel.style.zIndex = \"9999\";\r\n\t\t\tpanel.style.padding = \"10px\";\r\n\t\t\tpanel.style.border = \"1px solid red\";\r\n\t\t\tdocument.body.appendChild(panel);\r\n\t\t\treturn panel;\r\n\t\t}\r\n\r\n\t\tdebug(\"开始计算差异分数\", field);\r\n\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\t\tdebug(\"原始数据:\", { left: leftData, right: rightData });\r\n\r\n\t\tif (!leftData.length || !rightData.length) {\r\n\t\t\tdebug(\"数据缺失，返回0分\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// 增强版数值提取（处理多值情况）\r\n\t\tconst getNumericValue = data => {\r\n\t\t\tconst val = data[0];\r\n\t\t\tif (!val) return { num: NaN, raw: \"\" };\r\n\r\n\t\t\t// 处理新解析器结构\r\n\t\t\tif (typeof val === \"object\") {\r\n\t\t\t\tconst num = Number(val.value ?? val.raw);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnum: isNaN(num) ? NaN : num,\r\n\t\t\t\t\traw: val.raw || String(val.value) || \"\"\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// 处理旧格式\r\n\t\t\tconst num = Number(val);\r\n\t\t\treturn {\r\n\t\t\t\tnum: isNaN(num) ? NaN : num,\r\n\t\t\t\traw: String(val)\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tconst left = getNumericValue(leftData);\r\n\t\tconst right = getNumericValue(rightData);\r\n\t\tdebug(\"解析后的数值:\", {\r\n\t\t\tleftNum: left.num,\r\n\t\t\trightNum: right.num,\r\n\t\t\tleftRaw: left.raw,\r\n\t\t\trightRaw: right.raw\r\n\t\t});\r\n\r\n\t\t// 无效值处理\r\n\t\tif (isNaN(left.num) || isNaN(right.num)) {\r\n\t\t\tdebug(\"无效数值:\", { left: left.raw, right: right.raw });\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t/* 核心改进：强化趋势检测 */\r\n\t\tconst isOppositeTrend = (() => {\r\n\t\t\t// 情况1：明确的正负相反（严格模式）\r\n\t\t\tif (\r\n\t\t\t\t(left.num > 0.3 && right.num < -0.3) ||\r\n\t\t\t\t(left.num < -0.3 && right.num > 0.3)\r\n\t\t\t) {\r\n\t\t\t\tdebug(\"明确正负相反\", {\r\n\t\t\t\t\tthreshold: 0.3,\r\n\t\t\t\t\tleft: left.num,\r\n\t\t\t\t\tright: right.num\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// 情况2：零增长 vs 显著变化（宽松模式）\r\n\t\t\tconst isLeftSignificant = Math.abs(left.num) >= 1;\r\n\t\t\tconst isRightSignificant = Math.abs(right.num) >= 1;\r\n\t\t\tif (\r\n\t\t\t\t(!isLeftSignificant && isRightSignificant) ||\r\n\t\t\t\t(isLeftSignificant && !isRightSignificant)\r\n\t\t\t) {\r\n\t\t\t\tdebug(\"零vs显著变化\", {\r\n\t\t\t\t\tthreshold: 1,\r\n\t\t\t\t\tleft: left.num,\r\n\t\t\t\t\tright: right.num\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t})();\r\n\r\n\t\t// 差异计算（使用相对比例）\r\n\t\tconst minVal = Math.min(Math.abs(left.num), Math.abs(right.num));\r\n\t\tconst maxVal = Math.max(Math.abs(left.num), Math.abs(right.num));\r\n\t\tconst ratio = maxVal > 0 ? minVal / maxVal : 0;\r\n\r\n\t\t// 动态分数计算\r\n\t\tlet score;\r\n\t\tif (isOppositeTrend) {\r\n\t\t\t// 趋势相反：基础95分 + 差异加成（0-5分）\r\n\t\t\tscore = 95 + 5 * (1 - ratio);\r\n\t\t\tdebug(\"趋势相反分数\", {\r\n\t\t\t\tbase: 95,\r\n\t\t\t\tratio,\r\n\t\t\t\tadded: 5 * (1 - ratio),\r\n\t\t\t\ttotal: score\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// 趋势相同：基础10分 + 差异加成（0-40分）\r\n\t\t\tscore = 10 + 40 * (1 - ratio);\r\n\t\t}\r\n\r\n\t\t// GDP growth特别加权（3倍权重）\r\n\t\tconst baseWeight = getFieldWeight(field.key);\r\n\t\tconst weight = field.key.toLowerCase().includes(\"gdp growth\")\r\n\t\t\t? baseWeight * 3\r\n\t\t\t: baseWeight;\r\n\r\n\t\tconst finalScore = Math.min(100, Math.round(score * weight));\r\n\r\n\t\tdebug(\"最终计算结果\", {\r\n\t\t\tisOppositeTrend,\r\n\t\t\tleftValue: left.num,\r\n\t\t\trightValue: right.num,\r\n\t\t\tratio,\r\n\t\t\tbaseScore: score,\r\n\t\t\tweight,\r\n\t\t\tfinalScore\r\n\t\t});\r\n\r\n\t\treturn finalScore;\r\n\t};\r\n\r\n\t// 字段权重也需要相应调整（更合理的范围）\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 1.5,\r\n\t\t\tPopulation: 1.3,\r\n\t\t\t\"GDP growth\": 2.0, // 增长率差异更重要\r\n\t\t\tInflation: 1.8,\r\n\t\t\tLabor: 1.2\r\n\t\t};\r\n\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1.0; // 默认权重\r\n\t};\r\n\r\n\t// 热力图颜色\r\n\tconst getHeatmapColor = score => {\r\n\t\tconst maxScore = 100;\r\n\t\tconst ratio = Math.min(score / maxScore, 1);\r\n\t\tconst hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\r\n\t\treturn `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\r\n\t};\r\n\r\n\t// 不带分数的排序字段（用于显示）\r\n\tconst sortedFields = computed(() => {\r\n\t\treturn sortedFieldsWithScores.value;\r\n\t});\r\n\r\n\t// 可比较字段过滤\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 新增方法：确保两侧数据都加载后才计算\r\n\tconst tryCalculateScores = () => {\r\n\t\tif (leftDataLoaded.value && rightDataLoaded.value) {\r\n\t\t\tconsole.log(\"两侧数据已加载完成，开始计算差异分数\", {\r\n\t\t\t\tleft: leftInfobox.value,\r\n\t\t\t\tright: rightInfobox.value\r\n\t\t\t});\r\n\r\n\t\t\tsortedFieldsWithScores.value = comparableFields.value\r\n\t\t\t\t.map(field => ({\r\n\t\t\t\t\t...field,\r\n\t\t\t\t\tscore: calculateDifferenceScore(field)\r\n\t\t\t\t}))\r\n\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\t// 确保数值类型排在文本类型前面\r\n\t\t\t\t\tif (a.type !== \"text\" && b.type === \"text\") return -1;\r\n\t\t\t\t\tif (a.type === \"text\" && b.type !== \"text\") return 1;\r\n\t\t\t\t\t// 同类型按分数降序\r\n\t\t\t\t\treturn b.score - a.score;\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// 其他方法保持不变\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) {\r\n\t\t\tconsole.warn(\"接收到空Infobox数据\");\r\n\t\t\treturn { title: \"\", type: \"\", data: {} };\r\n\t\t}\r\n\t\tconsole.log(\"处理Infobox数据:\", data);\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 修改总线监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"接收到左侧Infobox数据\", data);\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tleftDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"接收到右侧Infobox数据\", data);\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\trightDataLoaded.value = true;\r\n\t\t\ttryCalculateScores();\r\n\t\t});\r\n\t});\r\n\r\n\t// 添加watch作为双重保障\r\n\twatch(\r\n\t\t[() => leftDataLoaded.value, () => rightDataLoaded.value],\r\n\t\t([leftLoaded, rightLoaded]) => {\r\n\t\t\tif (leftLoaded && rightLoaded) {\r\n\t\t\t\tconsole.log(\"watch检测到两侧数据加载完成\");\r\n\t\t\t\ttryCalculateScores();\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\t// 组件卸载时清理\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式完全保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.heatmap-control {\r\n\t\tmargin-bottom: 10px;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.heatmap-control button {\r\n\t\tpadding: 6px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sorting-heatmap {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #eee;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.heatmap-header {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.heatmap-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\r\n\t.heatmap-row:hover {\r\n\t\ttransform: scale(1.01);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.field-rank {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.field-score {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t}\r\n\r\n\t.field-weight {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}