{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const isLoading = ref(false);\n\n    // 使用infobox数据替代rawData\n    const div1InfoboxData = ref(null);\n    const div3InfoboxData = ref(null);\n\n    // 对比上下文\n    const currentComparisonContext = ref({\n      fieldKey: null,\n      previousAnalysis: null,\n      allAttributes: [],\n      leftData: null,\n      rightData: null,\n      leftTitle: \"\",\n      rightTitle: \"\"\n    });\n\n    // 追问关键词\n    const FOLLOW_UP_KEYWORDS = [\"结合其余\", \"其他属性\", \"为什么\", \"原因\", \"分析原因\", \"深入分析\", \"还有什么因素\"];\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) container.scrollTop = container.scrollHeight;\n      });\n    };\n\n    // 监听infobox数据\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_InfoboxData\", data => {\n        div1InfoboxData.value = data;\n        console.log(\"Received div1 infobox:\", data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        div3InfoboxData.value = data;\n        console.log(\"Received div3 infobox:\", data);\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n\n    // 格式化分析结果\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n      text = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n      return text;\n    };\n\n    // 判断是否为追问\n    const isFollowUpQuestion = question => {\n      return FOLLOW_UP_KEYWORDS.some(keyword => question.includes(keyword)) && currentComparisonContext.value.fieldKey && currentComparisonContext.value.allAttributes.length > 0;\n    };\n\n    // 属性对比\n    const handleAttributeComparison = async _ref2 => {\n      let {\n        fieldKey,\n        leftData,\n        rightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref2;\n      if (!leftData || !rightData) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请先选择要对比的数据\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      isLoading.value = true;\n      try {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `正在分析 <strong>${leftTitle}</strong> 和 <strong>${rightTitle}</strong> 的 <strong>${fieldKey}</strong> (${fieldLabel}) 数据对比...`,\n          timestamp: new Date().toLocaleString()\n        });\n        await api.post(\"analyze_chart\", {\n          chartData: {\n            leftData,\n            rightData,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType\n          },\n          chartType: \"comparison\"\n        }, response => {\n          if (response?.analysis) {\n            const formattedAnalysis = formatAnalysisResult(response.analysis);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnalysis,\n              timestamp: new Date().toLocaleString()\n            });\n          } else {\n            throw new Error(\"无效的响应格式\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `对比分析失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 提问方法\n    const askQuestion = async () => {\n      const question = userQuestion.value.trim();\n      if (!question) {\n        showError(\"问题不能为空\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      isLoading.value = true;\n      try {\n        const isFollowUp = isFollowUpQuestion(question);\n        const endpoint = isFollowUp ? \"analyze_follow_up\" : \"gpt_ask_infobox\";\n        if (!div1InfoboxData.value || !div3InfoboxData.value) {\n          showError(\"信息框数据未加载完成\");\n          return;\n        }\n        const response = await api.post(endpoint, {\n          question,\n          leftData: div1InfoboxData.value,\n          rightData: div3InfoboxData.value,\n          ...(isFollowUp && {\n            previousContext: currentComparisonContext.value,\n            previousField: currentComparisonContext.value.fieldKey\n          })\n        });\n        if (response?.answer) {\n          const formatted = formatAnalysisResult(response.answer);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatted,\n            timestamp: new Date().toLocaleString()\n          });\n        }\n      } catch (error) {\n        showError(`请求失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 快捷追问\n    const quickFollowUpQuestion = () => {\n      userQuestion.value = \"结合其余对比属性，分析其原因\";\n      askQuestion();\n    };\n\n    // 显示错误\n    const showError = message => {\n      chatHistory.value.push({\n        role: \"assistant\",\n        content: message,\n        timestamp: new Date().toLocaleString(),\n        error: true\n      });\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      isLoading,\n      div1InfoboxData,\n      div3InfoboxData,\n      currentComparisonContext,\n      FOLLOW_UP_KEYWORDS,\n      loadChatHistory,\n      scrollToBottom,\n      formatAnalysisResult,\n      isFollowUpQuestion,\n      handleAttributeComparison,\n      askQuestion,\n      quickFollowUpQuestion,\n      showError,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","userQuestion","chatHistory","isLoading","div1InfoboxData","div3InfoboxData","currentComparisonContext","fieldKey","previousAnalysis","allAttributes","leftData","rightData","leftTitle","rightTitle","FOLLOW_UP_KEYWORDS","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","on","data","log","off","formatAnalysisResult","text","replace","isFollowUpQuestion","question","some","keyword","includes","length","handleAttributeComparison","_ref2","fieldType","fieldLabel","push","role","content","timestamp","Date","toLocaleString","api","post","chartData","chartType","response","analysis","formattedAnalysis","Error","message","askQuestion","trim","showError","isFollowUp","endpoint","previousContext","previousField","answer","formatted","quickFollowUpQuestion"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1InfoboxData\"\r\n\t\t\t\t:div3-raw-data=\"div3InfoboxData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tv-if=\"currentComparisonContext.fieldKey\"\r\n\t\t\t\t\t\t@click=\"quickFollowUpQuestion\"\r\n\t\t\t\t\t\t:disabled=\"isLoading\"\r\n\t\t\t\t\t\tclass=\"quick-btn\">\r\n\t\t\t\t\t\t深入分析\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst isLoading = ref(false);\r\n\r\n\t// 使用infobox数据替代rawData\r\n\tconst div1InfoboxData = ref(null);\r\n\tconst div3InfoboxData = ref(null);\r\n\r\n\t// 对比上下文\r\n\tconst currentComparisonContext = ref({\r\n\t\tfieldKey: null,\r\n\t\tpreviousAnalysis: null,\r\n\t\tallAttributes: [],\r\n\t\tleftData: null,\r\n\t\trightData: null,\r\n\t\tleftTitle: \"\",\r\n\t\trightTitle: \"\"\r\n\t});\r\n\r\n\t// 追问关键词\r\n\tconst FOLLOW_UP_KEYWORDS = [\r\n\t\t\"结合其余\",\r\n\t\t\"其他属性\",\r\n\t\t\"为什么\",\r\n\t\t\"原因\",\r\n\t\t\"分析原因\",\r\n\t\t\"深入分析\",\r\n\t\t\"还有什么因素\"\r\n\t];\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) container.scrollTop = container.scrollHeight;\r\n\t\t});\r\n\t};\r\n\r\n\t// 监听infobox数据\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tdiv1InfoboxData.value = data;\r\n\t\t\tconsole.log(\"Received div1 infobox:\", data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tdiv3InfoboxData.value = data;\r\n\t\t\tconsole.log(\"Received div3 infobox:\", data);\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 判断是否为追问\r\n\tconst isFollowUpQuestion = question => {\r\n\t\treturn (\r\n\t\t\tFOLLOW_UP_KEYWORDS.some(keyword => question.includes(keyword)) &&\r\n\t\t\tcurrentComparisonContext.value.fieldKey &&\r\n\t\t\tcurrentComparisonContext.value.allAttributes.length > 0\r\n\t\t);\r\n\t};\r\n\r\n\t// 属性对比\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!leftData || !rightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在分析 <strong>${leftTitle}</strong> 和 <strong>${rightTitle}</strong> 的 <strong>${fieldKey}</strong> (${fieldLabel}) 数据对比...`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"analyze_chart\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 提问方法\r\n\tconst askQuestion = async () => {\r\n\t\tconst question = userQuestion.value.trim();\r\n\t\tif (!question) {\r\n\t\t\tshowError(\"问题不能为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tconst isFollowUp = isFollowUpQuestion(question);\r\n\t\t\tconst endpoint = isFollowUp ? \"analyze_follow_up\" : \"gpt_ask_infobox\";\r\n\r\n\t\t\tif (!div1InfoboxData.value || !div3InfoboxData.value) {\r\n\t\t\t\tshowError(\"信息框数据未加载完成\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await api.post(endpoint, {\r\n\t\t\t\tquestion,\r\n\t\t\t\tleftData: div1InfoboxData.value,\r\n\t\t\t\trightData: div3InfoboxData.value,\r\n\t\t\t\t...(isFollowUp && {\r\n\t\t\t\t\tpreviousContext: currentComparisonContext.value,\r\n\t\t\t\t\tpreviousField: currentComparisonContext.value.fieldKey\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.answer) {\r\n\t\t\t\tconst formatted = formatAnalysisResult(response.answer);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatted,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`请求失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 快捷追问\r\n\tconst quickFollowUpQuestion = () => {\r\n\t\tuserQuestion.value = \"结合其余对比属性，分析其原因\";\r\n\t\taskQuestion();\r\n\t};\r\n\r\n\t// 显示错误\r\n\tconst showError = message => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: message,\r\n\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\terror: true\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.quick-btn {\r\n\t\tbackground-color: #2196f3;\r\n\t\tflex: 0.5;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\topacity: 0.9;\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}