{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62c843dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoadingSpinner = _resolveComponent(\"LoadingSpinner\");\n  const _component_ErrorDisplay = _resolveComponent(\"ErrorDisplay\");\n  const _component_WikipediaContent = _resolveComponent(\"WikipediaContent\");\n  const _component_TextPopup = _resolveComponent(\"TextPopup\");\n  const _component_ArticleOutline = _resolveComponent(\"ArticleOutline\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */), _ctx.loading ? (_openBlock(), _createBlock(_component_LoadingSpinner, {\n    key: 0\n  })) : _ctx.error ? (_openBlock(), _createBlock(_component_ErrorDisplay, {\n    key: 1,\n    message: _ctx.error,\n    onRetry: _ctx.fetchWikipediaContent\n  }, null, 8 /* PROPS */, [\"message\", \"onRetry\"])) : (_openBlock(), _createBlock(_component_WikipediaContent, {\n    key: 2,\n    content: _ctx.pageHtml,\n    onSelect: _ctx.handleSelection\n  }, null, 8 /* PROPS */, [\"content\", \"onSelect\"])), _createVNode(_component_TextPopup, {\n    visible: _ctx.showPopup[$props.divId],\n    content: _ctx.selectedText[$props.divId],\n    containerClass: $props.divId === 'div1' ? 'chart-container1' : 'chart-container2',\n    containerRef: _ctx.divRef,\n    onClose: _ctx.closePopup\n  }, null, 8 /* PROPS */, [\"visible\", \"content\", \"containerClass\", \"containerRef\", \"onClose\"]), _createVNode(_component_ArticleOutline, {\n    content: _ctx.pageHtml,\n    divId: $props.divId\n  }, null, 8 /* PROPS */, [\"content\", \"divId\"])], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","selectContentClass","id","divId","ref","_createElementVNode","_toDisplayString","pageTitle","_ctx","loading","_createBlock","_component_LoadingSpinner","key","error","_component_ErrorDisplay","message","onRetry","fetchWikipediaContent","_component_WikipediaContent","content","pageHtml","onSelect","handleSelection","_createVNode","_component_TextPopup","visible","showPopup","selectedText","containerClass","containerRef","divRef","onClose","closePopup","_component_ArticleOutline","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String,\r\n\t\tlinkedOutline: Array\r\n\t});\r\n\r\n\t// 状态定义...\r\n\tconst debugMode = ref(true);\r\n\r\n\t// 安全事件发射器\r\n\tconst emitEvent = (eventName, payload) => {\r\n\t\tif (!bus || !bus.emit) {\r\n\t\t\tconsole.error(`[${props.divId}] 事件总线不可用`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst fullPayload = {\r\n\t\t\t...payload,\r\n\t\t\t_source: props.divId,\r\n\t\t\t_timestamp: Date.now()\r\n\t\t};\r\n\r\n\t\tif (debugMode.value) {\r\n\t\t\tconsole.groupCollapsed(`[${props.divId}] 发射事件 ${eventName}`);\r\n\t\t\tconsole.log(\"载荷:\", fullPayload);\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\r\n\t\tbus.emit(eventName, fullPayload);\r\n\t};\r\n\r\n\t// 修改后的处理函数\r\n\tconst handleSelectionWithSourceId = (content, sourceId, isTable) => {\r\n\t\t// 更新当前组件状态\r\n\t\tselectedText.value[props.divId] = content;\r\n\t\tshowPopup.value[props.divId] = true;\r\n\t\tnextTick(updatePopupPosition);\r\n\r\n\t\t// 主事件（必须触发）\r\n\t\temitEvent(`${props.divId}Event`, {\r\n\t\t\ttype: \"primary\",\r\n\t\t\tcontent,\r\n\t\t\tsourceId,\r\n\t\t\tisTable\r\n\t\t});\r\n\r\n\t\t// 表格关联处理\r\n\t\tif (isTable && sourceId) {\r\n\t\t\tconst { linkedItem, chapterContent } = extractLinkedChapterContent(\r\n\t\t\t\tsourceId,\r\n\t\t\t\tprops.divId\r\n\t\t\t);\r\n\t\t\tif (linkedItem && chapterContent) {\r\n\t\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\t\temitEvent(`${otherContainerId}Event`, {\r\n\t\t\t\t\ttype: \"linked\",\r\n\t\t\t\t\tcontent: chapterContent,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\tlinkedItem\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 滚动到关联位置\r\n\t\t\t\tconst targetId =\r\n\t\t\t\t\tprops.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(targetId)\r\n\t\t\t\t\t?.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 事件监听\r\n\tconst eventHandler = data => {\r\n\t\tif (data?.type === \"linked\") {\r\n\t\t\tselectedText.value[props.divId] = data.content;\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(updatePopupPosition);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\t// mitt特有写法：用 * 监听所有事件（调试用）\r\n\t\tif (debugMode.value) {\r\n\t\t\tbus.on(\"*\", (type, e) => console.log(`[全局监听] ${type}`, e));\r\n\t\t}\r\n\r\n\t\t// 监听当前组件事件\r\n\t\tbus.on(`${props.divId}Event`, eventHandler);\r\n\t\tbus.on(`${props.divId}_Event`, eventHandler); // 兼容旧版\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\t// mitt不需要指定处理函数即可移除\r\n\t\tbus.off(`${props.divId}Event`);\r\n\t\tbus.off(`${props.divId}_Event`);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* 选中文本的高亮样式 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;;;;;;uBACCA,mBAAA,CAiBM;IAjBAC,KAAK,EADZC,eAAA,UACuBC,MAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBN,MAAA,CAAAO,SAAS,kBACMC,IAAA,CAAAC,OAAO,I,cAA7BC,YAAA,CAAiCC,yBAAA;IAHnCC,GAAA;EAAA,MAKcJ,IAAA,CAAAK,KAAK,I,cADjBH,YAAA,CAGkCI,uBAAA;IAPpCF,GAAA;IAMIG,OAAO,EAAEP,IAAA,CAAAK,KAAK;IACdG,OAAK,EAAER,IAAA,CAAAS;oEACTP,YAAA,CAAyEQ,2BAAA;IAR3EN,GAAA;IAQ4BO,OAAO,EAAEX,IAAA,CAAAY,QAAQ;IAAGC,QAAM,EAAEb,IAAA,CAAAc;qDACtDC,YAAA,CAOuBC,oBAAA;IANrBC,OAAO,EAAEjB,IAAA,CAAAkB,SAAS,CAAC1B,MAAA,CAAAG,KAAK;IACxBgB,OAAO,EAAEX,IAAA,CAAAmB,YAAY,CAAC3B,MAAA,CAAAG,KAAK;IAC3ByB,cAAc,EAAQ5B,MAAA,CAAAG,KAAK;IAG3B0B,YAAY,EAAErB,IAAA,CAAAsB,MAAM;IACpBC,OAAK,EAAEvB,IAAA,CAAAwB;gGACTT,YAAA,CAAqDU,yBAAA;IAApCd,OAAO,EAAEX,IAAA,CAAAY,QAAQ;IAAGjB,KAAK,EAAEH,MAAA,CAAAG;yEAjB9C+B,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}