{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, onMounted, computed } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML 内容\n    divId: String // 组件对应的 divId\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false); // 控制当前 divId 是否显示大纲\n    const outline = ref([]);\n\n    // 切换当前 divId 的大纲显示状态\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // 解析文章内容，生成大纲\n    const extractOutline = content => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      const outlineItems = [];\n      headings.forEach(heading => {\n        const id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${props.divId}`;\n        heading.id = id;\n        outlineItems.push({\n          id,\n          text: heading.textContent,\n          level: parseInt(heading.tagName.charAt(1))\n        });\n      });\n      return outlineItems;\n    };\n\n    // 监听 content 变化，更新大纲，但不影响 isVisible\n    watch(() => props.content, newContent => {\n      outline.value = newContent ? extractOutline(newContent) : [];\n    }, {\n      immediate: true\n    });\n\n    // 动态计算大纲的位置样式\n    const outlinePosition = computed(() => {\n      if (!props.divId) {\n        console.error(\"divId is missing!\");\n        return {};\n      }\n\n      // 根据 divId 返回不同的位置\n      let position = {};\n      if (props.divId.toLowerCase() === \"div1\") {\n        position = {\n          top: \"20px\",\n          right: \"20px\",\n          color: \"red\"\n        }; // Div1 右上角\n      } else if (props.divId.toLowerCase() === \"div3\") {\n        position = {\n          top: \"20px\",\n          left: \"-20px\"\n        }; // Div3 左上角\n      }\n      console.log(\"outlinePosition:\", position); // 调试日志\n      return position;\n    });\n    onMounted(() => {\n      outline.value = extractOutline(props.content);\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      toggleOutline,\n      extractOutline,\n      outlinePosition,\n      ref,\n      watch,\n      onMounted,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","computed","props","__props","isVisible","outline","toggleOutline","value","extractOutline","content","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","outlineItems","forEach","heading","id","textContent","toLowerCase","replace","divId","push","text","level","parseInt","tagName","charAt","newContent","immediate","outlinePosition","console","error","position","top","right","color","left","log"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div class=\"outline-container\" :class=\"{ visible: isVisible }\">\r\n\t\t<!-- 切换大纲的按钮 -->\r\n\t\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"outlinePosition\">\r\n\t\t\t{{ isVisible ? \"隐藏大纲\" : \"显示大纲\" }}\r\n\t\t</button>\r\n\r\n\t\t<!-- 文章大纲（仅在 isVisible 为 true 时显示） -->\r\n\t\t<div v-if=\"isVisible\" class=\"outline\">\r\n\t\t\t<h2>文章大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li v-for=\"item in outline\" :key=\"item.id\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\">{{ item.text }}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML 内容\r\n\t\tdivId: String // 组件对应的 divId\r\n\t});\r\n\r\n\tconst isVisible = ref(false); // 控制当前 divId 是否显示大纲\r\n\tconst outline = ref([]);\r\n\r\n\t// 切换当前 divId 的大纲显示状态\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// 解析文章内容，生成大纲\r\n\tconst extractOutline = content => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst outlineItems = [];\r\n\r\n\t\theadings.forEach(heading => {\r\n\t\t\tconst id = `${heading.textContent.toLowerCase().replace(/\\s+/g, \"-\")}-${\r\n\t\t\t\tprops.divId\r\n\t\t\t}`;\r\n\t\t\theading.id = id;\r\n\t\t\toutlineItems.push({\r\n\t\t\t\tid,\r\n\t\t\t\ttext: heading.textContent,\r\n\t\t\t\tlevel: parseInt(heading.tagName.charAt(1))\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn outlineItems;\r\n\t};\r\n\r\n\t// 监听 content 变化，更新大纲，但不影响 isVisible\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = newContent ? extractOutline(newContent) : [];\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// 动态计算大纲的位置样式\r\n\tconst outlinePosition = computed(() => {\r\n\t\tif (!props.divId) {\r\n\t\t\tconsole.error(\"divId is missing!\");\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// 根据 divId 返回不同的位置\r\n\t\tlet position = {};\r\n\t\tif (props.divId.toLowerCase() === \"div1\") {\r\n\t\t\tposition = { top: \"20px\", right: \"20px\", color: \"red\" }; // Div1 右上角\r\n\t\t} else if (props.divId.toLowerCase() === \"div3\") {\r\n\t\t\tposition = { top: \"20px\", left: \"-20px\" }; // Div3 左上角\r\n\t\t}\r\n\r\n\t\tconsole.log(\"outlinePosition:\", position); // 调试日志\r\n\t\treturn position;\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 确保大纲的容器与每个 div 独立存在 */\r\n\t.outline-container {\r\n\t\tposition: absolute;\r\n\r\n\t\tz-index: 1000;\r\n\t\tmax-width: 300px;\r\n\t\tbackground: white;\r\n\t}\r\n\r\n\t/* 让按钮始终与当前 div 绑定 */\r\n\t.toggle-btn {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-radius: 5px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tmargin-bottom: 5px;\r\n\t\tposition: absolute; /* 确保按钮可以定位 */\r\n\t}\r\n\r\n\t.toggle-btn:hover {\r\n\t\tbackground-color: #005f8d;\r\n\t}\r\n\r\n\t/* 大纲容器 */\r\n\t.outline {\r\n\t\tbackground-color: white;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 10px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.outline h2 {\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t.outline a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline a:hover {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n"],"mappings":";AAoBC,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;IAErD,MAAMC,KAAK,GAAGC,OAGZ;IAEF,MAAMC,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMO,OAAO,GAAGP,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MAC3BF,SAAS,CAACG,KAAK,GAAG,CAACH,SAAS,CAACG,KAAK;IACnC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGC,OAAO,IAAI;MACjC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMK,QAAQ,GAAGF,GAAG,CAACG,gBAAgB,CAAC,wBAAwB,CAAC;MAC/D,MAAMC,YAAY,GAAG,EAAE;MAEvBF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QAC3B,MAAMC,EAAE,GAAG,GAAGD,OAAO,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,IACnEpB,KAAK,CAACqB,KAAK,EACV;QACFL,OAAO,CAACC,EAAE,GAAGA,EAAE;QACfH,YAAY,CAACQ,IAAI,CAAC;UACjBL,EAAE;UACFM,IAAI,EAAEP,OAAO,CAACE,WAAW;UACzBM,KAAK,EAAEC,QAAQ,CAACT,OAAO,CAACU,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;MACH,CAAC,CAAC;MAEF,OAAOb,YAAY;IACpB,CAAC;;IAED;IACAjB,KAAK,CACJ,MAAMG,KAAK,CAACO,OAAO,EACnBqB,UAAU,IAAI;MACbzB,OAAO,CAACE,KAAK,GAAGuB,UAAU,GAAGtB,cAAc,CAACsB,UAAU,CAAC,GAAG,EAAE;IAC7D,CAAC,EACD;MAAEC,SAAS,EAAE;IAAK,CACnB,CAAC;;IAED;IACA,MAAMC,eAAe,GAAG/B,QAAQ,CAAC,MAAM;MACtC,IAAI,CAACC,KAAK,CAACqB,KAAK,EAAE;QACjBU,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QAClC,OAAO,CAAC,CAAC;MACV;;MAEA;MACA,IAAIC,QAAQ,GAAG,CAAC,CAAC;MACjB,IAAIjC,KAAK,CAACqB,KAAK,CAACF,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;QACzCc,QAAQ,GAAG;UAAEC,GAAG,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM,CAAC,CAAC,CAAC;MAC1D,CAAC,MAAM,IAAIpC,KAAK,CAACqB,KAAK,CAACF,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;QAChDc,QAAQ,GAAG;UAAEC,GAAG,EAAE,MAAM;UAAEG,IAAI,EAAE;QAAQ,CAAC,CAAC,CAAC;MAC5C;MAEAN,OAAO,CAACO,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAAC,CAAC,CAAC;MAC3C,OAAOA,QAAQ;IAChB,CAAC,CAAC;IAEFnC,SAAS,CAAC,MAAM;MACfK,OAAO,CAACE,KAAK,GAAGC,cAAc,CAACN,KAAK,CAACO,OAAO,CAAC;IAC9C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}