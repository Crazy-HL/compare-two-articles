{"ast":null,"code":"import { ref } from \"vue\";\nimport ComparisonTable from \"@/components/ComparisonTable.vue\";\nimport LineChart from \"@/components/LineChart.vue\"; // 确保路径正确\n\nexport default {\n  components: {\n    ComparisonTable,\n    LineChart\n  },\n  setup() {\n    const attributes = ref([\"销售额\", \"利润率\"]);\n    const chartData = ref([{\n      left: null,\n      right: null\n    }, {\n      left: null,\n      right: null\n    }]);\n    const loadData = async () => {\n      // 模拟API请求\n      const mockData = {\n        attributes: [\"销售额\", \"利润率\"],\n        charts: [{\n          left: {\n            xAxis: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"],\n            series: [120, 200, 150, 80, 70]\n          },\n          right: {\n            xAxis: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"],\n            series: [80, 120, 100, 110, 90]\n          }\n        }\n        // 第二行数据...\n        ]\n      };\n      attributes.value = mockData.attributes;\n      chartData.value = mockData.charts;\n    };\n    const handleRowSelect = index => {\n      console.log(\"选中行:\", index);\n      // 可以在这里添加行选择逻辑\n    };\n    return {\n      attributes,\n      chartData,\n      loadData,\n      handleRowSelect\n    };\n  }\n};","map":{"version":3,"names":["ref","ComparisonTable","LineChart","components","setup","attributes","chartData","left","right","loadData","mockData","charts","xAxis","series","value","handleRowSelect","index","console","log"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"analysis-container\">\r\n\t\t<ComparisonTable\r\n\t\t\ttitle=\"数据对比分析\"\r\n\t\t\t:attributes=\"attributes\"\r\n\t\t\t@row-selected=\"handleRowSelect\">\r\n\t\t\t<template #left-cell-1>\r\n\t\t\t\t<LineChart v-if=\"chartData[0]?.left\" :data=\"chartData[0].left\" />\r\n\t\t\t\t<div v-else class=\"empty-placeholder\">暂无数据</div>\r\n\t\t\t</template>\r\n\r\n\t\t\t<template #right-cell-1>\r\n\t\t\t\t<LineChart v-if=\"chartData[0]?.right\" :data=\"chartData[0].right\" />\r\n\t\t\t\t<div v-else class=\"empty-placeholder\">暂无数据</div>\r\n\t\t\t</template>\r\n\r\n\t\t\t<!-- 第二行插槽 -->\r\n\t\t\t<template #left-cell-2>\r\n\t\t\t\t<LineChart v-if=\"chartData[1]?.left\" :data=\"chartData[1].left\" />\r\n\t\t\t\t<div v-else class=\"empty-placeholder\">暂无数据</div>\r\n\t\t\t</template>\r\n\r\n\t\t\t<template #right-cell-2>\r\n\t\t\t\t<LineChart v-if=\"chartData[1]?.right\" :data=\"chartData[1].right\" />\r\n\t\t\t\t<div v-else class=\"empty-placeholder\">暂无数据</div>\r\n\t\t\t</template>\r\n\t\t</ComparisonTable>\r\n\r\n\t\t<button @click=\"loadData\" class=\"load-btn\">加载对比数据</button>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ref } from \"vue\";\r\n\timport ComparisonTable from \"@/components/ComparisonTable.vue\";\r\n\timport LineChart from \"@/components/LineChart.vue\"; // 确保路径正确\r\n\r\n\texport default {\r\n\t\tcomponents: {\r\n\t\t\tComparisonTable,\r\n\t\t\tLineChart\r\n\t\t},\r\n\r\n\t\tsetup() {\r\n\t\t\tconst attributes = ref([\"销售额\", \"利润率\"]);\r\n\t\t\tconst chartData = ref([\r\n\t\t\t\t{ left: null, right: null },\r\n\t\t\t\t{ left: null, right: null }\r\n\t\t\t]);\r\n\r\n\t\t\tconst loadData = async () => {\r\n\t\t\t\t// 模拟API请求\r\n\t\t\t\tconst mockData = {\r\n\t\t\t\t\tattributes: [\"销售额\", \"利润率\"],\r\n\t\t\t\t\tcharts: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\t\txAxis: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"],\r\n\t\t\t\t\t\t\t\tseries: [120, 200, 150, 80, 70]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tright: {\r\n\t\t\t\t\t\t\t\txAxis: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"],\r\n\t\t\t\t\t\t\t\tseries: [80, 120, 100, 110, 90]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 第二行数据...\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tattributes.value = mockData.attributes;\r\n\t\t\t\tchartData.value = mockData.charts;\r\n\t\t\t};\r\n\r\n\t\t\tconst handleRowSelect = index => {\r\n\t\t\t\tconsole.log(\"选中行:\", index);\r\n\t\t\t\t// 可以在这里添加行选择逻辑\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tattributes,\r\n\t\t\t\tchartData,\r\n\t\t\t\tloadData,\r\n\t\t\t\thandleRowSelect\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.analysis-container {\r\n\t\tmax-width: 1000px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.load-btn {\r\n\t\tmargin-top: 20px;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.empty-placeholder {\r\n\t\tcolor: #888;\r\n\t\tfont-style: italic;\r\n\t\ttext-align: center;\r\n\t\tpadding: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAiCC,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,SAAQ,MAAO,4BAA4B,EAAE;;AAEpD,eAAe;EACdC,UAAU,EAAE;IACXF,eAAe;IACfC;EACD,CAAC;EAEDE,KAAKA,CAAA,EAAG;IACP,MAAMC,UAAS,GAAIL,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACtC,MAAMM,SAAQ,GAAIN,GAAG,CAAC,CACrB;MAAEO,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC3B;MAAED,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,EAC1B,CAAC;IAEF,MAAMC,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,QAAO,GAAI;QAChBL,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;QAC1BM,MAAM,EAAE,CACP;UACCJ,IAAI,EAAE;YACLK,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YACrCC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;UAC/B,CAAC;UACDL,KAAK,EAAE;YACNI,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YACrCC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;UAC/B;QACD;QACA;QAAA;MAEF,CAAC;MAEDR,UAAU,CAACS,KAAI,GAAIJ,QAAQ,CAACL,UAAU;MACtCC,SAAS,CAACQ,KAAI,GAAIJ,QAAQ,CAACC,MAAM;IAClC,CAAC;IAED,MAAMI,eAAc,GAAIC,KAAI,IAAK;MAChCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,KAAK,CAAC;MAC1B;IACD,CAAC;IAED,OAAO;MACNX,UAAU;MACVC,SAAS;MACTG,QAAQ;MACRM;IACD,CAAC;EACF;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}