{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d881255\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartContainer\",\n  class: \"d3-single-value-pie\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 图表将在这里渲染 \")], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\PieChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"d3-single-value-pie\">\r\n\t\t<!-- 图表将在这里渲染 -->\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tname: \"D3SingleValuePie\",\r\n\t\tprops: {\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\trequired: true,\r\n\t\t\t\tvalidator: v => v >= 0 && v <= 100\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunit: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"%\"\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"#36a2eb\"\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 300\r\n\t\t\t},\r\n\t\t\tinnerRadius: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0.35\r\n\t\t\t},\r\n\t\t\touterRadius: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0.45\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tsvg: null,\r\n\t\t\t\tarcGenerator: null,\r\n\t\t\t\tpieGenerator: null\r\n\t\t\t};\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tvalue(newVal) {\r\n\t\t\t\tthis.updateChart(newVal);\r\n\t\t\t},\r\n\t\t\ttitle() {\r\n\t\t\t\tthis.updateText();\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.initChart();\r\n\t\t},\r\n\t\tbeforeUnmount() {\r\n\t\t\twindow.removeEventListener(\"resize\", this.handleResize);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tinitChart() {\r\n\t\t\t\t// 清除旧图表\r\n\t\t\t\td3.select(this.$refs.chartContainer).selectAll(\"*\").remove();\r\n\r\n\t\t\t\t// 创建SVG容器\r\n\t\t\t\tthis.svg = d3\r\n\t\t\t\t\t.select(this.$refs.chartContainer)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", this.size)\r\n\t\t\t\t\t.attr(\"height\", this.size)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${this.size / 2},${this.size / 2})`);\r\n\r\n\t\t\t\t// 初始化生成器\r\n\t\t\t\tthis.pieGenerator = d3\r\n\t\t\t\t\t.pie()\r\n\t\t\t\t\t.startAngle(-0.5 * Math.PI)\r\n\t\t\t\t\t.endAngle(1.5 * Math.PI)\r\n\t\t\t\t\t.sort(null);\r\n\r\n\t\t\t\tthis.arcGenerator = d3\r\n\t\t\t\t\t.arc()\r\n\t\t\t\t\t.innerRadius(this.size * this.innerRadius)\r\n\t\t\t\t\t.outerRadius(this.size * this.outerRadius);\r\n\r\n\t\t\t\t// 绘制初始图表\r\n\t\t\t\tthis.updateChart(this.value);\r\n\t\t\t\tthis.updateText();\r\n\r\n\t\t\t\t// 添加响应式\r\n\t\t\t\twindow.addEventListener(\"resize\", this.handleResize);\r\n\t\t\t},\r\n\t\t\tupdateChart(newValue) {\r\n\t\t\t\tif (!this.svg) return;\r\n\r\n\t\t\t\tconst displayValue = Math.min(Math.max(newValue, 0), 100);\r\n\t\t\t\tconst isFull = displayValue >= 99.99;\r\n\t\t\t\tconst data = isFull ? [100] : [displayValue, 100 - displayValue];\r\n\r\n\t\t\t\t// 更新饼图数据\r\n\t\t\t\tconst paths = this.svg.selectAll(\"path\").data(this.pieGenerator(data));\r\n\r\n\t\t\t\t// 进入/更新/退出模式\r\n\t\t\t\tpaths\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t.attr(\"d\", this.arcGenerator)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => this.getFillColor(i, isFull))\r\n\t\t\t\t\t.attr(\"stroke\", \"#fff\")\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.merge(paths)\r\n\t\t\t\t\t.attr(\"d\", this.arcGenerator)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => this.getFillColor(i, isFull));\r\n\r\n\t\t\t\tpaths.exit().remove();\r\n\r\n\t\t\t\t// 更新中心值\r\n\t\t\t\tthis.svg\r\n\t\t\t\t\t.select(\".value-text\")\r\n\t\t\t\t\t.text(`${displayValue.toFixed(1)}${this.unit}`);\r\n\t\t\t},\r\n\t\t\tupdateText() {\r\n\t\t\t\tif (!this.svg) return;\r\n\r\n\t\t\t\t// 标题处理\r\n\t\t\t\tlet title = this.svg.select(\".title-text\");\r\n\t\t\t\tif (title.empty()) {\r\n\t\t\t\t\ttitle = this.svg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"class\", \"title-text\")\r\n\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.attr(\"dy\", -15);\r\n\t\t\t\t}\r\n\t\t\t\ttitle.text(this.title);\r\n\r\n\t\t\t\t// 数值处理\r\n\t\t\t\tlet value = this.svg.select(\".value-text\");\r\n\t\t\t\tif (value.empty()) {\r\n\t\t\t\t\tvalue = this.svg\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"class\", \"value-text\")\r\n\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t\t.attr(\"dy\", 15);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetFillColor(index, isFull) {\r\n\t\t\t\tif (isFull) return this.color;\r\n\t\t\t\treturn index === 0 ? this.color : \"#f0f0f0\";\r\n\t\t\t},\r\n\t\t\thandleResize() {\r\n\t\t\t\tif (!this.svg) return;\r\n\t\t\t\t// 简单的响应式处理 - 实际项目可能需要更复杂的逻辑\r\n\t\t\t\tconst containerWidth = this.$refs.chartContainer.clientWidth;\r\n\t\t\t\tconst newSize = Math.min(containerWidth, 500);\r\n\r\n\t\t\t\tthis.svg\r\n\t\t\t\t\t.attr(\"width\", newSize)\r\n\t\t\t\t\t.attr(\"height\", newSize)\r\n\t\t\t\t\t.select(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${newSize / 2},${newSize / 2})`);\r\n\r\n\t\t\t\tthis.arcGenerator\r\n\t\t\t\t\t.innerRadius(newSize * this.innerRadius)\r\n\t\t\t\t\t.outerRadius(newSize * this.outerRadius);\r\n\r\n\t\t\t\tthis.updateChart(this.value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.d3-single-value-pie {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 300px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.d3-single-value-pie >>> .title-text {\r\n\t\tfont-size: 16px;\r\n\t\tfont-weight: bold;\r\n\t\tfill: #666;\r\n\t}\r\n\r\n\t.d3-single-value-pie >>> .value-text {\r\n\t\tfont-size: 24px;\r\n\t\tfont-weight: bold;\r\n\t\tfill: #333;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;uBAAhCC,mBAAA,CAEM,OAFNC,UAEM,GADLC,mBAAA,cAAiB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}