{"ast":null,"code":"import { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport { debounce } from \"lodash-es\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 数据源切换\n    const showInfoboxData = ref(true);\n\n    // 容器引用\n    const containerRef = ref(null);\n\n    // 图表尺寸控制\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n    const leftChartColor = ref(\"#4a90e2\");\n    const rightChartColor = ref(\"#ef4444\");\n\n    // 标题\n    const leftTitle = computed(() => showInfoboxData.value ? leftInfobox.value.title || \"Infobox 1\" : processedTable1.value.title || \"表格1\");\n    const rightTitle = computed(() => showInfoboxData.value ? rightInfobox.value.title || \"Infobox 2\" : processedTable2.value.title || \"表格2\");\n\n    // 表格数据处理\n    const processedTable1 = ref({\n      title: \"表格1\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"表格2\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n\n    // Infobox数据处理\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 完整图表弹窗相关状态\n    const showFullChartModal = ref(false);\n    const currentAttribute = ref(\"\");\n    const currentChartData = ref({\n      type: \"line\",\n      data: []\n    });\n    const currentSide = ref(\"left\");\n\n    // 更新图表尺寸\n    const updateChartSize = debounce(() => {\n      if (containerRef.value) {\n        const containerWidth = containerRef.value.clientWidth;\n        chartMaxWidth.value = Math.min(250, containerWidth * 0.3);\n        chartMaxHeight.value = 80;\n      }\n    }, 100);\n\n    // 初始化尺寸和监听\n    onMounted(() => {\n      updateChartSize();\n      window.addEventListener(\"resize\", updateChartSize);\n\n      // 监听Infobox数据\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener(\"resize\", updateChartSize);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n\n    // Infobox处理函数\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\",\n      visualization: \"bar-chart\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"text-only\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\"\n    }];\n\n    // 获取Infobox字段值\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) return section[fieldKey];\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n\n    // 统一Y轴范围\n    const getUnifiedYRange = fieldKey => {\n      const leftData = getField(leftInfobox.value, fieldKey);\n      const rightData = getField(rightInfobox.value, fieldKey);\n      const extractValues = data => {\n        if (!data) return [];\n        if (Array.isArray(data)) return data.map(item => parseFloat(item?.value) || 0);\n        return [parseFloat(data?.value) || 0];\n      };\n      const allValues = [...extractValues(leftData), ...extractValues(rightData)].filter(v => !isNaN(v));\n      if (allValues.length === 0) return [0, 1];\n      const max = Math.max(...allValues);\n      return [0, max * 1.2];\n    };\n\n    // 计算显示字段\n    const displayFields = computed(() => {\n      if (showInfoboxData.value) {\n        return COMPARABLE_FIELDS.filter(field => {\n          const leftVal = getField(leftInfobox.value, field.key);\n          const rightVal = getField(rightInfobox.value, field.key);\n          return leftVal || rightVal;\n        });\n      } else {\n        const attrs1 = processedTable1.value.rows || [];\n        const attrs2 = processedTable2.value.rows || [];\n        const commonAttrs = attrs1.filter(attr => attrs2.includes(attr) && (hasDataForAttribute(processedTable1.value, attr) || hasDataForAttribute(processedTable2.value, attr)));\n        return commonAttrs.map(attr => ({\n          key: attr,\n          type: \"number\",\n          typeLabel: \"数值\",\n          visualization: \"line-chart\"\n        }));\n      }\n    });\n    const hasData = computed(() => {\n      if (showInfoboxData.value) {\n        return displayFields.value.length > 0;\n      } else {\n        return props.div1RawData && props.div3RawData && processedTable1.value.columns.length > 0 && processedTable2.value.columns.length > 0;\n      }\n    });\n\n    // 表格对比相关函数\n    const showFullChart = (attr, side) => {\n      currentAttribute.value = attr;\n      currentSide.value = side;\n      if (showInfoboxData.value) {\n        const fieldData = side === \"left\" ? getField(leftInfobox.value, attr) : getField(rightInfobox.value, attr);\n        currentChartData.value = {\n          type: \"line\",\n          data: Array.isArray(fieldData) ? fieldData : [fieldData]\n        };\n      } else {\n        if (side === \"left\") {\n          currentChartData.value = {\n            type: \"line\",\n            data: processedTable1.value.timeSeriesData[attr] || []\n          };\n        } else {\n          currentChartData.value = {\n            type: \"line\",\n            data: processedTable2.value.timeSeriesData[attr] || []\n          };\n        }\n      }\n      showFullChartModal.value = true;\n    };\n    const hideFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    function parseTableToStandardJSON(html) {\n      let defaultTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"未命名表格\";\n    } // ...保持原有parseTableToStandardJSON函数不变...\n    function smartValueConversion(rawValue) {\n      // ...保持原有smartValueConversion函数不变...\n    }\n    function extractTitleFromHTML(html) {\n      // ...保持原有extractTitleFromHTML函数不变...\n    }\n    function hasDataForAttribute(table, attr) {\n      return table.timeSeriesData[attr]?.length > 0;\n    }\n\n    // 监听表格数据变化\n    watch(() => props.div1RawData, html => {\n      if (html) {\n        processedTable1.value = parseTableToStandardJSON(html, \"表格1\");\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.div3RawData, html => {\n      if (html) {\n        processedTable2.value = parseTableToStandardJSON(html, \"表格2\");\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      showInfoboxData,\n      containerRef,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftChartColor,\n      rightChartColor,\n      leftTitle,\n      rightTitle,\n      processedTable1,\n      processedTable2,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentAttribute,\n      currentChartData,\n      currentSide,\n      updateChartSize,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      getField,\n      getUnifiedYRange,\n      displayFields,\n      hasData,\n      showFullChart,\n      hideFullChart,\n      parseTableToStandardJSON,\n      smartValueConversion,\n      extractTitleFromHTML,\n      hasDataForAttribute,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      SparklineChart,\n      FullChart,\n      FieldVisualization,\n      get debounce() {\n        return debounce;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","SparklineChart","FullChart","FieldVisualization","debounce","bus","props","__props","showInfoboxData","containerRef","chartMaxWidth","chartMaxHeight","leftChartColor","rightChartColor","leftTitle","value","leftInfobox","title","processedTable1","rightTitle","rightInfobox","processedTable2","rows","columns","timeSeriesData","type","data","showFullChartModal","currentAttribute","currentChartData","currentSide","updateChartSize","containerWidth","clientWidth","Math","min","window","addEventListener","on","processInfoboxData","removeEventListener","off","sections","COMPARABLE_FIELDS","key","typeLabel","visualization","getField","infobox","fieldKey","section","Object","values","undefined","cleanKey","toLowerCase","replace","matchedKey","keys","find","k","getUnifiedYRange","leftData","rightData","extractValues","Array","isArray","map","item","parseFloat","allValues","filter","v","isNaN","length","max","displayFields","field","leftVal","rightVal","attrs1","attrs2","commonAttrs","attr","includes","hasDataForAttribute","hasData","div1RawData","div3RawData","showFullChart","side","fieldData","hideFullChart","parseTableToStandardJSON","html","defaultTitle","arguments","smartValueConversion","rawValue","extractTitleFromHTML","table","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t\tv-if=\"showInfoboxData\"\r\n\t\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t:compare-data=\"getField(rightInfobox, field.key)\" />\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, field.key)\">\r\n\t\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t\tv-if=\"showInfoboxData\"\r\n\t\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t\t:field-key=\"field.key\"\r\n\t\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\t\tfield.visualization === 'bar-chart'\r\n\t\t\t\t\t\t\t\t\t? getUnifiedYRange(field.key)\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t:compare-data=\"getField(leftInfobox, field.key)\" />\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, field.key)\">\r\n\t\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[field.key]\"\r\n\t\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div class=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click=\"showInfoboxData = true\"\r\n\t\t\t\t:class=\"{ active: showInfoboxData }\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t@click=\"showInfoboxData = false\"\r\n\t\t\t\t:class=\"{ active: !showInfoboxData }\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:side=\"currentSide\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 数据源切换\r\n\tconst showInfoboxData = ref(true);\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 标题\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\t// 表格数据处理\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"表格1\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"表格2\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\r\n\t// Infobox数据处理\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 完整图表弹窗相关状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentChartData = ref({ type: \"line\", data: [] });\r\n\tconst currentSide = ref(\"left\");\r\n\r\n\t// 更新图表尺寸\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tconst containerWidth = containerRef.value.clientWidth;\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerWidth * 0.3);\r\n\t\t\tchartMaxHeight.value = 80;\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 初始化尺寸和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\t// 监听Infobox数据\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\t// Infobox处理函数\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 获取Infobox字段值\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 统一Y轴范围\r\n\tconst getUnifiedYRange = fieldKey => {\r\n\t\tconst leftData = getField(leftInfobox.value, fieldKey);\r\n\t\tconst rightData = getField(rightInfobox.value, fieldKey);\r\n\r\n\t\tconst extractValues = data => {\r\n\t\t\tif (!data) return [];\r\n\t\t\tif (Array.isArray(data))\r\n\t\t\t\treturn data.map(item => parseFloat(item?.value) || 0);\r\n\t\t\treturn [parseFloat(data?.value) || 0];\r\n\t\t};\r\n\r\n\t\tconst allValues = [\r\n\t\t\t...extractValues(leftData),\r\n\t\t\t...extractValues(rightData)\r\n\t\t].filter(v => !isNaN(v));\r\n\r\n\t\tif (allValues.length === 0) return [0, 1];\r\n\r\n\t\tconst max = Math.max(...allValues);\r\n\t\treturn [0, max * 1.2];\r\n\t};\r\n\r\n\t// 计算显示字段\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\t\treturn leftVal || rightVal;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst attrs1 = processedTable1.value.rows || [];\r\n\t\t\tconst attrs2 = processedTable2.value.rows || [];\r\n\t\t\tconst commonAttrs = attrs1.filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\tattrs2.includes(attr) &&\r\n\t\t\t\t\t(hasDataForAttribute(processedTable1.value, attr) ||\r\n\t\t\t\t\t\thasDataForAttribute(processedTable2.value, attr))\r\n\t\t\t);\r\n\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\",\r\n\t\t\t\tvisualization: \"line-chart\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn displayFields.value.length > 0;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\tprops.div1RawData &&\r\n\t\t\t\tprops.div3RawData &&\r\n\t\t\t\tprocessedTable1.value.columns.length > 0 &&\r\n\t\t\t\tprocessedTable2.value.columns.length > 0\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n\t// 表格对比相关函数\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst fieldData =\r\n\t\t\t\tside === \"left\"\r\n\t\t\t\t\t? getField(leftInfobox.value, attr)\r\n\t\t\t\t\t: getField(rightInfobox.value, attr);\r\n\r\n\t\t\tcurrentChartData.value = {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdata: Array.isArray(fieldData) ? fieldData : [fieldData]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tif (side === \"left\") {\r\n\t\t\t\tcurrentChartData.value = {\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tdata: processedTable1.value.timeSeriesData[attr] || []\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tcurrentChartData.value = {\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tdata: processedTable2.value.timeSeriesData[attr] || []\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tfunction parseTableToStandardJSON(html, defaultTitle = \"未命名表格\") {\r\n\t\t// ...保持原有parseTableToStandardJSON函数不变...\r\n\t}\r\n\r\n\tfunction smartValueConversion(rawValue) {\r\n\t\t// ...保持原有smartValueConversion函数不变...\r\n\t}\r\n\r\n\tfunction extractTitleFromHTML(html) {\r\n\t\t// ...保持原有extractTitleFromHTML函数不变...\r\n\t}\r\n\r\n\tfunction hasDataForAttribute(table, attr) {\r\n\t\treturn table.timeSeriesData[attr]?.length > 0;\r\n\t}\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tif (html) {\r\n\t\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}