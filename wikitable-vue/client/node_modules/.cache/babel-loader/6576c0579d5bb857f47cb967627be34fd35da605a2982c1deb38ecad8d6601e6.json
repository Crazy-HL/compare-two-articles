{"ast":null,"code":"import * as d3 from \"d3\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  setup() {\n    const chart = ref(null);\n    const json = {\n      type: \"stackedBar\",\n      data: {\n        labels: [\"2021\", \"2023\", \"2024\", \"Career\"],\n        values: [{\n          GP: 1,\n          GS: 1,\n          MPG: 34.9,\n          \"FG%\": 0.412,\n          \"3P%\": 0.5,\n          \"FT%\": 0.667,\n          RPG: 11.0,\n          APG: 10.0,\n          SPG: 2.0,\n          BPG: 1.0,\n          PPG: 22.0\n        }, {\n          GP: 1,\n          GS: 1,\n          MPG: 45.3,\n          \"FG%\": 0.571,\n          \"3P%\": 0.5,\n          \"FT%\": 1.0,\n          RPG: 10.0,\n          APG: 6.0,\n          SPG: 1.0,\n          BPG: 2.0,\n          PPG: 30.0\n        }, {\n          GP: 1,\n          GS: 1,\n          MPG: 40.9,\n          \"FG%\": 0.3,\n          \"3P%\": 0.2,\n          \"FT%\": 1.0,\n          RPG: 9.0,\n          APG: 9.0,\n          SPG: 3.0,\n          BPG: 2.0,\n          PPG: 23.0\n        }, {\n          GP: 3,\n          GS: 3,\n          MPG: 40.4,\n          \"FG%\": 0.431,\n          \"3P%\": 0.4,\n          \"FT%\": 0.864,\n          RPG: 10.0,\n          APG: 8.3,\n          SPG: 2.0,\n          BPG: 1.7,\n          PPG: 25.0\n        }]\n      },\n      options: {\n        colors: [\"#ff5733\", \"#33ff57\", \"#3357ff\", \"#ff33a8\"]\n      }\n    };\n\n    // ✅ 修正的 renderStackedBarChart 函数\n    const renderStackedBarChart = (chartRef, data, options) => {\n      if (!chartRef) {\n        console.error(\"图表容器未找到\");\n        return;\n      }\n      const margin = {\n        top: 20,\n        right: 100,\n        bottom: 50,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      // 清空之前的图表\n      d3.select(chartRef.value).html(\"\");\n\n      // 创建 SVG 容器\n      const svg = d3.select(chartRef.value).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const labels = data.labels;\n      const values = data.values;\n\n      // 提取 keys（例如：GP, GS, MPG, etc.）\n      const keys = Object.keys(values[0]);\n\n      // D3 stack layout\n      const stack = d3.stack().keys(keys);\n      const stackedData = stack(values);\n\n      // 设置 X 轴比例尺\n      const x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\n\n      // 计算最大堆叠值\n      const maxStackedValue = d3.max(stackedData, d => d3.max(d, d => d[1]));\n\n      // 设置 Y 轴比例尺\n      const y = d3.scaleLinear().domain([0, maxStackedValue]).nice().range([height, 0]);\n\n      // 颜色比例尺\n      const color = d3.scaleOrdinal().domain(keys).range(options.colors);\n\n      // 添加 X 轴\n      svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // 添加 Y 轴\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      // 绘制堆叠条形图\n      svg.selectAll(\".layer\").data(stackedData).enter().append(\"g\").attr(\"class\", \"layer\").style(\"fill\", d => color(d.key)).selectAll(\"rect\").data(d => d).enter().append(\"rect\").attr(\"x\", (d, i) => x(labels[i])).attr(\"y\", d => y(d[1])).attr(\"width\", x.bandwidth()).attr(\"height\", d => y(d[0]) - y(d[1]));\n    };\n\n    // 组件挂载后调用\n    onMounted(() => {\n      if (chart.value) {\n        renderStackedBarChart(chart, json.data, json.options);\n      } else {\n        console.error(\"chart 容器未找到\");\n      }\n    });\n    return {\n      chart\n    };\n  }\n};","map":{"version":3,"names":["d3","ref","onMounted","setup","chart","json","type","data","labels","values","GP","GS","MPG","RPG","APG","SPG","BPG","PPG","options","colors","renderStackedBarChart","chartRef","console","error","margin","top","right","bottom","left","width","height","select","value","html","svg","append","attr","keys","Object","stack","stackedData","x","scaleBand","domain","range","padding","maxStackedValue","max","d","y","scaleLinear","nice","color","scaleOrdinal","call","axisBottom","axisLeft","selectAll","enter","style","key","i","bandwidth"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\text.vue"],"sourcesContent":["<template>\r\n\t<h1>chart</h1>\r\n\t<div ref=\"chart\" class=\"chart\"></div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\texport default {\r\n\t\tsetup() {\r\n\t\t\tconst chart = ref(null);\r\n\r\n\t\t\tconst json = {\r\n\t\t\t\ttype: \"stackedBar\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: [\"2021\", \"2023\", \"2024\", \"Career\"],\r\n\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tGP: 1,\r\n\t\t\t\t\t\t\tGS: 1,\r\n\t\t\t\t\t\t\tMPG: 34.9,\r\n\t\t\t\t\t\t\t\"FG%\": 0.412,\r\n\t\t\t\t\t\t\t\"3P%\": 0.5,\r\n\t\t\t\t\t\t\t\"FT%\": 0.667,\r\n\t\t\t\t\t\t\tRPG: 11.0,\r\n\t\t\t\t\t\t\tAPG: 10.0,\r\n\t\t\t\t\t\t\tSPG: 2.0,\r\n\t\t\t\t\t\t\tBPG: 1.0,\r\n\t\t\t\t\t\t\tPPG: 22.0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tGP: 1,\r\n\t\t\t\t\t\t\tGS: 1,\r\n\t\t\t\t\t\t\tMPG: 45.3,\r\n\t\t\t\t\t\t\t\"FG%\": 0.571,\r\n\t\t\t\t\t\t\t\"3P%\": 0.5,\r\n\t\t\t\t\t\t\t\"FT%\": 1.0,\r\n\t\t\t\t\t\t\tRPG: 10.0,\r\n\t\t\t\t\t\t\tAPG: 6.0,\r\n\t\t\t\t\t\t\tSPG: 1.0,\r\n\t\t\t\t\t\t\tBPG: 2.0,\r\n\t\t\t\t\t\t\tPPG: 30.0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tGP: 1,\r\n\t\t\t\t\t\t\tGS: 1,\r\n\t\t\t\t\t\t\tMPG: 40.9,\r\n\t\t\t\t\t\t\t\"FG%\": 0.3,\r\n\t\t\t\t\t\t\t\"3P%\": 0.2,\r\n\t\t\t\t\t\t\t\"FT%\": 1.0,\r\n\t\t\t\t\t\t\tRPG: 9.0,\r\n\t\t\t\t\t\t\tAPG: 9.0,\r\n\t\t\t\t\t\t\tSPG: 3.0,\r\n\t\t\t\t\t\t\tBPG: 2.0,\r\n\t\t\t\t\t\t\tPPG: 23.0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tGP: 3,\r\n\t\t\t\t\t\t\tGS: 3,\r\n\t\t\t\t\t\t\tMPG: 40.4,\r\n\t\t\t\t\t\t\t\"FG%\": 0.431,\r\n\t\t\t\t\t\t\t\"3P%\": 0.4,\r\n\t\t\t\t\t\t\t\"FT%\": 0.864,\r\n\t\t\t\t\t\t\tRPG: 10.0,\r\n\t\t\t\t\t\t\tAPG: 8.3,\r\n\t\t\t\t\t\t\tSPG: 2.0,\r\n\t\t\t\t\t\t\tBPG: 1.7,\r\n\t\t\t\t\t\t\tPPG: 25.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\toptions: { colors: [\"#ff5733\", \"#33ff57\", \"#3357ff\", \"#ff33a8\"] }\r\n\t\t\t};\r\n\r\n\t\t\t// ✅ 修正的 renderStackedBarChart 函数\r\n\t\t\tconst renderStackedBarChart = (chartRef, data, options) => {\r\n\t\t\t\tif (!chartRef) {\r\n\t\t\t\t\tconsole.error(\"图表容器未找到\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst margin = { top: 20, right: 100, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(chartRef.value).html(\"\");\r\n\r\n\t\t\t\t// 创建 SVG 容器\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(chartRef.value)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst labels = data.labels;\r\n\t\t\t\tconst values = data.values;\r\n\r\n\t\t\t\t// 提取 keys（例如：GP, GS, MPG, etc.）\r\n\t\t\t\tconst keys = Object.keys(values[0]);\r\n\r\n\t\t\t\t// D3 stack layout\r\n\t\t\t\tconst stack = d3.stack().keys(keys);\r\n\t\t\t\tconst stackedData = stack(values);\r\n\r\n\t\t\t\t// 设置 X 轴比例尺\r\n\t\t\t\tconst x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\r\n\r\n\t\t\t\t// 计算最大堆叠值\r\n\t\t\t\tconst maxStackedValue = d3.max(stackedData, d => d3.max(d, d => d[1]));\r\n\r\n\t\t\t\t// 设置 Y 轴比例尺\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, maxStackedValue])\r\n\t\t\t\t\t.nice()\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\t// 颜色比例尺\r\n\t\t\t\tconst color = d3.scaleOrdinal().domain(keys).range(options.colors);\r\n\r\n\t\t\t\t// 添加 X 轴\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x));\r\n\r\n\t\t\t\t// 添加 Y 轴\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\t// 绘制堆叠条形图\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".layer\")\r\n\t\t\t\t\t.data(stackedData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"class\", \"layer\")\r\n\t\t\t\t\t.style(\"fill\", d => color(d.key))\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(d => d)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", (d, i) => x(labels[i]))\r\n\t\t\t\t\t.attr(\"y\", d => y(d[1]))\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"height\", d => y(d[0]) - y(d[1]));\r\n\t\t\t};\r\n\r\n\t\t\t// 组件挂载后调用\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tif (chart.value) {\r\n\t\t\t\t\trenderStackedBarChart(chart, json.data, json.options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"chart 容器未找到\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\tchart\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.chart {\r\n\t\twidth: 800px;\r\n\t\theight: 400px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}