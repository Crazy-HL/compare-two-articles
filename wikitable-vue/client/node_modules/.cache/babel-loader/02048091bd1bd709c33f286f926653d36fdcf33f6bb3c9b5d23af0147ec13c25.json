{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nimport * as d3 from \"d3\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const currentChartData = ref(null);\n    const currentChartType = ref(null);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const compareTable = ref(null);\n    const isComparing = ref(false);\n    const tableComparisonResults = ref([]);\n\n    // 定义回调函数\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n    });\n\n    // 处理选中文本\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n      }\n    }\n\n    // 从 HTML 内容中提取纯文本\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n\n    // 比较表格属性\n    const compareTableAttributes = async () => {\n      if (!div1RawData.value || !div3RawData.value) {\n        alert(\"请先加载两个表格的数据\");\n        return;\n      }\n      isComparing.value = true;\n      try {\n        // 获取处理后的表格数据\n        const table1 = compareTable.value.processedTable1;\n        const table2 = compareTable.value.processedTable2;\n\n        // 获取公共属性\n        const commonAttrs = Object.keys(table1.timeSeriesData || {}).filter(attr => table2.timeSeriesData[attr]);\n        if (commonAttrs.length === 0) {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: \"两个表格没有共同的属性可供比较。\"\n          });\n          return;\n        }\n\n        // 调用后端接口\n        const response = await api.post(\"compare_table_attributes\", {\n          table1: table1,\n          table2: table2,\n          commonAttributes: commonAttrs\n        });\n        if (response.success) {\n          tableComparisonResults.value = response.results;\n\n          // 添加总体比较标题\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatAnalysisResult(`\n          ### 表格属性对比分析\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\n          **共有属性**: ${commonAttrs.length}个\n        `)\n          });\n\n          // 添加每个属性的分析结果\n          response.results.forEach(result => {\n            const formattedContent = formatAnalysisResult(`\n          ### 属性 \"${result.attribute}\" 对比分析\n          ${result.analysis}\n        `);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedContent\n            });\n          });\n        } else {\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: \"表格属性对比失败: \" + (response.message || \"未知错误\")\n          });\n        }\n      } catch (error) {\n        console.error(\"比较表格属性时出错:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"比较表格属性时出错，请稍后重试。\"\n        });\n      } finally {\n        isComparing.value = false;\n      }\n    };\n\n    // 格式化分析结果\n    const formatAnalysisResult = text => {\n      text = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n      return text;\n    };\n\n    // 保留原有函数（handleDragStart, handleDrop, analyzeChart, askQuestion, compareTexts, mergedJson, renderChart）\n    // ... 原有函数保持不变 ...\n\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      currentChartData,\n      currentChartType,\n      div1RawData,\n      div3RawData,\n      compareTable,\n      isComparing,\n      tableComparisonResults,\n      handleDiv1Event,\n      handleDiv3Event,\n      handleSelection,\n      getPlainTextFromSelection,\n      compareTableAttributes,\n      formatAnalysisResult,\n      ref,\n      onMounted,\n      onUnmounted,\n      get bus() {\n        return bus;\n      },\n      CompareTable,\n      get d3() {\n        return d3;\n      },\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","bus","CompareTable","d3","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","userQuestion","chatHistory","selectText2","selectText3","currentChartData","currentChartType","div1RawData","div3RawData","compareTable","isComparing","tableComparisonResults","handleDiv1Event","data","handleSelection","handleDiv3Event","on","off","source","plainText","getPlainTextFromSelection","content","value","htmlContent","container","document","createElement","innerHTML","innerText","textContent","compareTableAttributes","alert","table1","processedTable1","table2","processedTable2","commonAttrs","Object","keys","timeSeriesData","filter","attr","length","push","role","response","api","post","commonAttributes","success","results","formatAnalysisResult","table1Title","table2Title","forEach","result","formattedContent","attribute","analysis","message","error","console","text","replace"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\" @dragover.prevent @drop=\"handleDrop\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"-viscontainer\">\r\n\t\t\t<CompareTable\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\tref=\"compareTable\" />\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTableAttributes\" :disabled=\"isComparing\">\r\n\t\t\t\t\t\t{{ isComparing ? \"分析中...\" : \"分析表格属性\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst currentChartData = ref(null);\r\n\tconst currentChartType = ref(null);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst compareTable = ref(null);\r\n\tconst isComparing = ref(false);\r\n\tconst tableComparisonResults = ref([]);\r\n\r\n\t// 定义回调函数\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\t// 处理选中文本\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t}\r\n\t}\r\n\r\n\t// 从 HTML 内容中提取纯文本\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 比较表格属性\r\n\tconst compareTableAttributes = async () => {\r\n\t\tif (!div1RawData.value || !div3RawData.value) {\r\n\t\t\talert(\"请先加载两个表格的数据\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisComparing.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 获取处理后的表格数据\r\n\t\t\tconst table1 = compareTable.value.processedTable1;\r\n\t\t\tconst table2 = compareTable.value.processedTable2;\r\n\r\n\t\t\t// 获取公共属性\r\n\t\t\tconst commonAttrs = Object.keys(table1.timeSeriesData || {}).filter(\r\n\t\t\t\tattr => table2.timeSeriesData[attr]\r\n\t\t\t);\r\n\r\n\t\t\tif (commonAttrs.length === 0) {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"两个表格没有共同的属性可供比较。\"\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// 调用后端接口\r\n\t\t\tconst response = await api.post(\"compare_table_attributes\", {\r\n\t\t\t\ttable1: table1,\r\n\t\t\t\ttable2: table2,\r\n\t\t\t\tcommonAttributes: commonAttrs\r\n\t\t\t});\r\n\r\n\t\t\tif (response.success) {\r\n\t\t\t\ttableComparisonResults.value = response.results;\r\n\r\n\t\t\t\t// 添加总体比较标题\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatAnalysisResult(`\r\n          ### 表格属性对比分析\r\n          **比较表格**: ${response.table1Title} vs ${response.table2Title}\r\n          **共有属性**: ${commonAttrs.length}个\r\n        `)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 添加每个属性的分析结果\r\n\t\t\t\tresponse.results.forEach(result => {\r\n\t\t\t\t\tconst formattedContent = formatAnalysisResult(`\r\n          ### 属性 \"${result.attribute}\" 对比分析\r\n          ${result.analysis}\r\n        `);\r\n\r\n\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\tcontent: formattedContent\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: \"表格属性对比失败: \" + (response.message || \"未知错误\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"比较表格属性时出错:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"比较表格属性时出错，请稍后重试。\"\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisComparing.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 格式化分析结果\r\n\tconst formatAnalysisResult = text => {\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 保留原有函数（handleDragStart, handleDrop, analyzeChart, askQuestion, compareTexts, mergedJson, renderChart）\r\n\t// ... 原有函数保持不变 ...\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0.5;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 0.5;\r\n\t\toverflow-y: auto;\r\n\t\theight: 95%;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message-content p {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.message-content h3 {\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 10px 0;\r\n\t\tcolor: #0077b6;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tpadding-bottom: 5px;\r\n\t}\r\n\r\n\t.message-content strong {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #d90429;\r\n\t}\r\n\r\n\t.message-content ul {\r\n\t\tmargin: 10px 0;\r\n\t\tpadding-left: 25px;\r\n\t}\r\n\r\n\t.message-content li {\r\n\t\tmargin-bottom: 6px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.message-content li:before {\r\n\t\tcontent: \"•\";\r\n\t\tcolor: #4a90e2;\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: inline-block;\r\n\t\twidth: 1em;\r\n\t\tmargin-left: -1em;\r\n\t}\r\n\r\n\t.message-content br {\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t.-viscontainer {\r\n\t\tflex: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tpadding: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\tbutton:active {\r\n\t\tbackground-color: #3d8b40;\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}