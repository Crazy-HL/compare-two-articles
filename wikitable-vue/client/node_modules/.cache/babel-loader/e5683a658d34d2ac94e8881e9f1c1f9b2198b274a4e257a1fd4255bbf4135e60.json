{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createVNode as _createVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"heatmap-control\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"sorting-heatmap\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"heatmap-header\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"排序\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"属性\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"类型\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"差异分数\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"权重\")], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"field-rank\"\n};\nconst _hoisted_6 = {\n  class: \"field-name\"\n};\nconst _hoisted_7 = {\n  class: \"field-type\"\n};\nconst _hoisted_8 = {\n  class: \"field-score\"\n};\nconst _hoisted_9 = {\n  class: \"field-weight\"\n};\nconst _hoisted_10 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_11 = {\n  class: \"header left-column\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"header right-column\"\n};\nconst _hoisted_14 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_15 = [\"onMouseover\"];\nconst _hoisted_16 = {\n  class: \"field-name\"\n};\nconst _hoisted_17 = {\n  class: \"field-type\"\n};\nconst _hoisted_18 = {\n  class: \"icon-actions\"\n};\nconst _hoisted_19 = [\"onClick\"];\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = [\"onMouseover\", \"onClick\"];\nconst _hoisted_22 = {\n  class: \"modal-content\"\n};\nconst _hoisted_23 = {\n  class: \"chart-container\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"chart-legend\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 排序热力图开关 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showSortingHeatmap = !$setup.showSortingHeatmap)\n  }, _toDisplayString($setup.showSortingHeatmap ? \"隐藏\" : \"显示\") + \"排序热力图 \", 1 /* TEXT */)]), _createCommentVNode(\" 排序热力图可视化 \"), $setup.showSortingHeatmap ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFieldsWithScores, (field, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"heatmap-row\",\n      key: field.key,\n      style: _normalizeStyle({\n        backgroundColor: $setup.getHeatmapColor(field.score),\n        borderLeft: `4px solid ${$setup.getHeatmapColor(field.score)}`\n      })\n    }, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(field.typeLabel), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(field.score.toFixed(1)), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.getFieldWeight(field.key).toFixed(1)), 1 /* TEXT */)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 主对比表格 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_12, _createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.leftInfobox, field.key, 'left'),\n      onMouseout: _cache[1] || (_cache[1] = $event => $setup.unhoverInfobox('left')),\n      onClick: $event => $setup.showFullChart($setup.leftInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_14), _createElementVNode(\"div\", {\n      class: \"cell middle-column\",\n      onMouseover: $event => $setup.hoverBothInfoboxes(field.key),\n      onMouseout: _cache[2] || (_cache[2] = $event => $setup.unhoverBothInfoboxes())\n    }, [_createElementVNode(\"div\", _hoisted_16, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_17, _toDisplayString(field.typeLabel), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", {\n      class: \"icon-btn compare\",\n      title: \"对比分析\",\n      onClick: $event => $setup.handleMiddleColumnClick(field)\n    }, \" ⚖️ \", 8 /* PROPS */, _hoisted_19), _createElementVNode(\"span\", {\n      class: \"icon-btn merge\",\n      title: \"合并图表\",\n      onClick: $event => $setup.showCombinedChart(field)\n    }, \" 📊 \", 8 /* PROPS */, _hoisted_20)])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_15), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onMouseover: $event => $setup.hoverInfobox($setup.rightInfobox, field.key, 'right'),\n      onMouseout: _cache[3] || (_cache[3] = $event => $setup.unhoverInfobox('right')),\n      onClick: $event => $setup.showFullChart($setup.rightInfobox, field)\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type,\n      visualization: field.visualization\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_21)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 全屏图表模态框 \"), $setup.showFullChartModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"full-chart-modal\",\n    onClick: _withModifiers($setup.closeFullChart, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.closeFullChart\n  }, \"×\"), _createElementVNode(\"h3\", null, _toDisplayString($setup.currentChart.title) + \" - \" + _toDisplayString($setup.currentChart.field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_23, [_createVNode($setup[\"FullChart\"], {\n    field: $setup.currentChart.data,\n    type: $setup.currentChart.field.type,\n    visualization: $setup.currentChart.field.visualization\n  }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])]), $setup.currentChart.field.legend ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, _toDisplayString($setup.currentChart.field.legend), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","$event","$setup","showSortingHeatmap","_hoisted_3","_hoisted_4","_Fragment","_renderList","sortedFieldsWithScores","field","index","style","_normalizeStyle","getHeatmapColor","score","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","typeLabel","_hoisted_8","toFixed","_hoisted_9","getFieldWeight","_hoisted_10","_hoisted_11","leftInfobox","title","_hoisted_12","_hoisted_13","rightInfobox","sortedFields","onMouseover","hoverInfobox","onMouseout","unhoverInfobox","showFullChart","_createVNode","getField","type","visualization","_hoisted_14","hoverBothInfoboxes","unhoverBothInfoboxes","_hoisted_16","_hoisted_17","_hoisted_18","handleMiddleColumnClick","_hoisted_19","showCombinedChart","_hoisted_20","_hoisted_15","_hoisted_21","showFullChartModal","_withModifiers","closeFullChart","_hoisted_22","currentChart","_hoisted_23","data","legend","_hoisted_24"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<!-- 排序热力图开关 -->\r\n\t\t<div class=\"heatmap-control\">\r\n\t\t\t<button @click=\"showSortingHeatmap = !showSortingHeatmap\">\r\n\t\t\t\t{{ showSortingHeatmap ? \"隐藏\" : \"显示\" }}排序热力图\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 排序热力图可视化 -->\r\n\t\t<div class=\"sorting-heatmap\" v-if=\"showSortingHeatmap\">\r\n\t\t\t<div class=\"heatmap-header\">\r\n\t\t\t\t<span>排序</span>\r\n\t\t\t\t<span>属性</span>\r\n\t\t\t\t<span>类型</span>\r\n\t\t\t\t<span>差异分数</span>\r\n\t\t\t\t<span>权重</span>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"heatmap-row\"\r\n\t\t\t\tv-for=\"(field, index) in sortedFieldsWithScores\"\r\n\t\t\t\t:key=\"field.key\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tbackgroundColor: getHeatmapColor(field.score),\r\n\t\t\t\t\tborderLeft: `4px solid ${getHeatmapColor(field.score)}`\r\n\t\t\t\t}\">\r\n\t\t\t\t<span class=\"field-rank\">{{ index + 1 }}</span>\r\n\t\t\t\t<span class=\"field-name\">{{ field.key }}</span>\r\n\t\t\t\t<span class=\"field-type\">{{ field.typeLabel }}</span>\r\n\t\t\t\t<span class=\"field-score\">{{ field.score.toFixed(1) }}</span>\r\n\t\t\t\t<span class=\"field-weight\">{{\r\n\t\t\t\t\tgetFieldWeight(field.key).toFixed(1)\r\n\t\t\t\t}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 主对比表格 -->\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in sortedFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"icon-actions\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn compare\"\r\n\t\t\t\t\t\t\ttitle=\"对比分析\"\r\n\t\t\t\t\t\t\t@click=\"handleMiddleColumnClick(field)\">\r\n\t\t\t\t\t\t\t⚖️\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclass=\"icon-btn merge\"\r\n\t\t\t\t\t\t\ttitle=\"合并图表\"\r\n\t\t\t\t\t\t\t@click=\"showCombinedChart(field)\">\r\n\t\t\t\t\t\t\t📊\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\t// 状态变量\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\tconst showSortingHeatmap = ref(true);\r\n\r\n\t// 可比较字段配置\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"劳动力分布比例\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 计算带分数的排序字段\r\n\tconst sortedFieldsWithScores = computed(() => {\r\n\t\tif (!comparableFields.value.length) return [];\r\n\r\n\t\treturn comparableFields.value\r\n\t\t\t.map(field => ({\r\n\t\t\t\t...field,\r\n\t\t\t\tscore: calculateDifferenceScore(field)\r\n\t\t\t}))\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\t// 确保数值类型排在文本类型前面\r\n\t\t\t\tif (a.type !== \"text\" && b.type === \"text\") return -1;\r\n\t\t\t\tif (a.type === \"text\" && b.type !== \"text\") return 1;\r\n\r\n\t\t\t\t// 同类型按分数降序\r\n\t\t\t\treturn b.score - a.score;\r\n\t\t\t});\r\n\t});\r\n\r\n\t// 不带分数的排序字段（用于显示）\r\n\tconst sortedFields = computed(() => {\r\n\t\treturn sortedFieldsWithScores.value;\r\n\t});\r\n\r\n\t// 可比较字段过滤\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 计算差异分数\r\n\tconst calculateDifferenceScore = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\t// console.log(\"left:\", leftData);\r\n\t\t// console.log(\"right:\", rightData);\r\n\t\tif (!leftData.length || !rightData.length) return 0;\r\n\r\n\t\t// 文本类型比较\r\n\t\tif (field.type === \"text\") {\r\n\t\t\treturn leftData[0] === rightData[0] ? 1 : 5; // 相同1分，不同5分\r\n\t\t}\r\n\r\n\t\t// 数值类型比较\r\n\t\tif (field.type === \"number\" || field.type === \"percentage\") {\r\n\t\t\tconst leftVal = parseFloat(leftData[0]);\r\n\t\t\tconst rightVal = parseFloat(rightData[0]);\r\n\r\n\t\t\tif (isNaN(leftVal)) return 0;\r\n\t\t\tif (isNaN(rightVal)) return 0;\r\n\r\n\t\t\tconst absDiff = Math.abs(leftVal - rightVal);\r\n\t\t\tlet score = 10 + absDiff * getFieldWeight(field.key); // 基础分10\r\n\r\n\t\t\t// 趋势相反（大幅加分）\r\n\t\t\tif ((leftVal > 0 && rightVal < 0) || (leftVal < 0 && rightVal > 0)) {\r\n\t\t\t\tscore += 50;\r\n\t\t\t}\r\n\r\n\t\t\t// 特殊比例关系\r\n\t\t\tif (\r\n\t\t\t\tfield.key.toLowerCase().includes(\"per capita\") ||\r\n\t\t\t\tfield.key.toLowerCase().includes(\"ratio\")\r\n\t\t\t) {\r\n\t\t\t\tscore += 30;\r\n\t\t\t}\r\n\r\n\t\t\treturn score;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 字段权重\r\n\tconst getFieldWeight = fieldKey => {\r\n\t\tconst weights = {\r\n\t\t\tGDP: 2.0,\r\n\t\t\tPopulation: 1.5,\r\n\t\t\t\"GDP growth\": 1.8,\r\n\t\t\tInflation: 1.3,\r\n\t\t\tLabor: 1.2\r\n\t\t};\r\n\r\n\t\tfor (const [key, weight] of Object.entries(weights)) {\r\n\t\t\tif (fieldKey.toLowerCase().includes(key.toLowerCase())) {\r\n\t\t\t\treturn weight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t};\r\n\r\n\t// 热力图颜色\r\n\tconst getHeatmapColor = score => {\r\n\t\tconst maxScore = 100;\r\n\t\tconst ratio = Math.min(score / maxScore, 1);\r\n\t\tconst hue = (1 - ratio) * 120; // 绿色(120)到红色(0)\r\n\t\treturn `hsl(${hue}, 80%, ${85 - ratio * 25}%)`;\r\n\t};\r\n\r\n\t// 其他方法保持不变...\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`highlight-${divId}-paragraphs`, fieldKey);\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t\tconst divId = side === \"left\" ? \"div1\" : \"div3\";\r\n\t\tbus.emit(`clear-${divId}-highlights`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: getField(leftInfobox.value, field.key),\r\n\t\t\trightData: getField(rightInfobox.value, field.key),\r\n\t\t\tleftTitle: leftInfobox.value.title,\r\n\t\t\trightTitle: rightInfobox.value.title,\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-div1-paragraphs\", field.key);\r\n\t\tbus.emit(\"highlight-div3-paragraphs\", field.key);\r\n\t};\r\n\r\n\tconst showCombinedChart = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t/* 热力图样式 */\r\n\t.heatmap-control {\r\n\t\tmargin-bottom: 10px;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.heatmap-control button {\r\n\t\tpadding: 6px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.sorting-heatmap {\r\n\t\tmargin-bottom: 20px;\r\n\t\tborder: 1px solid #eee;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.heatmap-header {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.heatmap-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50px 2fr 1fr 1fr 1fr;\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\ttransition: all 0.3s;\r\n\t}\r\n\r\n\t.heatmap-row:hover {\r\n\t\ttransform: scale(1.01);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.field-rank {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.field-score {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t}\r\n\r\n\t.field-weight {\r\n\t\ttext-align: right;\r\n\t\tfont-family: monospace;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t/* 原有表格样式保持不变 */\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: default;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.icon-actions {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 15px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.icon-btn {\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t\topacity: 0.7;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.icon-btn:hover {\r\n\t\topacity: 1;\r\n\t\ttransform: scale(1.2);\r\n\t}\r\n\r\n\t.icon-btn.compare:hover {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.icon-btn.merge:hover {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}