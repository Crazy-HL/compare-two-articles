{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_3 = {\n  class: \"header left-column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header middle-column\"\n}, \"对比属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"header right-column\"\n};\nconst _hoisted_6 = [\"onClick\", \"onMouseover\"];\nconst _hoisted_7 = [\"onClick\", \"onMouseover\"];\nconst _hoisted_8 = {\n  class: \"field-name\"\n};\nconst _hoisted_9 = {\n  class: \"field-type\"\n};\nconst _hoisted_10 = [\"onClick\", \"onMouseover\"];\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = {\n  class: \"full-chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", {\n      class: \"cell left-column\",\n      onClick: $event => $setup.highlightInfobox($setup.leftInfobox, field.key, 'left'),\n      onMouseover: $event => $setup.hoverInfobox($setup.leftInfobox, field.key, 'left'),\n      onMouseout: _cache[0] || (_cache[0] = $event => $setup.unhoverInfobox('left'))\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.leftInfobox, field.key).map(item => ({\n        ...item,\n        value: $setup.safeToNumber(item.value || item.raw)\n      })),\n      type: field.type,\n      visualization: field.visualization,\n      \"y-range\": field.visualization === 'bar-chart' ? $setup.getUnifiedYRange() : null\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\", \"y-range\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), _createElementVNode(\"div\", {\n      class: \"cell middle-column\",\n      onClick: $event => $setup.highlightBothInfoboxes(field.key),\n      onMouseover: $event => $setup.hoverBothInfoboxes(field.key),\n      onMouseout: _cache[1] || (_cache[1] = $event => $setup.unhoverBothInfoboxes())\n    }, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(field.key), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(field.typeLabel), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), _createElementVNode(\"div\", {\n      class: \"cell right-column\",\n      onClick: $event => $setup.highlightInfobox($setup.rightInfobox, field.key, 'right'),\n      onMouseover: $event => $setup.hoverInfobox($setup.rightInfobox, field.key, 'right'),\n      onMouseout: _cache[2] || (_cache[2] = $event => $setup.unhoverInfobox('right'))\n    }, [_createVNode($setup[\"SimpleChart\"], {\n      field: $setup.getField($setup.rightInfobox, field.key).map(item => ({\n        ...item,\n        value: $setup.safeToNumber(item.value || item.raw)\n      })),\n      type: field.type,\n      visualization: field.visualization,\n      \"y-range\": field.visualization === 'bar-chart' ? $setup.getUnifiedYRange() : null\n    }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\", \"y-range\"])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_10)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _withModifiers($setup.closeModal, [\"self\"])\n  }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.closeModal\n  }, \"×\"), _createElementVNode(\"h3\", null, _toDisplayString($setup.modalTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"FullChart\"], {\n    field: $setup.modalData,\n    type: $setup.modalType,\n    visualization: $setup.modalVisualization\n  }, null, 8 /* PROPS */, [\"field\", \"type\", \"visualization\"])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$setup","leftInfobox","title","_hoisted_4","_hoisted_5","rightInfobox","_Fragment","_renderList","comparableFields","field","key","onClick","$event","highlightInfobox","onMouseover","hoverInfobox","onMouseout","_cache","unhoverInfobox","_createVNode","getField","map","item","safeToNumber","value","raw","type","visualization","getUnifiedYRange","_hoisted_6","highlightBothInfoboxes","hoverBothInfoboxes","unhoverBothInfoboxes","_hoisted_8","_hoisted_9","typeLabel","_hoisted_7","_hoisted_10","showModal","_withModifiers","closeModal","_hoisted_11","modalTitle","_hoisted_12","modalData","modalType","modalVisualization","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@click=\"highlightInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"\r\n\t\t\t\t\t\t\tgetField(leftInfobox, field.key).map(item => ({\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\tvalue: safeToNumber(item.value || item.raw)\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\tfield.visualization === 'bar-chart' ? getUnifiedYRange() : null\r\n\t\t\t\t\t\t\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@click=\"highlightBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@click=\"highlightInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"\r\n\t\t\t\t\t\t\tgetField(rightInfobox, field.key).map(item => ({\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\tvalue: safeToNumber(item.value || item.raw)\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\"\r\n\t\t\t\t\t\t:y-range=\"\r\n\t\t\t\t\t\t\tfield.visualization === 'bar-chart' ? getUnifiedYRange() : null\r\n\t\t\t\t\t\t\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeModal\">×</button>\r\n\t\t\t\t<h3>{{ modalTitle }}</h3>\r\n\t\t\t\t<div class=\"full-chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"modalData\"\r\n\t\t\t\t\t\t:type=\"modalType\"\r\n\t\t\t\t\t\t:visualization=\"modalVisualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\tconst showModal = ref(false);\r\n\tconst modalTitle = ref(\"\");\r\n\tconst modalData = ref(null);\r\n\tconst modalType = ref(\"\");\r\n\tconst modalVisualization = ref(\"\");\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 高亮Infobox相关方法\r\n\tconst highlightInfobox = (infobox, fieldKey, side) => {\r\n\t\tconsole.log(`高亮 ${side} Infobox: ${fieldKey}`);\r\n\t\tbus.emit(`highlight-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst highlightBothInfoboxes = fieldKey => {\r\n\t\thighlightInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thighlightInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\t// 模态框相关方法\r\n\tconst openModal = (infobox, fieldKey) => {\r\n\t\tconst field = getField(infobox, fieldKey);\r\n\t\tif (!field || field.length === 0) return;\r\n\r\n\t\tmodalTitle.value = `${infobox.title} - ${fieldKey}`;\r\n\t\tmodalData.value = field;\r\n\t\tmodalType.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.type || \"\";\r\n\t\tmodalVisualization.value =\r\n\t\t\tCOMPARABLE_FIELDS.find(f => f.key === fieldKey)?.visualization || \"\";\r\n\t\tshowModal.value = true;\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tshowModal.value = false;\r\n\t};\r\n\r\n\t// 获取字段数据\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\treturn Array.isArray(section[matchedKey])\r\n\t\t\t\t\t? section[matchedKey]\r\n\t\t\t\t\t: [section[matchedKey]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 计算可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 安全转换为数字\r\n\tconst safeToNumber = value => {\r\n\t\tif (value === null || value === undefined) return 0;\r\n\t\tif (typeof value === \"number\") return value;\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\tconst numStr = value.toString().replace(/[^0-9.-]/g, \"\");\r\n\t\t\tconst num = parseFloat(numStr);\r\n\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// 计算统一的Y轴范围\r\n\tconst getUnifiedYRange = () => {\r\n\t\tconst leftValues = comparableFields.value\r\n\t\t\t.map(field => {\r\n\t\t\t\tconst data = getField(leftInfobox.value, field.key);\r\n\t\t\t\treturn data.map(item => safeToNumber(item.value || item.raw));\r\n\t\t\t})\r\n\t\t\t.flat();\r\n\r\n\t\tconst rightValues = comparableFields.value\r\n\t\t\t.map(field => {\r\n\t\t\t\tconst data = getField(rightInfobox.value, field.key);\r\n\t\t\t\treturn data.map(item => safeToNumber(item.value || item.raw));\r\n\t\t\t})\r\n\t\t\t.flat();\r\n\r\n\t\tconst allValues = [...leftValues, ...rightValues];\r\n\t\tconst maxValue = Math.max(...allValues, 0);\r\n\t\treturn [0, maxValue * 1.2];\r\n\t};\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\t// 组件挂载时设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"接收到左侧Infobox数据:\", data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"接收到右侧Infobox数据:\", data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\theight: 160px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e3f2fd;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.modal-overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 80%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.full-chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tfont-size: 24px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}