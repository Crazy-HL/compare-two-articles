{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"div0\",\n  id: \"div2\"\n};\nconst _hoisted_2 = {\n  class: \"VisContainer\"\n};\nconst _hoisted_3 = {\n  class: \"topContainer container\"\n};\nconst _hoisted_4 = {\n  class: \"botContainer container\"\n};\nconst _hoisted_5 = {\n  class: \"io\"\n};\nconst _hoisted_6 = {\n  class: \"io\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"IO\"], {\n    width: \"800px\",\n    height: \"300px\",\n    placeholder: $setup.selectText1\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"IO\"], {\n    width: \"400px\",\n    height: \"300px\",\n    placeholder: _ctx.selectText2\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"IO\"], {\n    width: \"400px\",\n    height: \"300px\",\n    placeholder: _ctx.selectText3\n  }, null, 8 /* PROPS */, [\"placeholder\"])])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","$setup","width","height","placeholder","selectText1","_hoisted_4","_hoisted_5","_ctx","selectText2","_hoisted_6","selectText3"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<!-- Div2.vue -->\r\n<template>\r\n\t<div class=\"div0\" id=\"div2\">\r\n\t\t<div class=\"VisContainer\">\r\n\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t<IO width=\"800px\" height=\"300px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"botContainer container\">\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"400px\" height=\"300px\" :placeholder=\"selectText2\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"400px\" height=\"300px\" :placeholder=\"selectText3\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport bus from \"@/js/eventBus.js\"; // 引入事件总线\r\n\r\n\tlet receivedData = \"\";\r\n\tconst selectText1 = ref(\"\");\r\n\t// 页面初始化时加载内容\r\n\tonMounted(() => {\r\n\t\t// 订阅事件\r\n\t\tconst off = bus.on(\"div1Event\", data => {\r\n\t\t\treceivedData = data;\r\n\t\t\tconsole.log(\"Received data from brother:\", receivedData.customId);\r\n\t\t\tif (receivedData.customId === \"div1\")\r\n\t\t\t\tconsole.log(\"---:\", receivedData.customId);\r\n\t\t\t// selectText1.value = getPlainTextFromSelection(receivedData.content);\r\n\t\t\t// else if (receivedData.customId === \"div2\")\r\n\t\t\t// \tselectText2.value = getPlainTextFromSelection(receivedData.content);\r\n\t\t\t// else selectText3.value = getPlainTextFromSelection(receivedData.content);\r\n\t\t});\r\n\t\t// 当组件卸载时，取消事件订阅以避免内存泄漏\r\n\t\t// onUnmounted(() => {\r\n\t\t// \toff();\r\n\t\t// });\r\n\t});\r\n\r\n\t// 仅获取选中的纯文本内容，去除所有 HTML 标签\r\n\tfunction getPlainTextFromSelection() {\r\n\t\tconst selection = window.getSelection();\r\n\r\n\t\tif (selection) {\r\n\t\t\tconst selectedText = selection.toString().trim(); // 获取纯文本\r\n\t\t\tif (selectedText.length > 0) {\r\n\t\t\t\treturn selectedText; // 如果是纯文本，直接返回\r\n\t\t\t}\r\n\r\n\t\t\tconst range = selection.getRangeAt(0);\r\n\t\t\tconst rangeClone = range.cloneContents();\r\n\r\n\t\t\tif (rangeClone.childElementCount > 0) {\r\n\t\t\t\t// 创建一个临时容器，获取 HTML 内容并剥离标签\r\n\t\t\t\tconst container = document.createElement(\"div\");\r\n\t\t\t\tcontainer.appendChild(rangeClone);\r\n\r\n\t\t\t\t// 通过正则表达式去除所有 HTML 标签\r\n\t\t\t\tconst plainText = container.innerText || container.textContent; // 获取纯文本\r\n\t\t\t\treturn plainText.trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null; // 没有选中内容时返回 null\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#div2 {\r\n\t\twidth: 40%;\r\n\t\theight: 100%;\r\n\t\tflex-grow: 1; /* 使 div2 自动撑开占据剩余空间 */\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column; /* 保证内部子元素（如 .VisContainer）能自动排布 */\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t\tflex-grow: 1; /* 确保 VisContainer 会撑开 */\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid black;\r\n\t\tmargin: 10px 10px;\r\n\t\tflex-grow: 1; /* 使内部子元素可以扩展 */\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tmargin: 5px;\r\n\t\tborder: 1px solid blue;\r\n\t\tpadding: 5px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EAEMA,KAAK,EAAC,MAAM;EAACC,EAAE,EAAC;;;EACfD,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAwB;;EAG9BA,KAAK,EAAC;AAAwB;;EAC7BA,KAAK,EAAC;AAAI;;EAGVA,KAAK,EAAC;AAAI;;uBATlBE,mBAAA,CAcM,OAdNC,UAcM,GAbLC,mBAAA,CAYM,OAZNC,UAYM,GAXLD,mBAAA,CAEM,OAFNE,UAEM,GADLC,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAI;8CAEhDR,mBAAA,CAOM,OAPNS,UAOM,GANLT,mBAAA,CAEM,OAFNU,UAEM,GADLP,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEI,IAAA,CAAAC;8CAEhDZ,mBAAA,CAEM,OAFNa,UAEM,GADLV,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEI,IAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}