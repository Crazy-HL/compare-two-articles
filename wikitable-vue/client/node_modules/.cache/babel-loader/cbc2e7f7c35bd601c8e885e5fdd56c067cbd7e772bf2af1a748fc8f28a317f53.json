{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d881255\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartEl\",\n  class: \"single-value-pie\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\charts\\PieChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"single-value-pie\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tvalue: { type: Number, required: true }, // 当前值 (0-100)\r\n\t\ttitle: { type: String, default: \"\" }, // 标题\r\n\t\tunit: { type: String, default: \"%\" }, // 单位\r\n\t\tcolor: { type: String, default: \"#36a2eb\" } // 主色\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value || props.value === undefined) return;\r\n\r\n\t\t// 处理边界值\r\n\t\tconst displayValue = Math.min(Math.max(props.value, 0), 100);\r\n\t\tconst isFull = displayValue >= 99.99; // 视为100%\r\n\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\tconst option = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: `{name|${props.title}}\\n{value|${displayValue.toFixed(1)}}${\r\n\t\t\t\t\tprops.unit\r\n\t\t\t\t}`,\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttop: \"45%\",\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\trich: {\r\n\t\t\t\t\t\tname: { fontSize: 14, color: \"#666\", padding: [5, 0] },\r\n\t\t\t\t\t\tvalue: { fontSize: 24, fontWeight: \"bold\", color: \"#333\" },\r\n\t\t\t\t\t\tunit: { fontSize: 14, color: \"#999\" }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"pie\",\r\n\t\t\t\t\tradius: [\"65%\", \"85%\"],\r\n\t\t\t\t\tsilent: true,\r\n\t\t\t\t\tstartAngle: 90,\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: isFull ? 100 : displayValue,\r\n\t\t\t\t\t\t\tname: \"当前值\",\r\n\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\tcolor: isFull ? props.color : [props.color, \"#f0f0f0\"],\r\n\t\t\t\t\t\t\t\tborderWidth: 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t...(isFull\r\n\t\t\t\t\t\t\t? []\r\n\t\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tvalue: 100 - displayValue,\r\n\t\t\t\t\t\t\t\t\t\tname: \"\",\r\n\t\t\t\t\t\t\t\t\t\titemStyle: { color: \"transparent\" }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t  ])\r\n\t\t\t\t\t],\r\n\t\t\t\t\tlabel: { show: false }\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tchartInstance.setOption(option);\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t\twindow.addEventListener(\"resize\", () => chartInstance?.resize());\r\n\t});\r\n\r\n\twatch(() => [props.value, props.title], initChart);\r\n</script>\r\n\r\n<style scoped>\r\n\t.single-value-pie {\r\n\t\twidth: 100%;\r\n\t\theight: 300px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC;;;uBAAzBC,mBAAA,CAAkD,OAAlDC,UAAkD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}