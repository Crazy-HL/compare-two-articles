{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Infobox 数据对比\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"titles\"\n};\nconst _hoisted_5 = {\n  class: \"title-box left\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-box center\"\n}, \"比较属性\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"title-box right\"\n};\nconst _hoisted_8 = {\n  class: \"comparison-grid\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header left-column\"\n}, \"数据展示\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header middle-column\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header right-column\"\n}, \"数据展示\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"cell left-column\"\n};\nconst _hoisted_13 = {\n  class: \"cell middle-column\"\n};\nconst _hoisted_14 = {\n  class: \"field-name\"\n};\nconst _hoisted_15 = {\n  class: \"field-type\"\n};\nconst _hoisted_16 = {\n  class: \"cell right-column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.leftInfobox.title), 1 /* TEXT */), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.rightInfobox.title), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" 表头 \"), _hoisted_9, _hoisted_10, _hoisted_11, _createCommentVNode(\" 内容行 - 显示所有可比较字段 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comparableFields, field => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: field.key\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.getField($setup.leftInfobox, field.key),\n      type: field.type\n    }, null, 8 /* PROPS */, [\"field\", \"type\"])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString(field.displayName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(field.typeLabel), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createVNode($setup[\"FieldVisualization\"], {\n      field: $setup.getField($setup.rightInfobox, field.key),\n      type: field.type\n    }, null, 8 /* PROPS */, [\"field\", \"type\"])])], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$setup","leftInfobox","title","_hoisted_6","_hoisted_7","rightInfobox","_hoisted_8","_createCommentVNode","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","comparableFields","field","key","_hoisted_12","_createVNode","getField","type","_hoisted_13","_hoisted_14","displayName","_hoisted_15","typeLabel","_hoisted_16"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 - 显示所有可比较字段 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.displayName }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// Infobox 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理接收到的 Infobox 数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {} // 直接使用 sections 作为数据源\r\n\t\t};\r\n\t};\r\n\r\n\t// 可比较字段定义（确保 key 与数据中的字段名完全一致）\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\tdisplayName: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\tdisplayName: \"人口\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\tdisplayName: \"GDP增长率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\tdisplayName: \"通货膨胀率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Currency\",\r\n\t\t\tdisplayName: \"货币\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\tdisplayName: \"国家类型\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 获取字段值（直接精确匹配）\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 遍历所有 section（如 \"基本信息\"、\"Statistics\"）\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 计算可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftField = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightField = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftField || rightField; // 只要有一方有数据就显示\r\n\t\t});\r\n\t});\r\n\r\n\t// 设置事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Left Infobox 数据:\", leftInfobox.value); // 调试日志\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Right Infobox 数据:\", rightInfobox.value); // 调试日志\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 原有样式保持不变 */\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 其他样式... */\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAmB;;EACxBA,KAAK,EAAC;AAAQ;gEAClBC,mBAAA,CAAqB,YAAjB,cAAY;;EACXD,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAgB;gEAC3BC,mBAAA,CAAwC;EAAnCD,KAAK,EAAC;AAAkB,GAAC,MAAI;;EAC7BA,KAAK,EAAC;AAAiB;;EAIzBA,KAAK,EAAC;AAAiB;gEAE3BC,mBAAA,CAAiD;EAA5CD,KAAK,EAAC;AAA2B,GAAC,MAAI;iEAC3CC,mBAAA,CAAiD;EAA5CD,KAAK,EAAC;AAA6B,GAAC,IAAE;iEAC3CC,mBAAA,CAAkD;EAA7CD,KAAK,EAAC;AAA4B,GAAC,MAAI;;EAItCA,KAAK,EAAC;AAAkB;;EAKxBA,KAAK,EAAC;AAAoB;;EACzBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAEnBA,KAAK,EAAC;AAAmB;;uBA3BjCE,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCLF,mBAAA,CAOM,OAPNG,UAOM,GANLC,UAAqB,EACrBJ,mBAAA,CAIM,OAJNK,UAIM,GAHLL,mBAAA,CAAyD,OAAzDM,UAAyD,EAAAC,gBAAA,CAA1BC,MAAA,CAAAC,WAAW,CAACC,KAAK,kBAChDC,UAAwC,EACxCX,mBAAA,CAA2D,OAA3DY,UAA2D,EAAAL,gBAAA,CAA3BC,MAAA,CAAAK,YAAY,CAACH,KAAK,iB,KAIpDV,mBAAA,CAuBM,OAvBNc,UAuBM,GAtBLC,mBAAA,QAAW,EACXC,UAAiD,EACjDC,WAAiD,EACjDC,WAAkD,EAElDH,mBAAA,qBAAwB,G,kBACxBd,mBAAA,CAeWkB,SAAA,QAjCdC,WAAA,CAkB6BZ,MAAA,CAAAa,gBAAgB,EAAzBC,KAAK;yBAlBzBrB,mBAAA,CAAAkB,SAAA;MAAAI,GAAA,EAkBqDD,KAAK,CAACC;QACvDvB,mBAAA,CAIM,OAJNwB,WAIM,GAHLC,YAAA,CAEsBjB,MAAA;MADpBc,KAAK,EAAEd,MAAA,CAAAkB,QAAQ,CAAClB,MAAA,CAAAC,WAAW,EAAEa,KAAK,CAACC,GAAG;MACtCI,IAAI,EAAEL,KAAK,CAACK;kDAEf3B,mBAAA,CAGM,OAHN4B,WAGM,GAFL5B,mBAAA,CAAqD,OAArD6B,WAAqD,EAAAtB,gBAAA,CAA1Be,KAAK,CAACQ,WAAW,kBAC5C9B,mBAAA,CAAmD,OAAnD+B,WAAmD,EAAAxB,gBAAA,CAAxBe,KAAK,CAACU,SAAS,iB,GAE3ChC,mBAAA,CAIM,OAJNiC,WAIM,GAHLR,YAAA,CAEsBjB,MAAA;MADpBc,KAAK,EAAEd,MAAA,CAAAkB,QAAQ,CAAClB,MAAA,CAAAK,YAAY,EAAES,KAAK,CAACC,GAAG;MACvCI,IAAI,EAAEL,KAAK,CAACK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}