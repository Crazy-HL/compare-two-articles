{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n\n      // 标准化数据结构\n      const result = {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: {}\n      };\n\n      // 合并所有sections\n      if (data.sections) {\n        for (const [sectionName, sectionData] of Object.entries(data.sections)) {\n          result.data[sectionName] = {\n            ...sectionData\n          };\n        }\n      }\n      return result;\n    };\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Currency\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Fiscal year\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Trade organizations\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }];\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 1. 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return section[fieldKey];\n        }\n      }\n\n      // 2. 模糊匹配（忽略大小写、空格和符号）\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) {\n          console.log(`模糊匹配成功: ${fieldKey} -> ${matchedKey}`);\n          return section[matchedKey];\n        }\n      }\n      console.warn(`字段未匹配: ${fieldKey}`, {\n        availableKeys: Object.values(infobox.data).flatMap(s => Object.keys(s))\n      });\n      return null;\n    };\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        console.log(`字段检查 ${field.key}:`, {\n          left: leftVal,\n          right: rightVal\n        });\n        return leftVal !== null || rightVal !== null;\n      });\n    });\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n        console.log(\"左侧数据接收:\", JSON.parse(JSON.stringify(leftInfobox.value)));\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n        console.log(\"右侧数据接收:\", JSON.parse(JSON.stringify(rightInfobox.value)));\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      getField,\n      comparableFields,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","result","sections","sectionName","sectionData","Object","entries","COMPARABLE_FIELDS","key","typeLabel","getField","infobox","fieldKey","section","values","undefined","cleanKey","toLowerCase","replace","matchedKey","keys","find","k","console","log","warn","availableKeys","flatMap","s","comparableFields","filter","field","leftVal","value","rightVal","left","right","on","JSON","parse","stringify"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:field-key=\"field.key\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 标准化数据结构\r\n\t\tconst result = {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: {}\r\n\t\t};\r\n\r\n\t\t// 合并所有sections\r\n\t\tif (data.sections) {\r\n\t\t\tfor (const [sectionName, sectionData] of Object.entries(data.sections)) {\r\n\t\t\t\tresult.data[sectionName] = { ...sectionData };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{ key: \"GDP\", type: \"number\", typeLabel: \"数值(万亿美元)\" },\r\n\t\t{ key: \"Population\", type: \"number\", typeLabel: \"数值(亿人)\" },\r\n\t\t{ key: \"GDP growth\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{ key: \"Inflation (CPI)\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{ key: \"Currency\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Country group\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Fiscal year\", type: \"text\", typeLabel: \"文本\" },\r\n\t\t{ key: \"Trade organizations\", type: \"text\", typeLabel: \"文本\" }\r\n\t];\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 1. 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. 模糊匹配（忽略大小写、空格和符号）\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) {\r\n\t\t\t\tconsole.log(`模糊匹配成功: ${fieldKey} -> ${matchedKey}`);\r\n\t\t\t\treturn section[matchedKey];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.warn(`字段未匹配: ${fieldKey}`, {\r\n\t\t\tavailableKeys: Object.values(infobox.data).flatMap(s => Object.keys(s))\r\n\t\t});\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\r\n\t\t\tconsole.log(`字段检查 ${field.key}:`, {\r\n\t\t\t\tleft: leftVal,\r\n\t\t\t\tright: rightVal\r\n\t\t\t});\r\n\r\n\t\t\treturn leftVal !== null || rightVal !== null;\r\n\t\t});\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"左侧数据接收:\",\r\n\t\t\t\tJSON.parse(JSON.stringify(leftInfobox.value))\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"右侧数据接收:\",\r\n\t\t\t\tJSON.parse(JSON.stringify(rightInfobox.value))\r\n\t\t\t);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.header h2 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.title-box.center {\r\n\t\tflex: 0.5;\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tmin-height: 100px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}