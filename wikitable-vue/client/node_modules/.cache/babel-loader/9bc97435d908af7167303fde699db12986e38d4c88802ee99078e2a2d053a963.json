{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"文章内容可视化工具\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"upload-section\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"visualization-section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"可视化结果\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  ref: \"chart\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event),\n    placeholder: \"请输入文章内容\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.processText && $options.processText(...arguments);\n    })\n  }, \"提交并可视化\")]), $data.jsonData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","key","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$data","text","placeholder","onClick","$options","processText","arguments","jsonData","_hoisted_4","_hoisted_5","_hoisted_6","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Vis2.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<h1>文章内容可视化工具</h1>\r\n\t\t<div class=\"upload-section\">\r\n\t\t\t<textarea v-model=\"text\" placeholder=\"请输入文章内容\"></textarea>\r\n\t\t\t<button @click=\"processText\">提交并可视化</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"jsonData\" class=\"visualization-section\">\r\n\t\t\t<h2>可视化结果</h2>\r\n\t\t\t<div ref=\"chart\" class=\"chart-container\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport * as d3 from \"d3\";\r\n\timport { toRaw } from \"vue\";\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttext: \"\", // 用户输入的文章内容\r\n\t\t\t\tjsonData: null // 后端返回的 JSON 数据\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交文章内容并获取处理结果\r\n\t\t\tasync processText() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(\"http://localhost:8888/process_text\", {\r\n\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({ text: this.text })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst result = await response.json();\r\n\r\n\t\t\t\t\t// 检查是否有错误信息\r\n\t\t\t\t\tif (result.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", result.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${result.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 赋值时确保 jsonData 是对象\r\n\t\t\t\t\tthis.jsonData = result.json_data;\r\n\t\t\t\t\tconst rawJsonData = toRaw(this.jsonData);\r\n\t\t\t\t\tconsole.log(\"jsonData:\", this.jsonData);\r\n\t\t\t\t\tconsole.log(\"rawJsonData:\", rawJsonData);\r\n\t\t\t\t\tthis.renderChart();\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染图表\r\n\t\t\trenderChart() {\r\n\t\t\t\t// 将响应式对象转换为普通对象\r\n\t\t\t\tconst rawJsonData = JSON.parse(JSON.stringify(this.jsonData));\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!rawJsonData ||\r\n\t\t\t\t\ttypeof rawJsonData !== \"object\" ||\r\n\t\t\t\t\t!rawJsonData.data\r\n\t\t\t\t) {\r\n\t\t\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 清空之前的图表\r\n\t\t\t\td3.select(this.$refs.chart).html(\"\");\r\n\r\n\t\t\t\tconst chartType = rawJsonData.type;\r\n\t\t\t\tconst data = rawJsonData.data;\r\n\t\t\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\t\t\tif (chartType === \"line\") {\r\n\t\t\t\t\tthis.renderLineChart(data, options);\r\n\t\t\t\t} else if (chartType === \"bar\") {\r\n\t\t\t\t\tthis.renderBarChart(data, options);\r\n\t\t\t\t} else if (chartType === \"pie\") {\r\n\t\t\t\t\tthis.renderPieChart(data, options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染折线图（line）\r\n\t\t\trenderLineChart(data, options) {\r\n\t\t\t\tconsole.log(\"ling***:\", data);\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\r\n\t\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\t\tconst height = 400 - margin.top - margin.bottom;\r\n\r\n\t\t\t\tconst svg = d3\r\n\t\t\t\t\t.select(this.$refs.chart)\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst labels = data.labels;\r\n\t\t\t\tconst datasets = data.datasets;\r\n\r\n\t\t\t\tconst x = d3.scaleBand().domain(labels).range([0, width]).padding(0.1);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(datasets.flatMap(d => d.data))])\r\n\t\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\");\r\n\r\n\t\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t\tdatasets.forEach(dataset => {\r\n\t\t\t\t\tconst line = d3\r\n\t\t\t\t\t\t.line()\r\n\t\t\t\t\t\t.x((d, i) => x(labels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.y(d => y(d));\r\n\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.append(\"path\")\r\n\t\t\t\t\t\t.datum(dataset.data)\r\n\t\t\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t\t\t.attr(\"stroke\", dataset.borderColor)\r\n\t\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t\t.attr(\"d\", line);\r\n\r\n\t\t\t\t\tsvg\r\n\t\t\t\t\t\t.selectAll(`.dot-${dataset.label}`)\r\n\t\t\t\t\t\t.data(dataset.data)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t.attr(\"cx\", (d, i) => x(labels[i]) + x.bandwidth() / 2)\r\n\t\t\t\t\t\t.attr(\"cy\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"r\", 4)\r\n\t\t\t\t\t\t.attr(\"fill\", dataset.borderColor);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染柱状图（bar）\r\n\t\t\trenderBarChart(data, options) {\r\n\t\t\t\t// 实现柱状图渲染逻辑\r\n\t\t\t\tconsole.log(\"Rendering bar chart with data:\", data);\r\n\t\t\t},\r\n\r\n\t\t\t// 渲染饼图（pie）\r\n\t\t\trenderPieChart(data, options) {\r\n\t\t\t\t// 实现饼图渲染逻辑\r\n\t\t\t\tconsole.log(\"Rendering pie chart with data:\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t#app {\r\n\t\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 60px;\r\n\t}\r\n\r\n\t.upload-section {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 80%;\r\n\t\theight: 150px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tfont-size: 16px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\tmargin-top: 20px;\r\n\t}\r\n</style>\r\n"],"mappings":";;EACMA,EAAE,EAAC;AAAK;gCACZC,mBAAA,CAAkB,YAAd,WAAS;;EACRC,KAAK,EAAC;AAAgB;;EAH7BC,GAAA;EAQuBD,KAAK,EAAC;;gCAC1BD,mBAAA,CAAc,YAAV,OAAK;;EACJG,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;;;uBATzBG,mBAAA,CAWM,OAXNC,UAWM,GAVLC,UAAkB,EAClBN,mBAAA,CAGM,OAHNO,UAGM,G,gBAFLP,mBAAA,CAA0D;IAJ7D,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,KAAA,CAAAC,IAAI,E,GACvBX,mBAAA,CAA4C;IAAnCa,OAAK,EAAAL,MAAA,QAAAA,MAAA;MAAA,OAAEM,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAC,SAAA,CAAW;IAAA;KAAE,QAAM,E,GAGzBN,KAAA,CAAAO,QAAQ,I,cAAnBb,mBAAA,CAGM,OAHNc,UAGM,GAFLC,UAAc,EACdnB,mBAAA,CAA+C,OAA/CoB,UAA+C,8B,KAVlDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}