{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport { debounce } from \"lodash-es\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n\n    // 数据源状态\n    const showInfoboxData = ref(true);\n    const dataInitialized = ref({\n      infobox: false,\n      table: false\n    });\n\n    // 容器引用\n    const containerRef = ref(null);\n\n    // 图表尺寸控制\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n    const leftChartColor = ref(\"#4a90e2\");\n    const rightChartColor = ref(\"#ef4444\");\n\n    // 数据存储\n    const processedTable1 = ref({\n      title: \"表格1\",\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"表格2\",\n      timeSeriesData: {}\n    });\n    const leftInfobox = ref({\n      title: \"Infobox 1\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"Infobox 2\",\n      data: {}\n    });\n\n    // 弹窗状态\n    const showFullChartModal = ref(false);\n    const currentAttribute = ref(\"\");\n    const currentSide = ref(\"left\");\n    const currentChartData = ref({\n      data: [],\n      compareData: []\n    });\n\n    // 可比较字段定义\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Country group\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }];\n\n    // 计算属性\n    const leftTitle = computed(() => showInfoboxData.value ? leftInfobox.value.title || \"Infobox 1\" : processedTable1.value.title || \"表格1\");\n    const rightTitle = computed(() => showInfoboxData.value ? rightInfobox.value.title || \"Infobox 2\" : processedTable2.value.title || \"表格2\");\n    const displayFields = computed(() => {\n      if (showInfoboxData.value) {\n        return COMPARABLE_FIELDS.filter(field => hasDataForCurrentSource(field.key, \"left\") || hasDataForCurrentSource(field.key, \"right\"));\n      } else {\n        const commonAttrs = Object.keys(processedTable1.value.timeSeriesData || {}).filter(attr => hasDataForAttribute(processedTable1.value, attr) && hasDataForAttribute(processedTable2.value, attr));\n        return commonAttrs.map(attr => ({\n          key: attr,\n          type: \"number\",\n          typeLabel: \"数值\"\n        }));\n      }\n    });\n    const hasData = computed(() => {\n      return displayFields.value.length > 0 || !dataInitialized.value[showInfoboxData.value ? \"infobox\" : \"table\"];\n    });\n\n    // 数据转换方法\n    const convertToSparklineData = data => {\n      if (!data) return [];\n\n      // 处理数组类型数据\n      if (Array.isArray(data)) {\n        return data.map(item => ({\n          year: item.year || new Date().getFullYear(),\n          value: parseFloat(item.value) || 0,\n          recordName: item.recordName || \"\"\n        })).filter(item => !isNaN(item.value));\n      }\n\n      // 处理对象类型数据\n      if (typeof data === \"object\" && data !== null) {\n        const value = parseFloat(data.value) || 0;\n        if (isNaN(value)) return [];\n        return [{\n          year: data.year || new Date().getFullYear(),\n          value: value,\n          recordName: data.recordName || \"\"\n        }];\n      }\n\n      // 处理简单值\n      const numericValue = parseFloat(data);\n      if (isNaN(numericValue)) return [];\n      return [{\n        year: new Date().getFullYear(),\n        value: numericValue,\n        recordName: \"\"\n      }];\n    };\n\n    // 数据获取方法\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 精确匹配\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) return section[fieldKey];\n      }\n\n      // 模糊匹配\n      const cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\n      for (const section of Object.values(infobox.data)) {\n        const matchedKey = Object.keys(section).find(k => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey);\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n    const getChartData = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        return convertToSparklineData(getField(infobox, fieldKey));\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return table.timeSeriesData[fieldKey] || [];\n      }\n    };\n    const getCompareData = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const compareInfobox = side === \"left\" ? rightInfobox.value : leftInfobox.value;\n        return convertToSparklineData(getField(compareInfobox, fieldKey));\n      } else {\n        const compareTable = side === \"left\" ? processedTable2.value : processedTable1.value;\n        return compareTable.timeSeriesData[fieldKey] || [];\n      }\n    };\n    const getFieldDescription = (fieldKey, side) => {\n      if (!showInfoboxData.value) return \"\";\n      const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n      const fieldData = getField(infobox, fieldKey);\n      if (!fieldData) return \"\";\n      if (Array.isArray(fieldData)) {\n        return fieldData.map(item => item.text || item.value).join(\", \");\n      }\n      if (typeof fieldData === \"object\") {\n        return fieldData.text || fieldData.value || \"\";\n      }\n      return String(fieldData);\n    };\n\n    // 数据检查方法\n    const hasDataForAttribute = (table, attr) => {\n      return table.timeSeriesData?.[attr]?.length > 0;\n    };\n    const hasDataForCurrentSource = (fieldKey, side) => {\n      if (showInfoboxData.value) {\n        const infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\n        return !!getField(infobox, fieldKey);\n      } else {\n        const table = side === \"left\" ? processedTable1.value : processedTable2.value;\n        return hasDataForAttribute(table, fieldKey);\n      }\n    };\n\n    // 数据源切换方法\n    const switchToInfoboxData = () => {\n      if (!dataInitialized.value.infobox) return;\n      showInfoboxData.value = true;\n    };\n    const switchToTableData = () => {\n      if (!dataInitialized.value.table) return;\n      showInfoboxData.value = false;\n    };\n\n    // 图表相关方法\n    const showFullChart = (attr, side) => {\n      currentAttribute.value = attr;\n      currentSide.value = side;\n      currentChartData.value = {\n        data: getChartData(attr, side),\n        compareData: getCompareData(attr, side)\n      };\n      showFullChartModal.value = true;\n    };\n    const hideFullChart = () => {\n      showFullChartModal.value = false;\n    };\n\n    // 数据处理方法\n    const processInfoboxData = (data, side) => {\n      if (!data) return {\n        title: `Infobox ${side}`,\n        data: {}\n      };\n      dataInitialized.value.infobox = true;\n      return {\n        title: data.title || `Infobox ${side}`,\n        data: data.sections || {}\n      };\n    };\n    const parseTableToStandardJSON = function (html) {\n      let defaultTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"未命名表格\";\n      const result = {\n        title: defaultTitle,\n        timeSeriesData: {}\n      };\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n        const table = doc.querySelector(\"table\");\n        if (!table) return result;\n\n        // 提取表头\n        const headerCells = table.querySelector(\"tr\")?.children || [];\n        const headers = Array.from(headerCells).map(cell => cell.textContent.replace(/[\\n†*]/g, \"\").trim().replace(/\\s+/g, \" \"));\n\n        // 检查年份列\n        const yearColumnIndex = headers.findIndex(h => h.toLowerCase().includes(\"year\"));\n        if (yearColumnIndex === -1) return result;\n\n        // 处理数据行\n        const dataRows = Array.from(table.querySelectorAll(\"tr:not(:first-child)\"));\n        dataRows.forEach(row => {\n          const cells = Array.from(row.children);\n          if (cells.length <= yearColumnIndex) return;\n          const year = parseInt(cells[yearColumnIndex].textContent.replace(/\\D/g, \"\"));\n          if (isNaN(year)) return;\n          headers.forEach((header, index) => {\n            if (index === yearColumnIndex || index >= cells.length) return;\n            const value = parseFloat(cells[index].textContent.replace(/[^\\d.-]/g, \"\"));\n            if (isNaN(value)) return;\n            if (!result.timeSeriesData[header]) {\n              result.timeSeriesData[header] = [];\n            }\n            result.timeSeriesData[header].push({\n              year: year,\n              value: value,\n              recordName: cells[0].textContent.trim()\n            });\n          });\n        });\n\n        // 排序\n        Object.values(result.timeSeriesData).forEach(data => {\n          data.sort((a, b) => a.year - b.year);\n        });\n\n        // 提取标题\n        result.title = extractTitleFromHTML(html) || defaultTitle;\n        dataInitialized.value.table = true;\n      } catch (error) {\n        console.error(\"表格解析错误:\", error);\n      }\n      return result;\n    };\n    const extractTitleFromHTML = html => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      return doc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null;\n    };\n\n    // 生命周期和监听\n    onMounted(() => {\n      updateChartSize();\n      window.addEventListener(\"resize\", updateChartSize);\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data, \"1\");\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data, \"2\");\n      });\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener(\"resize\", updateChartSize);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const updateChartSize = debounce(() => {\n      if (containerRef.value) {\n        chartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\n      }\n    }, 100);\n\n    // 监听表格数据变化\n    watch(() => props.div1RawData, html => {\n      processedTable1.value = parseTableToStandardJSON(html, \"表格1\");\n    }, {\n      immediate: true\n    });\n    watch(() => props.div3RawData, html => {\n      processedTable2.value = parseTableToStandardJSON(html, \"表格2\");\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      showInfoboxData,\n      dataInitialized,\n      containerRef,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftChartColor,\n      rightChartColor,\n      processedTable1,\n      processedTable2,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentAttribute,\n      currentSide,\n      currentChartData,\n      COMPARABLE_FIELDS,\n      leftTitle,\n      rightTitle,\n      displayFields,\n      hasData,\n      convertToSparklineData,\n      getField,\n      getChartData,\n      getCompareData,\n      getFieldDescription,\n      hasDataForAttribute,\n      hasDataForCurrentSource,\n      switchToInfoboxData,\n      switchToTableData,\n      showFullChart,\n      hideFullChart,\n      processInfoboxData,\n      parseTableToStandardJSON,\n      extractTitleFromHTML,\n      updateChartSize,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      SparklineChart,\n      FullChart,\n      get debounce() {\n        return debounce;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","SparklineChart","FullChart","debounce","bus","props","__props","showInfoboxData","dataInitialized","infobox","table","containerRef","chartMaxWidth","chartMaxHeight","leftChartColor","rightChartColor","processedTable1","title","timeSeriesData","processedTable2","leftInfobox","data","rightInfobox","showFullChartModal","currentAttribute","currentSide","currentChartData","compareData","COMPARABLE_FIELDS","key","type","typeLabel","leftTitle","value","rightTitle","displayFields","filter","field","hasDataForCurrentSource","commonAttrs","Object","keys","attr","hasDataForAttribute","map","hasData","length","convertToSparklineData","Array","isArray","item","year","Date","getFullYear","parseFloat","recordName","isNaN","numericValue","getField","fieldKey","section","values","undefined","cleanKey","toLowerCase","replace","matchedKey","find","k","getChartData","side","getCompareData","compareInfobox","compareTable","getFieldDescription","fieldData","text","join","String","switchToInfoboxData","switchToTableData","showFullChart","hideFullChart","processInfoboxData","sections","parseTableToStandardJSON","html","defaultTitle","arguments","result","parser","DOMParser","doc","parseFromString","querySelector","headerCells","children","headers","from","cell","textContent","trim","yearColumnIndex","findIndex","h","includes","dataRows","querySelectorAll","forEach","row","cells","parseInt","header","index","push","sort","a","b","extractTitleFromHTML","error","console","updateChartSize","window","addEventListener","on","removeEventListener","off","Math","min","clientWidth","div1RawData","immediate","div3RawData"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"table-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftTitle }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightTitle }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 数据行 -->\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"field in displayFields\" :key=\"field.key\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'left')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'left')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"getCompareData(field.key, 'left')\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"left\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field.key }}</div>\r\n\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-type\">\r\n\t\t\t\t\t\t\t{{ field.typeLabel }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t\t@click=\"showFullChart(field.key, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForCurrentSource(field.key, 'right')\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"getChartData(field.key, 'right')\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"getCompareData(field.key, 'right')\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div v-if=\"showInfoboxData\" class=\"field-description\">\r\n\t\t\t\t\t\t\t\t{{ getFieldDescription(field.key, \"right\") }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<!-- 空状态下的行 -->\r\n\t\t\t\t<div v-for=\"i in 3\" :key=\"i\" class=\"cell left-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'m' + i\"\r\n\t\t\t\t\tclass=\"cell middle-column empty-cell\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"i in 3\"\r\n\t\t\t\t\t:key=\"'r' + i\"\r\n\t\t\t\t\tclass=\"cell right-column empty-cell\"></div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 数据源切换按钮 -->\r\n\t\t<div class=\"data-source-switcher\">\r\n\t\t\t<button @click=\"switchToInfoboxData\" :class=\"{ active: showInfoboxData }\">\r\n\t\t\t\tInfobox数据\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"switchToTableData\" :class=\"{ active: !showInfoboxData }\">\r\n\t\t\t\t表格数据\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 完整图表弹窗 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"hideFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t<h3>{{ currentAttribute }}</h3>\r\n\t\t\t\t\t<button @click=\"hideFullChart\" class=\"close-button\">×</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<FullChart\r\n\t\t\t\t\t:data=\"currentChartData.data\"\r\n\t\t\t\t\t:compare-data=\"currentChartData.compareData\"\r\n\t\t\t\t\t:title=\"currentAttribute\"\r\n\t\t\t\t\t:side=\"currentSide\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport { debounce } from \"lodash-es\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t});\r\n\r\n\t// 数据源状态\r\n\tconst showInfoboxData = ref(true);\r\n\tconst dataInitialized = ref({\r\n\t\tinfobox: false,\r\n\t\ttable: false\r\n\t});\r\n\r\n\t// 容器引用\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 图表尺寸控制\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\r\n\t// 数据存储\r\n\tconst processedTable1 = ref({ title: \"表格1\", timeSeriesData: {} });\r\n\tconst processedTable2 = ref({ title: \"表格2\", timeSeriesData: {} });\r\n\tconst leftInfobox = ref({ title: \"Infobox 1\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"Infobox 2\", data: {} });\r\n\r\n\t// 弹窗状态\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentAttribute = ref(\"\");\r\n\tconst currentSide = ref(\"left\");\r\n\tconst currentChartData = ref({\r\n\t\tdata: [],\r\n\t\tcompareData: []\r\n\t});\r\n\r\n\t// 可比较字段定义\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{ key: \"GDP\", type: \"number\", typeLabel: \"数值(万亿美元)\" },\r\n\t\t{ key: \"Population\", type: \"number\", typeLabel: \"数值(亿人)\" },\r\n\t\t{ key: \"GDP growth\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{ key: \"Inflation (CPI)\", type: \"percentage\", typeLabel: \"百分比(%)\" },\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\"\r\n\t\t},\r\n\t\t{ key: \"Country group\", type: \"text\", typeLabel: \"文本\" }\r\n\t];\r\n\r\n\t// 计算属性\r\n\tconst leftTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? leftInfobox.value.title || \"Infobox 1\"\r\n\t\t\t: processedTable1.value.title || \"表格1\"\r\n\t);\r\n\r\n\tconst rightTitle = computed(() =>\r\n\t\tshowInfoboxData.value\r\n\t\t\t? rightInfobox.value.title || \"Infobox 2\"\r\n\t\t\t: processedTable2.value.title || \"表格2\"\r\n\t);\r\n\r\n\tconst displayFields = computed(() => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\treturn COMPARABLE_FIELDS.filter(\r\n\t\t\t\tfield =>\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"left\") ||\r\n\t\t\t\t\thasDataForCurrentSource(field.key, \"right\")\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst commonAttrs = Object.keys(\r\n\t\t\t\tprocessedTable1.value.timeSeriesData || {}\r\n\t\t\t).filter(\r\n\t\t\t\tattr =>\r\n\t\t\t\t\thasDataForAttribute(processedTable1.value, attr) &&\r\n\t\t\t\t\thasDataForAttribute(processedTable2.value, attr)\r\n\t\t\t);\r\n\t\t\treturn commonAttrs.map(attr => ({\r\n\t\t\t\tkey: attr,\r\n\t\t\t\ttype: \"number\",\r\n\t\t\t\ttypeLabel: \"数值\"\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tdisplayFields.value.length > 0 ||\r\n\t\t\t!dataInitialized.value[showInfoboxData.value ? \"infobox\" : \"table\"]\r\n\t\t);\r\n\t});\r\n\r\n\t// 数据转换方法\r\n\tconst convertToSparklineData = data => {\r\n\t\tif (!data) return [];\r\n\r\n\t\t// 处理数组类型数据\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\treturn data\r\n\t\t\t\t.map(item => ({\r\n\t\t\t\t\tyear: item.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: parseFloat(item.value) || 0,\r\n\t\t\t\t\trecordName: item.recordName || \"\"\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\t// 处理对象类型数据\r\n\t\tif (typeof data === \"object\" && data !== null) {\r\n\t\t\tconst value = parseFloat(data.value) || 0;\r\n\t\t\tif (isNaN(value)) return [];\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tyear: data.year || new Date().getFullYear(),\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\trecordName: data.recordName || \"\"\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// 处理简单值\r\n\t\tconst numericValue = parseFloat(data);\r\n\t\tif (isNaN(numericValue)) return [];\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tyear: new Date().getFullYear(),\r\n\t\t\t\tvalue: numericValue,\r\n\t\t\t\trecordName: \"\"\r\n\t\t\t}\r\n\t\t];\r\n\t};\r\n\r\n\t// 数据获取方法\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 精确匹配\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) return section[fieldKey];\r\n\t\t}\r\n\r\n\t\t// 模糊匹配\r\n\t\tconst cleanKey = fieldKey.toLowerCase().replace(/[^a-z0-9]/g, \"\");\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.toLowerCase().replace(/[^a-z0-9]/g, \"\") === cleanKey\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst getChartData = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\treturn convertToSparklineData(getField(infobox, fieldKey));\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn table.timeSeriesData[fieldKey] || [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCompareData = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst compareInfobox =\r\n\t\t\t\tside === \"left\" ? rightInfobox.value : leftInfobox.value;\r\n\t\t\treturn convertToSparklineData(getField(compareInfobox, fieldKey));\r\n\t\t} else {\r\n\t\t\tconst compareTable =\r\n\t\t\t\tside === \"left\" ? processedTable2.value : processedTable1.value;\r\n\t\t\treturn compareTable.timeSeriesData[fieldKey] || [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst getFieldDescription = (fieldKey, side) => {\r\n\t\tif (!showInfoboxData.value) return \"\";\r\n\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\tconst fieldData = getField(infobox, fieldKey);\r\n\t\tif (!fieldData) return \"\";\r\n\r\n\t\tif (Array.isArray(fieldData)) {\r\n\t\t\treturn fieldData.map(item => item.text || item.value).join(\", \");\r\n\t\t}\r\n\t\tif (typeof fieldData === \"object\") {\r\n\t\t\treturn fieldData.text || fieldData.value || \"\";\r\n\t\t}\r\n\t\treturn String(fieldData);\r\n\t};\r\n\r\n\t// 数据检查方法\r\n\tconst hasDataForAttribute = (table, attr) => {\r\n\t\treturn table.timeSeriesData?.[attr]?.length > 0;\r\n\t};\r\n\r\n\tconst hasDataForCurrentSource = (fieldKey, side) => {\r\n\t\tif (showInfoboxData.value) {\r\n\t\t\tconst infobox = side === \"left\" ? leftInfobox.value : rightInfobox.value;\r\n\t\t\treturn !!getField(infobox, fieldKey);\r\n\t\t} else {\r\n\t\t\tconst table =\r\n\t\t\t\tside === \"left\" ? processedTable1.value : processedTable2.value;\r\n\t\t\treturn hasDataForAttribute(table, fieldKey);\r\n\t\t}\r\n\t};\r\n\r\n\t// 数据源切换方法\r\n\tconst switchToInfoboxData = () => {\r\n\t\tif (!dataInitialized.value.infobox) return;\r\n\t\tshowInfoboxData.value = true;\r\n\t};\r\n\r\n\tconst switchToTableData = () => {\r\n\t\tif (!dataInitialized.value.table) return;\r\n\t\tshowInfoboxData.value = false;\r\n\t};\r\n\r\n\t// 图表相关方法\r\n\tconst showFullChart = (attr, side) => {\r\n\t\tcurrentAttribute.value = attr;\r\n\t\tcurrentSide.value = side;\r\n\r\n\t\tcurrentChartData.value = {\r\n\t\t\tdata: getChartData(attr, side),\r\n\t\t\tcompareData: getCompareData(attr, side)\r\n\t\t};\r\n\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst hideFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\t// 数据处理方法\r\n\tconst processInfoboxData = (data, side) => {\r\n\t\tif (!data) return { title: `Infobox ${side}`, data: {} };\r\n\r\n\t\tdataInitialized.value.infobox = true;\r\n\t\treturn {\r\n\t\t\ttitle: data.title || `Infobox ${side}`,\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tconst parseTableToStandardJSON = (html, defaultTitle = \"未命名表格\") => {\r\n\t\tconst result = {\r\n\t\t\ttitle: defaultTitle,\r\n\t\t\ttimeSeriesData: {}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\t\tconst table = doc.querySelector(\"table\");\r\n\t\t\tif (!table) return result;\r\n\r\n\t\t\t// 提取表头\r\n\t\t\tconst headerCells = table.querySelector(\"tr\")?.children || [];\r\n\t\t\tconst headers = Array.from(headerCells).map(cell =>\r\n\t\t\t\tcell.textContent\r\n\t\t\t\t\t.replace(/[\\n†*]/g, \"\")\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.replace(/\\s+/g, \" \")\r\n\t\t\t);\r\n\r\n\t\t\t// 检查年份列\r\n\t\t\tconst yearColumnIndex = headers.findIndex(h =>\r\n\t\t\t\th.toLowerCase().includes(\"year\")\r\n\t\t\t);\r\n\t\t\tif (yearColumnIndex === -1) return result;\r\n\r\n\t\t\t// 处理数据行\r\n\t\t\tconst dataRows = Array.from(\r\n\t\t\t\ttable.querySelectorAll(\"tr:not(:first-child)\")\r\n\t\t\t);\r\n\r\n\t\t\tdataRows.forEach(row => {\r\n\t\t\t\tconst cells = Array.from(row.children);\r\n\t\t\t\tif (cells.length <= yearColumnIndex) return;\r\n\r\n\t\t\t\tconst year = parseInt(\r\n\t\t\t\t\tcells[yearColumnIndex].textContent.replace(/\\D/g, \"\")\r\n\t\t\t\t);\r\n\t\t\t\tif (isNaN(year)) return;\r\n\r\n\t\t\t\theaders.forEach((header, index) => {\r\n\t\t\t\t\tif (index === yearColumnIndex || index >= cells.length) return;\r\n\r\n\t\t\t\t\tconst value = parseFloat(\r\n\t\t\t\t\t\tcells[index].textContent.replace(/[^\\d.-]/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (isNaN(value)) return;\r\n\r\n\t\t\t\t\tif (!result.timeSeriesData[header]) {\r\n\t\t\t\t\t\tresult.timeSeriesData[header] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult.timeSeriesData[header].push({\r\n\t\t\t\t\t\tyear: year,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\trecordName: cells[0].textContent.trim()\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// 排序\r\n\t\t\tObject.values(result.timeSeriesData).forEach(data => {\r\n\t\t\t\tdata.sort((a, b) => a.year - b.year);\r\n\t\t\t});\r\n\r\n\t\t\t// 提取标题\r\n\t\t\tresult.title = extractTitleFromHTML(html) || defaultTitle;\r\n\t\t\tdataInitialized.value.table = true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"表格解析错误:\", error);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst extractTitleFromHTML = html => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\t\treturn (\r\n\t\t\tdoc.querySelector(\"h1, h2, h3, h4, caption\")?.textContent.trim() || null\r\n\t\t);\r\n\t};\r\n\r\n\t// 生命周期和监听\r\n\tonMounted(() => {\r\n\t\tupdateChartSize();\r\n\t\twindow.addEventListener(\"resize\", updateChartSize);\r\n\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data, \"1\");\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data, \"2\");\r\n\t\t});\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\twindow.removeEventListener(\"resize\", updateChartSize);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst updateChartSize = debounce(() => {\r\n\t\tif (containerRef.value) {\r\n\t\t\tchartMaxWidth.value = Math.min(250, containerRef.value.clientWidth * 0.3);\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 监听表格数据变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable1.value = parseTableToStandardJSON(html, \"表格1\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\thtml => {\r\n\t\t\tprocessedTable2.value = parseTableToStandardJSON(html, \"表格2\");\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.table-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 98%;\r\n\t\tmax-width: 1200px;\r\n\t\tmin-width: 320px;\r\n\t\tmargin: 0 auto;\r\n\t\tbackground: white;\r\n\t\tflex: 1;\r\n\t\toverflow-x: auto;\r\n\t\toverflow-y: auto;\r\n\t\tborder-collapse: separate;\r\n\t\tborder-spacing: 0;\r\n\t\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 12px 10px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px 5px;\r\n\t\tbackground: white;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmin-height: 120px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t\tword-break: break-word;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-wrapper {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tfont-weight: 600;\r\n\t\tmin-width: 100px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: 600;\r\n\t\tmargin-bottom: 4px;\r\n\t\tcolor: #2c3e50;\r\n\t\tfont-size: clamp(0.9em, 2vw, 1.1em);\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.field-description {\r\n\t\tmargin-top: 5px;\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #95a5a6;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.9em;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.empty-cell {\r\n\t\tmin-height: 120px;\r\n\t}\r\n\r\n\t.data-source-switcher {\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\tz-index: 10;\r\n\t\tdisplay: flex;\r\n\t\tgap: 5px;\r\n\t}\r\n\r\n\t.data-source-switcher button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 12px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.data-source-switcher button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.data-source-switcher button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(255, 255, 255, 0.58);\r\n\t\tz-index: 1000;\r\n\t\tbackdrop-filter: blur(5px);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 95%;\r\n\t\tmax-width: 900px;\r\n\t\tmax-height: 85vh;\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.modal-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tpadding-bottom: 10px;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.modal-header h3 {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.close-button {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont-size: 24px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #64748b;\r\n\t\ttransition: color 0.2s;\r\n\t}\r\n\r\n\t.close-button:hover {\r\n\t\tcolor: #334155;\r\n\t}\r\n\r\n\t@media (max-width: 992px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: minmax(150px, 1fr) minmax(80px, 0.5fr) minmax(\r\n\t\t\t\t\t150px,\r\n\t\t\t\t\t1fr\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tpadding: 10px 8px;\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.table-grid {\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\twidth: 100%;\r\n\t\t\tmin-width: auto;\r\n\t\t}\r\n\r\n\t\t.header {\r\n\t\t\tmin-height: 40px;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t}\r\n\r\n\t\t.header.middle-column {\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\tmin-height: auto;\r\n\t\t\tpadding: 8px;\r\n\t\t\tborder-right: 1px solid #f0f0f0 !important;\r\n\t\t}\r\n\r\n\t\t.left-column,\r\n\t\t.middle-column,\r\n\t\t.right-column {\r\n\t\t\tborder-left: 1px solid #f0f0f0;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 70px;\r\n\t\t}\r\n\r\n\t\t.data-source-switcher {\r\n\t\t\tposition: static;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 480px) {\r\n\t\t.compare-container {\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.table-grid {\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\r\n\t\t.attribute-name {\r\n\t\t\tfont-size: 0.95em;\r\n\t\t}\r\n\r\n\t\t.chart-wrapper {\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\r\n\t\t.field-description {\r\n\t\t\tfont-size: 11px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}