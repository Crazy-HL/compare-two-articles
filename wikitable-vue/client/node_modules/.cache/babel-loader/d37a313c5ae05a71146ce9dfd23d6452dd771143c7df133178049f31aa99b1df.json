{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-26ace2de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"view-switcher\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"visualization-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"loading-spinner\"\n};\nconst _hoisted_7 = {\n  class: \"chart-container1\",\n  ref: \"chartContainer1\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"chart-container2\",\n  ref: \"chartContainer2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 遮罩层 \"), $props.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"overlay\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('closePopup'))\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 弹出框 \"), $props.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"text-popup\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('closePopup'))\n  }, [_createCommentVNode(\" 切换视图按钮 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => _ctx.$emit('switchView', 'text'), [\"prevent\", \"stop\"])),\n    class: _normalizeClass({\n      active: $props.currentView === 'text'\n    }),\n    title: \"文本视图\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: ['fas', 'align-left']\n  })], 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => _ctx.$emit('switchView', 'visual'), [\"prevent\", \"stop\"])),\n    class: _normalizeClass({\n      active: $props.currentView === 'visual'\n    }),\n    title: \"可视化视图\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: ['fas', 'chart-bar']\n  })], 2 /* CLASS */)]), _createCommentVNode(\" 文本视图 \"), $props.currentView === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$setup.isTable($props.selectedText) ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"table-container\",\n    innerHTML: $props.selectedText\n  }, null, 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, _toDisplayString($props.selectedText), 1 /* TEXT */)]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 可视化视图 \"), $props.currentView === 'visual' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createCommentVNode(\" 加载动画 \"), $props.visualizationLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6)) : $props.divId === 'div1' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 图表容器 \"), _createElementVNode(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, null, 512 /* NEED_PATCH */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_Fragment","_createCommentVNode","$props","showPopup","onClick","_cache","$event","_ctx","$emit","_createElementVNode","_hoisted_1","_withModifiers","_normalizeClass","active","currentView","title","_createVNode","_component_font_awesome_icon","icon","_hoisted_2","$setup","isTable","selectedText","innerHTML","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","visualizationLoading","_hoisted_6","divId","_hoisted_7","_hoisted_8"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\base\\Popup.vue"],"sourcesContent":["<template>\r\n\t<!-- 遮罩层 -->\r\n\t<div v-if=\"showPopup\" class=\"overlay\" @click=\"$emit('closePopup')\"></div>\r\n\r\n\t<!-- 弹出框 -->\r\n\t<div v-if=\"showPopup\" class=\"text-popup\" @click=\"$emit('closePopup')\">\r\n\t\t<!-- 切换视图按钮 -->\r\n\t\t<div class=\"view-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"$emit('switchView', 'text')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'text' }\"\r\n\t\t\t\ttitle=\"文本视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'align-left']\" />\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"$emit('switchView', 'visual')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'visual' }\"\r\n\t\t\t\ttitle=\"可视化视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'chart-bar']\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文本视图 -->\r\n\t\t<div v-if=\"currentView === 'text'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"isTable(selectedText)\"\r\n\t\t\t\tclass=\"table-container\"\r\n\t\t\t\tv-html=\"selectedText\"></div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<p>{{ selectedText }}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化视图 -->\r\n\t\t<div v-if=\"currentView === 'visual'\" class=\"visualization-container\">\r\n\t\t\t<!-- 加载动画 -->\r\n\t\t\t<div v-if=\"visualizationLoading\" class=\"loading-spinner\"></div>\r\n\t\t\t<!-- 图表容器 -->\r\n\t\t\t<div\r\n\t\t\t\tv-else-if=\"divId === 'div1'\"\r\n\t\t\t\tclass=\"chart-container1\"\r\n\t\t\t\tref=\"chartContainer1\"></div>\r\n\t\t\t<div v-else class=\"chart-container2\" ref=\"chartContainer2\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst props = defineProps({\r\n\t\tshowPopup: Boolean,\r\n\t\tselectedText: String,\r\n\t\tcurrentView: String,\r\n\t\tdivId: String,\r\n\t\tvisualizationLoading: Boolean\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"closePopup\", \"switchView\"]);\r\n\r\n\tconst chartContainer1 = ref(null);\r\n\tconst chartContainer2 = ref(null);\r\n\r\n\t// 监听 currentView 的变化\r\n\twatch(\r\n\t\t() => props.currentView,\r\n\t\tnewView => {\r\n\t\t\tif (newView === \"visual\") {\r\n\t\t\t\trenderVisualization();\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\t// 渲染可视化图表\r\n\tconst renderVisualization = () => {\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? chartContainer1.value : chartContainer2.value;\r\n\t\tif (!container) {\r\n\t\t\tconsole.error(\"图表容器未找到\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 清空容器\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\t// 假设 selectedText 是需要可视化的数据\r\n\t\tconst data = props.selectedText;\r\n\r\n\t\t// 模拟异步加载\r\n\t\tsetTimeout(() => {\r\n\t\t\t// 调用图表渲染函数\r\n\t\t\trenderChart(container, data);\r\n\t\t\t// 图表渲染完成后，隐藏加载动画\r\n\t\t\temit(\"update:visualizationLoading\", false);\r\n\t\t}, 1000); // 模拟 1 秒的加载时间\r\n\t};\r\n\r\n\t// 渲染图表\r\n\tconst renderChart = (container, data) => {\r\n\t\tif (!data) {\r\n\t\t\trenderNonVisualChart(container, { message: \"当前数据无法可视化\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 根据数据类型渲染图表\r\n\t\t// 这里假设 data 是一个对象，包含图表类型和数据\r\n\t\tconst chartType = data.chartType || \"Bar Chart\";\r\n\t\tconst chartData = data.data || [];\r\n\r\n\t\tswitch (chartType) {\r\n\t\t\tcase \"Line Chart\":\r\n\t\t\t\trenderLineChart(container, chartData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bar Chart\":\r\n\t\t\t\trenderBarChart(container, chartData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Pie Chart\":\r\n\t\t\t\trenderPieChart(container, chartData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Radar Chart\":\r\n\t\t\t\trenderRadarChart(container, chartData);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stacked Bar Chart\":\r\n\t\t\t\trenderStackedBarChart(container, chartData);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\trenderNonVisualChart(container, { message: \"未知的图表类型\" });\r\n\t\t}\r\n\t};\r\n\r\n\tconst isTable = content => {\r\n\t\treturn /<table.*?>.*?<\\/table>/s.test(content);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 遮罩层 */\r\n\t.overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.1);\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tz-index: 90;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 弹出框 */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 90%;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tbackground: rgba(255, 255, 255, 0.98);\r\n\t\tpadding: 25px;\r\n\t\tbox-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 12px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 0.8vw;\r\n\t\tfont-weight: 500;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(20px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t\tborder: 1px solid rgba(255, 255, 255, 0.2);\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t/* 视图切换按钮 */\r\n\t.view-switcher {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.view-switcher button {\r\n\t\tpadding: 25px;\r\n\t\tmargin: 0 5px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s ease, transform 0.2s ease;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.view-switcher button:hover {\r\n\t\tbackground-color: #ddd;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t.view-switcher button.active {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t/* 可视化容器 */\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 300px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t/* 表格样式 */\r\n\t.table-container {\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t}\r\n\r\n\t.text-popup p {\r\n\t\tmargin: 0;\r\n\t\tpadding: 10px 15px;\r\n\t\tfont-size: 1.2rem;\r\n\t\tcolor: #333;\r\n\t\ttext-align: justify;\r\n\t\tline-height: 1.8;\r\n\t\tword-break: break-word;\r\n\t\twhite-space: pre-wrap;\r\n\t\tmax-width: 90%;\r\n\t\tborder-left: 4px solid #3498db;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tbox-shadow: inset 2px 2px 8px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\t/* 使用 ::v-deep 穿透 scoped 样式 */\r\n\t::v-deep .custom-table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tmargin: 5px auto;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 1px solid #0077b6; /* 外边框颜色 */\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t\tfont-size: 16px; /* 设置整体字体大小 */\r\n\t\tcolor: #333333; /* 设置默认文字颜色 */\r\n\t}\r\n\r\n\t/* 表头样式 */\r\n\t::v-deep .custom-table th {\r\n\t\tbackground-color: #0077b6; /* 深蓝色表头 */\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #ffffff; /* 文字白色 */\r\n\t\ttext-align: left;\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6; /* 表头单元格边框 */\r\n\t\tfont-size: 18px; /* 表头字体稍大，增强层次感 */\r\n\t}\r\n\r\n\t/* 单元格样式 */\r\n\t::v-deep .custom-table th,\r\n\t::v-deep .custom-table td {\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6; /* 统一的单元格边框 */\r\n\t\tfont-size: 16px; /* 调整字体大小 */\r\n\t}\r\n\r\n\t/* 悬停行高亮 */\r\n\t::v-deep .custom-table tr:hover {\r\n\t\tbackground-color: #cbe8f6; /* 浅蓝色 */\r\n\t\ttransition: background-color 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 加载动画 */\r\n\t.loading-spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;;EAOOA,KAAK,EAAC;AAAe;;EAP5BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAmCuCD,KAAK,EAAC;;;EAnC7CC,GAAA;EAqCoCD,KAAK,EAAC;;;EAItCA,KAAK,EAAC,kBAAkB;EACxBE,GAAG,EAAC;;;EA1CRD,GAAA;EA2CeD,KAAK,EAAC,kBAAkB;EAACE,GAAG,EAAC;;;;uBA3C5CC,mBAAA,CAAAC,SAAA,SACCC,mBAAA,SAAY,EACDC,MAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAAyE;IAF1EF,GAAA;IAEuBD,KAAK,EAAC,SAAS;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;QAFpDP,mBAAA,gBAICA,mBAAA,SAAY,EACDC,MAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAwCM;IA7CPF,GAAA;IAKuBD,KAAK,EAAC,YAAY;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MACrDP,mBAAA,YAAe,EACfQ,mBAAA,CAcM,OAdNC,UAcM,GAbLD,mBAAA,CAKS;IAJPL,OAAK,EAAAC,MAAA,QAAAA,MAAA,MATVM,cAAA,CAAAL,MAAA,IASyBC,IAAA,CAAAC,KAAK;IACzBZ,KAAK,EAVVgB,eAAA;MAAAC,MAAA,EAUsBX,MAAA,CAAAY,WAAW;IAAA;IAC7BC,KAAK,EAAC;MACNC,YAAA,CAAmDC,4BAAA;IAA/BC,IAAI,EAAE;EAAqB,G,kBAGhDT,mBAAA,CAKS;IAJPL,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAhBVM,cAAA,CAAAL,MAAA,IAgByBC,IAAA,CAAAC,KAAK;IACzBZ,KAAK,EAjBVgB,eAAA;MAAAC,MAAA,EAiBsBX,MAAA,CAAAY,WAAW;IAAA;IAC7BC,KAAK,EAAC;MACNC,YAAA,CAAkDC,4BAAA;IAA9BC,IAAI,EAAE;EAAoB,G,oBAIhDjB,mBAAA,UAAa,EACFC,MAAA,CAAAY,WAAW,e,cAAtBf,mBAAA,CAQM,OAhCRoB,UAAA,GA0BUC,MAAA,CAAAC,OAAO,CAACnB,MAAA,CAAAoB,YAAY,K,cAD3BvB,mBAAA,CAG6B;IA5BhCF,GAAA;IA2BID,KAAK,EAAC,iBAAiB;IACvB2B,SAAqB,EAAbrB,MAAA,CAAAoB;0BA5BZE,UAAA,M,cA6BGzB,mBAAA,CAEM,OA/BT0B,UAAA,GA8BIhB,mBAAA,CAAyB,WAAAiB,gBAAA,CAAnBxB,MAAA,CAAAoB,YAAY,iB,QA9BtBrB,mBAAA,gBAkCEA,mBAAA,WAAc,EACHC,MAAA,CAAAY,WAAW,iB,cAAtBf,mBAAA,CASM,OATN4B,UASM,GARL1B,mBAAA,UAAa,EACFC,MAAA,CAAA0B,oBAAoB,I,cAA/B7B,mBAAA,CAA+D,OAA/D8B,UAA+D,KAGnD3B,MAAA,CAAA4B,KAAK,e,cADjB/B,mBAAA,CAG6BC,SAAA;IA1ChCH,GAAA;EAAA,IAsCGI,mBAAA,UAAa,EACbQ,mBAAA,CAG6B,OAH7BsB,UAG6B,8B,mEAC7BhC,mBAAA,CAAiE,OAAjEiC,UAAiE,+B,KA3CpE/B,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}