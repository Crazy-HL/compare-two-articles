{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\n\n// 自动聚焦指令\n\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: Object,\n    div3RawData: Object\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const vFocus = {\n      mounted: el => el.focus()\n    };\n    const props = __props;\n\n    // 组件状态\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const editingFieldKey = ref(null);\n    const editingMappingValue = ref(\"\");\n\n    // 可比较字段配置\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\",\n      contentMapping: \"国内生产总值\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\",\n      contentMapping: \"人口总数|总人口\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\",\n      contentMapping: \"GDP增长\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\",\n      contentMapping: \"通货膨胀率\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"劳动力分布比例\",\n      contentMapping: \"劳动力分布\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\",\n      contentMapping: \"GDP排名\"\n    }];\n\n    // 是否正在编辑\n    const isEditing = field => editingFieldKey.value === field.key;\n\n    // 开始编辑映射\n    const startEditingMapping = field => {\n      editingFieldKey.value = field.key;\n      editingMappingValue.value = field.contentMapping || \"\";\n    };\n\n    // 保存映射\n    const saveMapping = field => {\n      if (editingFieldKey.value === field.key) {\n        field.contentMapping = editingMappingValue.value.trim();\n        editingFieldKey.value = null;\n        editingMappingValue.value = \"\";\n      }\n    };\n\n    // 取消编辑\n    const cancelEditing = () => {\n      editingFieldKey.value = null;\n      editingMappingValue.value = \"\";\n    };\n\n    // 触发高亮内容\n    const highlightContent = field => {\n      const contentToHighlight = field.contentMapping || field.key;\n      const isExactMatch = !!field.contentMapping;\n\n      // 触发左右两侧的高亮\n      bus.emit(\"highlight-content\", {\n        fieldKey: contentToHighlight,\n        infoboxTitle: leftInfobox.value.title,\n        exactMatch: isExactMatch\n      });\n      bus.emit(\"highlight-content\", {\n        fieldKey: contentToHighlight,\n        infoboxTitle: rightInfobox.value.title,\n        exactMatch: isExactMatch\n      });\n    };\n\n    // 显示全屏图表\n    const showFullChart = (infobox, field) => {\n      currentChart.value = {\n        title: infobox.title,\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n      highlightContent(field);\n    };\n\n    // 关闭全屏图表\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n      bus.emit(\"clear-highlights\");\n    };\n\n    // Infobox悬停效果\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n\n    // 获取字段值\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return Array.isArray(section[fieldKey]) ? section[fieldKey] : [section[fieldKey]];\n        }\n      }\n      return [];\n    };\n\n    // 计算可比较字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n\n    // 处理Infobox数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n      return {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {}\n      };\n    };\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      vFocus,\n      props,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      editingFieldKey,\n      editingMappingValue,\n      COMPARABLE_FIELDS,\n      isEditing,\n      startEditingMapping,\n      saveMapping,\n      cancelEditing,\n      highlightContent,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      getField,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","SimpleChart","FullChart","bus","vFocus","mounted","el","focus","props","__props","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","editingFieldKey","editingMappingValue","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","contentMapping","isEditing","value","startEditingMapping","saveMapping","trim","cancelEditing","highlightContent","contentToHighlight","isExactMatch","emit","fieldKey","infoboxTitle","exactMatch","showFullChart","infobox","getField","closeFullChart","hoverInfobox","side","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","section","Object","values","undefined","Array","isArray","comparableFields","filter","leftVal","rightVal","length","processInfoboxData","sections","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\"\r\n\t\t\t\t\t@click=\"highlightContent(field)\"\r\n\t\t\t\t\t@dblclick=\"startEditingMapping(field)\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-if=\"field.contentMapping && !isEditing(field)\"\r\n\t\t\t\t\t\tclass=\"mapping-hint\">\r\n\t\t\t\t\t\t映射: {{ field.contentMapping }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tv-if=\"isEditing(field)\"\r\n\t\t\t\t\t\tv-model=\"editingMappingValue\"\r\n\t\t\t\t\t\tv-focus\r\n\t\t\t\t\t\t@blur=\"saveMapping(field)\"\r\n\t\t\t\t\t\t@keyup.enter=\"saveMapping(field)\"\r\n\t\t\t\t\t\t@keyup.escape=\"cancelEditing\"\r\n\t\t\t\t\t\tclass=\"mapping-input\"\r\n\t\t\t\t\t\tplaceholder=\"输入精确匹配内容\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\">\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// 自动聚焦指令\r\n\tconst vFocus = {\r\n\t\tmounted: el => el.focus()\r\n\t};\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: Object,\r\n\t\tdiv3RawData: Object\r\n\t});\r\n\r\n\t// 组件状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({ title: \"\", field: {}, data: [] });\r\n\tconst editingFieldKey = ref(null);\r\n\tconst editingMappingValue = ref(\"\");\r\n\r\n\t// 可比较字段配置\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\",\r\n\t\t\tcontentMapping: \"国内生产总值\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\",\r\n\t\t\tcontentMapping: \"人口总数|总人口\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\",\r\n\t\t\tcontentMapping: \"GDP增长\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\",\r\n\t\t\tcontentMapping: \"通货膨胀率\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"劳动力分布比例\",\r\n\t\t\tcontentMapping: \"劳动力分布\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\",\r\n\t\t\tcontentMapping: \"GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 是否正在编辑\r\n\tconst isEditing = field => editingFieldKey.value === field.key;\r\n\r\n\t// 开始编辑映射\r\n\tconst startEditingMapping = field => {\r\n\t\teditingFieldKey.value = field.key;\r\n\t\teditingMappingValue.value = field.contentMapping || \"\";\r\n\t};\r\n\r\n\t// 保存映射\r\n\tconst saveMapping = field => {\r\n\t\tif (editingFieldKey.value === field.key) {\r\n\t\t\tfield.contentMapping = editingMappingValue.value.trim();\r\n\t\t\teditingFieldKey.value = null;\r\n\t\t\teditingMappingValue.value = \"\";\r\n\t\t}\r\n\t};\r\n\r\n\t// 取消编辑\r\n\tconst cancelEditing = () => {\r\n\t\teditingFieldKey.value = null;\r\n\t\teditingMappingValue.value = \"\";\r\n\t};\r\n\r\n\t// 触发高亮内容\r\n\tconst highlightContent = field => {\r\n\t\tconst contentToHighlight = field.contentMapping || field.key;\r\n\t\tconst isExactMatch = !!field.contentMapping;\r\n\r\n\t\t// 触发左右两侧的高亮\r\n\t\tbus.emit(\"highlight-content\", {\r\n\t\t\tfieldKey: contentToHighlight,\r\n\t\t\tinfoboxTitle: leftInfobox.value.title,\r\n\t\t\texactMatch: isExactMatch\r\n\t\t});\r\n\r\n\t\tbus.emit(\"highlight-content\", {\r\n\t\t\tfieldKey: contentToHighlight,\r\n\t\t\tinfoboxTitle: rightInfobox.value.title,\r\n\t\t\texactMatch: isExactMatch\r\n\t\t});\r\n\t};\r\n\r\n\t// 显示全屏图表\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title,\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t\thighlightContent(field);\r\n\t};\r\n\r\n\t// 关闭全屏图表\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t\tbus.emit(\"clear-highlights\");\r\n\t};\r\n\r\n\t// Infobox悬停效果\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\t// 获取字段值\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(section[fieldKey])\r\n\t\t\t\t\t? section[fieldKey]\r\n\t\t\t\t\t: [section[fieldKey]];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [];\r\n\t};\r\n\r\n\t// 计算可比较字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\t// 处理Infobox数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\t\treturn {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {}\r\n\t\t};\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(120px, 1fr) minmax(80px, 100px) minmax(\r\n\t\t\t\t120px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e3f2fd;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.mapping-input {\r\n\t\twidth: 100%;\r\n\t\tpadding: 2px;\r\n\t\tmargin-top: 4px;\r\n\t\tfont-size: 11px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\r\n\t.mapping-hint {\r\n\t\tfont-size: 10px;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 2px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.cell.middle-column {\r\n\t\tposition: relative;\r\n\t\tmin-height: 110px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}