{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-201e19b8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartContainer\",\n  class: \"full-chart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"无数据可显示\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","key","_createElementBlock","_hoisted_1","$setup","hasData","_hoisted_2","_createCommentVNode"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FullChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"full-chart\">\r\n\t\t<div v-if=\"!hasData\" class=\"no-data-message\">无数据可显示</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdata: []\r\n\t\t\t}),\r\n\t\t\tvalidator: value => {\r\n\t\t\t\t// 确保数据结构正确\r\n\t\t\t\treturn (\r\n\t\t\t\t\tvalue &&\r\n\t\t\t\t\t[\"line\", \"bar\"].includes(value.type) &&\r\n\t\t\t\t\tArray.isArray(value.data)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcompareData: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => Array.isArray(value)\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"\"\r\n\t\t},\r\n\t\tside: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"left\",\r\n\t\t\tvalidator: value => [\"left\", \"right\"].includes(value)\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst color = computed(() => (props.side === \"left\" ? \"#4a90e2\" : \"#ef4444\"));\r\n\tconst highlightColor = \"#FFD700\"; // 金色高亮\r\n\tconst hasData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.data?.data?.length > 0 &&\r\n\t\t\tprops.data.data.every(\r\n\t\t\t\titem => item && !isNaN(item.year) && !isNaN(item.value)\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst drawChart = () => {\r\n\t\tif (!chartContainer.value || !hasData.value) {\r\n\t\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\t\tconst margin = { top: 30, right: 30, bottom: 50, left: 50 };\r\n\t\t\tconst width = 800 - margin.left - margin.right;\r\n\t\t\tconst height = 500 - margin.top - margin.bottom;\r\n\r\n\t\t\tconst svg = d3\r\n\t\t\t\t.select(chartContainer.value)\r\n\t\t\t\t.append(\"svg\")\r\n\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t// 确保数据有效性\r\n\t\t\tconst validData = props.data.data\r\n\t\t\t\t.filter(item => item && !isNaN(item.year) && !isNaN(item.value))\r\n\t\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\t\tif (validData.length === 0) return;\r\n\r\n\t\t\t// 创建比例尺\r\n\t\t\tconst x =\r\n\t\t\t\tprops.data.type === \"bar\"\r\n\t\t\t\t\t? d3\r\n\t\t\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t\t\t.domain(validData.map(d => d.year.toString()))\r\n\t\t\t\t\t\t\t.range([0, width])\r\n\t\t\t\t\t\t\t.padding(0.2)\r\n\t\t\t\t\t: d3\r\n\t\t\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t\t\t.domain(d3.extent(validData, d => d.year))\r\n\t\t\t\t\t\t\t.range([0, width]);\r\n\r\n\t\t\tconst y = d3\r\n\t\t\t\t.scaleLinear()\r\n\t\t\t\t.domain([0, d3.max(validData, d => d.value) * 1.1])\r\n\t\t\t\t.range([height, 0]);\r\n\r\n\t\t\t// 绘制网格线\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"grid\")\r\n\t\t\t\t.call(d3.axisLeft(y).tickSize(-width).tickFormat(\"\"))\r\n\t\t\t\t.selectAll(\"line\")\r\n\t\t\t\t.attr(\"stroke\", \"#e2e8f0\")\r\n\t\t\t\t.attr(\"stroke-dasharray\", \"2,2\");\r\n\r\n\t\t\t// 绘制坐标轴\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"transform\", `translate(0,${height})`)\r\n\t\t\t\t.call(\r\n\t\t\t\t\tprops.data.type === \"bar\"\r\n\t\t\t\t\t\t? d3.axisBottom(x)\r\n\t\t\t\t\t\t: d3.axisBottom(x).tickFormat(d3.format(\"d\"))\r\n\t\t\t\t);\r\n\t\t\tsvg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n\t\t\t// 添加标签\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\r\n\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t`translate(${width / 2},${height + margin.top + 10})`\r\n\t\t\t\t)\r\n\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t.text(\"年份\");\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t.attr(\"y\", 0 - margin.left)\r\n\t\t\t\t.attr(\"x\", 0 - height / 2)\r\n\t\t\t\t.attr(\"dy\", \"1em\")\r\n\t\t\t\t.style(\"text-anchor\", \"middle\")\r\n\t\t\t\t.text(\"数值\");\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"x\", width / 2)\r\n\t\t\t\t.attr(\"y\", 0 - margin.top / 2)\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.style(\"font-size\", \"16px\")\r\n\t\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t\t.text(props.title);\r\n\r\n\t\t\tif (props.data.type === \"bar\") {\r\n\t\t\t\tdrawBarChart(svg, validData, x, y, width, height);\r\n\t\t\t} else {\r\n\t\t\t\tdrawLineChart(svg, validData, x, y);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"图表渲染错误:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst drawBarChart = (svg, data, x, y, width, height) => {\r\n\t\t// 绘制柱子\r\n\t\tsvg\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\"x\", d => x(d.year.toString()))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"height\", d => height - y(d.value))\r\n\t\t\t.attr(\"fill\", color.value)\r\n\t\t\t.attr(\"rx\", 2)\r\n\t\t\t.attr(\"ry\", 2);\r\n\r\n\t\t// 添加数值标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\".bar-label\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"bar-label\")\r\n\t\t\t.attr(\"x\", d => x(d.year.toString()) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => formatValue(d.value))\r\n\t\t\t.attr(\"font-size\", \"12px\")\r\n\t\t\t.attr(\"fill\", \"#64748b\")\r\n\t\t\t.style(\"visibility\", d =>\r\n\t\t\t\theight - y(d.value) > 20 ? \"visible\" : \"hidden\"\r\n\t\t\t);\r\n\t};\r\n\r\n\tconst drawLineChart = (svg, data, x, y) => {\r\n\t\t// 创建折线生成器\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\t// 绘制折线\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(data)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"stroke\", color.value)\r\n\t\t\t.attr(\"stroke-width\", 3)\r\n\t\t\t.attr(\"d\", line);\r\n\r\n\t\t// 绘制数据点\r\n\t\tsvg\r\n\t\t\t.selectAll(\".dot\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"class\", \"dot\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 6)\r\n\t\t\t.attr(\"fill\", color.value)\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 2);\r\n\r\n\t\t// 高亮相同年份的点\r\n\t\tif (props.compareData && props.compareData.length > 0) {\r\n\t\t\tconst validCompareData = props.compareData.filter(\r\n\t\t\t\titem => item && !isNaN(item.year) && !isNaN(item.value)\r\n\t\t\t);\r\n\r\n\t\t\tif (validCompareData.length > 0) {\r\n\t\t\t\tconst commonYears = getCommonYears(data, validCompareData);\r\n\r\n\t\t\t\tcommonYears.forEach(year => {\r\n\t\t\t\t\tconst points = data.filter(d => d.year === year);\r\n\t\t\t\t\tpoints.forEach(point => {\r\n\t\t\t\t\t\tsvg\r\n\t\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t\t.attr(\"cx\", x(point.year))\r\n\t\t\t\t\t\t\t.attr(\"cy\", y(point.value))\r\n\t\t\t\t\t\t\t.attr(\"r\", 8)\r\n\t\t\t\t\t\t\t.attr(\"fill\", highlightColor)\r\n\t\t\t\t\t\t\t.attr(\"stroke\", \"#FF8C00\")\r\n\t\t\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t\t\t.attr(\"class\", \"highlight-point\");\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 添加数据标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\".text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", d => x(d.year))\r\n\t\t\t.attr(\"y\", d => y(d.value) - 12)\r\n\t\t\t.text(d => formatValue(d.value))\r\n\t\t\t.attr(\"font-size\", \"12px\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"fill\", color.value);\r\n\t};\r\n\r\n\t// 辅助函数：格式化数值显示\r\n\tconst formatValue = value => {\r\n\t\tif (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\r\n\t\tif (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\r\n\t\treturn value.toLocaleString();\r\n\t};\r\n\r\n\t// 辅助函数：找出共同年份\r\n\tconst getCommonYears = (data1, data2) => {\r\n\t\tconst years1 = new Set(data1.map(d => d.year));\r\n\t\tconst years2 = new Set(data2.map(d => d.year));\r\n\t\treturn [...years1].filter(year => years2.has(year));\r\n\t};\r\n\r\n\twatch(() => [props.data, props.compareData, props.title], drawChart, {\r\n\t\tdeep: true\r\n\t});\r\n\r\n\tonMounted(() => {\r\n\t\t// 添加延迟确保DOM加载完成\r\n\t\tsetTimeout(drawChart, 100);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.full-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 500px;\r\n\t\tposition: relative;\r\n\t\tbackdrop-filter: blur(20px);\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #94a3b8;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.full-chart :deep(.highlight-point) {\r\n\t\tanimation: pulse 1.5s infinite ease-in-out;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t@keyframes pulse {\r\n\t\t0% {\r\n\t\t\tr: 7;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\tr: 9;\r\n\t\t\topacity: 0.8;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\tr: 7;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t.full-chart :deep(.bar) {\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.full-chart :deep(.bar-label) {\r\n\t\tfont-family: system-ui, -apple-system, sans-serif;\r\n\t\tpointer-events: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;EADjCC,GAAA;EAEuBD,KAAK,EAAC;;;uBAD5BE,mBAAA,CAEM,OAFNC,UAEM,G,CADOC,MAAA,CAAAC,OAAO,I,cAAnBH,mBAAA,CAAyD,OAAzDI,UAAyD,EAAZ,QAAM,KAFrDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}