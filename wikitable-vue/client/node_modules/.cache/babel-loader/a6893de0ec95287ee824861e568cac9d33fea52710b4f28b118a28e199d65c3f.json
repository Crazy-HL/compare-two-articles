{"ast":null,"code":"import { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport ArticleOutline from \"./ArticleOutline.vue\"; // 引入大纲组件\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref({}); // 存储每个 div 的选中内容\n    const showPopup = ref({}); // 存储每个 div 的弹窗显示状态\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n\n    // **获取 Wikipedia 页面**\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n\n        // 解析 HTML\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, \"text/html\");\n\n        // **给所有 h1-h6 添加唯一 ID**\n        const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n        headings.forEach((heading, index) => {\n          const uniqueId = `heading-${index}-${props.divId}`;\n          heading.id = uniqueId;\n        });\n\n        // **给所有表格添加类名 custom-table**\n        const tables = doc.querySelectorAll(\"table\");\n        tables.forEach(table => {\n          table.classList.add(\"custom-table\");\n        });\n\n        // 仅获取正文部分\n        const contentElement = doc.querySelector(\"body\");\n        if (!contentElement) throw new Error(\"Content not found\");\n        pageHtml.value = contentElement.innerHTML;\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // **处理选中内容**\n    const handleSelection = content => {\n      // 获取选中内容的 HTML 结构\n      const selection = window.getSelection();\n      if (!selection.rangeCount) return;\n      const range = selection.getRangeAt(0);\n      const containerElement = range.commonAncestorContainer;\n\n      // 判断是否选中了表格\n      const selectedTable = containerElement.closest ? containerElement.closest(\"table\") : null;\n      if (!selectedTable) {\n        // 不是表格，则不显示弹窗\n        showPopup.value[props.divId] = false;\n        return;\n      }\n\n      // **表格被选中，获取关联章节**\n      const linkedChapterContent = extractLinkedChapterContent(selectedTable);\n      selectedText.value[props.divId] = linkedChapterContent;\n\n      // 仅当有内容时，才显示弹窗\n      if (linkedChapterContent) {\n        showPopup.value[props.divId] = true;\n\n        // 确保弹窗位置更新\n        nextTick(() => {\n          updatePopupPosition();\n        });\n      }\n    };\n\n    // **提取关联章节内容**\n    const extractLinkedChapterContent = selectedTable => {\n      const previousHeading = selectedTable.previousElementSibling;\n\n      // 向上查找最近的标题\n      let heading = previousHeading;\n      while (heading && !/^H[1-6]$/.test(heading.tagName)) {\n        heading = heading.previousElementSibling;\n      }\n      return heading ? heading.textContent : \"未找到关联章节\";\n    };\n\n    // **关闭弹出框**\n    const closePopup = () => {\n      showPopup.value[props.divId] = false;\n      selectedText.value[props.divId] = \"\";\n    };\n\n    // **更新弹出框位置**\n    const updatePopupPosition = () => {\n      if (showPopup.value[props.divId] && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        const rect = divRef.value.getBoundingClientRect();\n        if (popup) {\n          popup.style.top = `${rect.height / 2}px`;\n          popup.style.left = `${rect.width / 2}px`;\n        }\n      }\n    };\n\n    // **组件挂载后加载 Wikipedia 内容**\n    onMounted(() => {\n      fetchWikipediaContent();\n\n      // 监听父容器滚动事件\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n\n    // **组件卸载时解绑事件**\n    onUnmounted(() => {\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      fetchWikipediaContent,\n      handleSelection,\n      extractLinkedChapterContent,\n      closePopup,\n      updatePopupPosition,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      ArticleOutline,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","ArticleOutline","d3","bus","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","text","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","forEach","heading","index","uniqueId","divId","id","tables","table","classList","add","contentElement","querySelector","value","innerHTML","err","message","handleSelection","content","selection","window","getSelection","rangeCount","range","getRangeAt","containerElement","commonAncestorContainer","selectedTable","closest","linkedChapterContent","extractLinkedChapterContent","updatePopupPosition","previousHeading","previousElementSibling","test","tagName","textContent","closePopup","popup","rect","getBoundingClientRect","style","top","height","left","width","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<!-- 悬浮大纲组件 -->\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\"; // 引入大纲组件\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// **给所有 h1-h6 添加唯一 ID**\r\n\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\tconst uniqueId = `heading-${index}-${props.divId}`;\r\n\t\t\t\theading.id = uniqueId;\r\n\t\t\t});\r\n\r\n\t\t\t// **给所有表格添加类名 custom-table**\r\n\t\t\tconst tables = doc.querySelectorAll(\"table\");\r\n\t\t\ttables.forEach(table => {\r\n\t\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **处理选中内容**\r\n\tconst handleSelection = content => {\r\n\t\t// 获取选中内容的 HTML 结构\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection.rangeCount) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst containerElement = range.commonAncestorContainer;\r\n\r\n\t\t// 判断是否选中了表格\r\n\t\tconst selectedTable = containerElement.closest\r\n\t\t\t? containerElement.closest(\"table\")\r\n\t\t\t: null;\r\n\t\tif (!selectedTable) {\r\n\t\t\t// 不是表格，则不显示弹窗\r\n\t\t\tshowPopup.value[props.divId] = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// **表格被选中，获取关联章节**\r\n\t\tconst linkedChapterContent = extractLinkedChapterContent(selectedTable);\r\n\t\tselectedText.value[props.divId] = linkedChapterContent;\r\n\r\n\t\t// 仅当有内容时，才显示弹窗\r\n\t\tif (linkedChapterContent) {\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\r\n\t\t\t// 确保弹窗位置更新\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// **提取关联章节内容**\r\n\tconst extractLinkedChapterContent = selectedTable => {\r\n\t\tconst previousHeading = selectedTable.previousElementSibling;\r\n\r\n\t\t// 向上查找最近的标题\r\n\t\tlet heading = previousHeading;\r\n\t\twhile (heading && !/^H[1-6]$/.test(heading.tagName)) {\r\n\t\t\theading = heading.previousElementSibling;\r\n\t\t}\r\n\r\n\t\treturn heading ? heading.textContent : \"未找到关联章节\";\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false;\r\n\t\tselectedText.value[props.divId] = \"\";\r\n\t};\r\n\r\n\t// **更新弹出框位置**\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\tif (popup) {\r\n\t\t\t\tpopup.style.top = `${rect.height / 2}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 监听父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* 选中文本的高亮样式 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}