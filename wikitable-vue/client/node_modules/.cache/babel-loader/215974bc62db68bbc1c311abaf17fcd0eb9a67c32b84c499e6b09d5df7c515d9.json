{"ast":null,"code":"import { ref, computed, onMounted, watch } from \"vue\";\nimport SimpleChart from \"./SimpleChart.vue\";\nimport FullChart from \"./FullChart.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: {\n      type: Object,\n      default: () => ({})\n    },\n    div3RawData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"compareAttribute\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const showFullChartModal = ref(false);\n    const currentChart = ref({\n      title: \"\",\n      field: {},\n      data: []\n    });\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\",\n      visualization: \"bar-chart\",\n      legend: \"国内生产总值（单位：万亿美元）\"\n    }, {\n      key: \"Population\",\n      type: \"number\",\n      typeLabel: \"数值(人)\",\n      visualization: \"bar-chart\",\n      legend: \"人口数量（单位：亿人）\"\n    }, {\n      key: \"GDP growth\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"line-chart\",\n      legend: \"GDP年增长率（%）\"\n    }, {\n      key: \"Inflation (CPI)\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"消费者价格指数变化\"\n    }, {\n      key: \"Labor force by occupation\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\",\n      visualization: \"pie-chart\",\n      legend: \"劳动力分布比例\"\n    }, {\n      key: \"GDP rank\",\n      type: \"text\",\n      typeLabel: \"文本\",\n      visualization: \"text-only\",\n      legend: \"全球GDP排名\"\n    }];\n\n    // 监听props变化\n    watch(() => props.div1RawData, newVal => {\n      leftInfobox.value = processInfoboxData(newVal);\n    }, {\n      deep: true,\n      immediate: true\n    });\n    watch(() => props.div3RawData, newVal => {\n      rightInfobox.value = processInfoboxData(newVal);\n    }, {\n      deep: true,\n      immediate: true\n    });\n    const showFullChart = (infobox, field) => {\n      if (!hasData(infobox, field.key)) return;\n      currentChart.value = {\n        title: infobox.title || \"无标题\",\n        field: field,\n        data: getField(infobox, field.key)\n      };\n      showFullChartModal.value = true;\n    };\n    const closeFullChart = () => {\n      showFullChartModal.value = false;\n    };\n    const hoverInfobox = (infobox, fieldKey, side) => {\n      bus.emit(`hover-${side}-infobox`, {\n        fieldKey,\n        infoboxTitle: infobox.title\n      });\n    };\n    const unhoverInfobox = side => {\n      bus.emit(`unhover-${side}-infobox`);\n    };\n    const hoverBothInfoboxes = fieldKey => {\n      hoverInfobox(leftInfobox.value, fieldKey, \"left\");\n      hoverInfobox(rightInfobox.value, fieldKey, \"right\");\n    };\n    const unhoverBothInfoboxes = () => {\n      unhoverInfobox(\"left\");\n      unhoverInfobox(\"right\");\n    };\n    const hasData = (infobox, fieldKey) => {\n      return getField(infobox, fieldKey).length > 0;\n    };\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return [];\n\n      // 深度搜索数据\n      const deepSearch = obj => {\n        if (obj[fieldKey] !== undefined) {\n          return Array.isArray(obj[fieldKey]) ? obj[fieldKey] : [obj[fieldKey]];\n        }\n        for (const value of Object.values(obj)) {\n          if (typeof value === \"object\" && value !== null) {\n            const result = deepSearch(value);\n            if (result.length > 0) return result;\n          }\n        }\n        return [];\n      };\n      return deepSearch(infobox.data);\n    };\n    const handleMiddleColumnClick = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      if (leftData.length === 0 && rightData.length === 0) return;\n      emit(\"compareAttribute\", {\n        fieldKey: field.key,\n        leftData: leftData,\n        rightData: rightData,\n        leftTitle: leftInfobox.value.title || \"左侧数据\",\n        rightTitle: rightInfobox.value.title || \"右侧数据\",\n        fieldType: field.type,\n        fieldLabel: field.typeLabel\n      });\n    };\n    const handleRightClick = field => {\n      const leftData = getField(leftInfobox.value, field.key);\n      const rightData = getField(rightInfobox.value, field.key);\n      if (leftData.length === 0 && rightData.length === 0) return;\n      currentChart.value = {\n        title: `合并图表 - ${field.key}`,\n        field: field,\n        data: [...leftData, ...rightData]\n      };\n      showFullChartModal.value = true;\n      return false;\n    };\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return leftVal.length > 0 || rightVal.length > 0;\n      });\n    });\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n\n      // 兼容多种数据结构\n      const result = {\n        title: data.title || data.infoboxTitle || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || data.data || {}\n      };\n\n      // 处理嵌套结构\n      if (data.infobox && !result.title) {\n        result.title = data.infobox.title || \"无标题\";\n      }\n      return result;\n    };\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n      });\n    });\n    const __returned__ = {\n      props,\n      emit,\n      leftInfobox,\n      rightInfobox,\n      showFullChartModal,\n      currentChart,\n      COMPARABLE_FIELDS,\n      showFullChart,\n      closeFullChart,\n      hoverInfobox,\n      unhoverInfobox,\n      hoverBothInfoboxes,\n      unhoverBothInfoboxes,\n      hasData,\n      getField,\n      handleMiddleColumnClick,\n      handleRightClick,\n      comparableFields,\n      processInfoboxData,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      SimpleChart,\n      FullChart,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","SimpleChart","FullChart","bus","props","__props","emit","__emit","leftInfobox","title","type","data","rightInfobox","showFullChartModal","currentChart","field","COMPARABLE_FIELDS","key","typeLabel","visualization","legend","div1RawData","newVal","value","processInfoboxData","deep","immediate","div3RawData","showFullChart","infobox","hasData","getField","closeFullChart","hoverInfobox","fieldKey","side","infoboxTitle","unhoverInfobox","hoverBothInfoboxes","unhoverBothInfoboxes","length","deepSearch","obj","undefined","Array","isArray","Object","values","result","handleMiddleColumnClick","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","handleRightClick","comparableFields","filter","leftVal","rightVal","sections","on"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"无标题\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"无标题\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell left-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(leftInfobox, field.key, 'left')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('left')\"\r\n\t\t\t\t\t@click=\"showFullChart(leftInfobox, field)\">\r\n\t\t\t\t\t<template v-if=\"hasData(leftInfobox, field.key)\">\r\n\t\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell middle-column\"\r\n\t\t\t\t\t@mouseover=\"hoverBothInfoboxes(field.key)\"\r\n\t\t\t\t\t@mouseout=\"unhoverBothInfoboxes()\"\r\n\t\t\t\t\t@click.left=\"handleMiddleColumnClick(field)\"\r\n\t\t\t\t\t@click.right.prevent=\"handleRightClick(field)\"\r\n\t\t\t\t\t@contextmenu.prevent>\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.key }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t\t<div class=\"action-hint\">左键对比分析 | 右键合并图表</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"cell right-column\"\r\n\t\t\t\t\t@mouseover=\"hoverInfobox(rightInfobox, field.key, 'right')\"\r\n\t\t\t\t\t@mouseout=\"unhoverInfobox('right')\"\r\n\t\t\t\t\t@click=\"showFullChart(rightInfobox, field)\">\r\n\t\t\t\t\t<template v-if=\"hasData(rightInfobox, field.key)\">\r\n\t\t\t\t\t\t<SimpleChart\r\n\t\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t\t:type=\"field.type\"\r\n\t\t\t\t\t\t\t:visualization=\"field.visualization\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 全屏图表模态框 -->\r\n\t\t<div\r\n\t\t\tv-if=\"showFullChartModal\"\r\n\t\t\tclass=\"full-chart-modal\"\r\n\t\t\t@click.self=\"closeFullChart\"\r\n\t\t\t@contextmenu.prevent>\r\n\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t<button class=\"close-btn\" @click=\"closeFullChart\">×</button>\r\n\t\t\t\t<h3>{{ currentChart.title }} - {{ currentChart.field.key }}</h3>\r\n\t\t\t\t<div class=\"chart-container\">\r\n\t\t\t\t\t<FullChart\r\n\t\t\t\t\t\t:field=\"currentChart.data\"\r\n\t\t\t\t\t\t:type=\"currentChart.field.type\"\r\n\t\t\t\t\t\t:visualization=\"currentChart.field.visualization\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"chart-legend\" v-if=\"currentChart.field.legend\">\r\n\t\t\t\t\t{{ currentChart.field.legend }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, defineEmits, watch } from \"vue\";\r\n\timport SimpleChart from \"./SimpleChart.vue\";\r\n\timport FullChart from \"./FullChart.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\tdiv3RawData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"compareAttribute\"]);\r\n\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst showFullChartModal = ref(false);\r\n\tconst currentChart = ref({\r\n\t\ttitle: \"\",\r\n\t\tfield: {},\r\n\t\tdata: []\r\n\t});\r\n\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"国内生产总值（单位：万亿美元）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(人)\",\r\n\t\t\tvisualization: \"bar-chart\",\r\n\t\t\tlegend: \"人口数量（单位：亿人）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"line-chart\",\r\n\t\t\tlegend: \"GDP年增长率（%）\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"消费者价格指数变化\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Labor force by occupation\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\",\r\n\t\t\tvisualization: \"pie-chart\",\r\n\t\t\tlegend: \"劳动力分布比例\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP rank\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\",\r\n\t\t\tvisualization: \"text-only\",\r\n\t\t\tlegend: \"全球GDP排名\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 监听props变化\r\n\twatch(\r\n\t\t() => props.div1RawData,\r\n\t\tnewVal => {\r\n\t\t\tleftInfobox.value = processInfoboxData(newVal);\r\n\t\t},\r\n\t\t{ deep: true, immediate: true }\r\n\t);\r\n\r\n\twatch(\r\n\t\t() => props.div3RawData,\r\n\t\tnewVal => {\r\n\t\t\trightInfobox.value = processInfoboxData(newVal);\r\n\t\t},\r\n\t\t{ deep: true, immediate: true }\r\n\t);\r\n\r\n\tconst showFullChart = (infobox, field) => {\r\n\t\tif (!hasData(infobox, field.key)) return;\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: infobox.title || \"无标题\",\r\n\t\t\tfield: field,\r\n\t\t\tdata: getField(infobox, field.key)\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t};\r\n\r\n\tconst closeFullChart = () => {\r\n\t\tshowFullChartModal.value = false;\r\n\t};\r\n\r\n\tconst hoverInfobox = (infobox, fieldKey, side) => {\r\n\t\tbus.emit(`hover-${side}-infobox`, {\r\n\t\t\tfieldKey,\r\n\t\t\tinfoboxTitle: infobox.title\r\n\t\t});\r\n\t};\r\n\r\n\tconst unhoverInfobox = side => {\r\n\t\tbus.emit(`unhover-${side}-infobox`);\r\n\t};\r\n\r\n\tconst hoverBothInfoboxes = fieldKey => {\r\n\t\thoverInfobox(leftInfobox.value, fieldKey, \"left\");\r\n\t\thoverInfobox(rightInfobox.value, fieldKey, \"right\");\r\n\t};\r\n\r\n\tconst unhoverBothInfoboxes = () => {\r\n\t\tunhoverInfobox(\"left\");\r\n\t\tunhoverInfobox(\"right\");\r\n\t};\r\n\r\n\tconst hasData = (infobox, fieldKey) => {\r\n\t\treturn getField(infobox, fieldKey).length > 0;\r\n\t};\r\n\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return [];\r\n\r\n\t\t// 深度搜索数据\r\n\t\tconst deepSearch = obj => {\r\n\t\t\tif (obj[fieldKey] !== undefined) {\r\n\t\t\t\treturn Array.isArray(obj[fieldKey]) ? obj[fieldKey] : [obj[fieldKey]];\r\n\t\t\t}\r\n\r\n\t\t\tfor (const value of Object.values(obj)) {\r\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\tconst result = deepSearch(value);\r\n\t\t\t\t\tif (result.length > 0) return result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn [];\r\n\t\t};\r\n\r\n\t\treturn deepSearch(infobox.data);\r\n\t};\r\n\r\n\tconst handleMiddleColumnClick = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tif (leftData.length === 0 && rightData.length === 0) return;\r\n\r\n\t\temit(\"compareAttribute\", {\r\n\t\t\tfieldKey: field.key,\r\n\t\t\tleftData: leftData,\r\n\t\t\trightData: rightData,\r\n\t\t\tleftTitle: leftInfobox.value.title || \"左侧数据\",\r\n\t\t\trightTitle: rightInfobox.value.title || \"右侧数据\",\r\n\t\t\tfieldType: field.type,\r\n\t\t\tfieldLabel: field.typeLabel\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleRightClick = field => {\r\n\t\tconst leftData = getField(leftInfobox.value, field.key);\r\n\t\tconst rightData = getField(rightInfobox.value, field.key);\r\n\r\n\t\tif (leftData.length === 0 && rightData.length === 0) return;\r\n\r\n\t\tcurrentChart.value = {\r\n\t\t\ttitle: `合并图表 - ${field.key}`,\r\n\t\t\tfield: field,\r\n\t\t\tdata: [...leftData, ...rightData]\r\n\t\t};\r\n\t\tshowFullChartModal.value = true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn leftVal.length > 0 || rightVal.length > 0;\r\n\t\t});\r\n\t});\r\n\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 兼容多种数据结构\r\n\t\tconst result = {\r\n\t\t\ttitle: data.title || data.infoboxTitle || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || data.data || {}\r\n\t\t};\r\n\r\n\t\t// 处理嵌套结构\r\n\t\tif (data.infobox && !result.title) {\r\n\t\t\tresult.title = data.infobox.title || \"无标题\";\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns:\r\n\t\t\tminmax(120px, 1fr)\r\n\t\t\tminmax(80px, 100px)\r\n\t\t\tminmax(120px, 1fr);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t\tmax-height: 500px;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 8px 6px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t\tborder-right: 1px solid #475569;\r\n\t\tmin-height: 36px;\r\n\t\tfont-size: 13px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.header.middle-column {\r\n\t\tpadding: 8px 4px;\r\n\t\tbackground: #1e293b;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 8px;\r\n\t\theight: 110px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.3s ease;\r\n\t\tmin-width: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.left-column,\r\n\t.right-column {\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.cell:hover {\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.left-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.right-column:hover {\r\n\t\tbackground-color: #fff8e1;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttransition: background-color 0.2s;\r\n\t\tuser-select: none;\r\n\t\t-webkit-user-select: none;\r\n\t}\r\n\r\n\t.middle-column:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t}\r\n\r\n\t.middle-column:active {\r\n\t\tbackground-color: #dee2e6;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t\tfont-size: 12px;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.action-hint {\r\n\t\tposition: absolute;\r\n\t\tbottom: 2px;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tfont-size: 9px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\topacity: 0;\r\n\t\ttransition: opacity 0.3s;\r\n\t}\r\n\r\n\t.middle-column:hover .action-hint {\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-size: 11px;\r\n\t\ttext-align: center;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.full-chart-modal {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 1000;\r\n\t\topacity: 1;\r\n\t\ttransition: opacity 0.3s;\r\n\t}\r\n\r\n\t.modal-content {\r\n\t\tbackground: white;\r\n\t\tpadding: 16px;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 85%;\r\n\t\tmax-width: 800px;\r\n\t\tmax-height: 85vh;\r\n\t\tposition: relative;\r\n\t\toverflow-y: auto;\r\n\t\tz-index: 1001;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\theight: 60vh;\r\n\t\twidth: 100%;\r\n\t\tmargin: 16px 0;\r\n\t}\r\n\r\n\t.chart-legend {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 12px;\r\n\t\tpadding-top: 12px;\r\n\t\tborder-top: 1px solid #eee;\r\n\t}\r\n\r\n\t.close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tright: 8px;\r\n\t\tfont-size: 20px;\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.close-btn:hover {\r\n\t\tcolor: #333;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}