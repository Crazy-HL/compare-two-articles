{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\nimport SparklineChart from \"./SparklineChart.vue\";\nimport InfoboxField from \"./InfoboxField.vue\";\nimport bus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'CompareTable',\n  props: {\n    div1RawData: String,\n    div3RawData: String\n    // 注意：不再通过props接收infobox数据\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isDev = process.env.NODE_ENV === \"development\";\n    const viewMode = ref(\"chart\");\n    const containerRef = ref(null);\n\n    // 信息框数据（通过事件总线获取）\n    const leftInfobox = ref({\n      title: \"加载中...\",\n      type: \"loading\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"加载中...\",\n      type: \"loading\",\n      data: {}\n    });\n\n    // 处理接收到的信息框数据\n    const processInfoboxData = data => {\n      try {\n        if (!data) return {\n          title: \"\",\n          type: \"none\",\n          data: {}\n        };\n        return {\n          title: data.title || \"无标题\",\n          type: data.type || \"未知类型\",\n          data: data.data || {}\n        };\n      } catch (e) {\n        console.error(\"处理信息框数据出错:\", e);\n        return {\n          title: \"数据错误\",\n          type: \"error\",\n          data: {}\n        };\n      }\n    };\n\n    // 设置事件监听\n    const setupEventListeners = () => {\n      bus.on(\"div1_InfoboxData\", data => {\n        console.log(\"收到div1信息框数据:\", data);\n        leftInfobox.value = processInfoboxData(data);\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        console.log(\"收到div3信息框数据:\", data);\n        rightInfobox.value = processInfoboxData(data);\n      });\n    };\n\n    // 获取字段数据类型\n    const getDataType = fieldData => {\n      if (!fieldData) return \"\";\n      return fieldData.dataType || (fieldData.links?.length ? \"link\" : fieldData.image ? \"image\" : \"text\");\n    };\n\n    // 计算属性\n    const hasInfoboxData = computed(() => {\n      const leftHasData = Object.keys(leftInfobox.value.data).length > 0;\n      const rightHasData = Object.keys(rightInfobox.value.data).length > 0;\n      return leftHasData || rightHasData;\n    });\n    const commonInfoboxFields = computed(() => {\n      const leftFields = Object.keys(leftInfobox.value.data);\n      const rightFields = Object.keys(rightInfobox.value.data);\n      return [...new Set([...leftFields, ...rightFields])].sort();\n    });\n\n    // 调试方法\n    const logCurrentData = () => {\n      console.group(\"当前数据状态\");\n      console.log(\"左侧信息框:\", leftInfobox.value);\n      console.log(\"右侧信息框:\", rightInfobox.value);\n      console.log(\"共有字段:\", commonInfoboxFields.value);\n      console.groupEnd();\n    };\n    const simulateData = () => {\n      bus.emit(\"div1_InfoboxData\", {\n        title: \"模拟数据1\",\n        type: \"人物\",\n        data: {\n          姓名: {\n            text: \"张三\",\n            dataType: \"text\"\n          },\n          年龄: {\n            text: \"30\",\n            dataType: \"number\"\n          }\n        }\n      });\n      bus.emit(\"div3_InfoboxData\", {\n        title: \"模拟数据2\",\n        type: \"人物\",\n        data: {\n          姓名: {\n            text: \"李四\",\n            dataType: \"text\"\n          },\n          职业: {\n            text: \"工程师\",\n            dataType: \"text\"\n          }\n        }\n      });\n    };\n\n    // 生命周期\n    onMounted(() => {\n      setupEventListeners();\n      if (isDev) {\n        console.log(\"CompareTable已挂载，等待信息框数据...\");\n        // 3秒后模拟数据（仅开发环境）\n        setTimeout(simulateData, 3000);\n      }\n    });\n    onBeforeUnmount(() => {\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n\n    /* 以下是图表对比模式相关代码（保持不变） */\n    const chartMaxWidth = ref(250);\n    const chartMaxHeight = ref(80);\n    const leftChartColor = ref(\"#4a90e2\");\n    const rightChartColor = ref(\"#ef4444\");\n    const processedTable1 = ref({\n      title: \"\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n    const processedTable2 = ref({\n      title: \"\",\n      rows: [],\n      columns: [],\n      timeSeriesData: {}\n    });\n    const hasData = computed(() => false); // 简化为始终不显示图表数据\n    const commonAttributes = computed(() => []);\n    const hasDataForAttribute = () => false;\n    const showFullChart = () => {};\n    const __returned__ = {\n      props,\n      isDev,\n      viewMode,\n      containerRef,\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      setupEventListeners,\n      getDataType,\n      hasInfoboxData,\n      commonInfoboxFields,\n      logCurrentData,\n      simulateData,\n      chartMaxWidth,\n      chartMaxHeight,\n      leftChartColor,\n      rightChartColor,\n      processedTable1,\n      processedTable2,\n      hasData,\n      commonAttributes,\n      hasDataForAttribute,\n      showFullChart,\n      ref,\n      computed,\n      onMounted,\n      onBeforeUnmount,\n      SparklineChart,\n      InfoboxField,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","SparklineChart","InfoboxField","bus","props","__props","isDev","process","env","NODE_ENV","viewMode","containerRef","leftInfobox","title","type","data","rightInfobox","processInfoboxData","e","console","error","setupEventListeners","on","log","value","getDataType","fieldData","dataType","links","length","image","hasInfoboxData","leftHasData","Object","keys","rightHasData","commonInfoboxFields","leftFields","rightFields","Set","sort","logCurrentData","group","groupEnd","simulateData","emit","姓名","text","年龄","职业","setTimeout","off","chartMaxWidth","chartMaxHeight","leftChartColor","rightChartColor","processedTable1","rows","columns","timeSeriesData","processedTable2","hasData","commonAttributes","hasDataForAttribute","showFullChart"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\" ref=\"containerRef\">\r\n\t\t<div class=\"mode-toggle\">\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'chart' }\"\r\n\t\t\t\t@click=\"viewMode = 'chart'\">\r\n\t\t\t\t图表对比模式\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\t:class=\"{ active: viewMode === 'infobox' }\"\r\n\t\t\t\t@click=\"viewMode = 'infobox'\"\r\n\t\t\t\t:disabled=\"!hasInfoboxData\">\r\n\t\t\t\t信息框对比模式\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 图表对比模式 -->\r\n\t\t<div v-if=\"viewMode === 'chart'\" class=\"table-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ processedTable1.title || \"表格1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">对比属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ processedTable2.title || \"表格2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasData\">\r\n\t\t\t\t<template v-for=\"attr in commonAttributes\" :key=\"attr\">\r\n\t\t\t\t\t<div class=\"cell left-column\" @click=\"showFullChart(attr, 'left')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable1, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"leftChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ attr }}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"cell right-column\" @click=\"showFullChart(attr, 'right')\">\r\n\t\t\t\t\t\t<template v-if=\"hasDataForAttribute(processedTable2, attr)\">\r\n\t\t\t\t\t\t\t<div class=\"chart-wrapper\">\r\n\t\t\t\t\t\t\t\t<SparklineChart\r\n\t\t\t\t\t\t\t\t\t:data=\"processedTable2.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:compare-data=\"processedTable1.timeSeriesData[attr]\"\r\n\t\t\t\t\t\t\t\t\t:max-width=\"chartMaxWidth\"\r\n\t\t\t\t\t\t\t\t\t:max-height=\"chartMaxHeight\"\r\n\t\t\t\t\t\t\t\t\t:show-year-markers=\"true\"\r\n\t\t\t\t\t\t\t\t\t:line-color=\"rightChartColor\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<!-- 信息框对比模式 -->\r\n\t\t<div v-else class=\"infobox-grid\">\r\n\t\t\t<div class=\"header left-column\">\r\n\t\t\t\t{{ leftInfobox.title || \"信息框1\" }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"header middle-column\">属性</div>\r\n\t\t\t<div class=\"header right-column\">\r\n\t\t\t\t{{ rightInfobox.title || \"信息框2\" }}\r\n\t\t\t</div>\r\n\r\n\t\t\t<template v-if=\"hasInfoboxData\">\r\n\t\t\t\t<template v-for=\"field in commonInfoboxFields\" :key=\"field\">\r\n\t\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"leftInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t\t<div class=\"attribute-name\">{{ field }}</div>\r\n\t\t\t\t\t\t<div class=\"data-type\">\r\n\t\t\t\t\t\t\t{{ getDataType(leftInfobox.data[field]) }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t\t<InfoboxField :value=\"rightInfobox.data[field]\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<div v-else class=\"no-infobox-data\">\r\n\t\t\t\t<div class=\"no-data-message\">未找到可对比的信息框数据</div>\r\n\t\t\t\t<div class=\"suggestion\">\r\n\t\t\t\t\t请尝试：\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>检查两篇文章是否都包含信息框</li>\r\n\t\t\t\t\t\t<li>刷新页面重试</li>\r\n\t\t\t\t\t\t<li>查看控制台是否有错误</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 调试面板（开发环境可见） -->\r\n\t\t<div v-if=\"isDev\" class=\"debug-panel\">\r\n\t\t\t<h4>调试面板</h4>\r\n\t\t\t<button @click=\"logCurrentData\">打印当前数据</button>\r\n\t\t\t<button @click=\"simulateData\">模拟数据</button>\r\n\t\t\t<div>左信息框字段数: {{ Object.keys(leftInfobox.data).length }}</div>\r\n\t\t\t<div>右信息框字段数: {{ Object.keys(rightInfobox.data).length }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\timport InfoboxField from \"./InfoboxField.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdiv1RawData: String,\r\n\t\tdiv3RawData: String\r\n\t\t// 注意：不再通过props接收infobox数据\r\n\t});\r\n\r\n\tconst isDev = process.env.NODE_ENV === \"development\";\r\n\tconst viewMode = ref(\"chart\");\r\n\tconst containerRef = ref(null);\r\n\r\n\t// 信息框数据（通过事件总线获取）\r\n\tconst leftInfobox = ref({\r\n\t\ttitle: \"加载中...\",\r\n\t\ttype: \"loading\",\r\n\t\tdata: {}\r\n\t});\r\n\tconst rightInfobox = ref({\r\n\t\ttitle: \"加载中...\",\r\n\t\ttype: \"loading\",\r\n\t\tdata: {}\r\n\t});\r\n\r\n\t// 处理接收到的信息框数据\r\n\tconst processInfoboxData = data => {\r\n\t\ttry {\r\n\t\t\tif (!data) return { title: \"\", type: \"none\", data: {} };\r\n\t\t\treturn {\r\n\t\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\t\tdata: data.data || {}\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"处理信息框数据出错:\", e);\r\n\t\t\treturn { title: \"数据错误\", type: \"error\", data: {} };\r\n\t\t}\r\n\t};\r\n\r\n\t// 设置事件监听\r\n\tconst setupEventListeners = () => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"收到div1信息框数据:\", data);\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\tconsole.log(\"收到div3信息框数据:\", data);\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t});\r\n\t};\r\n\r\n\t// 获取字段数据类型\r\n\tconst getDataType = fieldData => {\r\n\t\tif (!fieldData) return \"\";\r\n\t\treturn (\r\n\t\t\tfieldData.dataType ||\r\n\t\t\t(fieldData.links?.length ? \"link\" : fieldData.image ? \"image\" : \"text\")\r\n\t\t);\r\n\t};\r\n\r\n\t// 计算属性\r\n\tconst hasInfoboxData = computed(() => {\r\n\t\tconst leftHasData = Object.keys(leftInfobox.value.data).length > 0;\r\n\t\tconst rightHasData = Object.keys(rightInfobox.value.data).length > 0;\r\n\t\treturn leftHasData || rightHasData;\r\n\t});\r\n\r\n\tconst commonInfoboxFields = computed(() => {\r\n\t\tconst leftFields = Object.keys(leftInfobox.value.data);\r\n\t\tconst rightFields = Object.keys(rightInfobox.value.data);\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t});\r\n\r\n\t// 调试方法\r\n\tconst logCurrentData = () => {\r\n\t\tconsole.group(\"当前数据状态\");\r\n\t\tconsole.log(\"左侧信息框:\", leftInfobox.value);\r\n\t\tconsole.log(\"右侧信息框:\", rightInfobox.value);\r\n\t\tconsole.log(\"共有字段:\", commonInfoboxFields.value);\r\n\t\tconsole.groupEnd();\r\n\t};\r\n\r\n\tconst simulateData = () => {\r\n\t\tbus.emit(\"div1_InfoboxData\", {\r\n\t\t\ttitle: \"模拟数据1\",\r\n\t\t\ttype: \"人物\",\r\n\t\t\tdata: {\r\n\t\t\t\t姓名: { text: \"张三\", dataType: \"text\" },\r\n\t\t\t\t年龄: { text: \"30\", dataType: \"number\" }\r\n\t\t\t}\r\n\t\t});\r\n\t\tbus.emit(\"div3_InfoboxData\", {\r\n\t\t\ttitle: \"模拟数据2\",\r\n\t\t\ttype: \"人物\",\r\n\t\t\tdata: {\r\n\t\t\t\t姓名: { text: \"李四\", dataType: \"text\" },\r\n\t\t\t\t职业: { text: \"工程师\", dataType: \"text\" }\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\tsetupEventListeners();\r\n\r\n\t\tif (isDev) {\r\n\t\t\tconsole.log(\"CompareTable已挂载，等待信息框数据...\");\r\n\t\t\t// 3秒后模拟数据（仅开发环境）\r\n\t\t\tsetTimeout(simulateData, 3000);\r\n\t\t}\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\t/* 以下是图表对比模式相关代码（保持不变） */\r\n\tconst chartMaxWidth = ref(250);\r\n\tconst chartMaxHeight = ref(80);\r\n\tconst leftChartColor = ref(\"#4a90e2\");\r\n\tconst rightChartColor = ref(\"#ef4444\");\r\n\tconst processedTable1 = ref({\r\n\t\ttitle: \"\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst processedTable2 = ref({\r\n\t\ttitle: \"\",\r\n\t\trows: [],\r\n\t\tcolumns: [],\r\n\t\ttimeSeriesData: {}\r\n\t});\r\n\tconst hasData = computed(() => false); // 简化为始终不显示图表数据\r\n\tconst commonAttributes = computed(() => []);\r\n\tconst hasDataForAttribute = () => false;\r\n\tconst showFullChart = () => {};\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.mode-toggle {\r\n\t\tdisplay: flex;\r\n\t\tgap: 10px;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.mode-toggle button {\r\n\t\tpadding: 8px 16px;\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.mode-toggle button.active {\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder-color: #4a90e2;\r\n\t}\r\n\r\n\t.mode-toggle button:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 信息框网格样式 */\r\n\t.infobox-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(200px, 1fr) minmax(100px, 0.5fr) minmax(\r\n\t\t\t\t200px,\r\n\t\t\t\t1fr\r\n\t\t\t);\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #e2e8f0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 10px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t\tborder-right: 1px solid #f0f0f0;\r\n\t\tmin-height: 80px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f8fafc;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\r\n\t.data-type {\r\n\t\tfont-size: 0.75em;\r\n\t\tcolor: #666;\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.no-infobox-data {\r\n\t\tgrid-column: 1 / -1;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #666;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tfont-size: 1.1em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.suggestion ul {\r\n\t\ttext-align: left;\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 5px auto;\r\n\t\tpadding-left: 20px;\r\n\t}\r\n\r\n\t/* 调试面板 */\r\n\t.debug-panel {\r\n\t\tposition: fixed;\r\n\t\tbottom: 10px;\r\n\t\tright: 10px;\r\n\t\tbackground: rgba(0, 0, 0, 0.7);\r\n\t\tcolor: white;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 4px;\r\n\t\tz-index: 100;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.debug-panel h4 {\r\n\t\tmargin: 0 0 8px 0;\r\n\t}\r\n\r\n\t.debug-panel button {\r\n\t\tmargin: 0 5px 5px 0;\r\n\t\tpadding: 5px 10px;\r\n\t\tbackground: #4a90e2;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 3px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t/* 图表模式样式（简化） */\r\n\t.table-grid {\r\n\t\tdisplay: none; /* 简化示例，实际使用时需要调整 */\r\n\t}\r\n</style>\r\n"],"mappings":";;;;;;;AAoHC,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAC/D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,kBAAkB;;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;IACpD,MAAMC,QAAQ,GAAGb,GAAG,CAAC,OAAO,CAAC;IAC7B,MAAMc,YAAY,GAAGd,GAAG,CAAC,IAAI,CAAC;;IAE9B;IACA,MAAMe,WAAW,GAAGf,GAAG,CAAC;MACvBgB,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,CAAC;IACR,CAAC,CAAC;IACF,MAAMC,YAAY,GAAGnB,GAAG,CAAC;MACxBgB,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,CAAC;IACR,CAAC,CAAC;;IAEF;IACA,MAAME,kBAAkB,GAAGF,IAAI,IAAI;MAClC,IAAI;QACH,IAAI,CAACA,IAAI,EAAE,OAAO;UAAEF,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,CAAC;QAAE,CAAC;QACvD,OAAO;UACNF,KAAK,EAAEE,IAAI,CAACF,KAAK,IAAI,KAAK;UAC1BC,IAAI,EAAEC,IAAI,CAACD,IAAI,IAAI,MAAM;UACzBC,IAAI,EAAEA,IAAI,CAACA,IAAI,IAAI,CAAC;QACrB,CAAC;MACF,CAAC,CAAC,OAAOG,CAAC,EAAE;QACXC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,CAAC,CAAC;QAC9B,OAAO;UAAEL,KAAK,EAAE,MAAM;UAAEC,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE,CAAC;QAAE,CAAC;MAClD;IACD,CAAC;;IAED;IACA,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;MACjClB,GAAG,CAACmB,EAAE,CAAC,kBAAkB,EAAEP,IAAI,IAAI;QAClCI,OAAO,CAACI,GAAG,CAAC,cAAc,EAAER,IAAI,CAAC;QACjCH,WAAW,CAACY,KAAK,GAAGP,kBAAkB,CAACF,IAAI,CAAC;MAC7C,CAAC,CAAC;MAEFZ,GAAG,CAACmB,EAAE,CAAC,kBAAkB,EAAEP,IAAI,IAAI;QAClCI,OAAO,CAACI,GAAG,CAAC,cAAc,EAAER,IAAI,CAAC;QACjCC,YAAY,CAACQ,KAAK,GAAGP,kBAAkB,CAACF,IAAI,CAAC;MAC9C,CAAC,CAAC;IACH,CAAC;;IAED;IACA,MAAMU,WAAW,GAAGC,SAAS,IAAI;MAChC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;MACzB,OACCA,SAAS,CAACC,QAAQ,KACjBD,SAAS,CAACE,KAAK,EAAEC,MAAM,GAAG,MAAM,GAAGH,SAAS,CAACI,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;IAEzE,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGjC,QAAQ,CAAC,MAAM;MACrC,MAAMkC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACtB,WAAW,CAACY,KAAK,CAACT,IAAI,CAAC,CAACc,MAAM,GAAG,CAAC;MAClE,MAAMM,YAAY,GAAGF,MAAM,CAACC,IAAI,CAAClB,YAAY,CAACQ,KAAK,CAACT,IAAI,CAAC,CAACc,MAAM,GAAG,CAAC;MACpE,OAAOG,WAAW,IAAIG,YAAY;IACnC,CAAC,CAAC;IAEF,MAAMC,mBAAmB,GAAGtC,QAAQ,CAAC,MAAM;MAC1C,MAAMuC,UAAU,GAAGJ,MAAM,CAACC,IAAI,CAACtB,WAAW,CAACY,KAAK,CAACT,IAAI,CAAC;MACtD,MAAMuB,WAAW,GAAGL,MAAM,CAACC,IAAI,CAAClB,YAAY,CAACQ,KAAK,CAACT,IAAI,CAAC;MACxD,OAAO,CAAC,GAAG,IAAIwB,GAAG,CAAC,CAAC,GAAGF,UAAU,EAAE,GAAGC,WAAW,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;IAC5D,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC5BtB,OAAO,CAACuB,KAAK,CAAC,QAAQ,CAAC;MACvBvB,OAAO,CAACI,GAAG,CAAC,QAAQ,EAAEX,WAAW,CAACY,KAAK,CAAC;MACxCL,OAAO,CAACI,GAAG,CAAC,QAAQ,EAAEP,YAAY,CAACQ,KAAK,CAAC;MACzCL,OAAO,CAACI,GAAG,CAAC,OAAO,EAAEa,mBAAmB,CAACZ,KAAK,CAAC;MAC/CL,OAAO,CAACwB,QAAQ,CAAC,CAAC;IACnB,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MAC1BzC,GAAG,CAAC0C,IAAI,CAAC,kBAAkB,EAAE;QAC5BhC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE;UACL+B,EAAE,EAAE;YAAEC,IAAI,EAAE,IAAI;YAAEpB,QAAQ,EAAE;UAAO,CAAC;UACpCqB,EAAE,EAAE;YAAED,IAAI,EAAE,IAAI;YAAEpB,QAAQ,EAAE;UAAS;QACtC;MACD,CAAC,CAAC;MACFxB,GAAG,CAAC0C,IAAI,CAAC,kBAAkB,EAAE;QAC5BhC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE;UACL+B,EAAE,EAAE;YAAEC,IAAI,EAAE,IAAI;YAAEpB,QAAQ,EAAE;UAAO,CAAC;UACpCsB,EAAE,EAAE;YAAEF,IAAI,EAAE,KAAK;YAAEpB,QAAQ,EAAE;UAAO;QACrC;MACD,CAAC,CAAC;IACH,CAAC;;IAED;IACA5B,SAAS,CAAC,MAAM;MACfsB,mBAAmB,CAAC,CAAC;MAErB,IAAIf,KAAK,EAAE;QACVa,OAAO,CAACI,GAAG,CAAC,4BAA4B,CAAC;QACzC;QACA2B,UAAU,CAACN,YAAY,EAAE,IAAI,CAAC;MAC/B;IACD,CAAC,CAAC;IAEF5C,eAAe,CAAC,MAAM;MACrBG,GAAG,CAACgD,GAAG,CAAC,kBAAkB,CAAC;MAC3BhD,GAAG,CAACgD,GAAG,CAAC,kBAAkB,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMC,aAAa,GAAGvD,GAAG,CAAC,GAAG,CAAC;IAC9B,MAAMwD,cAAc,GAAGxD,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMyD,cAAc,GAAGzD,GAAG,CAAC,SAAS,CAAC;IACrC,MAAM0D,eAAe,GAAG1D,GAAG,CAAC,SAAS,CAAC;IACtC,MAAM2D,eAAe,GAAG3D,GAAG,CAAC;MAC3BgB,KAAK,EAAE,EAAE;MACT4C,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE,CAAC;IAClB,CAAC,CAAC;IACF,MAAMC,eAAe,GAAG/D,GAAG,CAAC;MAC3BgB,KAAK,EAAE,EAAE;MACT4C,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE,CAAC;IAClB,CAAC,CAAC;IACF,MAAME,OAAO,GAAG/D,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IACvC,MAAMgE,gBAAgB,GAAGhE,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3C,MAAMiE,mBAAmB,GAAGA,CAAA,KAAM,KAAK;IACvC,MAAMC,aAAa,GAAGA,CAAA,KAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}