{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea6f3360\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"compare-table-container\"\n};\nconst _hoisted_2 = {\n  class: \"table-header\"\n};\nconst _hoisted_3 = {\n  class: \"column-header\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column-header\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"column-header\"\n};\nconst _hoisted_6 = {\n  class: \"table-body\"\n};\nconst _hoisted_7 = {\n  class: \"sparkline-cell\"\n};\nconst _hoisted_8 = {\n  class: \"stats-summary\"\n};\nconst _hoisted_9 = {\n  class: \"current-value\"\n};\nconst _hoisted_10 = {\n  class: \"attribute-name\"\n};\nconst _hoisted_11 = {\n  class: \"attribute-description\"\n};\nconst _hoisted_12 = {\n  class: \"sparkline-cell\"\n};\nconst _hoisted_13 = {\n  class: \"stats-summary\"\n};\nconst _hoisted_14 = {\n  class: \"current-value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sparkline_chart = _resolveComponent(\"sparkline-chart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.table1.name), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.table2.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.commonAttributes, attr => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: attr,\n      class: \"attribute-row\"\n    }, [_createCommentVNode(\" 表格1的Sparkline \"), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_sparkline_chart, {\n      values: $data.table1.data[attr],\n      labels: $data.table1.years,\n      highlight: $options.getHighlights($data.table1.data[attr])\n    }, null, 8 /* PROPS */, [\"values\", \"labels\", \"highlight\"]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString($options.getCurrentValue($data.table1.data[attr])), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"trend\", $options.getTrend($data.table1.data[attr])])\n    }, _toDisplayString($options.getTrendIcon($options.getTrend($data.table1.data[attr]))), 3 /* TEXT, CLASS */)])]), _createCommentVNode(\" 属性名称 \"), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(_toDisplayString(attr) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($options.getAttributeDescription(attr)), 1 /* TEXT */)]), _createCommentVNode(\" 表格2的Sparkline \"), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_sparkline_chart, {\n      values: $data.table2.data[attr],\n      labels: $data.table2.years,\n      highlight: $options.getHighlights($data.table2.data[attr])\n    }, null, 8 /* PROPS */, [\"values\", \"labels\", \"highlight\"]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString($options.getCurrentValue($data.table2.data[attr])), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","table1","name","_hoisted_4","_hoisted_5","table2","_hoisted_6","_Fragment","_renderList","commonAttributes","attr","key","_createCommentVNode","_hoisted_7","_createVNode","_component_sparkline_chart","values","data","labels","years","highlight","$options","getHighlights","_hoisted_8","_hoisted_9","getCurrentValue","_normalizeClass","getTrend","getTrendIcon","_hoisted_10","_createTextVNode","_hoisted_11","getAttributeDescription","_hoisted_12","_hoisted_13","_hoisted_14"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-table-container\">\r\n\t\t<div class=\"table-header\">\r\n\t\t\t<div class=\"column-header\">{{ table1.name }}</div>\r\n\t\t\t<div class=\"column-header\">属性</div>\r\n\t\t\t<div class=\"column-header\">{{ table2.name }}</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"table-body\">\r\n\t\t\t<div v-for=\"attr in commonAttributes\" :key=\"attr\" class=\"attribute-row\">\r\n\t\t\t\t<!-- 表格1的Sparkline -->\r\n\t\t\t\t<div class=\"sparkline-cell\">\r\n\t\t\t\t\t<sparkline-chart\r\n\t\t\t\t\t\t:values=\"table1.data[attr]\"\r\n\t\t\t\t\t\t:labels=\"table1.years\"\r\n\t\t\t\t\t\t:highlight=\"getHighlights(table1.data[attr])\" />\r\n\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t<span class=\"current-value\">{{\r\n\t\t\t\t\t\t\tgetCurrentValue(table1.data[attr])\r\n\t\t\t\t\t\t}}</span>\r\n\t\t\t\t\t\t<span class=\"trend\" :class=\"getTrend(table1.data[attr])\">\r\n\t\t\t\t\t\t\t{{ getTrendIcon(getTrend(table1.data[attr])) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- 属性名称 -->\r\n\t\t\t\t<div class=\"attribute-name\">\r\n\t\t\t\t\t{{ attr }}\r\n\t\t\t\t\t<div class=\"attribute-description\">\r\n\t\t\t\t\t\t{{ getAttributeDescription(attr) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- 表格2的Sparkline -->\r\n\t\t\t\t<div class=\"sparkline-cell\">\r\n\t\t\t\t\t<sparkline-chart\r\n\t\t\t\t\t\t:values=\"table2.data[attr]\"\r\n\t\t\t\t\t\t:labels=\"table2.years\"\r\n\t\t\t\t\t\t:highlight=\"getHighlights(table2.data[attr])\" />\r\n\t\t\t\t\t<div class=\"stats-summary\">\r\n\t\t\t\t\t\t<span class=\"current-value\">{{\r\n\t\t\t\t\t\t\tgetCurrentValue(table2.data[attr])\r\n\t\t\t\t\t\t}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport SparklineChart from \"./SparklineChart.vue\";\r\n\r\n\texport default {\r\n\t\tcomponents: { SparklineChart },\r\n\t\tprops: {\r\n\t\t\ttable1Html: String,\r\n\t\t\ttable2Html: String,\r\n\t\t\ttable1Name: { type: String, default: \"表格1\" },\r\n\t\t\ttable2Name: { type: String, default: \"表格2\" }\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tcommonAttributes: [],\r\n\t\t\t\ttable1: { name: \"\", data: {}, years: [] },\r\n\t\t\t\ttable2: { name: \"\", data: {}, years: [] }\r\n\t\t\t};\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.processTables();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tprocessTables() {\r\n\t\t\t\t// 处理第一个表格\r\n\t\t\t\tconst table1Data = this.parseTableData(this.table1Html);\r\n\t\t\t\tthis.table1 = {\r\n\t\t\t\t\tname: this.table1Name,\r\n\t\t\t\t\tdata: table1Data.stats,\r\n\t\t\t\t\tyears: table1Data.years\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// 处理第二个表格\r\n\t\t\t\tconst table2Data = this.parseTableData(this.table2Html);\r\n\t\t\t\tthis.table2 = {\r\n\t\t\t\t\tname: this.table2Name,\r\n\t\t\t\t\tdata: table2Data.stats,\r\n\t\t\t\t\tyears: table2Data.years\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// 计算公共属性\r\n\t\t\t\tthis.commonAttributes = Object.keys(table1Data.stats).filter(\r\n\t\t\t\t\tattr => attr in table2Data.stats\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\tparseTableData(htmlString) {\r\n\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\tconst doc = parser.parseFromString(htmlString, \"text/html\");\r\n\t\t\t\tconst table = doc.querySelector(\"table.wikitable\");\r\n\r\n\t\t\t\tconst result = {\r\n\t\t\t\t\tyears: [],\r\n\t\t\t\t\tstats: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (!table) return result;\r\n\r\n\t\t\t\t// 提取表头\r\n\t\t\t\tconst headers = Array.from(table.querySelectorAll(\"thead th\")).map(\r\n\t\t\t\t\tth => {\r\n\t\t\t\t\t\tconst abbr = th.querySelector(\"abbr\");\r\n\t\t\t\t\t\treturn abbr ? abbr.title : th.textContent.trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// 初始化数据结构\r\n\t\t\t\tconst statAttributes = headers.slice(2); // 跳过Year和Team列\r\n\t\t\t\tstatAttributes.forEach(attr => {\r\n\t\t\t\t\tresult.stats[attr] = [];\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 提取行数据\r\n\t\t\t\tArray.from(table.querySelectorAll(\"tbody tr\")).forEach(tr => {\r\n\t\t\t\t\tconst cells = Array.from(tr.querySelectorAll(\"td\"));\r\n\t\t\t\t\tif (cells.length < headers.length) return;\r\n\r\n\t\t\t\t\t// 获取年份\r\n\t\t\t\t\tconst yearCell = cells[0].textContent.trim();\r\n\t\t\t\t\tconst yearMatch = yearCell.match(/(\\d{4})/);\r\n\t\t\t\t\tif (yearMatch) {\r\n\t\t\t\t\t\tresult.years.push(yearMatch[1]);\r\n\t\t\t\t\t} else if (cells[0].textContent.includes(\"Career\")) {\r\n\t\t\t\t\t\tresult.years.push(\"Career\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 处理统计数据\r\n\t\t\t\t\tstatAttributes.forEach((attr, idx) => {\r\n\t\t\t\t\t\tconst cell = cells[idx + 2]; // 前两列是Year和Team\r\n\t\t\t\t\t\tlet value = cell.textContent.trim();\r\n\r\n\t\t\t\t\t\t// 数据清洗和转换\r\n\t\t\t\t\t\tif (value.startsWith(\".\")) value = \"0\" + value;\r\n\t\t\t\t\t\tconst numValue = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\r\n\r\n\t\t\t\t\t\tresult.stats[attr].push(isNaN(numValue) ? 0 : numValue);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\tgetCurrentValue(values) {\r\n\t\t\t\treturn values.length ? values[values.length - 1] : 0;\r\n\t\t\t},\r\n\r\n\t\t\tgetTrend(values) {\r\n\t\t\t\tif (values.length < 2) return \"neutral\";\r\n\t\t\t\tconst first = values[0];\r\n\t\t\t\tconst last = values[values.length - 1];\r\n\t\t\t\treturn last > first ? \"up\" : last < first ? \"down\" : \"neutral\";\r\n\t\t\t},\r\n\r\n\t\t\tgetTrendIcon(trend) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tup: \"↑\",\r\n\t\t\t\t\tdown: \"↓\",\r\n\t\t\t\t\tneutral: \"→\"\r\n\t\t\t\t}[trend];\r\n\t\t\t},\r\n\r\n\t\t\tgetHighlights(values) {\r\n\t\t\t\tif (!values.length) return [];\r\n\t\t\t\tconst max = Math.max(...values);\r\n\t\t\t\tconst min = Math.min(...values);\r\n\t\t\t\treturn values.map((v, i) => ({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tisMax: v === max,\r\n\t\t\t\t\tisMin: v === min\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\r\n\t\t\tgetAttributeDescription(attr) {\r\n\t\t\t\tconst descriptions = {\r\n\t\t\t\t\tPPG: \"场均得分\",\r\n\t\t\t\t\tAPG: \"场均助攻\",\r\n\t\t\t\t\tRPG: \"场均篮板\",\r\n\t\t\t\t\t\"FG%\": \"投篮命中率\",\r\n\t\t\t\t\t\"3P%\": \"三分命中率\",\r\n\t\t\t\t\t\"FT%\": \"罚球命中率\"\r\n\t\t\t\t};\r\n\t\t\t\treturn descriptions[attr] || \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\ttable1Html() {\r\n\t\t\t\tthis.processTables();\r\n\t\t\t},\r\n\t\t\ttable2Html() {\r\n\t\t\t\tthis.processTables();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-table-container {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.table-header {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tfont-weight: bold;\r\n\t\tpadding: 12px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\ttext-align: center;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.table-body {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: auto;\r\n\t}\r\n\r\n\t.attribute-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\talign-items: center;\r\n\t\tpadding: 12px;\r\n\t\tborder-bottom: 1px solid #f0f0f0;\r\n\t}\r\n\r\n\t.attribute-row:hover {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.sparkline-cell {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.attribute-name {\r\n\t\ttext-align: center;\r\n\t\tfont-weight: 500;\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t.attribute-description {\r\n\t\tfont-size: 0.8em;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.stats-summary {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.current-value {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-right: 4px;\r\n\t}\r\n\r\n\t.trend {\r\n\t\tfont-size: 1.2em;\r\n\t}\r\n\r\n\t.trend.up {\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.trend.down {\r\n\t\tcolor: #f44336;\r\n\t}\r\n\r\n\t.trend.neutral {\r\n\t\tcolor: #2196f3;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAyB;;EAC9BA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAe;gEAC1BC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAe,GAAC,IAAE;;EACxBA,KAAK,EAAC;AAAe;;EAGtBA,KAAK,EAAC;AAAY;;EAGhBA,KAAK,EAAC;AAAgB;;EAKrBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAe;;EAUxBA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAuB;;EAM9BA,KAAK,EAAC;AAAgB;;EAKrBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAe;;;uBAxChCE,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CLF,mBAAA,CAIM,OAJNG,UAIM,GAHLH,mBAAA,CAAkD,OAAlDI,UAAkD,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,MAAM,CAACC,IAAI,kBACzCC,UAAmC,EACnCT,mBAAA,CAAkD,OAAlDU,UAAkD,EAAAL,gBAAA,CAApBC,KAAA,CAAAK,MAAM,CAACH,IAAI,iB,GAG1CR,mBAAA,CAuCM,OAvCNY,UAuCM,I,kBAtCLX,mBAAA,CAqCMY,SAAA,QA9CTC,WAAA,CASuBR,KAAA,CAAAS,gBAAgB,EAAxBC,IAAI;yBAAhBf,mBAAA,CAqCM;MArCiCgB,GAAG,EAAED,IAAI;MAAEjB,KAAK,EAAC;QACvDmB,mBAAA,mBAAsB,EACtBlB,mBAAA,CAaM,OAbNmB,UAaM,GAZLC,YAAA,CAGiDC,0BAAA;MAF/CC,MAAM,EAAEhB,KAAA,CAAAC,MAAM,CAACgB,IAAI,CAACP,IAAI;MACxBQ,MAAM,EAAElB,KAAA,CAAAC,MAAM,CAACkB,KAAK;MACpBC,SAAS,EAAEC,QAAA,CAAAC,aAAa,CAACtB,KAAA,CAAAC,MAAM,CAACgB,IAAI,CAACP,IAAI;gEAC3ChB,mBAAA,CAOM,OAPN6B,UAOM,GANL7B,mBAAA,CAES,QAFT8B,UAES,EAAAzB,gBAAA,CADRsB,QAAA,CAAAI,eAAe,CAACzB,KAAA,CAAAC,MAAM,CAACgB,IAAI,CAACP,IAAI,oBAEjChB,mBAAA,CAEO;MAFDD,KAAK,EApBjBiC,eAAA,EAoBkB,OAAO,EAASL,QAAA,CAAAM,QAAQ,CAAC3B,KAAA,CAAAC,MAAM,CAACgB,IAAI,CAACP,IAAI;wBACjDW,QAAA,CAAAO,YAAY,CAACP,QAAA,CAAAM,QAAQ,CAAC3B,KAAA,CAAAC,MAAM,CAACgB,IAAI,CAACP,IAAI,2B,KAK5CE,mBAAA,UAAa,EACblB,mBAAA,CAKM,OALNmC,WAKM,GAhCVC,gBAAA,CAAA/B,gBAAA,CA4BQW,IAAI,IAAG,GACV,iBAAAhB,mBAAA,CAEM,OAFNqC,WAEM,EAAAhC,gBAAA,CADFsB,QAAA,CAAAW,uBAAuB,CAACtB,IAAI,kB,GAIjCE,mBAAA,mBAAsB,EACtBlB,mBAAA,CAUM,OAVNuC,WAUM,GATLnB,YAAA,CAGiDC,0BAAA;MAF/CC,MAAM,EAAEhB,KAAA,CAAAK,MAAM,CAACY,IAAI,CAACP,IAAI;MACxBQ,MAAM,EAAElB,KAAA,CAAAK,MAAM,CAACc,KAAK;MACpBC,SAAS,EAAEC,QAAA,CAAAC,aAAa,CAACtB,KAAA,CAAAK,MAAM,CAACY,IAAI,CAACP,IAAI;gEAC3ChB,mBAAA,CAIM,OAJNwC,WAIM,GAHLxC,mBAAA,CAES,QAFTyC,WAES,EAAApC,gBAAA,CADRsB,QAAA,CAAAI,eAAe,CAACzB,KAAA,CAAAK,MAAM,CAACY,IAAI,CAACP,IAAI,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}