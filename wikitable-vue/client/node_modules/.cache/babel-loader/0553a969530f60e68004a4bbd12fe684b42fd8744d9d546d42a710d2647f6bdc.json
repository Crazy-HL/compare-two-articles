{"ast":null,"code":"import { ref, watch, onMounted } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content1: String,\n    // 文章1的HTML\n    content2: String // 文章2的HTML\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline1 = ref([]);\n    const outline2 = ref([]);\n    const similarChapters = ref([]); // 存储相似章节的标识，格式为{article1Id: article2Id}\n\n    /**\r\n     * 解析文章，提取标题并返回大纲结构\r\n     */\n    const extractOutline = (content, divId) => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\n        const id = `heading-${index}-${divId}`;\n        heading.id = id;\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    /**\r\n     * 计算相似章节，可以使用余弦相似度、Jaccard相似性等算法\r\n     */\n    const computeSimilarChapters = () => {\n      const similarities = {\n        \"heading-0-div1\": \"heading-1-div2\",\n        // 示例：文章1第0章与文章2第1章相似\n        \"heading-2-div1\": \"heading-3-div2\" // 示例：文章1第2章与文章2第3章相似\n      };\n\n      // 将相似章节映射到similarChapters\n      similarChapters.value = similarities;\n    };\n\n    /**\r\n     * 更新大纲并标记相似章节\r\n     */\n    const markSimilarChapters = () => {\n      // 标记文章1和文章2的相似章节\n      outline1.value = outline1.value.map(item => {\n        item.isSimilar = !!similarChapters.value[item.id]; // 如果该章节在相似章节中，则标记为相似\n        return item;\n      });\n      outline2.value = outline2.value.map(item => {\n        const matchingId = Object.values(similarChapters.value).find(id => id === item.id);\n        item.isSimilar = !!matchingId; // 如果该章节与文章1中的章节相似，则标记为相似\n        return item;\n      });\n    };\n\n    /**\r\n     * 鼠标悬停高亮显示相似章节\r\n     */\n    const highlightSimilar = (item, articleNumber) => {\n      const similarId = articleNumber === 1 ? similarChapters.value[item.id] : Object.keys(similarChapters.value).find(key => similarChapters.value[key] === item.id);\n      if (similarId) {\n        // 高亮显示相似章节\n        const similarItem = articleNumber === 1 ? outline2.value.find(i => i.id === similarId) : outline1.value.find(i => i.id === similarId);\n        if (similarItem) {\n          similarItem.isHighlighted = true;\n        }\n      }\n    };\n\n    /**\r\n     * 重置高亮显示\r\n     */\n    const resetHighlight = articleNumber => {\n      if (articleNumber === 1) {\n        outline1.value.forEach(item => item.isHighlighted = false);\n      } else {\n        outline2.value.forEach(item => item.isHighlighted = false);\n      }\n    };\n\n    // 监听文章内容的变化并更新大纲\n    watch([() => props.content1, () => props.content2], () => {\n      outline1.value = extractOutline(props.content1, \"div1\");\n      outline2.value = extractOutline(props.content2, \"div2\");\n      computeSimilarChapters(); // 计算相似章节\n      markSimilarChapters(); // 标记相似章节\n    }, {\n      immediate: true\n    });\n    onMounted(() => {\n      outline1.value = extractOutline(props.content1, \"div1\");\n      outline2.value = extractOutline(props.content2, \"div2\");\n      computeSimilarChapters(); // 计算相似章节\n      markSimilarChapters(); // 标记相似章节\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline1,\n      outline2,\n      similarChapters,\n      extractOutline,\n      computeSimilarChapters,\n      markSimilarChapters,\n      highlightSimilar,\n      resetHighlight,\n      ref,\n      watch,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","__props","isVisible","outline1","outline2","similarChapters","extractOutline","content","divId","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","text","textContent","computeSimilarChapters","similarities","value","markSimilarChapters","item","isSimilar","matchingId","Object","values","find","highlightSimilar","articleNumber","similarId","keys","key","similarItem","i","isHighlighted","resetHighlight","forEach","content1","content2","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<div class=\"outline-container\">\r\n\t\t<!-- 左侧大纲（文章1） -->\r\n\t\t<div class=\"outline\" :class=\"['left-outline', { visible: isVisible }]\">\r\n\t\t\t<h2>文章1 大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline1\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\t:href=\"'#' + item.id\"\r\n\t\t\t\t\t\t@mouseenter=\"highlightSimilar(item, 1)\"\r\n\t\t\t\t\t\t@mouseleave=\"resetHighlight(1)\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t\t<!-- 显示相似章节标记 -->\r\n\t\t\t\t\t\t<span v-if=\"item.isSimilar\" class=\"similar-icon\">🔗</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<!-- 右侧大纲（文章2） -->\r\n\t\t<div class=\"outline\" :class=\"['right-outline', { visible: isVisible }]\">\r\n\t\t\t<h2>文章2 大纲</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline2\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\t:href=\"'#' + item.id\"\r\n\t\t\t\t\t\t@mouseenter=\"highlightSimilar(item, 2)\"\r\n\t\t\t\t\t\t@mouseleave=\"resetHighlight(2)\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t\t<!-- 显示相似章节标记 -->\r\n\t\t\t\t\t\t<span v-if=\"item.isSimilar\" class=\"similar-icon\">🔗</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent1: String, // 文章1的HTML\r\n\t\tcontent2: String // 文章2的HTML\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline1 = ref([]);\r\n\tconst outline2 = ref([]);\r\n\tconst similarChapters = ref([]); // 存储相似章节的标识，格式为{article1Id: article2Id}\r\n\r\n\t/**\r\n\t * 解析文章，提取标题并返回大纲结构\r\n\t */\r\n\tconst extractOutline = (content, divId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\r\n\t\t\tconst id = `heading-${index}-${divId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * 计算相似章节，可以使用余弦相似度、Jaccard相似性等算法\r\n\t */\r\n\tconst computeSimilarChapters = () => {\r\n\t\tconst similarities = {\r\n\t\t\t\"heading-0-div1\": \"heading-1-div2\", // 示例：文章1第0章与文章2第1章相似\r\n\t\t\t\"heading-2-div1\": \"heading-3-div2\" // 示例：文章1第2章与文章2第3章相似\r\n\t\t};\r\n\r\n\t\t// 将相似章节映射到similarChapters\r\n\t\tsimilarChapters.value = similarities;\r\n\t};\r\n\r\n\t/**\r\n\t * 更新大纲并标记相似章节\r\n\t */\r\n\tconst markSimilarChapters = () => {\r\n\t\t// 标记文章1和文章2的相似章节\r\n\t\toutline1.value = outline1.value.map(item => {\r\n\t\t\titem.isSimilar = !!similarChapters.value[item.id]; // 如果该章节在相似章节中，则标记为相似\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\toutline2.value = outline2.value.map(item => {\r\n\t\t\tconst matchingId = Object.values(similarChapters.value).find(\r\n\t\t\t\tid => id === item.id\r\n\t\t\t);\r\n\t\t\titem.isSimilar = !!matchingId; // 如果该章节与文章1中的章节相似，则标记为相似\r\n\t\t\treturn item;\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * 鼠标悬停高亮显示相似章节\r\n\t */\r\n\tconst highlightSimilar = (item, articleNumber) => {\r\n\t\tconst similarId =\r\n\t\t\tarticleNumber === 1\r\n\t\t\t\t? similarChapters.value[item.id]\r\n\t\t\t\t: Object.keys(similarChapters.value).find(\r\n\t\t\t\t\t\tkey => similarChapters.value[key] === item.id\r\n\t\t\t\t  );\r\n\t\tif (similarId) {\r\n\t\t\t// 高亮显示相似章节\r\n\t\t\tconst similarItem =\r\n\t\t\t\tarticleNumber === 1\r\n\t\t\t\t\t? outline2.value.find(i => i.id === similarId)\r\n\t\t\t\t\t: outline1.value.find(i => i.id === similarId);\r\n\t\t\tif (similarItem) {\r\n\t\t\t\tsimilarItem.isHighlighted = true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * 重置高亮显示\r\n\t */\r\n\tconst resetHighlight = articleNumber => {\r\n\t\tif (articleNumber === 1) {\r\n\t\t\toutline1.value.forEach(item => (item.isHighlighted = false));\r\n\t\t} else {\r\n\t\t\toutline2.value.forEach(item => (item.isHighlighted = false));\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听文章内容的变化并更新大纲\r\n\twatch(\r\n\t\t[() => props.content1, () => props.content2],\r\n\t\t() => {\r\n\t\t\toutline1.value = extractOutline(props.content1, \"div1\");\r\n\t\t\toutline2.value = extractOutline(props.content2, \"div2\");\r\n\t\t\tcomputeSimilarChapters(); // 计算相似章节\r\n\t\t\tmarkSimilarChapters(); // 标记相似章节\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\tonMounted(() => {\r\n\t\toutline1.value = extractOutline(props.content1, \"div1\");\r\n\t\toutline2.value = extractOutline(props.content2, \"div2\");\r\n\t\tcomputeSimilarChapters(); // 计算相似章节\r\n\t\tmarkSimilarChapters(); // 标记相似章节\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* **大纲容器样式** */\r\n\t.outline-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\t.outline {\r\n\t\twidth: 45%;\r\n\t\tpadding: 10px;\r\n\t\toverflow-y: auto;\r\n\t\tmax-height: 80vh;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t/* **高亮显示相似章节** */\r\n\t.outline li a:hover {\r\n\t\tbackground-color: #f0f0f0;\r\n\t}\r\n\r\n\t.similar-icon {\r\n\t\tcolor: #ff9800; /* 你可以选择其他颜色 */\r\n\t\tfont-size: 16px;\r\n\t\tmargin-left: 8px;\r\n\t}\r\n\r\n\t/* **高亮显示整个大纲的章节**\r\n.outline li.highlighted a {\r\n\tbackground-color: #f0f0f0;\r\n}\r\n*/\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}