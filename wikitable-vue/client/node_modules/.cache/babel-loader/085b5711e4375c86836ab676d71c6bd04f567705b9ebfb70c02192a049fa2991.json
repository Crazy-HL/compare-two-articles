{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */), _createCommentVNode(\" 加载动画 \"), $setup.loading ? (_openBlock(), _createBlock($setup[\"LoadingSpinner\"], {\n    key: 0\n  })) : $setup.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 错误信息 \"), _createVNode($setup[\"ErrorDisplay\"], {\n    message: $setup.error,\n    onRetry: $setup.fetchWikipediaContent\n  }, null, 8 /* PROPS */, [\"message\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 文章内容 \"), _createVNode($setup[\"WikipediaContent\"], {\n    content: $setup.pageHtml,\n    onSelect: _ctx.handleSelection\n  }, null, 8 /* PROPS */, [\"content\", \"onSelect\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 弹出框 \"), _createVNode($setup[\"TextPopup\"], {\n    visible: $setup.showPopup[$props.divId],\n    content: $setup.selectedText[$props.divId],\n    containerClass: $props.divId === 'div1' ? 'chart-container1' : 'chart-container2',\n    containerRef: $setup.divRef,\n    onClose: _ctx.closePopup\n  }, null, 8 /* PROPS */, [\"visible\", \"content\", \"containerClass\", \"containerRef\", \"onClose\"])], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","selectContentClass","id","divId","ref","_createElementVNode","_toDisplayString","pageTitle","_createCommentVNode","$setup","loading","_createBlock","key","error","_Fragment","_createVNode","message","onRetry","fetchWikipediaContent","content","pageHtml","onSelect","_ctx","handleSelection","visible","showPopup","selectedText","containerClass","containerRef","divRef","onClose","closePopup","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick, watch } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\tconst sections = ref([]); // 存储章节信息\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 动态注入 Wikipedia 样式\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\r\n\t\t\t// 提取章节信息\r\n\t\t\textractSections(contentElement);\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **提取章节信息**\r\n\tconst extractSections = contentElement => {\r\n\t\tconst headings = contentElement.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tsections.value = Array.from(headings).map(heading => ({\r\n\t\t\tid: heading.id,\r\n\t\t\ttext: heading.innerText,\r\n\t\t\telement: heading\r\n\t\t}));\r\n\t};\r\n\r\n\t// **监听滚动事件**\r\n\tconst handleScroll = () => {\r\n\t\tif (!divRef.value) return;\r\n\r\n\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\tconst currentSection = findCurrentSection(scrollTop);\r\n\r\n\t\tif (currentSection) {\r\n\t\t\tbus.emit(\"scrollToSection\", { sectionText: currentSection.text });\r\n\t\t}\r\n\t};\r\n\r\n\t// **查找当前章节**\r\n\tconst findCurrentSection = scrollTop => {\r\n\t\tfor (let i = sections.value.length - 1; i >= 0; i--) {\r\n\t\t\tconst section = sections.value[i];\r\n\t\t\tif (section.element.offsetTop <= scrollTop + 100) {\r\n\t\t\t\treturn section;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// **滚动到指定章节**\r\n\tconst scrollToSection = sectionText => {\r\n\t\tconst section = sections.value.find(s => s.text === sectionText);\r\n\t\tif (section && divRef.value) {\r\n\t\t\tdivRef.value.scrollTo({\r\n\t\t\t\ttop: section.element.offsetTop,\r\n\t\t\t\tbehavior: \"smooth\"\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\t// 监听滚动到章节事件\r\n\t\tbus.on(\"scrollToSection\", scrollToSection);\r\n\t});\r\n\r\n\t// **组件卸载时解绑事件**\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", handleScroll);\r\n\t\t}\r\n\t\tbus.off(\"scrollToSection\", scrollToSection);\r\n\t});\r\n</script>\r\n"],"mappings":";mBAAA;;uBACCA,mBAAA,CAwBM;IAxBAC,KAAK,EADZC,eAAA,UACuBC,MAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBN,MAAA,CAAAO,SAAS,kBAEhBC,mBAAA,UAAa,EACSC,MAAA,CAAAC,OAAO,I,cAA7BC,YAAA,CAAiCF,MAAA;IALnCG,GAAA;EAAA,MAScH,MAAA,CAAAI,KAAK,I,cADjBhB,mBAAA,CAGkCiB,SAAA;IAXpCF,GAAA;EAAA,IAOEJ,mBAAA,UAAa,EACbO,YAAA,CAGkCN,MAAA;IADhCO,OAAO,EAAEP,MAAA,CAAAI,KAAK;IACdI,OAAK,EAAER,MAAA,CAAAS;0GAGTrB,mBAAA,CAAyEiB,SAAA;IAd3EF,GAAA;EAAA,IAaEJ,mBAAA,UAAa,EACbO,YAAA,CAAyEN,MAAA;IAA/CU,OAAO,EAAEV,MAAA,CAAAW,QAAQ;IAAGC,QAAM,EAAEC,IAAA,CAAAC;sGAEtDf,mBAAA,SAAY,EACZO,YAAA,CAOuBN,MAAA;IANrBe,OAAO,EAAEf,MAAA,CAAAgB,SAAS,CAACzB,MAAA,CAAAG,KAAK;IACxBgB,OAAO,EAAEV,MAAA,CAAAiB,YAAY,CAAC1B,MAAA,CAAAG,KAAK;IAC3BwB,cAAc,EAAQ3B,MAAA,CAAAG,KAAK;IAG3ByB,YAAY,EAAEnB,MAAA,CAAAoB,MAAM;IACpBC,OAAK,EAAER,IAAA,CAAAS;wHAxBXC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}