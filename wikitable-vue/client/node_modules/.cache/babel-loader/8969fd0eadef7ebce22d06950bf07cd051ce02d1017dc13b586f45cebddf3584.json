{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nimport { COMPARABLE_FIELDS } from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n    const previousAnalysis = ref(\"\");\n    const currentComparisonContext = ref(null);\n    const leftInfobox = ref(null); // 新增：存储左侧Infobox数据\n    const rightInfobox = ref(null); // 新增：存储右侧Infobox数据\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n\n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    };\n    const handleDiv1Event = data => {\n      div1RawData.value = data.content;\n      leftInfobox.value = data.infobox; // 存储左侧Infobox数据\n    };\n    const handleDiv3Event = data => {\n      div3RawData.value = data.content;\n      rightInfobox.value = data.infobox; // 存储右侧Infobox数据\n    };\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = data; // 另一种获取Infobox数据的方式\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = data; // 另一种获取Infobox数据的方式\n      });\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n      bus.off(\"div1_InfoboxData\");\n      bus.off(\"div3_InfoboxData\");\n    });\n    const formatAnalysisResult = text => {\n      if (!text) return \"\";\n      text = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\n      text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n      text = text.replace(/\\n/g, \"<br>\");\n      text = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\n      text = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\n      return text;\n    };\n    const handleAttributeComparison = async _ref2 => {\n      let {\n        fieldKey,\n        leftData,\n        rightData,\n        leftTitle,\n        rightTitle,\n        fieldType,\n        fieldLabel\n      } = _ref2;\n      if (!leftData || !rightData) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"请先选择要对比的数据\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      isLoading.value = true;\n      try {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `正在对比分析<strong>${fieldKey}</strong>属性......`,\n          timestamp: new Date().toLocaleString()\n        });\n\n        // 保存当前对比上下文（包含完整的Infobox数据）\n        currentComparisonContext.value = {\n          fieldKey,\n          leftData,\n          rightData,\n          leftTitle,\n          rightTitle,\n          fieldType,\n          fieldLabel,\n          allFields: COMPARABLE_FIELDS,\n          leftInfobox: leftInfobox.value,\n          // 存储完整左侧Infobox\n          rightInfobox: rightInfobox.value // 存储完整右侧Infobox\n        };\n        await api.post(\"compare_attributes\", {\n          chartData: {\n            leftData,\n            rightData,\n            leftTitle,\n            rightTitle,\n            fieldKey,\n            fieldType,\n            allFields: COMPARABLE_FIELDS,\n            leftInfobox: leftInfobox.value,\n            // 传递完整左侧Infobox\n            rightInfobox: rightInfobox.value // 传递完整右侧Infobox\n          },\n          chartType: \"comparison\"\n        }, response => {\n          if (response?.analysis) {\n            previousAnalysis.value = response.analysis;\n            const formattedAnalysis = formatAnalysisResult(response.analysis);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnalysis,\n              timestamp: new Date().toLocaleString()\n            });\n          } else {\n            throw new Error(\"无效的响应格式\");\n          }\n        }, error => {\n          throw error;\n        });\n      } catch (error) {\n        console.error(\"对比分析失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `对比分析失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n    const askQuestion = async () => {\n      if (!userQuestion.value.trim()) {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: \"问题不能为空\",\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n        return;\n      }\n      const question = userQuestion.value;\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      isLoading.value = true;\n      try {\n        // 检查是否是针对对比分析的后续问题\n        const isFollowUp = currentComparisonContext.value && (question.includes(\"原因\") || question.includes(\"为什么\") || question.includes(\"分析\") || question.includes(\"结合\"));\n        if (isFollowUp && currentComparisonContext.value) {\n          // 处理对比分析的后续问题 - 使用完整的Infobox数据\n          await api.post(\"compare_attributes\", {\n            chartData: {\n              ...currentComparisonContext.value,\n              fieldKey: question\n            },\n            chartType: \"comparison\",\n            followUp: true,\n            previousAnalysis: previousAnalysis.value\n          }, response => {\n            const formattedAnswer = formatAnalysisResult(response.analysis);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnswer,\n              timestamp: new Date().toLocaleString()\n            });\n            scrollToBottom();\n          }, error => {\n            throw error;\n          });\n        } else {\n          // 修改后的原始提问逻辑 - 使用两个Infobox的完整数据\n          if (!leftInfobox.value || !rightInfobox.value) {\n            throw new Error(\"请先加载两个Infobox的数据\");\n          }\n          await api.post(\"gpt_ask\",\n          // 注意：这里使用gpt_ask而不是gpt_ask_chart\n          {\n            question: question,\n            leftInfobox: leftInfobox.value,\n            rightInfobox: rightInfobox.value\n          }, response => {\n            const formattedAnswer = formatAnalysisResult(response.answer);\n            chatHistory.value.push({\n              role: \"assistant\",\n              content: formattedAnswer,\n              timestamp: new Date().toLocaleString()\n            });\n            scrollToBottom();\n          }, error => {\n            throw error;\n          });\n        }\n      } catch (error) {\n        console.error(\"请求失败:\", error);\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `请求失败: ${error.message || \"未知错误\"}`,\n          timestamp: new Date().toLocaleString(),\n          error: true\n        });\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      previousAnalysis,\n      currentComparisonContext,\n      leftInfobox,\n      rightInfobox,\n      loadChatHistory,\n      scrollToBottom,\n      handleDiv1Event,\n      handleDiv3Event,\n      formatAnalysisResult,\n      handleAttributeComparison,\n      askQuestion,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable,\n      COMPARABLE_FIELDS\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","COMPARABLE_FIELDS","userQuestion","chatHistory","div1RawData","div3RawData","isLoading","previousAnalysis","currentComparisonContext","leftInfobox","rightInfobox","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","handleDiv1Event","data","content","infobox","handleDiv3Event","on","off","formatAnalysisResult","text","replace","handleAttributeComparison","_ref2","fieldKey","leftData","rightData","leftTitle","rightTitle","fieldType","fieldLabel","push","role","timestamp","Date","toLocaleString","allFields","api","post","chartData","chartType","response","analysis","formattedAnalysis","Error","message","askQuestion","trim","question","isFollowUp","includes","followUp","formattedAnswer","answer"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport { COMPARABLE_FIELDS } from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst previousAnalysis = ref(\"\");\r\n\tconst currentComparisonContext = ref(null);\r\n\tconst leftInfobox = ref(null); // 新增：存储左侧Infobox数据\r\n\tconst rightInfobox = ref(null); // 新增：存储右侧Infobox数据\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 滚动到底部\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => {\r\n\t\tdiv1RawData.value = data.content;\r\n\t\tleftInfobox.value = data.infobox; // 存储左侧Infobox数据\r\n\t};\r\n\r\n\tconst handleDiv3Event = data => {\r\n\t\tdiv3RawData.value = data.content;\r\n\t\trightInfobox.value = data.infobox; // 存储右侧Infobox数据\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = data; // 另一种获取Infobox数据的方式\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = data; // 另一种获取Infobox数据的方式\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!leftData || !rightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在对比分析<strong>${fieldKey}</strong>属性......`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\t// 保存当前对比上下文（包含完整的Infobox数据）\r\n\t\t\tcurrentComparisonContext.value = {\r\n\t\t\t\tfieldKey,\r\n\t\t\t\tleftData,\r\n\t\t\t\trightData,\r\n\t\t\t\tleftTitle,\r\n\t\t\t\trightTitle,\r\n\t\t\t\tfieldType,\r\n\t\t\t\tfieldLabel,\r\n\t\t\t\tallFields: COMPARABLE_FIELDS,\r\n\t\t\t\tleftInfobox: leftInfobox.value, // 存储完整左侧Infobox\r\n\t\t\t\trightInfobox: rightInfobox.value // 存储完整右侧Infobox\r\n\t\t\t};\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType,\r\n\t\t\t\t\t\tallFields: COMPARABLE_FIELDS,\r\n\t\t\t\t\t\tleftInfobox: leftInfobox.value, // 传递完整左侧Infobox\r\n\t\t\t\t\t\trightInfobox: rightInfobox.value // 传递完整右侧Infobox\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\tpreviousAnalysis.value = response.analysis;\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 检查是否是针对对比分析的后续问题\r\n\t\t\tconst isFollowUp =\r\n\t\t\t\tcurrentComparisonContext.value &&\r\n\t\t\t\t(question.includes(\"原因\") ||\r\n\t\t\t\t\tquestion.includes(\"为什么\") ||\r\n\t\t\t\t\tquestion.includes(\"分析\") ||\r\n\t\t\t\t\tquestion.includes(\"结合\"));\r\n\r\n\t\t\tif (isFollowUp && currentComparisonContext.value) {\r\n\t\t\t\t// 处理对比分析的后续问题 - 使用完整的Infobox数据\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\t\t...currentComparisonContext.value,\r\n\t\t\t\t\t\t\tfieldKey: question\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\t\tfollowUp: true,\r\n\t\t\t\t\t\tpreviousAnalysis: previousAnalysis.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// 修改后的原始提问逻辑 - 使用两个Infobox的完整数据\r\n\t\t\t\tif (!leftInfobox.value || !rightInfobox.value) {\r\n\t\t\t\t\tthrow new Error(\"请先加载两个Infobox的数据\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"gpt_ask\", // 注意：这里使用gpt_ask而不是gpt_ask_chart\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestion: question,\r\n\t\t\t\t\t\tleftInfobox: leftInfobox.value,\r\n\t\t\t\t\t\trightInfobox: rightInfobox.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tscrollToBottom();\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.message-meta {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #999;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tposition: sticky;\r\n\t\tbottom: 0;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:disabled {\r\n\t\tbackground-color: #eee;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\tbackground-color: #45a049;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\tbutton:active:not(:disabled) {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}