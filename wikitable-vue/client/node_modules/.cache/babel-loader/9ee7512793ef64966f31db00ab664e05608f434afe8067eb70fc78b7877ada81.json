{"ast":null,"code":"import { ref, watch, onMounted, onUnmounted, nextTick } from \"vue\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String,\n    // \"div1\" 或 \"div3\"\n    linkedOutline: Array // 关联的大纲数据\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const buttonStyle = ref({});\n    const outlineStyle = ref({});\n\n    // **切换大纲的显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n      updatePosition(); // 切换时更新按钮和大纲位置\n    };\n\n    // **更新按钮位置和大纲位置**\n    const updatePosition = () => {\n      const targetDiv = document.getElementById(props.divId);\n      if (targetDiv) {\n        const rect = targetDiv.getBoundingClientRect();\n        const scrollTop = window.scrollY || document.documentElement.scrollTop;\n\n        // 设置按钮的位置\n        buttonStyle.value = {\n          position: \"absolute\",\n          top: `${rect.top + scrollTop + 10}px`,\n          [props.divId === \"div1\" ? \"right\" : \"left\"]: `${rect.right - 50}px`,\n          zIndex: 2000\n        };\n\n        // 设置大纲的位置\n        outlineStyle.value = {\n          position: \"absolute\",\n          top: `${rect.top + scrollTop + 50}px`,\n          [props.divId === \"div1\" ? \"right\" : \"left\"]: `${rect.right - 260}px`,\n          zIndex: 1000\n        };\n      }\n    };\n\n    // **监听窗口调整，保持按钮和大纲位置**\n    onMounted(() => {\n      updatePosition(); // 初始化时更新位置\n      window.addEventListener(\"resize\", updatePosition);\n      window.addEventListener(\"scroll\", updatePosition);\n    });\n    onUnmounted(() => {\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition);\n    });\n\n    // **滚动到章节**\n    const scrollToChapter = id => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    };\n\n    // **解析文章，提取 h1-h6 标题，并计算缩进级别**\n    const extractOutline = content => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\n        const id = `heading-${index}-${props.divId}`;\n        heading.id = id; // 确保 HTML 里有 ID\n        return {\n          id,\n          text: heading.textContent,\n          level\n        };\n      });\n    };\n\n    // **监听 content 变化，更新大纲**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent);\n    }, {\n      immediate: true\n    });\n\n    // **检查是否存在关联章节**\n    const isLinked = item => {\n      if (!props.linkedOutline) return false;\n      // 检查大纲是否关联\n      return props.linkedOutline.some(linked => linked.leftId === item.id || linked.rightId === item.id);\n    };\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      buttonStyle,\n      outlineStyle,\n      toggleOutline,\n      updatePosition,\n      scrollToChapter,\n      extractOutline,\n      isLinked,\n      ref,\n      watch,\n      onMounted,\n      onUnmounted,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","nextTick","props","__props","isVisible","outline","buttonStyle","outlineStyle","toggleOutline","value","updatePosition","targetDiv","document","getElementById","divId","rect","getBoundingClientRect","scrollTop","window","scrollY","documentElement","position","top","right","zIndex","addEventListener","removeEventListener","scrollToChapter","id","element","scrollIntoView","behavior","extractOutline","content","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","text","textContent","newContent","immediate","isLinked","item","linkedOutline","some","linked","leftId","rightId"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button\r\n\t\t@click=\"toggleOutline\"\r\n\t\t:class=\"['toggle-btn', divId === 'div1' ? 'right' : 'left']\"\r\n\t\t:style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div\r\n\t\tv-if=\"isVisible\"\r\n\t\t:class=\"['outline-container', divId === 'div1' ? 'right' : 'left']\"\r\n\t\t:style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ highlight: isLinked(item), linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">\r\n\t\t\t\t\t\t{{ item.text }}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String, // \"div1\" 或 \"div3\"\r\n\t\tlinkedOutline: Array // 关联的大纲数据\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\r\n\t// **切换大纲的显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t\tupdatePosition(); // 切换时更新按钮和大纲位置\r\n\t};\r\n\r\n\t// **更新按钮位置和大纲位置**\r\n\tconst updatePosition = () => {\r\n\t\tconst targetDiv = document.getElementById(props.divId);\r\n\t\tif (targetDiv) {\r\n\t\t\tconst rect = targetDiv.getBoundingClientRect();\r\n\t\t\tconst scrollTop = window.scrollY || document.documentElement.scrollTop;\r\n\r\n\t\t\t// 设置按钮的位置\r\n\t\t\tbuttonStyle.value = {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: `${rect.top + scrollTop + 10}px`,\r\n\t\t\t\t[props.divId === \"div1\" ? \"right\" : \"left\"]: `${rect.right - 50}px`,\r\n\t\t\t\tzIndex: 2000\r\n\t\t\t};\r\n\r\n\t\t\t// 设置大纲的位置\r\n\t\t\toutlineStyle.value = {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: `${rect.top + scrollTop + 50}px`,\r\n\t\t\t\t[props.divId === \"div1\" ? \"right\" : \"left\"]: `${rect.right - 260}px`,\r\n\t\t\t\tzIndex: 1000\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// **监听窗口调整，保持按钮和大纲位置**\r\n\tonMounted(() => {\r\n\t\tupdatePosition(); // 初始化时更新位置\r\n\t\twindow.addEventListener(\"resize\", updatePosition);\r\n\t\twindow.addEventListener(\"scroll\", updatePosition);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\twindow.removeEventListener(\"resize\", updatePosition);\r\n\t\twindow.removeEventListener(\"scroll\", updatePosition);\r\n\t});\r\n\r\n\t// **滚动到章节**\r\n\tconst scrollToChapter = id => {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif (element) {\r\n\t\t\telement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t}\r\n\t};\r\n\r\n\t// **解析文章，提取 h1-h6 标题，并计算缩进级别**\r\n\tconst extractOutline = content => {\r\n\t\tif (!content) return [];\r\n\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1)); // 提取 h1-h6 的级别\r\n\t\t\tconst id = `heading-${index}-${props.divId}`;\r\n\t\t\theading.id = id; // 确保 HTML 里有 ID\r\n\t\t\treturn { id, text: heading.textContent, level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **监听 content 变化，更新大纲**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent);\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **检查是否存在关联章节**\r\n\tconst isLinked = item => {\r\n\t\tif (!props.linkedOutline) return false;\r\n\t\t// 检查大纲是否关联\r\n\t\treturn props.linkedOutline.some(\r\n\t\t\tlinked => linked.leftId === item.id || linked.rightId === item.id\r\n\t\t);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 按钮样式 */\r\n\t.toggle-btn {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 50%;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.toggle-btn:hover {\r\n\t\tbackground-color: #005f8a;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t/* 大纲容器 */\r\n\t.outline-container {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\t\tpadding: 15px;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow-y: auto;\r\n\t\twidth: 250px;\r\n\t\ttransition: all 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.outline ul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.outline li {\r\n\t\tmargin-bottom: 8px;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: padding-left 0.2s ease-in-out;\r\n\t}\r\n\r\n\t/* 高亮和标识 */\r\n\t.outline li.highlight a {\r\n\t\tbackground-color: #ffff00;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\r\n\t.outline li.linked a {\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #0077b6;\r\n\t}\r\n\r\n\t.outline li a:hover {\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #005f8a;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}