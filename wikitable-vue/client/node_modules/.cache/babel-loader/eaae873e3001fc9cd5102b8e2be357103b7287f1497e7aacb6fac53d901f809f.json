{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, watch, onMounted, onUnmounted } from \"vue\";\nimport eventBus from \"@/js/eventBus.js\";\nexport default {\n  __name: 'ArticleOutline',\n  props: {\n    content: String,\n    // 文章 HTML\n    divId: String // \"div1\" 或 \"div3\"\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const isVisible = ref(false);\n    const outline = ref([]);\n    const buttonStyle = ref({});\n    const outlineStyle = ref({});\n    const linkedOutline = ref([]); // 全局共享匹配结果\n\n    // **切换大纲显示**\n    const toggleOutline = () => {\n      isVisible.value = !isVisible.value;\n    };\n\n    // **提取 h1-h6 作为大纲**\n    const extractOutline = (content, containerId) => {\n      if (!content) return [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      return Array.from(headings).map((heading, index) => {\n        const level = parseInt(heading.tagName.substring(1));\n        const id = `heading-${index}-${containerId}`;\n        heading.id = id;\n        return {\n          id,\n          text: heading.textContent.trim(),\n          level\n        };\n      });\n    };\n\n    // **文本相似度计算**\n    const normalizeText = text => text.toLowerCase();\n\n    // 编辑距离计算\n    const levenshteinDistance = (a, b) => {\n      const dp = Array(a.length + 1).fill(null).map(() => Array(b.length + 1).fill(0));\n      for (let i = 0; i <= a.length; i++) dp[i][0] = i;\n      for (let j = 0; j <= b.length; j++) dp[0][j] = j;\n      for (let i = 1; i <= a.length; i++) {\n        for (let j = 1; j <= b.length; j++) {\n          const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n          dp[i][j] = Math.min(dp[i - 1][j] + 1, dp[i][j - 1] + 1, dp[i - 1][j - 1] + cost);\n        }\n      }\n      return dp[a.length][b.length];\n    };\n\n    // 关键词匹配\n    const hasCommonWords = (text1, text2) => {\n      const words1 = new Set(text1.split(/\\s+/));\n      const words2 = new Set(text2.split(/\\s+/));\n      return [...words1].filter(word => words2.has(word)).length > 0;\n    };\n\n    // 判定相似性\n    const isSimilar = (text1, text2) => {\n      return levenshteinDistance(text1, text2) <= 2 || hasCommonWords(text1, text2);\n    };\n\n    // **生成大纲匹配**\n    const generateLinkedOutline = (outline1, outline2) => {\n      const linked = [];\n      outline1.forEach(item1 => {\n        outline2.forEach(item2 => {\n          if (isSimilar(normalizeText(item1.text), normalizeText(item2.text))) {\n            linked.push({\n              leftId: item1.id,\n              rightId: item2.id\n            });\n          }\n        });\n      });\n      return linked;\n    };\n\n    // **监听 content 变化**\n    watch(() => props.content, newContent => {\n      outline.value = extractOutline(newContent, props.divId);\n\n      // 只有 div1 触发匹配，div3 直接监听 eventBus\n      if (props.divId === \"div1\") {\n        const otherContent = document.getElementById(\"div3\")?.innerHTML;\n        const otherOutline = extractOutline(otherContent, \"div3\");\n        const newLinkedOutline = generateLinkedOutline(outline.value, otherOutline);\n        linkedOutline.value = newLinkedOutline;\n\n        // 通过 eventBus 同步匹配结果\n        eventBus.emit(\"update-linked-outline\", newLinkedOutline);\n      }\n    }, {\n      immediate: true\n    });\n\n    // **监听 eventBus**\n    eventBus.on(\"update-linked-outline\", newLinkedOutline => {\n      linkedOutline.value = newLinkedOutline;\n    });\n\n    // **检查是否有匹配**\n    const isLinked = item => linkedOutline.value.some(linked => linked.leftId === item.id || linked.rightId === item.id);\n\n    // **滚动到匹配章节**\n    const scrollToChapter = id => {\n      document.getElementById(id)?.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      const linkedItem = linkedOutline.value.find(linked => linked.leftId === id || linked.rightId === id);\n      if (linkedItem) {\n        const targetId = linkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\n        eventBus.emit(\"scroll-to-chapter\", targetId);\n      }\n    };\n    eventBus.on(\"scroll-to-chapter\", targetId => {\n      document.getElementById(targetId)?.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    // **更新大纲按钮位置**\n    const updatePosition = () => {\n      const isDiv1 = props.divId === \"div1\";\n      buttonStyle.value = {\n        position: \"absolute\",\n        top: \"10px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\"\n      };\n      outlineStyle.value = {\n        position: \"absolute\",\n        top: \"50px\",\n        [isDiv1 ? \"right\" : \"left\"]: \"10px\",\n        width: \"260px\"\n      };\n    };\n\n    // **初始化**\n    onMounted(() => {\n      outline.value = extractOutline(props.content, props.divId);\n      updatePosition();\n    });\n    onUnmounted(() => {\n      eventBus.off(\"update-linked-outline\");\n      eventBus.off(\"scroll-to-chapter\");\n    });\n    const __returned__ = {\n      props,\n      isVisible,\n      outline,\n      buttonStyle,\n      outlineStyle,\n      linkedOutline,\n      toggleOutline,\n      extractOutline,\n      normalizeText,\n      levenshteinDistance,\n      hasCommonWords,\n      isSimilar,\n      generateLinkedOutline,\n      isLinked,\n      scrollToChapter,\n      updatePosition,\n      ref,\n      watch,\n      onMounted,\n      onUnmounted,\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onUnmounted","eventBus","props","__props","isVisible","outline","buttonStyle","outlineStyle","linkedOutline","toggleOutline","value","extractOutline","content","containerId","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","index","level","parseInt","tagName","substring","id","text","textContent","trim","normalizeText","toLowerCase","levenshteinDistance","a","b","dp","length","fill","i","j","cost","Math","min","hasCommonWords","text1","text2","words1","Set","split","words2","filter","word","has","isSimilar","generateLinkedOutline","outline1","outline2","linked","forEach","item1","item2","push","leftId","rightId","newContent","divId","otherContent","document","getElementById","innerHTML","otherOutline","newLinkedOutline","emit","immediate","on","isLinked","item","some","scrollToChapter","scrollIntoView","behavior","linkedItem","find","targetId","updatePosition","isDiv1","position","top","width","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ArticleOutline.vue"],"sourcesContent":["<template>\r\n\t<!-- 大纲切换按钮 -->\r\n\t<button @click=\"toggleOutline\" class=\"toggle-btn\" :style=\"buttonStyle\">\r\n\t\t<svg v-if=\"!isVisible\" class=\"icon\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z\"></path>\r\n\t\t</svg>\r\n\t\t<svg v-else class=\"icon close\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path fill=\"currentColor\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n\t\t</svg>\r\n\t</button>\r\n\r\n\t<!-- 大纲内容 -->\r\n\t<div v-if=\"isVisible\" class=\"outline-container\" :style=\"outlineStyle\">\r\n\t\t<div class=\"outline\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li\r\n\t\t\t\t\tv-for=\"(item, index) in outline\"\r\n\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t:class=\"{ highlight: isLinked(item), linked: isLinked(item) }\"\r\n\t\t\t\t\t:style=\"{ paddingLeft: `${(item.level - 1) * 15}px` }\">\r\n\t\t\t\t\t<a :href=\"'#' + item.id\" @click.prevent=\"scrollToChapter(item.id)\">{{\r\n\t\t\t\t\t\titem.text\r\n\t\t\t\t\t}}</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, watch, onMounted, onUnmounted } from \"vue\";\r\n\timport eventBus from \"@/js/eventBus.js\";\r\n\r\n\tconst props = defineProps({\r\n\t\tcontent: String, // 文章 HTML\r\n\t\tdivId: String // \"div1\" 或 \"div3\"\r\n\t});\r\n\r\n\tconst isVisible = ref(false);\r\n\tconst outline = ref([]);\r\n\tconst buttonStyle = ref({});\r\n\tconst outlineStyle = ref({});\r\n\tconst linkedOutline = ref([]); // 全局共享匹配结果\r\n\r\n\t// **切换大纲显示**\r\n\tconst toggleOutline = () => {\r\n\t\tisVisible.value = !isVisible.value;\r\n\t};\r\n\r\n\t// **提取 h1-h6 作为大纲**\r\n\tconst extractOutline = (content, containerId) => {\r\n\t\tif (!content) return [];\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(content, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n\t\treturn Array.from(headings).map((heading, index) => {\r\n\t\t\tconst level = parseInt(heading.tagName.substring(1));\r\n\t\t\tconst id = `heading-${index}-${containerId}`;\r\n\t\t\theading.id = id;\r\n\t\t\treturn { id, text: heading.textContent.trim(), level };\r\n\t\t});\r\n\t};\r\n\r\n\t// **文本相似度计算**\r\n\tconst normalizeText = text => text.toLowerCase();\r\n\r\n\t// 编辑距离计算\r\n\tconst levenshteinDistance = (a, b) => {\r\n\t\tconst dp = Array(a.length + 1)\r\n\t\t\t.fill(null)\r\n\t\t\t.map(() => Array(b.length + 1).fill(0));\r\n\r\n\t\tfor (let i = 0; i <= a.length; i++) dp[i][0] = i;\r\n\t\tfor (let j = 0; j <= b.length; j++) dp[0][j] = j;\r\n\r\n\t\tfor (let i = 1; i <= a.length; i++) {\r\n\t\t\tfor (let j = 1; j <= b.length; j++) {\r\n\t\t\t\tconst cost = a[i - 1] === b[j - 1] ? 0 : 1;\r\n\t\t\t\tdp[i][j] = Math.min(\r\n\t\t\t\t\tdp[i - 1][j] + 1,\r\n\t\t\t\t\tdp[i][j - 1] + 1,\r\n\t\t\t\t\tdp[i - 1][j - 1] + cost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dp[a.length][b.length];\r\n\t};\r\n\r\n\t// 关键词匹配\r\n\tconst hasCommonWords = (text1, text2) => {\r\n\t\tconst words1 = new Set(text1.split(/\\s+/));\r\n\t\tconst words2 = new Set(text2.split(/\\s+/));\r\n\t\treturn [...words1].filter(word => words2.has(word)).length > 0;\r\n\t};\r\n\r\n\t// 判定相似性\r\n\tconst isSimilar = (text1, text2) => {\r\n\t\treturn (\r\n\t\t\tlevenshteinDistance(text1, text2) <= 2 || hasCommonWords(text1, text2)\r\n\t\t);\r\n\t};\r\n\r\n\t// **生成大纲匹配**\r\n\tconst generateLinkedOutline = (outline1, outline2) => {\r\n\t\tconst linked = [];\r\n\t\toutline1.forEach(item1 => {\r\n\t\t\toutline2.forEach(item2 => {\r\n\t\t\t\tif (isSimilar(normalizeText(item1.text), normalizeText(item2.text))) {\r\n\t\t\t\t\tlinked.push({ leftId: item1.id, rightId: item2.id });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn linked;\r\n\t};\r\n\r\n\t// **监听 content 变化**\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\toutline.value = extractOutline(newContent, props.divId);\r\n\r\n\t\t\t// 只有 div1 触发匹配，div3 直接监听 eventBus\r\n\t\t\tif (props.divId === \"div1\") {\r\n\t\t\t\tconst otherContent = document.getElementById(\"div3\")?.innerHTML;\r\n\t\t\t\tconst otherOutline = extractOutline(otherContent, \"div3\");\r\n\t\t\t\tconst newLinkedOutline = generateLinkedOutline(\r\n\t\t\t\t\toutline.value,\r\n\t\t\t\t\totherOutline\r\n\t\t\t\t);\r\n\t\t\t\tlinkedOutline.value = newLinkedOutline;\r\n\r\n\t\t\t\t// 通过 eventBus 同步匹配结果\r\n\t\t\t\teventBus.emit(\"update-linked-outline\", newLinkedOutline);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ immediate: true }\r\n\t);\r\n\r\n\t// **监听 eventBus**\r\n\teventBus.on(\"update-linked-outline\", newLinkedOutline => {\r\n\t\tlinkedOutline.value = newLinkedOutline;\r\n\t});\r\n\r\n\t// **检查是否有匹配**\r\n\tconst isLinked = item =>\r\n\t\tlinkedOutline.value.some(\r\n\t\t\tlinked => linked.leftId === item.id || linked.rightId === item.id\r\n\t\t);\r\n\r\n\t// **滚动到匹配章节**\r\n\tconst scrollToChapter = id => {\r\n\t\tdocument.getElementById(id)?.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n\t\tconst linkedItem = linkedOutline.value.find(\r\n\t\t\tlinked => linked.leftId === id || linked.rightId === id\r\n\t\t);\r\n\t\tif (linkedItem) {\r\n\t\t\tconst targetId =\r\n\t\t\t\tlinkedItem.leftId === id ? linkedItem.rightId : linkedItem.leftId;\r\n\t\t\teventBus.emit(\"scroll-to-chapter\", targetId);\r\n\t\t}\r\n\t};\r\n\r\n\teventBus.on(\"scroll-to-chapter\", targetId => {\r\n\t\tdocument.getElementById(targetId)?.scrollIntoView({ behavior: \"smooth\" });\r\n\t});\r\n\r\n\t// **更新大纲按钮位置**\r\n\tconst updatePosition = () => {\r\n\t\tconst isDiv1 = props.divId === \"div1\";\r\n\t\tbuttonStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"10px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\"\r\n\t\t};\r\n\t\toutlineStyle.value = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: \"50px\",\r\n\t\t\t[isDiv1 ? \"right\" : \"left\"]: \"10px\",\r\n\t\t\twidth: \"260px\"\r\n\t\t};\r\n\t};\r\n\r\n\t// **初始化**\r\n\tonMounted(() => {\r\n\t\toutline.value = extractOutline(props.content, props.divId);\r\n\t\tupdatePosition();\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\teventBus.off(\"update-linked-outline\");\r\n\t\teventBus.off(\"scroll-to-chapter\");\r\n\t});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}