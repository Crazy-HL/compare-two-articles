{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5423a9e6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-text\"\n}, \"Loading...\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = {\n  class: \"error-container\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"error-icon\"\n}, \"⚠️\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"error-message\"\n};\nconst _hoisted_9 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\",\n    onClick: $setup.closePopup\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */), _createCommentVNode(\" 加载动画 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_5])) : $setup.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 错误信息 \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"retry-button\",\n    onClick: $setup.fetchWikipediaContent\n  }, \"重试\")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 文章内容 \"), _createElementVNode(\"div\", {\n    class: \"showHtml wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 选中内容放大显示（仅限 Div1 内部） \"), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: \"text-popup\",\n    style: _normalizeStyle($setup.popupStyle),\n    onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.selectedText), 1 /* TEXT */)], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["key","class","_createElementVNode","_hoisted_3","_hoisted_4","_createElementBlock","_normalizeClass","$props","selectContentClass","id","divId","ref","onClick","$setup","closePopup","_toDisplayString","pageTitle","_createCommentVNode","loading","_hoisted_2","_hoisted_5","error","_Fragment","_hoisted_6","_hoisted_7","_hoisted_8","fetchWikipediaContent","innerHTML","pageHtml","onMouseup","handleSelection","_hoisted_9","showPopup","style","_normalizeStyle","popupStyle","_cache","_withModifiers","selectedText","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\BaseWikipedia.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\t:class=\"['div0', selectContentClass]\"\r\n\t\t:id=\"divId\"\r\n\t\tref=\"divRef\"\r\n\t\t@click=\"closePopup\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<div v-if=\"loading\" class=\"loading-container\">\r\n\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t<div class=\"loading-text\">Loading...</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<div v-else-if=\"error\" class=\"error-container\">\r\n\t\t\t<div class=\"error-icon\">⚠️</div>\r\n\t\t\t<div class=\"error-message\">{{ error }}</div>\r\n\t\t\t<button class=\"retry-button\" @click=\"fetchWikipediaContent\">重试</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<div\r\n\t\t\tv-else\r\n\t\t\tclass=\"showHtml wikipedia-content\"\r\n\t\t\tv-html=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"></div>\r\n\r\n\t\t<!-- 选中内容放大显示（仅限 Div1 内部） -->\r\n\t\t<div v-if=\"showPopup\" class=\"text-popup\" :style=\"popupStyle\" @click.stop>\r\n\t\t\t<p>{{ selectedText }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref(\"\"); // 选中的文字\r\n\tconst showPopup = ref(false); // 是否显示弹出框\r\n\tconst popupStyle = ref({}); // 控制弹出框位置\r\n\tconst divRef = ref(null); // `Div1` 的 DOM 参考\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// **高亮并放大选中文字**\r\n\tconst handleSelection = event => {\r\n\t\tconst selection = window.getSelection();\r\n\t\tconst text = selection.toString().trim();\r\n\r\n\t\tif (text) {\r\n\t\t\tselectedText.value = text;\r\n\t\t\tshowPopup.value = true;\r\n\r\n\t\t\t// 获取 Div1 的位置信息\r\n\t\t\tconst divRect = divRef.value.getBoundingClientRect();\r\n\r\n\t\t\t// 计算弹出框的绝对位置（居中显示）\r\n\t\t\tconst popupTop = divRect.top + divRect.height / 2;\r\n\t\t\tconst popupLeft = divRect.left + divRect.width / 2;\r\n\r\n\t\t\t// 设置弹出框样式\r\n\t\t\tpopupStyle.value = {\r\n\t\t\t\ttop: `${popupTop}px`,\r\n\t\t\t\tleft: `${popupLeft}px`,\r\n\t\t\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t\t\twidth: \"80%\",\r\n\t\t\t\tmaxWidth: \"500px\",\r\n\t\t\t\tfontSize: \"1.5rem\"\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// **关闭弹出框**\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value = false;\r\n\t\tselectedText.value = \"\";\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t/* Wikipedia 内容 */\r\n\t.wikipedia-content {\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-family: sans-serif;\r\n\t\tfont-size: 0.6vw;\r\n\t}\r\n\r\n\t/* 选中内容的弹出框（仅限 Div1 内部） */\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\tbackground: rgba(255, 255, 255, 0.95);\r\n\t\tpadding: 15px 20px;\r\n\t\tbox-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);\r\n\t\tborder-radius: 8px;\r\n\t\ttext-align: center;\r\n\t\tcolor: #333;\r\n\t\tz-index: 10;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t/* 加载动画 */\r\n\t.loading-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 200px;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder: 4px solid #f3f3f3;\r\n\t\tborder-top: 4px solid #3498db;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t/* 动画效果 */\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: scale(0.9);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;EAAAA,GAAA;EASsBC,KAAK,EAAC;;gEACzBC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAiB;gEAC5BC,mBAAA,CAA0C;EAArCD,KAAK,EAAC;AAAc,GAAC,YAAU;oBADpCE,UAAmC,EACnCC,UAA0C,C;;EAIpBH,KAAK,EAAC;AAAiB;gEAC7CC,mBAAA,CAAgC;EAA3BD,KAAK,EAAC;AAAY,GAAC,IAAE;;EACrBA,KAAK,EAAC;AAAe;mBAjB7B;;uBACCI,mBAAA,CA+BM;IA9BJJ,KAAK,EAFRK,eAAA,UAEmBC,MAAA,CAAAC,kBAAkB;IAClCC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IACVC,GAAG,EAAC,QAAQ;IACXC,OAAK,EAAEC,MAAA,CAAAC;MACRZ,mBAAA,CAAwB,YAAAa,gBAAA,CAAjBR,MAAA,CAAAS,SAAS,kBAEhBC,mBAAA,UAAa,EACFJ,MAAA,CAAAK,OAAO,I,cAAlBb,mBAAA,CAGM,OAHNc,UAGM,EAZR,IAAAC,UAAA,MAekBP,MAAA,CAAAQ,KAAK,I,cAArBhB,mBAAA,CAIMiB,SAAA;IAnBRtB,GAAA;EAAA,IAcEiB,mBAAA,UAAa,EACbf,mBAAA,CAIM,OAJNqB,UAIM,GAHLC,UAAgC,EAChCtB,mBAAA,CAA4C,OAA5CuB,UAA4C,EAAAV,gBAAA,CAAdF,MAAA,CAAAQ,KAAK,kBACnCnB,mBAAA,CAAuE;IAA/DD,KAAK,EAAC,cAAc;IAAEW,OAAK,EAAEC,MAAA,CAAAa;KAAuB,IAAE,E,qEAI/DrB,mBAAA,CAIkCiB,SAAA;IA1BpCtB,GAAA;EAAA,IAqBEiB,mBAAA,UAAa,EACbf,mBAAA,CAIkC;IAFjCD,KAAK,EAAC,4BAA4B;IAClC0B,SAAiB,EAATd,MAAA,CAAAe,QAAQ;IACfC,SAAO,EAAEhB,MAAA,CAAAiB;2CA1BbC,UAAA,E,mDA4BEd,mBAAA,0BAA6B,EAClBJ,MAAA,CAAAmB,SAAS,I,cAApB3B,mBAAA,CAEM;IA/BRL,GAAA;IA6BwBC,KAAK,EAAC,YAAY;IAAEgC,KAAK,EA7BjDC,eAAA,CA6BmDrB,MAAA,CAAAsB,UAAU;IAAGvB,OAAK,EAAAwB,MAAA,QAAAA,MAAA,MA7BrEC,cAAA,CA6B+D,QAAW;MACvEnC,mBAAA,CAAyB,WAAAa,gBAAA,CAAnBF,MAAA,CAAAyB,YAAY,iB,oBA9BrBrB,mBAAA,e,yBAAAsB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}