{"ast":null,"code":"import { computed, ref, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  props: {\n    field: {\n      type: [Object, Array, String, Number],\n      default: null\n    },\n    type: {\n      type: String,\n      default: \"\"\n    },\n    visualization: {\n      type: String,\n      default: \"\"\n    },\n    fieldKey: {\n      type: String,\n      default: \"\"\n    },\n    unifiedMax: {\n      type: Number,\n      default: null\n    }\n  },\n  emits: [\"chartClick\"],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const hoveredIndex = ref(null);\n    const activeIndex = ref(null);\n    const isTextHovered = ref(false);\n\n    // 容器引用\n    const pieContainer = ref(null);\n    const barContainer = ref(null);\n    const lineContainer = ref(null);\n    const stackedContainer = ref(null); // 确保这个 ref 被定义\n\n    // 颜色定义\n    const colors = [\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\", \"#9b59b6\", \"#1abc9c\", \"#d35400\", \"#8e44ad\", \"#c0392b\", \"#7f8c8d\"];\n    const remainderColor = \"#f0f0f0\";\n\n    // --- START: 为堆叠图定义的固定真实数据 (来自你提供的 div1_InfoboxData for South Korea \"Export goods\") ---\n    const fixedStackedChartData = [{\n      value: 15.35,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Integrated Circuits 15.35%\",\n      extracted: true\n    }, {\n      value: 12.81,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Machinery 12.81%\",\n      extracted: true\n    }, {\n      value: 11.34,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Vehicles and their parts 11.34%\",\n      extracted: true\n    }, {\n      value: 7.01,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Mineral Fuels 7.01%\",\n      extracted: true\n    }, {\n      value: 5.86,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Plastics 5.86%\",\n      extracted: true\n    }, {\n      value: 4.23,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Iron and Steel 4.23%\",\n      extracted: true\n    }, {\n      value: 4.16,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Instruments and Apparatus 4.16%\",\n      extracted: true\n    }, {\n      value: 3.85,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Organic Chemicals 3.85%\",\n      extracted: true\n    }, {\n      value: 35.39,\n      unit: \"%\",\n      type: \"percentage\",\n      raw: \"Others 35.39%\",\n      extracted: true\n    }];\n    // --- END: 为堆叠图定义的固定真实数据 ---\n\n    const processedField = computed(() => {\n      if (props.visualization === \"stacked-chart\") {\n        const nameValueRegex = /^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/; // 更通用的名称匹配\n        return fixedStackedChartData.map(item => {\n          let name = \"Unknown\";\n          let value = 0;\n          if (item.raw) {\n            const match = String(item.raw).match(nameValueRegex);\n            if (match) {\n              name = match[1].trim();\n              value = parseFloat(match[2]);\n            } else if (item.value && typeof item.value === \"number\" && item.type === \"percentage\") {\n              name = String(item.raw).split(String(item.value))[0].trim().replace(/:$/, \"\").trim() || \"Category\";\n              if (name.toLowerCase() === \"others\" && item.raw.toLowerCase().includes(\"others\")) name = \"Others\"; // 修正Others提取\n              value = item.value;\n            }\n          }\n          return {\n            name: name,\n            value: value,\n            raw: item.raw,\n            unit: item.unit || \"%\",\n            type: item.type || \"percentage\"\n          };\n        }).filter(item => item.name !== \"Unknown\" && item.name !== \"Category\" && !/^\\(\\d{4}\\)$/.test(item.raw));\n      }\n      if (!props.field) return null;\n      if (Array.isArray(props.field)) {\n        return props.field.map(item => {\n          if (typeof item === \"object\" && item !== null) {\n            return {\n              name: item.name || (typeof item.raw === \"string\" ? item.raw.split(/[:%]/)[0].trim() : \"Item\"),\n              value: item.value ?? (typeof item.raw === \"string\" ? parseFloat(String(item.raw).match(/([\\d.]+)/)?.[0]) : 0),\n              raw: item.raw,\n              unit: item.unit,\n              type: item.type,\n              year: item.year,\n              currency: item.currency\n            };\n          }\n          return {\n            name: String(item),\n            value: 0,\n            raw: String(item)\n          };\n        });\n      }\n      if (typeof props.field === \"object\" && props.field !== null) {\n        return {\n          name: props.field.name || (typeof props.field.raw === \"string\" ? props.field.raw.split(/[:%]/)[0].trim() : \"Item\"),\n          value: props.field.value ?? (typeof props.field.raw === \"string\" ? parseFloat(String(props.field.raw).match(/([\\d.]+)/)?.[0]) : 0),\n          raw: props.field.raw,\n          unit: props.field.unit,\n          type: props.field.type,\n          year: props.field.year,\n          currency: props.field.currency\n        };\n      }\n      return {\n        name: String(props.field),\n        value: 0,\n        raw: String(props.field)\n      };\n    });\n    const hasData = computed(() => {\n      if (props.visualization === \"stacked-chart\") {\n        // console.log(\"hasData check for stacked-chart, processedField.value:\", processedField.value);\n        return processedField.value && Array.isArray(processedField.value) && processedField.value.length > 0;\n      }\n      if (!processedField.value) return false;\n      if (Array.isArray(processedField.value)) return processedField.value.length > 0;\n      if (typeof processedField.value === \"object\") {\n        if (Object.keys(processedField.value).length === 0) return false; // 处理空对象 {}\n        // 检查对象是否真的有数据，而不是只有 raw:\"-\" 等情况\n        return processedField.value.value !== undefined || typeof processedField.value.raw === \"string\" && processedField.value.raw !== \"-\" && processedField.value.raw !== \"\";\n      }\n      return String(processedField.value).trim().length > 0 && String(processedField.value).trim() !== \"-\";\n    });\n    onMounted(() => {\n      console.log(`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`);\n      watch(() => [props.visualization, props.fieldKey, props.field], () => {\n        console.log(`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`);\n        if (props.visualization === \"stacked-chart\") {\n          console.log(\"SimpleChart WATCH - Processed field for STACKED chart:\", JSON.parse(JSON.stringify(processedField.value)));\n        }\n        nextTick(() => {\n          if (props.visualization === \"pie-chart\" && hasData.value // && isValidPieData.value // isValidPieData 需要定义或简化\n          ) {\n            console.log(\"SimpleChart: Conditions MET for renderPieChart.\");\n            // renderPieChart(); // 暂时注释\n          } else if (props.visualization === \"bar-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderBarChart.\");\n            // renderBarChart(); // 暂时注释\n          } else if (props.visualization === \"line-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderLineChart.\");\n            // renderLineChart(); // 暂时注释\n          } else if (props.visualization === \"stacked-chart\" && hasData.value) {\n            console.log(\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\");\n            renderStackedChart();\n          } else {\n            console.log(`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`);\n          }\n        });\n      }, {\n        immediate: true,\n        deep: true\n      });\n    });\n    const isYearEntry = value => {\n      // 保留，因为 pieData 可能用到\n      if (typeof value !== \"string\") return false;\n      const trimmedValue = value.trim();\n      return /^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) || /^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) || /^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) || /^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue);\n    };\n    const safeToNumber = (value, fieldKeyIgnored) => {\n      // fieldKey 现在在内部固定数据时不太重要\n      if (value === null || value === undefined) return 0;\n      if (typeof value === \"number\") return value;\n      if (typeof value === \"string\") {\n        const yiMatch = value.match(/(-?[\\d.]+)亿/);\n        if (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\n        const wanMatch = value.match(/(-?[\\d.]+)万/);\n        if (wanMatch) return parseFloat(wanMatch[1]) * 10000;\n        const qianMatch = value.match(/(-?[\\d.]+)千/);\n        if (qianMatch) return parseFloat(qianMatch[1]) * 1000;\n        const percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\n        if (percentMatch) return parseFloat(percentMatch[1]);\n        const num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\n        return isNaN(num) ? 0 : num;\n      }\n      if (typeof value === \"object\") {\n        return safeToNumber(value.value || value.raw);\n      }\n      return 0;\n    };\n    const renderPieChart = () => {\n      console.log(\"renderPieChart called but is TEMPORARILY DISABLED for stacked chart focus.\");\n      if (!pieContainer.value) return;\n      d3.select(pieContainer.value).selectAll(\"*\").remove();\n      d3.select(pieContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"- (Pie chart disabled)\");\n      // ... (原有饼图D3代码) ...\n    };\n    const renderBarChart = () => {\n      console.log(\"renderBarChart called but is TEMPORARILY DISABLED for stacked chart focus.\");\n      if (!barContainer.value) return;\n      d3.select(barContainer.value).selectAll(\"*\").remove();\n      d3.select(barContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"- (Bar chart disabled)\");\n      // ... (原有柱状图D3代码) ...\n    };\n    const renderLineChart = () => {\n      console.log(\"renderLineChart called but is TEMPORARILY DISABLED for stacked chart focus.\");\n      if (!lineContainer.value) return;\n      d3.select(lineContainer.value).selectAll(\"*\").remove();\n      d3.select(lineContainer.value).append(\"div\").attr(\"class\", \"no-data\").text(\"- (Line chart disabled)\");\n      // ... (原有折线图D3代码) ...\n    };\n    const renderStackedChart = () => {\n      if (!stackedContainer.value) {\n        console.error(\"renderStackedChart: stackedContainer ref is not available.\");\n        return;\n      }\n      const dataForChart = processedField.value;\n      console.log(\"renderStackedChart CALLED. Data for chart (from processedField):\", JSON.parse(JSON.stringify(dataForChart)));\n      if (!Array.isArray(dataForChart) || dataForChart.length === 0) {\n        console.warn(\"renderStackedChart: No valid data (dataForChart is empty or not an array). Clearing container.\");\n        d3.select(stackedContainer.value).selectAll(\"*\").remove();\n        d3.select(stackedContainer.value).append(\"div\").attr(\"class\", \"no-data\").style(\"text-align\", \"center\").text(\"- (No data for chart)\");\n        return;\n      }\n      d3.select(stackedContainer.value).selectAll(\"*\").remove();\n      const container = d3.select(stackedContainer.value);\n      // 确保容器有有效尺寸\n      let width = stackedContainer.value.clientWidth;\n      let height = stackedContainer.value.clientHeight;\n      if (width === 0 || height === 0) {\n        // 尝试从父级获取尺寸或设置一个默认值，但这通常表明CSS布局问题\n        const parentBounds = stackedContainer.value.parentElement.getBoundingClientRect();\n        width = parentBounds.width > 0 ? parentBounds.width : 300; // 默认宽度\n        height = parentBounds.height > 0 ? parentBounds.height : 150; // 默认高度\n        console.warn(`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`);\n        // 可能需要强制设置容器尺寸，但这只是权宜之计\n        // d3.select(stackedContainer.value).style(\"width\", `${width}px`).style(\"height\", `${height}px`);\n      }\n      const margin = {\n        top: 20,\n        right: 150,\n        bottom: 70,\n        left: 50\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      if (chartWidth <= 0 || chartHeight <= 0) {\n        console.warn(\"renderStackedChart: Chart dimensions are invalid after applying margins.\", {\n          width,\n          height,\n          chartWidth,\n          chartHeight\n        });\n        d3.select(stackedContainer.value).append(\"div\").attr(\"class\", \"no-data\").style(\"text-align\", \"center\").text(\"- (Chart area too small)\");\n        return;\n      }\n      const svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n      const stackData = dataForChart.map(item => ({\n        name: String(item.name || \"N/A\"),\n        value: safeToNumber(item.value) // safeToNumber 现在不需要第二个参数\n      })).filter(d => d.value > 0);\n      if (stackData.length === 0) {\n        console.warn(\"renderStackedChart: No data with value > 0 to render after filtering.\");\n        d3.select(stackedContainer.value).append(\"div\").attr(\"class\", \"no-data\").style(\"text-align\", \"center\").text(\"- (No positive values)\");\n        return;\n      }\n      console.log(\"renderStackedChart - Final stackData for D3:\", JSON.parse(JSON.stringify(stackData)));\n      const x = d3.scaleBand().domain(stackData.map(d => d.name)).range([0, chartWidth]).padding(0.2);\n      const yMax = d3.max(stackData, d => d.value);\n      const y = d3.scaleLinear().domain([0, yMax > 0 ? yMax : 100]).nice().range([chartHeight, 0]);\n      svg.append(\"g\").attr(\"transform\", `translate(0,${chartHeight})`).call(d3.axisBottom(x)).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-45)\");\n      svg.append(\"g\").call(d3.axisLeft(y).ticks(Math.min(5, Math.ceil(yMax / 5) || 1)).tickFormat(d => `${d.toFixed(props.type === \"percentage\" ? 1 : 0)}${props.type === \"percentage\" ? \"%\" : \"\"}`));\n      svg.selectAll(\".stack-bar\").data(stackData).enter().append(\"rect\").attr(\"class\", \"stack-bar\").attr(\"x\", d => x(d.name)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => chartHeight - y(d.value)).attr(\"fill\", (d, i) => colors[i % colors.length]).style(\"opacity\", 0.8).append(\"title\").text(d => `${d.name}: ${d.value.toFixed(1)}%`);\n      svg.selectAll(\".stack-value-label\").data(stackData).enter().append(\"text\").attr(\"class\", \"stack-value-label\").attr(\"x\", d => x(d.name) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"10px\").style(\"fill\", \"#333\").text(d => `${d.value.toFixed(1)}%`);\n      const legend = svg.append(\"g\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).attr(\"text-anchor\", \"start\").selectAll(\"g\").data(stackData).join(\"g\").attr(\"transform\", (d, i) => `translate(${chartWidth + 10},${i * 20})`);\n      legend.append(\"rect\").attr(\"x\", 0).attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", (d, i) => colors[i % colors.length]);\n      legend.append(\"text\").attr(\"x\", 20).attr(\"y\", 9.5).attr(\"dy\", \"0.32em\").text(d => d.name.length > 15 ? d.name.substring(0, 13) + \"...\" : d.name); // 截断长文本\n\n      console.log(\"renderStackedChart FINISHED drawing.\");\n    };\n    const formatSimpleText = value => {\n      if (!value) return \"-\";\n      if (Array.isArray(value)) {\n        const items = value.map(item => {\n          if (typeof item === \"object\" && item !== null) {\n            let text = item.raw || item.value || JSON.stringify(item);\n            if (item.unit) text += ` ${item.unit}`;\n            if (item.year) text += ` (${item.year})`;\n            return text;\n          }\n          return item;\n        });\n        return items.length > 2 ? items.slice(0, 2).join(\"; \") + \"...\" : items.join(\"; \");\n      }\n      if (typeof value === \"object\" && value !== null) {\n        let text = value.raw || value.value || \"-\";\n        if (value.unit) text += ` ${value.unit}`;\n        if (value.year) text += ` (${value.year})`;\n        return text;\n      }\n      return value.toString().length > 50 ? value.toString().substring(0, 50) + \"...\" : value.toString();\n    };\n    const handleTextClick = () => {\n      emit(\"chartClick\", {\n        type: \"text\",\n        data: processedField.value,\n        value: processedField.value\n      });\n    };\n    const handleTextHover = () => {\n      isTextHovered.value = true;\n    };\n    const resetHover = () => {\n      isTextHovered.value = false;\n    };\n\n    // isValidPieData 和 pieData 如果不渲染饼图，可以简化或移除\n    const isValidPieData = computed(() => {\n      if (props.visualization !== \"pie-chart\") return false; // 仅当是饼图时才计算\n      // return pieData.value && pieData.value.length > 0 && pieData.value.every(item => typeof item.name === 'string' && typeof item.value === 'number');\n      return false; // 暂时禁用\n    });\n    const pieData = computed(() => {\n      if (props.visualization !== \"pie-chart\") return []; // 仅当是饼图时才计算\n      // ... (原有 pieData 逻辑) ...\n      return []; // 暂时禁用\n    });\n\n    // simpleBarData 和 lineData 也是如此\n    const simpleBarData = computed(() => {\n      if (props.visualization !== \"bar-chart\") return [];\n      // ... (原有 simpleBarData 逻辑) ...\n      return []; // 暂时禁用\n    });\n    const lineData = computed(() => {\n      if (props.visualization !== \"line-chart\") return [];\n      // ... (原有 lineData 逻辑) ...\n      return []; // 暂时禁用\n    });\n    return {\n      // Refs for containers\n      pieContainer,\n      barContainer,\n      lineContainer,\n      stackedContainer,\n      // Methods for text display (if used as fallback)\n      formatSimpleText,\n      handleTextClick,\n      handleTextHover,\n      resetHover,\n      isTextHovered,\n      // Computed properties needed for v-if or other logic\n      hasData,\n      // hasData is now important\n      isValidPieData // if pie chart is re-enabled\n\n      // No need to return processedField, pieData, etc. if they are only used internally by render functions\n      // and those render functions are called from watch/onMounted.\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","watch","nextTick","d3","props","field","type","Object","Array","String","Number","default","visualization","fieldKey","unifiedMax","emits","setup","_ref","emit","hoveredIndex","activeIndex","isTextHovered","pieContainer","barContainer","lineContainer","stackedContainer","colors","remainderColor","fixedStackedChartData","value","unit","raw","extracted","processedField","nameValueRegex","map","item","name","match","trim","parseFloat","split","replace","toLowerCase","includes","filter","test","isArray","year","currency","hasData","length","keys","undefined","console","log","JSON","parse","stringify","renderStackedChart","immediate","deep","isYearEntry","trimmedValue","safeToNumber","fieldKeyIgnored","yiMatch","wanMatch","qianMatch","percentMatch","num","isNaN","renderPieChart","select","selectAll","remove","append","attr","text","renderBarChart","renderLineChart","error","dataForChart","warn","style","container","width","clientWidth","height","clientHeight","parentBounds","parentElement","getBoundingClientRect","margin","top","right","bottom","left","chartWidth","chartHeight","svg","stackData","d","x","scaleBand","domain","range","padding","yMax","max","y","scaleLinear","nice","call","axisBottom","axisLeft","ticks","Math","min","ceil","tickFormat","toFixed","data","enter","bandwidth","i","legend","join","substring","formatSimpleText","items","slice","toString","handleTextClick","handleTextHover","resetHover","isValidPieData","pieData","simpleBarData","lineData"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\SimpleChart.vue"],"sourcesContent":["<template>\r\n\t<div class=\"simple-chart\">\r\n\t\t<!-- 文本显示 -->\r\n\t\t<template v-if=\"visualization === 'text-only'\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 饼图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'pie-chart'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"hasData && isValidPieData\"\r\n\t\t\t\tclass=\"d3-chart-container\"\r\n\t\t\t\tref=\"pieContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Pie Data Not Ready/Valid)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 柱状图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'bar-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"barContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Bar Data Not Ready)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 折线图 (D3实现) -->\r\n\t\t<template v-else-if=\"visualization === 'line-chart'\">\r\n\t\t\t<div v-if=\"hasData\" class=\"d3-chart-container\" ref=\"lineContainer\"></div>\r\n\t\t\t<div v-else class=\"no-data\">- (Line Data Not Ready)</div>\r\n\t\t</template>\r\n\r\n\t\t<!-- 堆叠图 -->\r\n\t\t<template v-else-if=\"visualization === 'stacked-chart'\">\r\n\t\t\t<div v-if=\"true\" class=\"d3-chart-container\" ref=\"stackedContainer\"></div>\r\n\t\t\t<!-- <div v-else class=\"no-data\">-</div> -->\r\n\t\t</template>\r\n\t\t<!-- 默认显示 -->\r\n\t\t<template v-else>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"simple-text\"\r\n\t\t\t\t@click=\"handleTextClick\"\r\n\t\t\t\t@mouseenter=\"handleTextHover\"\r\n\t\t\t\t@mouseleave=\"resetHover\">\r\n\t\t\t\t{{ formatSimpleText(processedField) }}\r\n\t\t\t</div>\r\n\t\t\t<div v-if=\"isTextHovered\" class=\"text-tooltip\">点击查看详情</div>\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { computed, ref, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tfield: {\r\n\t\t\t\ttype: [Object, Array, String, Number],\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tvisualization: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tfieldKey: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"\"\r\n\t\t\t},\r\n\t\t\tunifiedMax: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\temits: [\"chartClick\"],\r\n\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst hoveredIndex = ref(null);\r\n\t\t\tconst activeIndex = ref(null);\r\n\t\t\tconst isTextHovered = ref(false);\r\n\r\n\t\t\t// 容器引用\r\n\t\t\tconst pieContainer = ref(null);\r\n\t\t\tconst barContainer = ref(null);\r\n\t\t\tconst lineContainer = ref(null);\r\n\t\t\tconst stackedContainer = ref(null); // 确保这个 ref 被定义\r\n\r\n\t\t\t// 颜色定义\r\n\t\t\tconst colors = [\r\n\t\t\t\t\"#3498db\",\r\n\t\t\t\t\"#e74c3c\",\r\n\t\t\t\t\"#2ecc71\",\r\n\t\t\t\t\"#f39c12\",\r\n\t\t\t\t\"#9b59b6\",\r\n\t\t\t\t\"#1abc9c\",\r\n\t\t\t\t\"#d35400\",\r\n\t\t\t\t\"#8e44ad\",\r\n\t\t\t\t\"#c0392b\",\r\n\t\t\t\t\"#7f8c8d\"\r\n\t\t\t];\r\n\t\t\tconst remainderColor = \"#f0f0f0\";\r\n\r\n\t\t\t// --- START: 为堆叠图定义的固定真实数据 (来自你提供的 div1_InfoboxData for South Korea \"Export goods\") ---\r\n\t\t\tconst fixedStackedChartData = [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 15.35,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Integrated Circuits 15.35%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 12.81,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Machinery 12.81%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 11.34,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Vehicles and their parts 11.34%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 7.01,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Mineral Fuels 7.01%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 5.86,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Plastics 5.86%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 4.23,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Iron and Steel 4.23%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 4.16,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Instruments and Apparatus 4.16%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 3.85,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Organic Chemicals 3.85%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 35.39,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\ttype: \"percentage\",\r\n\t\t\t\t\traw: \"Others 35.39%\",\r\n\t\t\t\t\textracted: true\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\t// --- END: 为堆叠图定义的固定真实数据 ---\r\n\r\n\t\t\tconst processedField = computed(() => {\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\tconst nameValueRegex =\r\n\t\t\t\t\t\t/^([a-zA-Z\\s&().]+[\\sa-zA-Z&().]*?)\\s*([\\d.]+%)$/; // 更通用的名称匹配\r\n\t\t\t\t\treturn fixedStackedChartData\r\n\t\t\t\t\t\t.map(item => {\r\n\t\t\t\t\t\t\tlet name = \"Unknown\";\r\n\t\t\t\t\t\t\tlet value = 0;\r\n\t\t\t\t\t\t\tif (item.raw) {\r\n\t\t\t\t\t\t\t\tconst match = String(item.raw).match(nameValueRegex);\r\n\t\t\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\t\t\tname = match[1].trim();\r\n\t\t\t\t\t\t\t\t\tvalue = parseFloat(match[2]);\r\n\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\titem.value &&\r\n\t\t\t\t\t\t\t\t\ttypeof item.value === \"number\" &&\r\n\t\t\t\t\t\t\t\t\titem.type === \"percentage\"\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tname =\r\n\t\t\t\t\t\t\t\t\t\tString(item.raw)\r\n\t\t\t\t\t\t\t\t\t\t\t.split(String(item.value))[0]\r\n\t\t\t\t\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/:$/, \"\")\r\n\t\t\t\t\t\t\t\t\t\t\t.trim() || \"Category\";\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tname.toLowerCase() === \"others\" &&\r\n\t\t\t\t\t\t\t\t\t\titem.raw.toLowerCase().includes(\"others\")\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\tname = \"Others\"; // 修正Others提取\r\n\t\t\t\t\t\t\t\t\tvalue = item.value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit || \"%\",\r\n\t\t\t\t\t\t\t\ttype: item.type || \"percentage\"\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\titem =>\r\n\t\t\t\t\t\t\t\titem.name !== \"Unknown\" &&\r\n\t\t\t\t\t\t\t\titem.name !== \"Category\" &&\r\n\t\t\t\t\t\t\t\t!/^\\(\\d{4}\\)$/.test(item.raw)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!props.field) return null;\r\n\t\t\t\tif (Array.isArray(props.field)) {\r\n\t\t\t\t\treturn props.field.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname:\r\n\t\t\t\t\t\t\t\t\titem.name ||\r\n\t\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t\t? item.raw.split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t\t\t: \"Item\"),\r\n\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\titem.value ??\r\n\t\t\t\t\t\t\t\t\t(typeof item.raw === \"string\"\r\n\t\t\t\t\t\t\t\t\t\t? parseFloat(String(item.raw).match(/([\\d.]+)/)?.[0])\r\n\t\t\t\t\t\t\t\t\t\t: 0),\r\n\t\t\t\t\t\t\t\traw: item.raw,\r\n\t\t\t\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\t\t\t\ttype: item.type,\r\n\t\t\t\t\t\t\t\tyear: item.year,\r\n\t\t\t\t\t\t\t\tcurrency: item.currency\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn { name: String(item), value: 0, raw: String(item) };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof props.field === \"object\" && props.field !== null) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname:\r\n\t\t\t\t\t\t\tprops.field.name ||\r\n\t\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t\t? props.field.raw.split(/[:%]/)[0].trim()\r\n\t\t\t\t\t\t\t\t: \"Item\"),\r\n\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\tprops.field.value ??\r\n\t\t\t\t\t\t\t(typeof props.field.raw === \"string\"\r\n\t\t\t\t\t\t\t\t? parseFloat(String(props.field.raw).match(/([\\d.]+)/)?.[0])\r\n\t\t\t\t\t\t\t\t: 0),\r\n\t\t\t\t\t\traw: props.field.raw,\r\n\t\t\t\t\t\tunit: props.field.unit,\r\n\t\t\t\t\t\ttype: props.field.type,\r\n\t\t\t\t\t\tyear: props.field.year,\r\n\t\t\t\t\t\tcurrency: props.field.currency\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: String(props.field),\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\traw: String(props.field)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconst hasData = computed(() => {\r\n\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t// console.log(\"hasData check for stacked-chart, processedField.value:\", processedField.value);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value &&\r\n\t\t\t\t\t\tArray.isArray(processedField.value) &&\r\n\t\t\t\t\t\tprocessedField.value.length > 0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (!processedField.value) return false;\r\n\t\t\t\tif (Array.isArray(processedField.value))\r\n\t\t\t\t\treturn processedField.value.length > 0;\r\n\t\t\t\tif (typeof processedField.value === \"object\") {\r\n\t\t\t\t\tif (Object.keys(processedField.value).length === 0) return false; // 处理空对象 {}\r\n\t\t\t\t\t// 检查对象是否真的有数据，而不是只有 raw:\"-\" 等情况\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tprocessedField.value.value !== undefined ||\r\n\t\t\t\t\t\t(typeof processedField.value.raw === \"string\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"-\" &&\r\n\t\t\t\t\t\t\tprocessedField.value.raw !== \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\tString(processedField.value).trim().length > 0 &&\r\n\t\t\t\t\tString(processedField.value).trim() !== \"-\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`SimpleChart ONMOUNTED for fieldKey: ${props.fieldKey}, visualization: ${props.visualization}`\r\n\t\t\t\t);\r\n\t\t\t\twatch(\r\n\t\t\t\t\t() => [props.visualization, props.fieldKey, props.field],\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`SimpleChart WATCH triggered - Vis: ${props.visualization}, Key: ${props.fieldKey}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (props.visualization === \"stacked-chart\") {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"SimpleChart WATCH - Processed field for STACKED chart:\",\r\n\t\t\t\t\t\t\t\tJSON.parse(JSON.stringify(processedField.value))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"pie-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value // && isValidPieData.value // isValidPieData 需要定义或简化\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderPieChart.\");\r\n\t\t\t\t\t\t\t\t// renderPieChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (props.visualization === \"bar-chart\" && hasData.value) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderBarChart.\");\r\n\t\t\t\t\t\t\t\t// renderBarChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"line-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"SimpleChart: Conditions MET for renderLineChart.\");\r\n\t\t\t\t\t\t\t\t// renderLineChart(); // 暂时注释\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tprops.visualization === \"stacked-chart\" &&\r\n\t\t\t\t\t\t\t\thasData.value\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"SimpleChart: Conditions MET for renderStackedChart. Calling it now.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\trenderStackedChart();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t`SimpleChart: Conditions NOT MET for any specific chart. Vis: ${props.visualization}, HasData: ${hasData.value}`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ immediate: true, deep: true }\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tconst isYearEntry = value => {\r\n\t\t\t\t// 保留，因为 pieData 可能用到\r\n\t\t\t\tif (typeof value !== \"string\") return false;\r\n\t\t\t\tconst trimmedValue = value.trim();\r\n\t\t\t\treturn (\r\n\t\t\t\t\t/^(\\()?\\d{4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^\\(?FY\\s*\\d{4}\\)?\\s*:?/i.test(trimmedValue) ||\r\n\t\t\t\t\t/^(\\()?\\d{4}\\s*[-–]\\s*\\d{2,4}(\\))?\\s*:?/.test(trimmedValue) ||\r\n\t\t\t\t\t/^(Year|Yr|Annual)\\s*\\d{4}/i.test(trimmedValue)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst safeToNumber = (value, fieldKeyIgnored) => {\r\n\t\t\t\t// fieldKey 现在在内部固定数据时不太重要\r\n\t\t\t\tif (value === null || value === undefined) return 0;\r\n\t\t\t\tif (typeof value === \"number\") return value;\r\n\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\tconst yiMatch = value.match(/(-?[\\d.]+)亿/);\r\n\t\t\t\t\tif (yiMatch) return parseFloat(yiMatch[1]) * 100000000;\r\n\t\t\t\t\tconst wanMatch = value.match(/(-?[\\d.]+)万/);\r\n\t\t\t\t\tif (wanMatch) return parseFloat(wanMatch[1]) * 10000;\r\n\t\t\t\t\tconst qianMatch = value.match(/(-?[\\d.]+)千/);\r\n\t\t\t\t\tif (qianMatch) return parseFloat(qianMatch[1]) * 1000;\r\n\t\t\t\t\tconst percentMatch = value.match(/(-?\\d+\\.?\\d*)%/);\r\n\t\t\t\t\tif (percentMatch) return parseFloat(percentMatch[1]);\r\n\t\t\t\t\tconst num = parseFloat(value.replace(/[^\\d.-]/g, \"\"));\r\n\t\t\t\t\treturn isNaN(num) ? 0 : num;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\") {\r\n\t\t\t\t\treturn safeToNumber(value.value || value.raw);\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\r\n\t\t\tconst renderPieChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderPieChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!pieContainer.value) return;\r\n\t\t\t\td3.select(pieContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(pieContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Pie chart disabled)\");\r\n\t\t\t\t// ... (原有饼图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderBarChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderBarChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!barContainer.value) return;\r\n\t\t\t\td3.select(barContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(barContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Bar chart disabled)\");\r\n\t\t\t\t// ... (原有柱状图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderLineChart = () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderLineChart called but is TEMPORARILY DISABLED for stacked chart focus.\"\r\n\t\t\t\t);\r\n\t\t\t\tif (!lineContainer.value) return;\r\n\t\t\t\td3.select(lineContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\td3.select(lineContainer.value)\r\n\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t.text(\"- (Line chart disabled)\");\r\n\t\t\t\t// ... (原有折线图D3代码) ...\r\n\t\t\t};\r\n\r\n\t\t\tconst renderStackedChart = () => {\r\n\t\t\t\tif (!stackedContainer.value) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"renderStackedChart: stackedContainer ref is not available.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst dataForChart = processedField.value;\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart CALLED. Data for chart (from processedField):\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(dataForChart))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!Array.isArray(dataForChart) || dataForChart.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No valid data (dataForChart is empty or not an array). Clearing container.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No data for chart)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3.select(stackedContainer.value).selectAll(\"*\").remove();\r\n\r\n\t\t\t\tconst container = d3.select(stackedContainer.value);\r\n\t\t\t\t// 确保容器有有效尺寸\r\n\t\t\t\tlet width = stackedContainer.value.clientWidth;\r\n\t\t\t\tlet height = stackedContainer.value.clientHeight;\r\n\r\n\t\t\t\tif (width === 0 || height === 0) {\r\n\t\t\t\t\t// 尝试从父级获取尺寸或设置一个默认值，但这通常表明CSS布局问题\r\n\t\t\t\t\tconst parentBounds =\r\n\t\t\t\t\t\tstackedContainer.value.parentElement.getBoundingClientRect();\r\n\t\t\t\t\twidth = parentBounds.width > 0 ? parentBounds.width : 300; // 默认宽度\r\n\t\t\t\t\theight = parentBounds.height > 0 ? parentBounds.height : 150; // 默认高度\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t`renderStackedChart: stackedContainer has zero dimensions, using parent/default: ${width}x${height}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// 可能需要强制设置容器尺寸，但这只是权宜之计\r\n\t\t\t\t\t// d3.select(stackedContainer.value).style(\"width\", `${width}px`).style(\"height\", `${height}px`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst margin = { top: 20, right: 150, bottom: 70, left: 50 };\r\n\t\t\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\t\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\t\t\tif (chartWidth <= 0 || chartHeight <= 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: Chart dimensions are invalid after applying margins.\",\r\n\t\t\t\t\t\t{ width, height, chartWidth, chartHeight }\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (Chart area too small)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svg = container\r\n\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t\t\tconst stackData = dataForChart\r\n\t\t\t\t\t.map(item => ({\r\n\t\t\t\t\t\tname: String(item.name || \"N/A\"),\r\n\t\t\t\t\t\tvalue: safeToNumber(item.value) // safeToNumber 现在不需要第二个参数\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.filter(d => d.value > 0);\r\n\r\n\t\t\t\tif (stackData.length === 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"renderStackedChart: No data with value > 0 to render after filtering.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\td3.select(stackedContainer.value)\r\n\t\t\t\t\t\t.append(\"div\")\r\n\t\t\t\t\t\t.attr(\"class\", \"no-data\")\r\n\t\t\t\t\t\t.style(\"text-align\", \"center\")\r\n\t\t\t\t\t\t.text(\"- (No positive values)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"renderStackedChart - Final stackData for D3:\",\r\n\t\t\t\t\tJSON.parse(JSON.stringify(stackData))\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(stackData.map(d => d.name))\r\n\t\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t\t.padding(0.2);\r\n\r\n\t\t\t\tconst yMax = d3.max(stackData, d => d.value);\r\n\t\t\t\tconst y = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, yMax > 0 ? yMax : 100])\r\n\t\t\t\t\t.nice()\r\n\t\t\t\t\t.range([chartHeight, 0]);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${chartHeight})`)\r\n\t\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t\t\t.attr(\"transform\", \"rotate(-45)\");\r\n\r\n\t\t\t\tsvg.append(\"g\").call(\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.axisLeft(y)\r\n\t\t\t\t\t\t.ticks(Math.min(5, Math.ceil(yMax / 5) || 1))\r\n\t\t\t\t\t\t.tickFormat(\r\n\t\t\t\t\t\t\td =>\r\n\t\t\t\t\t\t\t\t`${d.toFixed(props.type === \"percentage\" ? 1 : 0)}${\r\n\t\t\t\t\t\t\t\t\tprops.type === \"percentage\" ? \"%\" : \"\"\r\n\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".stack-bar\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"stack-bar\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name))\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"height\", d => chartHeight - y(d.value))\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length])\r\n\t\t\t\t\t.style(\"opacity\", 0.8)\r\n\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t.text(d => `${d.name}: ${d.value.toFixed(1)}%`);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.selectAll(\".stack-value-label\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.enter()\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"class\", \"stack-value-label\")\r\n\t\t\t\t\t.attr(\"x\", d => x(d.name) + x.bandwidth() / 2)\r\n\t\t\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t\t.style(\"fill\", \"#333\")\r\n\t\t\t\t\t.text(d => `${d.value.toFixed(1)}%`);\r\n\r\n\t\t\t\tconst legend = svg\r\n\t\t\t\t\t.append(\"g\")\r\n\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\r\n\t\t\t\t\t.attr(\"font-size\", 10)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(stackData)\r\n\t\t\t\t\t.join(\"g\")\r\n\t\t\t\t\t.attr(\r\n\t\t\t\t\t\t\"transform\",\r\n\t\t\t\t\t\t(d, i) => `translate(${chartWidth + 10},${i * 20})`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"rect\")\r\n\t\t\t\t\t.attr(\"x\", 0)\r\n\t\t\t\t\t.attr(\"width\", 15)\r\n\t\t\t\t\t.attr(\"height\", 15)\r\n\t\t\t\t\t.attr(\"fill\", (d, i) => colors[i % colors.length]);\r\n\r\n\t\t\t\tlegend\r\n\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", 20)\r\n\t\t\t\t\t.attr(\"y\", 9.5)\r\n\t\t\t\t\t.attr(\"dy\", \"0.32em\")\r\n\t\t\t\t\t.text(d =>\r\n\t\t\t\t\t\td.name.length > 15 ? d.name.substring(0, 13) + \"...\" : d.name\r\n\t\t\t\t\t); // 截断长文本\r\n\r\n\t\t\t\tconsole.log(\"renderStackedChart FINISHED drawing.\");\r\n\t\t\t};\r\n\r\n\t\t\tconst formatSimpleText = value => {\r\n\t\t\t\tif (!value) return \"-\";\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tconst items = value.map(item => {\r\n\t\t\t\t\t\tif (typeof item === \"object\" && item !== null) {\r\n\t\t\t\t\t\t\tlet text = item.raw || item.value || JSON.stringify(item);\r\n\t\t\t\t\t\t\tif (item.unit) text += ` ${item.unit}`;\r\n\t\t\t\t\t\t\tif (item.year) text += ` (${item.year})`;\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn items.length > 2\r\n\t\t\t\t\t\t? items.slice(0, 2).join(\"; \") + \"...\"\r\n\t\t\t\t\t\t: items.join(\"; \");\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\r\n\t\t\t\t\tlet text = value.raw || value.value || \"-\";\r\n\t\t\t\t\tif (value.unit) text += ` ${value.unit}`;\r\n\t\t\t\t\tif (value.year) text += ` (${value.year})`;\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\treturn value.toString().length > 50\r\n\t\t\t\t\t? value.toString().substring(0, 50) + \"...\"\r\n\t\t\t\t\t: value.toString();\r\n\t\t\t};\r\n\r\n\t\t\tconst handleTextClick = () => {\r\n\t\t\t\temit(\"chartClick\", {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tdata: processedField.value,\r\n\t\t\t\t\tvalue: processedField.value\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tconst handleTextHover = () => {\r\n\t\t\t\tisTextHovered.value = true;\r\n\t\t\t};\r\n\t\t\tconst resetHover = () => {\r\n\t\t\t\tisTextHovered.value = false;\r\n\t\t\t};\r\n\r\n\t\t\t// isValidPieData 和 pieData 如果不渲染饼图，可以简化或移除\r\n\t\t\tconst isValidPieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return false; // 仅当是饼图时才计算\r\n\t\t\t\t// return pieData.value && pieData.value.length > 0 && pieData.value.every(item => typeof item.name === 'string' && typeof item.value === 'number');\r\n\t\t\t\treturn false; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\tconst pieData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"pie-chart\") return []; // 仅当是饼图时才计算\r\n\t\t\t\t// ... (原有 pieData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\t// simpleBarData 和 lineData 也是如此\r\n\t\t\tconst simpleBarData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"bar-chart\") return [];\r\n\t\t\t\t// ... (原有 simpleBarData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\t\t\tconst lineData = computed(() => {\r\n\t\t\t\tif (props.visualization !== \"line-chart\") return [];\r\n\t\t\t\t// ... (原有 lineData 逻辑) ...\r\n\t\t\t\treturn []; // 暂时禁用\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// Refs for containers\r\n\t\t\t\tpieContainer,\r\n\t\t\t\tbarContainer,\r\n\t\t\t\tlineContainer,\r\n\t\t\t\tstackedContainer,\r\n\r\n\t\t\t\t// Methods for text display (if used as fallback)\r\n\t\t\t\tformatSimpleText,\r\n\t\t\t\thandleTextClick,\r\n\t\t\t\thandleTextHover,\r\n\t\t\t\tresetHover,\r\n\t\t\t\tisTextHovered,\r\n\r\n\t\t\t\t// Computed properties needed for v-if or other logic\r\n\t\t\t\thasData, // hasData is now important\r\n\t\t\t\tisValidPieData // if pie chart is re-enabled\r\n\r\n\t\t\t\t// No need to return processedField, pieData, etc. if they are only used internally by render functions\r\n\t\t\t\t// and those render functions are called from watch/onMounted.\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.simple-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.simple-text {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tword-break: break-word;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f8f9fa;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\t.simple-text:hover {\r\n\t\tbackground-color: #e9ecef;\r\n\t\ttransform: translateY(-2px);\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.text-tooltip {\r\n\t\tposition: absolute;\r\n\t\ttop: -25px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 4px 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t\tpointer-events: none;\r\n\t\twhite-space: nowrap;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.d3-chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%; /* 确保容器占满父组件分配的空间 */\r\n\t\t/* min-height: 120px; */ /* 如果父组件高度不确定，可以设置最小高度 */\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden; /* 防止图例等溢出时影响布局 */\r\n\t}\r\n\r\n\t/* D3 tooltip样式 (如果你的D3 tooltip是动态添加到这个容器内的) */\r\n\t:deep(.d3-tooltip) {\r\n\t\t/* 使用 :deep() 如果 tooltip 是 D3 动态添加的子元素 */\r\n\t\tposition: absolute; /* 确保 tooltip 相对于容器定位 */\r\n\t\tz-index: 10;\r\n\t\twhite-space: nowrap;\r\n\t\tpointer-events: none;\r\n\t\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n\t\tbackground: rgba(0, 0, 0, 0.8);\r\n\t\tcolor: white;\r\n\t\tpadding: 6px 12px;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%; /* 确保 no-data 提示能居中 */\r\n\t}\r\n\r\n\t/* Y轴和X轴的样式 (D3 通常会给轴线和文本添加 g, line, path, text 元素) */\r\n\t:deep(.tick text) {\r\n\t\t/* 使用 :deep() 影响 D3 生成的 SVG 元素 */\r\n\t\tfont-size: 9px; /* 调小刻度文字大小 */\r\n\t\tfill: #555;\r\n\t}\r\n\t:deep(.tick line) {\r\n\t\tstroke: #e0e0e0;\r\n\t}\r\n\t:deep(path.domain) {\r\n\t\t/* 轴线 */\r\n\t\tstroke: #aaa;\r\n\t}\r\n\r\n\t/* 条形图和标签的特定样式 (如果需要) */\r\n\t:deep(.stack-bar:hover) {\r\n\t\topacity: 1 !important; /* 鼠标悬停时更明显 */\r\n\t}\r\n\t:deep(.stack-value-label) {\r\n\t\tpointer-events: none; /* 防止标签干扰鼠标事件 */\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.simple-text {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\t\t.d3-chart-container {\r\n\t\t\t/* min-height: 100px; */ /* 响应式调整 */\r\n\t\t}\r\n\t\t:deep(.tick text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t\t:deep(.legend text) {\r\n\t\t\tfont-size: 8px;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}