{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"div0\",\n  id: \"div2\"\n};\nconst _hoisted_2 = {\n  class: \"VisContainer\"\n};\nconst _hoisted_3 = {\n  class: \"topContainer container\"\n};\nconst _hoisted_4 = {\n  class: \"botContainer container\"\n};\nconst _hoisted_5 = {\n  class: \"io\"\n};\nconst _hoisted_6 = {\n  class: \"io\"\n};\nconst _hoisted_7 = {\n  class: \"result-container\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"comparison-result\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"对比结果:\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 1,\n  class: \"gpt-answer\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"GPT 回答:\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"question-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Top section for text selection and comparison \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"IO\"], {\n    width: \"542px\",\n    height: \"310px\",\n    placeholder: $setup.selectText1\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"IO\"], {\n    width: \"250px\",\n    height: \"290px\",\n    placeholder: $setup.selectText2\n  }, null, 8 /* PROPS */, [\"placeholder\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"IO\"], {\n    width: \"240px\",\n    height: \"290px\",\n    placeholder: $setup.selectText3\n  }, null, 8 /* PROPS */, [\"placeholder\"])])]), _createCommentVNode(\" Comparison button \"), _createElementVNode(\"div\", {\n    class: \"button-container\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.compareTexts\n  }, \"对比文章\")]), _createCommentVNode(\" Combined GPT Answer and Comparison Results \"), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" Display comparison result \"), $setup.selectText1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"p\", null, _toDisplayString($setup.selectText1), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display GPT's answer \"), $setup.gptAnswer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"p\", null, _toDisplayString($setup.gptAnswer), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Question input box \"), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"textarea\", {\n    id: \"question\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userQuestion = $event),\n    rows: \"4\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.userQuestion]])]), _createCommentVNode(\" Ask question button \"), _createElementVNode(\"div\", {\n    class: \"button-container\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.askQuestion\n  }, \"向 ChatGPT 提问\")])])]);\n}","map":{"version":3,"names":["class","id","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_createVNode","$setup","width","height","placeholder","selectText1","_hoisted_4","_hoisted_5","selectText2","_hoisted_6","selectText3","onClick","compareTexts","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","gptAnswer","_hoisted_10","_hoisted_11","_hoisted_12","_cache","$event","userQuestion","rows","askQuestion"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"div0\" id=\"div2\">\r\n\t\t<div class=\"VisContainer\">\r\n\t\t\t<!-- Top section for text selection and comparison -->\r\n\t\t\t<div class=\"topContainer container\">\r\n\t\t\t\t<IO width=\"542px\" height=\"310px\" :placeholder=\"selectText1\"></IO>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"botContainer container\">\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"250px\" height=\"290px\" :placeholder=\"selectText2\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"io\">\r\n\t\t\t\t\t<IO width=\"240px\" height=\"290px\" :placeholder=\"selectText3\"></IO>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- Comparison button -->\r\n\t\t\t<div class=\"button-container\">\r\n\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- Combined GPT Answer and Comparison Results -->\r\n\t\t\t<div class=\"result-container\">\r\n\t\t\t\t<!-- Display comparison result -->\r\n\t\t\t\t<div v-if=\"selectText1\" class=\"comparison-result\">\r\n\t\t\t\t\t<h3>对比结果:</h3>\r\n\t\t\t\t\t<p>{{ selectText1 }}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- Display GPT's answer -->\r\n\t\t\t\t<div v-if=\"gptAnswer\" class=\"gpt-answer\">\r\n\t\t\t\t\t<h3>GPT 回答:</h3>\r\n\t\t\t\t\t<p>{{ gptAnswer }}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- Question input box -->\r\n\t\t\t<div class=\"question-box\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"question\"\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- Ask question button -->\r\n\t\t\t<div class=\"button-container\">\r\n\t\t\t\t<button @click=\"askQuestion\">向 ChatGPT 提问</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport IO from \"./input_output.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\tconst selectText1 = ref(\"\");\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst userQuestion = ref(\"\"); // 用户输入的提问\r\n\tconst gptAnswer = ref(\"\"); // GPT 返回的答案\r\n\r\n\tlet offDiv1, offDiv3;\r\n\r\n\tonMounted(() => {\r\n\t\toffDiv1 = bus.on(\"div1Event\", data => handleSelection(data, \"div1\"));\r\n\t\toffDiv3 = bus.on(\"div3Event\", data => handleSelection(data, \"div3\"));\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\toffDiv1();\r\n\t\toffDiv3();\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\t// 发送用户的提问到 GPT\r\n\tasync function askQuestion() {\r\n\t\tif (!userQuestion.value) {\r\n\t\t\talert(\"请输入问题！\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await api.post(\r\n\t\t\t\t\"gpt_ask\", // 新增接口\r\n\t\t\t\t{ question: userQuestion.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tgptAnswer.value = data.answer; // 显示 GPT 的回答\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"提问失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function compareTexts() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"gpt_compare\",\r\n\t\t\t\t{ text1: selectText2.value, text2: selectText3.value },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tselectText1.value = data.result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(\"对比失败:\", data.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(\"@@@222\", data);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 样式 */\r\n\t#div2 {\r\n\t\twidth: 60%;\r\n\t\theight: 100%;\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\t.VisContainer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin: 10px;\r\n\t\tborder: 2px solid rgb(4, 44, 68);\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tborder: 1px solid black;\r\n\t\tmargin: 10px;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\r\n\t.botContainer {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.io {\r\n\t\tflex: 1;\r\n\t\tmargin: 5px;\r\n\t\tborder: 1px solid blue;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t/* 按钮容器 */\r\n\t.button-container {\r\n\t\tmargin-top: 20px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 16px;\r\n\t\ttransition: background-color 0.3s;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t/* 提问框样式 */\r\n\t.question-box {\r\n\t\tmargin-top: 20px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\tresize: none;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 1.5;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t/* 显示 GPT 和对比结果 */\r\n\t.result-container {\r\n\t\tmargin-top: 30px;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #f1f1f1;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t.comparison-result,\r\n\t.gpt-answer {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.comparison-result h3,\r\n\t.gpt-answer h3 {\r\n\t\tfont-size: 18px;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.comparison-result p,\r\n\t.gpt-answer p {\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #555;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC,MAAM;EAACC,EAAE,EAAC;;;EACfD,KAAK,EAAC;AAAc;;EAEnBA,KAAK,EAAC;AAAwB;;EAI9BA,KAAK,EAAC;AAAwB;;EAC7BA,KAAK,EAAC;AAAI;;EAGVA,KAAK,EAAC;AAAI;;EAWXA,KAAK,EAAC;AAAkB;;EAvBhCE,GAAA;EAyB4BF,KAAK,EAAC;;gEAC7BG,mBAAA,CAAc,YAAV,OAAK;;EA1BdD,GAAA;EA+B0BF,KAAK,EAAC;;iEAC3BG,mBAAA,CAAgB,YAAZ,SAAO;;EAMRH,KAAK,EAAC;AAAc;;uBArC3BI,mBAAA,CAkDM,OAlDNC,UAkDM,GAjDLF,mBAAA,CAgDM,OAhDNG,UAgDM,GA/CLC,mBAAA,mDAAsD,EACtDJ,mBAAA,CAEM,OAFNK,UAEM,GADLC,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAI;8CAGhDX,mBAAA,CAOM,OAPNY,UAOM,GANLZ,mBAAA,CAEM,OAFNa,UAEM,GADLP,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAO;8CAEhDd,mBAAA,CAEM,OAFNe,UAEM,GADLT,YAAA,CAAiEC,MAAA;IAA7DC,KAAK,EAAC,OAAO;IAACC,MAAM,EAAC,OAAO;IAAEC,WAAW,EAAEH,MAAA,CAAAS;gDAIjDZ,mBAAA,uBAA0B,EAC1BJ,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAkB,IAC5BG,mBAAA,CAA2C;IAAlCiB,OAAK,EAAEV,MAAA,CAAAW;EAAY,GAAE,MAAI,E,GAGnCd,mBAAA,gDAAmD,EACnDJ,mBAAA,CAYM,OAZNmB,UAYM,GAXLf,mBAAA,+BAAkC,EACvBG,MAAA,CAAAI,WAAW,I,cAAtBV,mBAAA,CAGM,OAHNmB,UAGM,GAFLC,UAAc,EACdrB,mBAAA,CAAwB,WAAAsB,gBAAA,CAAlBf,MAAA,CAAAI,WAAW,iB,KA3BtBP,mBAAA,gBA8BIA,mBAAA,0BAA6B,EAClBG,MAAA,CAAAgB,SAAS,I,cAApBtB,mBAAA,CAGM,OAHNuB,WAGM,GAFLC,WAAgB,EAChBzB,mBAAA,CAAsB,WAAAsB,gBAAA,CAAhBf,MAAA,CAAAgB,SAAS,iB,KAjCpBnB,mBAAA,e,GAqCGA,mBAAA,wBAA2B,EAC3BJ,mBAAA,CAMM,OANN0B,WAMM,G,gBALL1B,mBAAA,CAIuC;IAHtCF,EAAE,EAAC,UAAU;IAxClB,uBAAA6B,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyCcrB,MAAA,CAAAsB,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRpB,WAAW,EAAC;iDAFHH,MAAA,CAAAsB,YAAY,E,KAKvBzB,mBAAA,yBAA4B,EAC5BJ,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAkB,IAC5BG,mBAAA,CAAkD;IAAzCiB,OAAK,EAAEV,MAAA,CAAAwB;EAAW,GAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}