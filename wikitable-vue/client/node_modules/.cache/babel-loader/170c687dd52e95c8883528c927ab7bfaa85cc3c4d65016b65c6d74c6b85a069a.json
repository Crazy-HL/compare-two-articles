{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\nimport bus from \"@/js/eventBus.js\";\nimport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\nexport default {\n  __name: 'Div2',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const userQuestion = ref(\"\");\n    const chatHistory = ref([]);\n    const selectText2 = ref(\"\");\n    const selectText3 = ref(\"\");\n    const div1RawData = ref(null);\n    const div3RawData = ref(null);\n    const isLoading = ref(false);\n\n    // 新增状态管理\n    const currentComparisonContext = ref({\n      fieldKey: null,\n      previousAnalysis: null,\n      allAttributes: [],\n      leftData: null,\n      rightData: null\n    });\n\n    // 追问关键词识别\n    const FOLLOW_UP_KEYWORDS = [\"结合其余\", \"其他属性\", \"为什么\", \"原因\", \"分析原因\", \"深入分析\", \"还有什么因素\"];\n\n    // 加载聊天历史\n    const loadChatHistory = () => {\n      const saved = localStorage.getItem(\"chatHistory\");\n      if (saved) {\n        try {\n          chatHistory.value = JSON.parse(saved);\n          // 尝试恢复最后一次对比上下文\n          const lastAssistantMsg = [...chatHistory.value].reverse().find(msg => msg.role === \"assistant\" && msg.isComparisonResult);\n          if (lastAssistantMsg) {\n            currentComparisonContext.value = lastAssistantMsg.context || {};\n          }\n        } catch (e) {\n          console.error(\"加载聊天记录失败:\", e);\n        }\n      }\n    };\n\n    // 保存聊天历史\n    watch(chatHistory, newVal => {\n      localStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\n    }, {\n      deep: true\n    });\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const container = document.querySelector(\".chat-history\");\n        if (container) container.scrollTop = container.scrollHeight;\n      });\n    };\n\n    // 处理选择事件\n    const handleDiv1Event = data => handleSelection(data, \"div1\");\n    const handleDiv3Event = data => handleSelection(data, \"div3\");\n    onMounted(() => {\n      loadChatHistory();\n      bus.on(\"div1_Event\", handleDiv1Event);\n      bus.on(\"div3_Event\", handleDiv3Event);\n    });\n    onUnmounted(() => {\n      bus.off(\"div1_Event\", handleDiv1Event);\n      bus.off(\"div3_Event\", handleDiv3Event);\n    });\n    function handleSelection(data, source) {\n      const plainText = getPlainTextFromSelection(data.content);\n      if (source === \"div1\") {\n        selectText2.value = plainText;\n        div1RawData.value = data.content;\n        currentComparisonContext.value.leftData = data.content;\n      } else if (source === \"div3\") {\n        selectText3.value = plainText;\n        div3RawData.value = data.content;\n        currentComparisonContext.value.rightData = data.content;\n      }\n\n      // 提取所有属性名\n      if (div1RawData.value && div3RawData.value) {\n        currentComparisonContext.value.allAttributes = [...new Set([...Object.keys(div1RawData.value), ...Object.keys(div3RawData.value)])];\n      }\n    }\n    function getPlainTextFromSelection(htmlContent) {\n      const container = document.createElement(\"div\");\n      container.innerHTML = htmlContent;\n      return container.innerText || container.textContent || \"\";\n    }\n    const formatAnalysisResult = text => {\n      // 原有格式化逻辑保持不变\n      return text;\n    };\n\n    // 判断是否为追问\n    const isFollowUpQuestion = question => {\n      return FOLLOW_UP_KEYWORDS.some(keyword => question.includes(keyword) && currentComparisonContext.value.fieldKey && currentComparisonContext.value.allAttributes.length > 0);\n    };\n\n    // 属性对比方法\n    const handleAttributeComparison = async params => {\n      if (!params.leftData || !params.rightData) {\n        showError(\"请先选择要对比的数据\");\n        return;\n      }\n      isLoading.value = true;\n\n      // 更新对比上下文\n      currentComparisonContext.value = {\n        ...currentComparisonContext.value,\n        fieldKey: params.fieldKey,\n        leftTitle: params.leftTitle,\n        rightTitle: params.rightTitle,\n        fieldType: params.fieldType,\n        fieldLabel: params.fieldLabel\n      };\n      try {\n        chatHistory.value.push({\n          role: \"assistant\",\n          content: `正在对比分析<strong>${params.fieldKey}</strong>属性...`,\n          timestamp: new Date().toLocaleString()\n        });\n        const response = await api.post(\"compare_attributes\", {\n          ...params,\n          isFirstAnalysis: true,\n          allAttributes: currentComparisonContext.value.allAttributes\n        });\n        if (response?.analysis) {\n          const formatted = formatAnalysisResult(response.analysis);\n          const msg = {\n            role: \"assistant\",\n            content: formatted,\n            timestamp: new Date().toLocaleString(),\n            isComparisonResult: true,\n            context: {\n              ...currentComparisonContext.value,\n              previousAnalysis: formatted\n            }\n          };\n          chatHistory.value.push(msg);\n          currentComparisonContext.value.previousAnalysis = formatted;\n        }\n      } catch (error) {\n        showError(`对比分析失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 提问方法\n    const askQuestion = async () => {\n      const question = userQuestion.value.trim();\n      if (!question) {\n        showError(\"问题不能为空\");\n        return;\n      }\n      chatHistory.value.push({\n        role: \"user\",\n        content: question,\n        timestamp: new Date().toLocaleString()\n      });\n      userQuestion.value = \"\";\n      isLoading.value = true;\n      try {\n        const isFollowUp = isFollowUpQuestion(question);\n        const endpoint = isFollowUp ? \"analyze_follow_up\" : \"gpt_ask_infobox\";\n        const response = await api.post(endpoint, {\n          question,\n          leftData: div1RawData.value,\n          rightData: div3RawData.value,\n          ...(isFollowUp && {\n            previousContext: currentComparisonContext.value,\n            previousField: currentComparisonContext.value.fieldKey\n          })\n        });\n        if (response?.answer) {\n          const formatted = formatAnalysisResult(response.answer);\n          chatHistory.value.push({\n            role: \"assistant\",\n            content: formatted,\n            timestamp: new Date().toLocaleString(),\n            ...(isFollowUp && {\n              isFollowUpResponse: true\n            })\n          });\n\n          // 如果是追问回答，更新上下文\n          if (isFollowUp) {\n            currentComparisonContext.value.previousAnalysis = formatted;\n          }\n        }\n      } catch (error) {\n        showError(`请求失败: ${error.message || \"未知错误\"}`);\n      } finally {\n        isLoading.value = false;\n        scrollToBottom();\n      }\n    };\n\n    // 显示错误消息\n    const showError = message => {\n      chatHistory.value.push({\n        role: \"assistant\",\n        content: message,\n        timestamp: new Date().toLocaleString(),\n        error: true\n      });\n    };\n\n    // 添加快捷提问按钮\n    const quickFollowUpQuestion = () => {\n      userQuestion.value = \"结合其余对比属性，分析其原因\";\n      askQuestion();\n    };\n    const __returned__ = {\n      userQuestion,\n      chatHistory,\n      selectText2,\n      selectText3,\n      div1RawData,\n      div3RawData,\n      isLoading,\n      currentComparisonContext,\n      FOLLOW_UP_KEYWORDS,\n      loadChatHistory,\n      scrollToBottom,\n      handleDiv1Event,\n      handleDiv3Event,\n      handleSelection,\n      getPlainTextFromSelection,\n      formatAnalysisResult,\n      isFollowUpQuestion,\n      handleAttributeComparison,\n      askQuestion,\n      showError,\n      quickFollowUpQuestion,\n      ref,\n      onMounted,\n      onUnmounted,\n      watch,\n      nextTick,\n      get bus() {\n        return bus;\n      },\n      CompareTable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","watch","nextTick","bus","CompareTable","userQuestion","chatHistory","selectText2","selectText3","div1RawData","div3RawData","isLoading","currentComparisonContext","fieldKey","previousAnalysis","allAttributes","leftData","rightData","FOLLOW_UP_KEYWORDS","loadChatHistory","saved","localStorage","getItem","value","JSON","parse","lastAssistantMsg","reverse","find","msg","role","isComparisonResult","context","e","console","error","newVal","setItem","stringify","deep","scrollToBottom","container","document","querySelector","scrollTop","scrollHeight","handleDiv1Event","data","handleSelection","handleDiv3Event","on","off","source","plainText","getPlainTextFromSelection","content","Set","Object","keys","htmlContent","createElement","innerHTML","innerText","textContent","formatAnalysisResult","text","isFollowUpQuestion","question","some","keyword","includes","length","handleAttributeComparison","params","showError","leftTitle","rightTitle","fieldType","fieldLabel","push","timestamp","Date","toLocaleString","response","api","post","isFirstAnalysis","analysis","formatted","message","askQuestion","trim","isFollowUp","endpoint","previousContext","previousField","answer","isFollowUpResponse","quickFollowUpQuestion"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst selectText2 = ref(\"\");\r\n\tconst selectText3 = ref(\"\");\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\r\n\t// 新增状态管理\r\n\tconst currentComparisonContext = ref({\r\n\t\tfieldKey: null,\r\n\t\tpreviousAnalysis: null,\r\n\t\tallAttributes: [],\r\n\t\tleftData: null,\r\n\t\trightData: null\r\n\t});\r\n\r\n\t// 追问关键词识别\r\n\tconst FOLLOW_UP_KEYWORDS = [\r\n\t\t\"结合其余\",\r\n\t\t\"其他属性\",\r\n\t\t\"为什么\",\r\n\t\t\"原因\",\r\n\t\t\"分析原因\",\r\n\t\t\"深入分析\",\r\n\t\t\"还有什么因素\"\r\n\t];\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t\t// 尝试恢复最后一次对比上下文\r\n\t\t\t\tconst lastAssistantMsg = [...chatHistory.value]\r\n\t\t\t\t\t.reverse()\r\n\t\t\t\t\t.find(msg => msg.role === \"assistant\" && msg.isComparisonResult);\r\n\t\t\t\tif (lastAssistantMsg) {\r\n\t\t\t\t\tcurrentComparisonContext.value = lastAssistantMsg.context || {};\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) container.scrollTop = container.scrollHeight;\r\n\t\t});\r\n\t};\r\n\r\n\t// 处理选择事件\r\n\tconst handleDiv1Event = data => handleSelection(data, \"div1\");\r\n\tconst handleDiv3Event = data => handleSelection(data, \"div3\");\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t});\r\n\r\n\tfunction handleSelection(data, source) {\r\n\t\tconst plainText = getPlainTextFromSelection(data.content);\r\n\t\tif (source === \"div1\") {\r\n\t\t\tselectText2.value = plainText;\r\n\t\t\tdiv1RawData.value = data.content;\r\n\t\t\tcurrentComparisonContext.value.leftData = data.content;\r\n\t\t} else if (source === \"div3\") {\r\n\t\t\tselectText3.value = plainText;\r\n\t\t\tdiv3RawData.value = data.content;\r\n\t\t\tcurrentComparisonContext.value.rightData = data.content;\r\n\t\t}\r\n\r\n\t\t// 提取所有属性名\r\n\t\tif (div1RawData.value && div3RawData.value) {\r\n\t\t\tcurrentComparisonContext.value.allAttributes = [\r\n\t\t\t\t...new Set([\r\n\t\t\t\t\t...Object.keys(div1RawData.value),\r\n\t\t\t\t\t...Object.keys(div3RawData.value)\r\n\t\t\t\t])\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPlainTextFromSelection(htmlContent) {\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.innerHTML = htmlContent;\r\n\t\treturn container.innerText || container.textContent || \"\";\r\n\t}\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\t// 原有格式化逻辑保持不变\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 判断是否为追问\r\n\tconst isFollowUpQuestion = question => {\r\n\t\treturn FOLLOW_UP_KEYWORDS.some(\r\n\t\t\tkeyword =>\r\n\t\t\t\tquestion.includes(keyword) &&\r\n\t\t\t\tcurrentComparisonContext.value.fieldKey &&\r\n\t\t\t\tcurrentComparisonContext.value.allAttributes.length > 0\r\n\t\t);\r\n\t};\r\n\r\n\t// 属性对比方法\r\n\tconst handleAttributeComparison = async params => {\r\n\t\tif (!params.leftData || !params.rightData) {\r\n\t\t\tshowError(\"请先选择要对比的数据\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\t// 更新对比上下文\r\n\t\tcurrentComparisonContext.value = {\r\n\t\t\t...currentComparisonContext.value,\r\n\t\t\tfieldKey: params.fieldKey,\r\n\t\t\tleftTitle: params.leftTitle,\r\n\t\t\trightTitle: params.rightTitle,\r\n\t\t\tfieldType: params.fieldType,\r\n\t\t\tfieldLabel: params.fieldLabel\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在对比分析<strong>${params.fieldKey}</strong>属性...`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await api.post(\"compare_attributes\", {\r\n\t\t\t\t...params,\r\n\t\t\t\tisFirstAnalysis: true,\r\n\t\t\t\tallAttributes: currentComparisonContext.value.allAttributes\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.analysis) {\r\n\t\t\t\tconst formatted = formatAnalysisResult(response.analysis);\r\n\t\t\t\tconst msg = {\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatted,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\t\tisComparisonResult: true,\r\n\t\t\t\t\tcontext: {\r\n\t\t\t\t\t\t...currentComparisonContext.value,\r\n\t\t\t\t\t\tpreviousAnalysis: formatted\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tchatHistory.value.push(msg);\r\n\t\t\t\tcurrentComparisonContext.value.previousAnalysis = formatted;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`对比分析失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 提问方法\r\n\tconst askQuestion = async () => {\r\n\t\tconst question = userQuestion.value.trim();\r\n\t\tif (!question) {\r\n\t\t\tshowError(\"问题不能为空\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tconst isFollowUp = isFollowUpQuestion(question);\r\n\t\t\tconst endpoint = isFollowUp ? \"analyze_follow_up\" : \"gpt_ask_infobox\";\r\n\r\n\t\t\tconst response = await api.post(endpoint, {\r\n\t\t\t\tquestion,\r\n\t\t\t\tleftData: div1RawData.value,\r\n\t\t\t\trightData: div3RawData.value,\r\n\t\t\t\t...(isFollowUp && {\r\n\t\t\t\t\tpreviousContext: currentComparisonContext.value,\r\n\t\t\t\t\tpreviousField: currentComparisonContext.value.fieldKey\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tif (response?.answer) {\r\n\t\t\t\tconst formatted = formatAnalysisResult(response.answer);\r\n\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\tcontent: formatted,\r\n\t\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\t\t...(isFollowUp && { isFollowUpResponse: true })\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 如果是追问回答，更新上下文\r\n\t\t\t\tif (isFollowUp) {\r\n\t\t\t\t\tcurrentComparisonContext.value.previousAnalysis = formatted;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowError(`请求失败: ${error.message || \"未知错误\"}`);\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\t// 显示错误消息\r\n\tconst showError = message => {\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"assistant\",\r\n\t\t\tcontent: message,\r\n\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\terror: true\r\n\t\t});\r\n\t};\r\n\r\n\t// 添加快捷提问按钮\r\n\tconst quickFollowUpQuestion = () => {\r\n\t\tuserQuestion.value = \"结合其余对比属性，分析其原因\";\r\n\t\taskQuestion();\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.message-meta {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #999;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tposition: sticky;\r\n\t\tbottom: 0;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:disabled {\r\n\t\tbackground-color: #eee;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\tbackground-color: #45a049;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\tbutton:active:not(:disabled) {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n\r\n\t/* 添加快捷按钮样式 */\r\n\t.quick-actions {\r\n\t\tdisplay: flex;\r\n\t\tgap: 8px;\r\n\t\tmargin-top: 8px;\r\n\t}\r\n\r\n\t.quick-btn {\r\n\t\tpadding: 4px 8px;\r\n\t\tfont-size: 12px;\r\n\t\tbackground: #f0f0f0;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.quick-btn:hover {\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}