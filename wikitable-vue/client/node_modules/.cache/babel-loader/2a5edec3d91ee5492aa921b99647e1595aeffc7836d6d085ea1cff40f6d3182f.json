{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-de7d3a1c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"wikipedia-content\",\n    innerHTML: $setup.pageHtml,\n    onMouseup: $setup.handleSelection\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","innerHTML","$setup","pageHtml","onMouseup","handleSelection","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\WikipediaContent.vue"],"sourcesContent":["<template>\r\n\t<div\r\n\t\tclass=\"wikipedia-content\"\r\n\t\tv-html=\"pageHtml\"\r\n\t\t@mouseup=\"handleSelection\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, defineEmits } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String // Wikipedia 文章标题\r\n\t});\r\n\r\n\tconst emits = defineEmits([\"select\", \"loaded\", \"error\"]); // 声明事件\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\r\n\t// **获取 Wikipedia 页面**\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch Wikipedia article\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\r\n\t\t\t// 解析 HTML\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\t// 仅获取正文部分\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (contentElement) {\r\n\t\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\t\temits(\"loaded\"); // 文章加载完成事件\r\n\t\t\t}\r\n\r\n\t\t\t// 手动引入 Wikipedia CSS\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error fetching Wikipedia content:\", err);\r\n\t\t\temits(\"error\", err); // 触发错误事件\r\n\t\t}\r\n\t};\r\n\r\n\t// **手动引入 Wikipedia CSS**\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// **处理文本选择**\r\n\tconst handleSelection = () => {\r\n\t\tconst selection = window.getSelection().toString().trim();\r\n\t\tif (selection) {\r\n\t\t\temits(\"select\", selection); // 触发选中文本事件\r\n\t\t}\r\n\t};\r\n\r\n\t// **组件挂载后加载 Wikipedia 内容**\r\n\tonMounted(fetchWikipediaContent);\r\n</script>\r\n\r\n<style scoped>\r\n\t.wikipedia-content {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 800px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t\tfont-size: 0.9rem;\r\n\t\tline-height: 1.6;\r\n\t\tbackground: #ffffff;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tborder-radius: 12px;\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;uBACCA,mBAAA,CAGkC;IAFjCC,KAAK,EAAC,mBAAmB;IACzBC,SAAiB,EAATC,MAAA,CAAAC,QAAQ;IACfC,SAAO,EAAEF,MAAA,CAAAG;2CAJZC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}