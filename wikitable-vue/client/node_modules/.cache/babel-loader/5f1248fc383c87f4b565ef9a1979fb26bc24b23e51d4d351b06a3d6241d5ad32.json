{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport { fetchWikipediaContent, injectWikipediaStyles } from \"@/js/apiUtils\";\nimport * as d3 from \"d3\";\nimport { renderChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'MainComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\");\n    const loading = ref(true);\n    const error = ref(\"\");\n    const selectedText = ref({});\n    const showPopup = ref({});\n    const divRef = ref(null);\n    const currentView = ref(\"text\");\n    const visualizationLoading = ref(false);\n    const handleSelection = () => {\n      // 如果弹出框已经显示并且有内容，则不更新\n      if (showPopup.value[props.divId] && selectedText.value[props.divId]) {\n        console.log(\"弹出框中已有内容，不更新\");\n        return;\n      }\n      const selection = window.getSelection();\n      if (!selection.rangeCount) {\n        console.log(\"没有选中内容\");\n        return;\n      }\n      const range = selection.getRangeAt(0);\n      const selectedHtml = range.cloneContents();\n\n      // 创建临时容器\n      const tempDiv = document.createElement(\"div\");\n      tempDiv.appendChild(selectedHtml);\n\n      // 判断选中的内容是否包含表格等 HTML 元素\n      const table = tempDiv.querySelector(\"table\");\n      if (table) {\n        console.log(`${props.divId}选中了表格内容`);\n        table.classList.add(\"custom-table\");\n        selectedText.value[props.divId] = tempDiv.innerHTML; // 根据 divId 存储选中内容\n      } else {\n        const text = selection.toString().trim();\n        if (!text) {\n          console.log(\"选中的文字为空\");\n          return;\n        }\n        console.log(`${props.divId}选中的文字:`, text);\n        selectedText.value[props.divId] = text; // 根据 divId 存储选中内容\n      }\n      showPopup.value[props.divId] = true; // 根据 divId 显示弹窗\n      currentView.value = \"text\"; // 默认显示文本视图\n\n      // 触发高亮\n      bus.emit(`${props.divId}Event`, {\n        content: selection.toString()\n      });\n\n      // 确保弹窗位置更新\n      nextTick(() => {\n        updatePopupPosition();\n      });\n    };\n    const closePopup = () => {\n      showPopup.value[props.divId] = false;\n      selectedText.value[props.divId] = \"\";\n      const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n      d3.select(container).html(\"\");\n    };\n    const switchView = async view => {\n      currentView.value = view;\n      if (view === \"visual\") {\n        visualizationLoading.value = true;\n        await processText();\n        visualizationLoading.value = false;\n      }\n    };\n    async function processText() {\n      try {\n        api.post(\"process_text\", {\n          text: selectedText.value[props.divId].toString().trim()\n        },\n        // 使用对应 divId 的选中内容\n        data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          const jsonData = data.json_data;\n          console.log(\"后端返回的数据:\", jsonData);\n\n          // 根据 divId 选择容器\n          const container = props.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\n          if (data.data_type === \"Non-Visual\") {\n            renderNonVisualChart(container, data, {\n              message: \"当前数据无法可视化\"\n            });\n          } else {\n            renderChart(jsonData, data.chart_classification);\n          }\n        });\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    }\n\n    // **更新遮罩层和弹出框的位置**\n    const updatePopupPosition = () => {\n      if (showPopup.value[props.divId] && divRef.value) {\n        const popup = divRef.value.querySelector(\".text-popup\");\n        const overlay = divRef.value.querySelector(\".overlay\");\n        if (popup && overlay) {\n          const rect = divRef.value.getBoundingClientRect();\n          const scrollTop = divRef.value.scrollTop;\n          const scrollLeft = divRef.value.scrollLeft;\n\n          // 动态调整遮罩层和弹出框的位置\n          overlay.style.top = `${scrollTop}px`;\n          overlay.style.left = `${scrollLeft}px`;\n          overlay.style.width = `${divRef.value.clientWidth}px`;\n          overlay.style.height = `${divRef.value.clientHeight}px`;\n          popup.style.top = `${rect.height / 2 + scrollTop}px`;\n          popup.style.left = `${rect.width / 2 + scrollLeft}px`;\n        }\n      }\n    };\n    onMounted(() => {\n      fetchWikipediaContent(props.pageTitle).then(html => {\n        pageHtml.value = html;\n        injectWikipediaStyles();\n      }).catch(err => {\n        error.value = err.message;\n      }).finally(() => {\n        loading.value = false;\n      });\n      if (divRef.value) {\n        divRef.value.addEventListener(\"mouseup\", handleSelection);\n      }\n      // 监听父容器滚动事件\n      if (divRef.value) {\n        divRef.value.addEventListener(\"scroll\", updatePopupPosition);\n      }\n    });\n    onUnmounted(() => {\n      if (divRef.value) {\n        divRef.value.removeEventListener(\"mouseup\", handleSelection);\n      }\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      currentView,\n      visualizationLoading,\n      handleSelection,\n      closePopup,\n      switchView,\n      processText,\n      updatePopupPosition,\n      ref,\n      onMounted,\n      onUnmounted,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      get fetchWikipediaContent() {\n        return fetchWikipediaContent;\n      },\n      get injectWikipediaStyles() {\n        return injectWikipediaStyles;\n      },\n      get d3() {\n        return d3;\n      },\n      get renderChart() {\n        return renderChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","LoadingSpinner","ErrorDisplay","WikipediaContent","fetchWikipediaContent","injectWikipediaStyles","d3","renderChart","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","currentView","visualizationLoading","handleSelection","value","divId","console","log","selection","window","getSelection","rangeCount","range","getRangeAt","selectedHtml","cloneContents","tempDiv","document","createElement","appendChild","table","querySelector","classList","add","innerHTML","text","toString","trim","bus","emit","content","nextTick","updatePopupPosition","closePopup","container","select","html","switchView","view","processText","api","post","data","alert","message","jsonData","json_data","data_type","renderNonVisualChart","chart_classification","popup","overlay","rect","getBoundingClientRect","scrollTop","scrollLeft","style","top","left","width","clientWidth","height","clientHeight","pageTitle","then","catch","err","finally","addEventListener","removeEventListener"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/base/MainComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:error=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent\r\n\t\t\tv-else\r\n\t\t\t:pageHtml=\"pageHtml\"\r\n\t\t\t@mouseup=\"handleSelection\"\r\n\t\t\t:divId=\"divId\"\r\n\t\t\t:showPopup=\"showPopup[divId]\"\r\n\t\t\t:selectedText=\"selectedText[divId]\"\r\n\t\t\t:currentView=\"currentView\"\r\n\t\t\t@closePopup=\"closePopup\"\r\n\t\t\t@switchView=\"switchView\"\r\n\t\t\t:visualizationLoading=\"visualizationLoading\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport { fetchWikipediaContent, injectWikipediaStyles } from \"@/js/apiUtils\";\r\n\timport * as d3 from \"d3\";\r\n\timport { renderChart } from \"@/js/chartUtils\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\");\r\n\tconst loading = ref(true);\r\n\tconst error = ref(\"\");\r\n\tconst selectedText = ref({});\r\n\tconst showPopup = ref({});\r\n\tconst divRef = ref(null);\r\n\tconst currentView = ref(\"text\");\r\n\tconst visualizationLoading = ref(false);\r\n\r\n\tconst handleSelection = () => {\r\n\t\t// 如果弹出框已经显示并且有内容，则不更新\r\n\t\tif (showPopup.value[props.divId] && selectedText.value[props.divId]) {\r\n\t\t\tconsole.log(\"弹出框中已有内容，不更新\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection.rangeCount) {\r\n\t\t\tconsole.log(\"没有选中内容\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst selectedHtml = range.cloneContents();\r\n\r\n\t\t// 创建临时容器\r\n\t\tconst tempDiv = document.createElement(\"div\");\r\n\t\ttempDiv.appendChild(selectedHtml);\r\n\r\n\t\t// 判断选中的内容是否包含表格等 HTML 元素\r\n\t\tconst table = tempDiv.querySelector(\"table\");\r\n\t\tif (table) {\r\n\t\t\tconsole.log(`${props.divId}选中了表格内容`);\r\n\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\tselectedText.value[props.divId] = tempDiv.innerHTML; // 根据 divId 存储选中内容\r\n\t\t} else {\r\n\t\t\tconst text = selection.toString().trim();\r\n\t\t\tif (!text) {\r\n\t\t\t\tconsole.log(\"选中的文字为空\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(`${props.divId}选中的文字:`, text);\r\n\t\t\tselectedText.value[props.divId] = text; // 根据 divId 存储选中内容\r\n\t\t}\r\n\r\n\t\tshowPopup.value[props.divId] = true; // 根据 divId 显示弹窗\r\n\t\tcurrentView.value = \"text\"; // 默认显示文本视图\r\n\r\n\t\t// 触发高亮\r\n\t\tbus.emit(`${props.divId}Event`, { content: selection.toString() });\r\n\r\n\t\t// 确保弹窗位置更新\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false;\r\n\t\tselectedText.value[props.divId] = \"\";\r\n\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\tconst switchView = async view => {\r\n\t\tcurrentView.value = view;\r\n\t\tif (view === \"visual\") {\r\n\t\t\tvisualizationLoading.value = true;\r\n\t\t\tawait processText();\r\n\t\t\tvisualizationLoading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tasync function processText() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"process_text\",\r\n\t\t\t\t{ text: selectedText.value[props.divId].toString().trim() }, // 使用对应 divId 的选中内容\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", jsonData);\r\n\r\n\t\t\t\t\t// 根据 divId 选择容器\r\n\t\t\t\t\tconst container =\r\n\t\t\t\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\r\n\t\t\t\t\tif (data.data_type === \"Non-Visual\") {\r\n\t\t\t\t\t\trenderNonVisualChart(container, data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法可视化\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderChart(jsonData, data.chart_classification);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\t// **更新遮罩层和弹出框的位置**\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\t\tif (popup && overlay) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\t// 动态调整遮罩层和弹出框的位置\r\n\t\t\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\t\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\t\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\t\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent(props.pageTitle)\r\n\t\t\t.then(html => {\r\n\t\t\t\tpageHtml.value = html;\r\n\t\t\t\tinjectWikipediaStyles();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\terror.value = err.message;\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tloading.value = false;\r\n\t\t\t});\r\n\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"mouseup\", handleSelection);\r\n\t\t}\r\n\t\t// 监听父容器滚动事件\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"mouseup\", handleSelection);\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}