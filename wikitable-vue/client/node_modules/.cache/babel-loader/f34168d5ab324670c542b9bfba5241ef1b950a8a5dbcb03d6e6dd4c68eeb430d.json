{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\nimport * as echarts from \"echarts\";\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    isCombined: {\n      type: Boolean,\n      default: false\n    },\n    showTrend: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const chartEl = ref(null);\n    let chartInstance = null;\n\n    // 颜色配置\n    const colorPalette = {\n      left: \"#4e79a7\",\n      // 左侧数据源颜色\n      right: \"#e15759\" // 右侧数据源颜色\n    };\n\n    // 初始化图表\n    const initChart = () => {\n      if (!chartEl.value) return;\n\n      // 销毁旧实例\n      if (chartInstance) {\n        chartInstance.dispose();\n      }\n\n      // 创建新实例\n      chartInstance = echarts.init(chartEl.value);\n\n      // 基础配置\n      const baseOption = {\n        tooltip: {\n          trigger: \"axis\",\n          formatter: params => {\n            return params.filter(param => param.value != null).map(param => {\n              return `${param.seriesName}<br/>${param.axisValue}: ${param.value}%`;\n            }).join(\"<br/>\");\n          }\n        },\n        legend: {\n          show: props.isCombined,\n          data: props.isCombined ? getSeriesNames() : []\n        },\n        grid: {\n          top: props.isCombined ? \"20%\" : \"15%\",\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          axisLabel: {\n            formatter: value => value // 直接显示完整年份\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          },\n          min: value => Math.max(0, Math.floor(value.min) - 1) // 动态计算Y轴最小值\n        }\n      };\n\n      // 合并图表配置\n      if (props.isCombined) {\n        const {\n          categories,\n          series\n        } = processCombinedData();\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: categories\n          },\n          series: series.map((s, index) => ({\n            name: s.name,\n            data: s.data,\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 8,\n            lineStyle: {\n              width: 3,\n              color: s.color\n            },\n            itemStyle: {\n              color: s.color\n            },\n            label: {\n              show: true,\n              position: \"top\",\n              formatter: params => {\n                return params.value !== null ? `${params.value}%` : \"\";\n              }\n            },\n            emphasis: {\n              focus: \"series\",\n              itemStyle: {\n                borderWidth: 2,\n                borderColor: \"#fff\"\n              }\n            }\n          }))\n        };\n        chartInstance.setOption(option);\n      }\n      // 普通折线图配置\n      else {\n        const option = {\n          ...baseOption,\n          xAxis: {\n            ...baseOption.xAxis,\n            data: props.data.map(item => item.year)\n          },\n          series: [{\n            name: \"数据\",\n            data: props.data.map(item => item.value),\n            type: \"line\",\n            symbol: \"circle\",\n            symbolSize: 8,\n            lineStyle: {\n              width: 3,\n              color: colorPalette.left\n            },\n            label: {\n              show: true,\n              formatter: params => `${params.value}%`\n            }\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n\n      // 响应式调整\n      window.addEventListener(\"resize\", handleResize);\n    };\n\n    // 处理合并数据\n    const processCombinedData = () => {\n      if (!props.isCombined || !props.data.series) {\n        return {\n          categories: [],\n          series: []\n        };\n      }\n\n      // 获取所有唯一且排序后的年份\n      const allYears = [...new Set(props.data.series.flatMap(series => series.data.map((value, index) => value !== null ? props.data.categories[index] : null)))].filter(Boolean).sort((a, b) => a - b);\n\n      // 重组系列数据\n      const series = props.data.series.map((s, index) => ({\n        ...s,\n        color: index === 0 ? colorPalette.left : colorPalette.right\n      }));\n      return {\n        categories: allYears,\n        series\n      };\n    };\n\n    // 获取系列名称\n    const getSeriesNames = () => {\n      return props.isCombined && props.data.series ? props.data.series.map(s => s.name) : [];\n    };\n\n    // 处理窗口大小变化\n    const handleResize = () => {\n      chartInstance?.resize();\n    };\n\n    // 生命周期\n    onMounted(() => {\n      initChart();\n    });\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    });\n\n    // 监听数据变化\n    watch(() => [props.data, props.isCombined], () => {\n      initChart();\n    }, {\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      chartEl,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      colorPalette,\n      initChart,\n      processCombinedData,\n      getSeriesNames,\n      handleResize,\n      ref,\n      onMounted,\n      watch,\n      onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","onBeforeUnmount","echarts","props","__props","chartEl","chartInstance","colorPalette","left","right","initChart","value","dispose","init","baseOption","tooltip","trigger","formatter","params","filter","param","map","seriesName","axisValue","join","legend","show","isCombined","data","getSeriesNames","grid","top","bottom","containLabel","xAxis","type","axisLabel","yAxis","min","Math","max","floor","categories","series","processCombinedData","option","s","index","name","symbol","symbolSize","lineStyle","width","color","itemStyle","label","position","emphasis","focus","borderWidth","borderColor","setOption","item","year","window","addEventListener","handleResize","allYears","Set","flatMap","Boolean","sort","a","b","resize","removeEventListener","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/charts/LineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartEl\" class=\"line-chart\"></div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, onBeforeUnmount } from \"vue\";\r\n\timport * as echarts from \"echarts\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\tisCombined: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tshowTrend: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t});\r\n\r\n\tconst chartEl = ref(null);\r\n\tlet chartInstance = null;\r\n\r\n\t// 颜色配置\r\n\tconst colorPalette = {\r\n\t\tleft: \"#4e79a7\", // 左侧数据源颜色\r\n\t\tright: \"#e15759\" // 右侧数据源颜色\r\n\t};\r\n\r\n\t// 初始化图表\r\n\tconst initChart = () => {\r\n\t\tif (!chartEl.value) return;\r\n\r\n\t\t// 销毁旧实例\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t}\r\n\r\n\t\t// 创建新实例\r\n\t\tchartInstance = echarts.init(chartEl.value);\r\n\r\n\t\t// 基础配置\r\n\t\tconst baseOption = {\r\n\t\t\ttooltip: {\r\n\t\t\t\ttrigger: \"axis\",\r\n\t\t\t\tformatter: params => {\r\n\t\t\t\t\treturn params\r\n\t\t\t\t\t\t.filter(param => param.value != null)\r\n\t\t\t\t\t\t.map(param => {\r\n\t\t\t\t\t\t\treturn `${param.seriesName}<br/>${param.axisValue}: ${param.value}%`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.join(\"<br/>\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: props.isCombined,\r\n\t\t\t\tdata: props.isCombined ? getSeriesNames() : []\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: props.isCombined ? \"20%\" : \"15%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\tright: \"4%\",\r\n\t\t\t\tbottom: \"3%\",\r\n\t\t\t\tcontainLabel: true\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: value => value // 直接显示完整年份\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: \"value\",\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\tformatter: \"{value}%\"\r\n\t\t\t\t},\r\n\t\t\t\tmin: value => Math.max(0, Math.floor(value.min) - 1) // 动态计算Y轴最小值\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 合并图表配置\r\n\t\tif (props.isCombined) {\r\n\t\t\tconst { categories, series } = processCombinedData();\r\n\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: categories\r\n\t\t\t\t},\r\n\t\t\t\tseries: series.map((s, index) => ({\r\n\t\t\t\t\tname: s.name,\r\n\t\t\t\t\tdata: s.data,\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\tcolor: s.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tcolor: s.color\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tposition: \"top\",\r\n\t\t\t\t\t\tformatter: params => {\r\n\t\t\t\t\t\t\treturn params.value !== null ? `${params.value}%` : \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\tfocus: \"series\",\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tborderColor: \"#fff\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\t\t// 普通折线图配置\r\n\t\telse {\r\n\t\t\tconst option = {\r\n\t\t\t\t...baseOption,\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\t...baseOption.xAxis,\r\n\t\t\t\t\tdata: props.data.map(item => item.year)\r\n\t\t\t\t},\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"数据\",\r\n\t\t\t\t\t\tdata: props.data.map(item => item.value),\r\n\t\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\t\tsymbol: \"circle\",\r\n\t\t\t\t\t\tsymbolSize: 8,\r\n\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\twidth: 3,\r\n\t\t\t\t\t\t\tcolor: colorPalette.left\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tformatter: params => `${params.value}%`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tchartInstance.setOption(option);\r\n\t\t}\r\n\r\n\t\t// 响应式调整\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t};\r\n\r\n\t// 处理合并数据\r\n\tconst processCombinedData = () => {\r\n\t\tif (!props.isCombined || !props.data.series) {\r\n\t\t\treturn { categories: [], series: [] };\r\n\t\t}\r\n\r\n\t\t// 获取所有唯一且排序后的年份\r\n\t\tconst allYears = [\r\n\t\t\t...new Set(\r\n\t\t\t\tprops.data.series.flatMap(series =>\r\n\t\t\t\t\tseries.data.map((value, index) =>\r\n\t\t\t\t\t\tvalue !== null ? props.data.categories[index] : null\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t]\r\n\t\t\t.filter(Boolean)\r\n\t\t\t.sort((a, b) => a - b);\r\n\r\n\t\t// 重组系列数据\r\n\t\tconst series = props.data.series.map((s, index) => ({\r\n\t\t\t...s,\r\n\t\t\tcolor: index === 0 ? colorPalette.left : colorPalette.right\r\n\t\t}));\r\n\r\n\t\treturn {\r\n\t\t\tcategories: allYears,\r\n\t\t\tseries\r\n\t\t};\r\n\t};\r\n\r\n\t// 获取系列名称\r\n\tconst getSeriesNames = () => {\r\n\t\treturn props.isCombined && props.data.series\r\n\t\t\t? props.data.series.map(s => s.name)\r\n\t\t\t: [];\r\n\t};\r\n\r\n\t// 处理窗口大小变化\r\n\tconst handleResize = () => {\r\n\t\tchartInstance?.resize();\r\n\t};\r\n\r\n\t// 生命周期\r\n\tonMounted(() => {\r\n\t\tinitChart();\r\n\t});\r\n\r\n\tonBeforeUnmount(() => {\r\n\t\tif (chartInstance) {\r\n\t\t\tchartInstance.dispose();\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t}\r\n\t});\r\n\r\n\t// 监听数据变化\r\n\twatch(\r\n\t\t() => [props.data, props.isCombined],\r\n\t\t() => {\r\n\t\t\tinitChart();\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 400px;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 4px;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}