{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport FieldVisualization from \"./FieldVisualization.vue\";\nimport bus from \"@/js/eventBus.js\";\n\n// 数据状态\n\nexport default {\n  __name: 'CompareTable',\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const leftInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n    const rightInfobox = ref({\n      title: \"\",\n      type: \"\",\n      data: {}\n    });\n\n    // 处理数据\n    const processInfoboxData = data => {\n      if (!data) return {\n        title: \"\",\n        type: \"\",\n        data: {}\n      };\n\n      // 标准化数据结构\n      const result = {\n        title: data.title || \"无标题\",\n        type: data.type || \"未知类型\",\n        data: data.sections || {} // 直接使用 sections\n      };\n      return result;\n    };\n\n    // 可比较字段（完全匹配数据中的字段名）\n    const COMPARABLE_FIELDS = [{\n      key: \"GDP\",\n      displayName: \"GDP\",\n      type: \"number\",\n      typeLabel: \"数值(万亿美元)\"\n    }, {\n      key: \"Population\",\n      displayName: \"人口\",\n      type: \"number\",\n      typeLabel: \"数值(亿人)\"\n    }, {\n      key: \"GDP growth\",\n      displayName: \"GDP增长率\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Inflation (CPI)\",\n      displayName: \"通货膨胀率\",\n      type: \"percentage\",\n      typeLabel: \"百分比(%)\"\n    }, {\n      key: \"Currency\",\n      displayName: \"货币\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Country group\",\n      displayName: \"国家类型\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Fiscal year\",\n      displayName: \"财政年度\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }, {\n      key: \"Trade organizations\",\n      displayName: \"贸易组织\",\n      type: \"text\",\n      typeLabel: \"文本\"\n    }];\n\n    // 获取字段值（精确匹配）\n    const getField = (infobox, fieldKey) => {\n      if (!infobox?.data) return null;\n\n      // 遍历所有section\n      for (const section of Object.values(infobox.data)) {\n        if (section[fieldKey] !== undefined) {\n          return section[fieldKey];\n        }\n\n        // 处理带特殊字符的key（如括号）\n        const matchedKey = Object.keys(section).find(k => k.replace(/[()]/g, \"\") === fieldKey.replace(/[()]/g, \"\"));\n        if (matchedKey) return section[matchedKey];\n      }\n      return null;\n    };\n\n    // 计算可显示字段\n    const comparableFields = computed(() => {\n      return COMPARABLE_FIELDS.filter(field => {\n        const leftVal = getField(leftInfobox.value, field.key);\n        const rightVal = getField(rightInfobox.value, field.key);\n        return !(leftVal === null && rightVal === null);\n      });\n    });\n\n    // 事件监听\n    onMounted(() => {\n      bus.on(\"div1_InfoboxData\", data => {\n        leftInfobox.value = processInfoboxData(data);\n        console.log(\"Left数据:\", JSON.parse(JSON.stringify(leftInfobox.value)));\n      });\n      bus.on(\"div3_InfoboxData\", data => {\n        rightInfobox.value = processInfoboxData(data);\n        console.log(\"Right数据:\", JSON.parse(JSON.stringify(rightInfobox.value)));\n      });\n    });\n    const __returned__ = {\n      leftInfobox,\n      rightInfobox,\n      processInfoboxData,\n      COMPARABLE_FIELDS,\n      getField,\n      comparableFields,\n      ref,\n      computed,\n      onMounted,\n      FieldVisualization,\n      get bus() {\n        return bus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","FieldVisualization","bus","leftInfobox","title","type","data","rightInfobox","processInfoboxData","result","sections","COMPARABLE_FIELDS","key","displayName","typeLabel","getField","infobox","fieldKey","section","Object","values","undefined","matchedKey","keys","find","k","replace","comparableFields","filter","field","leftVal","value","rightVal","on","console","log","JSON","parse","stringify"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/CompareTable.vue"],"sourcesContent":["<template>\r\n\t<div class=\"compare-container\">\r\n\t\t<div class=\"header\">\r\n\t\t\t<h2>Infobox 数据对比</h2>\r\n\t\t\t<div class=\"titles\">\r\n\t\t\t\t<div class=\"title-box left\">{{ leftInfobox.title }}</div>\r\n\t\t\t\t<div class=\"title-box center\">比较属性</div>\r\n\t\t\t\t<div class=\"title-box right\">{{ rightInfobox.title }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"comparison-grid\">\r\n\t\t\t<!-- 表头 -->\r\n\t\t\t<div class=\"column-header left-column\">数据展示</div>\r\n\t\t\t<div class=\"column-header middle-column\">属性</div>\r\n\t\t\t<div class=\"column-header right-column\">数据展示</div>\r\n\r\n\t\t\t<!-- 内容行 -->\r\n\t\t\t<template v-for=\"field in comparableFields\" :key=\"field.key\">\r\n\t\t\t\t<div class=\"cell left-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(leftInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell middle-column\">\r\n\t\t\t\t\t<div class=\"field-name\">{{ field.displayName }}</div>\r\n\t\t\t\t\t<div class=\"field-type\">{{ field.typeLabel }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"cell right-column\">\r\n\t\t\t\t\t<FieldVisualization\r\n\t\t\t\t\t\t:field=\"getField(rightInfobox, field.key)\"\r\n\t\t\t\t\t\t:type=\"field.type\" />\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted } from \"vue\";\r\n\timport FieldVisualization from \"./FieldVisualization.vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\r\n\t// 数据状态\r\n\tconst leftInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\tconst rightInfobox = ref({ title: \"\", type: \"\", data: {} });\r\n\r\n\t// 处理数据\r\n\tconst processInfoboxData = data => {\r\n\t\tif (!data) return { title: \"\", type: \"\", data: {} };\r\n\r\n\t\t// 标准化数据结构\r\n\t\tconst result = {\r\n\t\t\ttitle: data.title || \"无标题\",\r\n\t\t\ttype: data.type || \"未知类型\",\r\n\t\t\tdata: data.sections || {} // 直接使用 sections\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// 可比较字段（完全匹配数据中的字段名）\r\n\tconst COMPARABLE_FIELDS = [\r\n\t\t{\r\n\t\t\tkey: \"GDP\",\r\n\t\t\tdisplayName: \"GDP\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(万亿美元)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Population\",\r\n\t\t\tdisplayName: \"人口\",\r\n\t\t\ttype: \"number\",\r\n\t\t\ttypeLabel: \"数值(亿人)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"GDP growth\",\r\n\t\t\tdisplayName: \"GDP增长率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Inflation (CPI)\",\r\n\t\t\tdisplayName: \"通货膨胀率\",\r\n\t\t\ttype: \"percentage\",\r\n\t\t\ttypeLabel: \"百分比(%)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Currency\",\r\n\t\t\tdisplayName: \"货币\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Country group\",\r\n\t\t\tdisplayName: \"国家类型\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Fiscal year\",\r\n\t\t\tdisplayName: \"财政年度\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"Trade organizations\",\r\n\t\t\tdisplayName: \"贸易组织\",\r\n\t\t\ttype: \"text\",\r\n\t\t\ttypeLabel: \"文本\"\r\n\t\t}\r\n\t];\r\n\r\n\t// 获取字段值（精确匹配）\r\n\tconst getField = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.data) return null;\r\n\r\n\t\t// 遍历所有section\r\n\t\tfor (const section of Object.values(infobox.data)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\r\n\t\t\t// 处理带特殊字符的key（如括号）\r\n\t\t\tconst matchedKey = Object.keys(section).find(\r\n\t\t\t\tk => k.replace(/[()]/g, \"\") === fieldKey.replace(/[()]/g, \"\")\r\n\t\t\t);\r\n\t\t\tif (matchedKey) return section[matchedKey];\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t// 计算可显示字段\r\n\tconst comparableFields = computed(() => {\r\n\t\treturn COMPARABLE_FIELDS.filter(field => {\r\n\t\t\tconst leftVal = getField(leftInfobox.value, field.key);\r\n\t\t\tconst rightVal = getField(rightInfobox.value, field.key);\r\n\t\t\treturn !(leftVal === null && rightVal === null);\r\n\t\t});\r\n\t});\r\n\r\n\t// 事件监听\r\n\tonMounted(() => {\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Left数据:\", JSON.parse(JSON.stringify(leftInfobox.value)));\r\n\t\t});\r\n\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = processInfoboxData(data);\r\n\t\t\tconsole.log(\"Right数据:\", JSON.parse(JSON.stringify(rightInfobox.value)));\r\n\t\t});\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\t.compare-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 20px;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.header h2 {\r\n\t\tmargin: 0 0 10px 0;\r\n\t\tcolor: #333;\r\n\t}\r\n\r\n\t.titles {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\t.title-box {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px;\r\n\t\tbackground: #f5f5f5;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.title-box.center {\r\n\t\tflex: 0.5;\r\n\t\tbackground: #e0e0e0;\r\n\t}\r\n\r\n\t.comparison-grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 150px 1fr;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tborder-radius: 4px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.column-header {\r\n\t\tpadding: 12px;\r\n\t\tbackground: #2c3e50;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 15px;\r\n\t\tmin-height: 100px;\r\n\t\tborder-bottom: 1px solid #e0e0e0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.middle-column {\r\n\t\tbackground-color: #f9f9f9;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.field-type {\r\n\t\tcolor: #666;\r\n\t\tfont-size: 12px;\r\n\t\tfont-style: italic;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}