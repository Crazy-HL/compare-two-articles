{"ast":null,"code":"import { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nconst debugMode = true;\n\n// 数据清洗函数\n\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n\n    // 调试模式\n    const cleanValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n\n      // 处理特殊格式\n      if (typeof value === \"string\") {\n        // 处理 \"Value^19,532025\" 这种格式\n        if (value.includes(\"^\")) {\n          const numPart = value.split(\"^\")[1]?.split(\";\")[0];\n          if (numPart) {\n            const num = parseFloat(numPart.replace(/,/g, \"\"));\n            if (!isNaN(num)) return num;\n          }\n        }\n\n        // 处理常规字符串\n        const num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\n        return isNaN(num) ? value : num;\n      }\n      return value;\n    };\n\n    // 处理后的数据\n    const processedArray = computed(() => {\n      if (!props.field) return [];\n      const rawArray = Array.isArray(props.field) ? props.field : [props.field];\n      return rawArray.map(item => {\n        // 提取年份\n        let year;\n        if (item.year) {\n          year = parseInt(item.year);\n        } else if (item.raw) {\n          const yearMatch = String(item.raw).match(/(20\\d{2})/);\n          year = yearMatch ? parseInt(yearMatch[1]) : null;\n        }\n        return {\n          value: cleanValue(item.value ?? item.raw),\n          year: year,\n          raw: item.raw || item.value\n        };\n      }).filter(item => item.value !== null && !isNaN(item.value));\n    });\n\n    // 可视化类型判断\n    const visualizationType = computed(() => {\n      // 1. 使用props指定的类型\n      if (props.visualization) return props.visualization;\n\n      // 2. 自动判断逻辑\n      if (isTimeSeriesData.value) return \"line-chart\";\n      if (isComparisonData.value) return \"bar-chart\";\n      if (isSinglePercentage.value) return \"pie-chart\";\n\n      // 3. 默认文本显示\n      return \"text-only\";\n    });\n\n    // 数据类型判断\n    const isTimeSeriesData = computed(() => {\n      return processedArray.value.length >= 2 && processedArray.value.every(item => item.year && typeof item.value === \"number\");\n    });\n    const isComparisonData = computed(() => {\n      return processedArray.value.length >= 1 && processedArray.value.every(item => typeof item.value === \"number\");\n    });\n    const isSinglePercentage = computed(() => {\n      return props.type === \"percentage\" && !Array.isArray(props.field) && typeof cleanValue(props.field?.value) === \"number\";\n    });\n    const hasData = computed(() => {\n      if (props.field === null || props.field === undefined) return false;\n      if (Array.isArray(props.field)) return processedArray.value.length > 0;\n      return props.field.value !== undefined && props.field.value !== null;\n    });\n    const isArray = computed(() => Array.isArray(props.field));\n\n    // 格式化文本显示\n    const formatTextValue = item => {\n      const value = item.value ?? item;\n      if (value === null || value === undefined) return \"-\";\n      if (typeof value === \"number\") {\n        if (props.type === \"percentage\") return `${value}%`;\n        return value.toLocaleString();\n      }\n\n      // 特殊字段处理\n      if (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\n        return \"人民币 (CNY)\";\n      }\n      return value;\n    };\n\n    // 图表绘制方法\n    const drawPieChart = () => {\n      const container = pieChart.value;\n      if (!container) return;\n      container.innerHTML = \"\";\n      let data;\n      if (Array.isArray(props.field)) {\n        // 处理数组格式的数据\n        data = props.field.filter(item => item.value !== \"(FY 2018)\" && !isNaN(item.value)).map(item => ({\n          name: item.raw.split(\":\")[0].trim(),\n          value: +item.value\n        }));\n      } else if (props.field && typeof props.field === \"object\") {\n        // 处理单个对象格式的数据\n        const value = +props.field.value;\n        if (isNaN(value)) {\n          console.error(\"饼图数据无效:\", value);\n          return;\n        }\n        // 如果只有一个数据项，分成实际数据和剩余部分\n        data = [{\n          name: props.field.raw.split(\" \")[0].trim(),\n          value\n        }, {\n          name: \"empty\",\n          value: 100 - value\n        }];\n      } else {\n        console.error(\"饼图数据格式不正确\");\n        return;\n      }\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 40,\n        left: 40\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      // 单个数据项 - 绘制饼图\n      if (data.length === 2 && data[1].name === \"empty\") {\n        const radius = Math.min(chartWidth, chartHeight) / 2;\n        svg.attr(\"transform\", `translate(${width / 2},${height / 2})`);\n        const arc = d3.arc().innerRadius(0).outerRadius(radius);\n        const pie = d3.pie().value(d => d.value);\n        svg.selectAll(\"path\").data(pie(data)).enter().append(\"path\").attr(\"d\", arc).attr(\"fill\", (_, i) => i === 0 ? \"#4CAF50\" : \"#eee\");\n        svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.3em\").text(`${data[0].value}%`);\n      }\n      // 多个数据项 - 绘制堆叠柱状图\n      else {\n        // 准备堆叠数据\n        const stackData = data.map(d => ({\n          name: d.name,\n          value: d.value\n        }));\n        const total = d3.sum(stackData, d => d.value);\n\n        // 计算百分比\n        stackData.forEach(d => {\n          d.percentage = (d.value / total * 100).toFixed(1);\n        });\n\n        // 设置比例尺\n        const x = d3.scaleBand().domain(stackData.map(d => d.name)).range([0, chartWidth]).padding(0.2);\n        const y = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\n\n        // 创建堆叠\n        const stack = d3.stack().keys([\"percentage\"]).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n        const series = stack(stackData);\n\n        // 颜色比例尺\n        const color = d3.scaleOrdinal().domain(stackData.map(d => d.name)).range(d3.schemeCategory10);\n\n        // 绘制堆叠条\n        svg.selectAll(\".bar\").data(series[0]).enter().append(\"rect\").attr(\"x\", d => x(d.data.name)).attr(\"y\", d => y(d[1])).attr(\"height\", d => y(d[0]) - y(d[1])).attr(\"width\", x.bandwidth()).attr(\"fill\", (d, i) => color(i)).attr(\"rx\", 3) // 圆角\n        .attr(\"ry\", 3);\n\n        // 添加数值标签\n        svg.selectAll(\".label\").data(series[0]).enter().append(\"text\").attr(\"x\", d => x(d.data.name) + x.bandwidth() / 2).attr(\"y\", d => y(d[1]) - 5).attr(\"text-anchor\", \"middle\").text(d => `${d.data.percentage}%`).style(\"font-size\", \"12px\").style(\"fill\", \"#333\");\n\n        // 添加x轴\n        svg.append(\"g\").attr(\"transform\", `translate(0,${chartHeight})`).call(d3.axisBottom(x)).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-45)\");\n\n        // 添加y轴\n        svg.append(\"g\").call(d3.axisLeft(y).ticks(5));\n      }\n    };\n    const drawBarChart = () => {\n      const container = barChart.value;\n      if (!container || processedArray.value.length === 0) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 25,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleBand().domain(processedArray.value.map((_, i) => i)).range([margin.left, width - margin.right]).padding(0.5);\n      const y = d3.scaleLinear().domain([0, d3.max(processedArray.value, d => d.value)]).range([height - margin.bottom, margin.top]);\n      svg.selectAll(\"rect\").data(processedArray.value).enter().append(\"rect\").attr(\"x\", (_, i) => x(i)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - margin.bottom - y(d.value)).attr(\"fill\", \"#2196F3\");\n      svg.selectAll(\"text\").data(processedArray.value).enter().append(\"text\").attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => props.type === \"percentage\" ? `${d.value}%` : d.value);\n    };\n    const drawLineChart = () => {\n      const container = lineChart.value;\n      if (!container || processedArray.value.length < 2) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      };\n\n      // 按年份排序\n      const chartData = [...processedArray.value].filter(item => item.year && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width - 50).attr(\"height\", height);\n      const x = d3.scaleLinear().domain(d3.extent(chartData, d => d.year)).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain([0, d3.max(chartData, d => d.value) * 1.1]).range([height - margin.bottom, margin.top]);\n\n      // 绘制折线（去掉坐标轴）\n      const line = d3.line().x(d => x(d.year)).y(d => y(d.value)).curve(d3.curveCatmullRom.alpha(0.5)); // 更平滑的曲线\n\n      svg.append(\"path\").datum(chartData).attr(\"d\", line).attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 3) // 加粗线条\n      .attr(\"fill\", \"none\");\n\n      // 数据点（放大并添加白色边框）\n      svg.selectAll(\"circle\").data(chartData).enter().append(\"circle\").attr(\"cx\", d => x(d.year)).attr(\"cy\", d => y(d.value)).attr(\"r\", 5) // 增大半径\n      .attr(\"fill\", \"#2196F3\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 2);\n\n      // 数值标签（只显示最后一个点）\n      const lastPoint = chartData[chartData.length - 1];\n      svg.append(\"text\").attr(\"x\", x(lastPoint.year) + 12).attr(\"y\", y(lastPoint.value)).attr(\"dy\", \"0.35em\").style(\"font-size\", \"12px\").style(\"font-weight\", \"bold\").style(\"fill\", \"#2196F3\").text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\n    };\n\n    // 监听变化\n    watch(() => [props.field, visualizationType.value], () => {\n      nextTick(() => {\n        if (!hasData.value) return;\n        switch (visualizationType.value) {\n          case \"pie-chart\":\n            drawPieChart();\n            break;\n          case \"line-chart\":\n            drawLineChart();\n            break;\n          case \"bar-chart\":\n            drawBarChart();\n            break;\n        }\n      });\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      pieChart,\n      barChart,\n      lineChart,\n      debugMode,\n      cleanValue,\n      processedArray,\n      visualizationType,\n      isTimeSeriesData,\n      isComparisonData,\n      isSinglePercentage,\n      hasData,\n      isArray,\n      formatTextValue,\n      drawPieChart,\n      drawBarChart,\n      drawLineChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      nextTick,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","nextTick","d3","debugMode","props","__props","pieChart","barChart","lineChart","cleanValue","value","undefined","includes","numPart","split","num","parseFloat","replace","isNaN","processedArray","field","rawArray","Array","isArray","map","item","year","parseInt","raw","yearMatch","String","match","filter","visualizationType","visualization","isTimeSeriesData","isComparisonData","isSinglePercentage","length","every","type","hasData","formatTextValue","toLocaleString","fieldKey","drawPieChart","container","innerHTML","data","name","trim","console","error","width","clientWidth","height","clientHeight","margin","top","right","bottom","left","chartWidth","chartHeight","svg","select","append","attr","radius","Math","min","arc","innerRadius","outerRadius","pie","d","selectAll","enter","_","i","text","stackData","total","sum","forEach","percentage","toFixed","x","scaleBand","domain","range","padding","y","scaleLinear","stack","keys","order","stackOrderNone","offset","stackOffsetNone","series","color","scaleOrdinal","schemeCategory10","bandwidth","style","call","axisBottom","axisLeft","ticks","drawBarChart","max","drawLineChart","chartData","sort","a","b","extent","line","curve","curveCatmullRom","alpha","datum","lastPoint","immediate","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<!-- 时间序列折线图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 比较柱状图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 文本显示 -->\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 调试模式\r\n\tconst debugMode = true;\r\n\r\n\t// 数据清洗函数\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 处理特殊格式\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\t// 处理 \"Value^19,532025\" 这种格式\r\n\t\t\tif (value.includes(\"^\")) {\r\n\t\t\t\tconst numPart = value.split(\"^\")[1]?.split(\";\")[0];\r\n\t\t\t\tif (numPart) {\r\n\t\t\t\t\tconst num = parseFloat(numPart.replace(/,/g, \"\"));\r\n\t\t\t\t\tif (!isNaN(num)) return num;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 处理常规字符串\r\n\t\t\tconst num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\r\n\t\t\treturn isNaN(num) ? value : num;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\tconst rawArray = Array.isArray(props.field) ? props.field : [props.field];\r\n\r\n\t\treturn rawArray\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 提取年份\r\n\t\t\t\tlet year;\r\n\t\t\t\tif (item.year) {\r\n\t\t\t\t\tyear = parseInt(item.year);\r\n\t\t\t\t} else if (item.raw) {\r\n\t\t\t\t\tconst yearMatch = String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null && !isNaN(item.value));\r\n\t});\r\n\r\n\t// 可视化类型判断\r\n\tconst visualizationType = computed(() => {\r\n\t\t// 1. 使用props指定的类型\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 2. 自动判断逻辑\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\t// 3. 默认文本显示\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 数据类型判断\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(\r\n\t\t\t\titem => item.year && typeof item.value === \"number\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化文本显示\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString();\r\n\t\t}\r\n\r\n\t\t// 特殊字段处理\r\n\t\tif (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\r\n\t\t\treturn \"人民币 (CNY)\";\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 图表绘制方法\r\n\tconst drawPieChart = () => {\r\n\t\tconst container = pieChart.value;\r\n\t\tif (!container) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tlet data;\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\t// 处理数组格式的数据\r\n\t\t\tdata = props.field\r\n\t\t\t\t.filter(item => item.value !== \"(FY 2018)\" && !isNaN(item.value))\r\n\t\t\t\t.map(item => ({\r\n\t\t\t\t\tname: item.raw.split(\":\")[0].trim(),\r\n\t\t\t\t\tvalue: +item.value\r\n\t\t\t\t}));\r\n\t\t} else if (props.field && typeof props.field === \"object\") {\r\n\t\t\t// 处理单个对象格式的数据\r\n\t\t\tconst value = +props.field.value;\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\tconsole.error(\"饼图数据无效:\", value);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// 如果只有一个数据项，分成实际数据和剩余部分\r\n\t\t\tdata = [\r\n\t\t\t\t{ name: props.field.raw.split(\" \")[0].trim(), value },\r\n\t\t\t\t{ name: \"empty\", value: 100 - value }\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tconsole.error(\"饼图数据格式不正确\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 30, bottom: 40, left: 40 };\r\n\t\tconst chartWidth = width - margin.left - margin.right;\r\n\t\tconst chartHeight = height - margin.top - margin.bottom;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n\t\t// 单个数据项 - 绘制饼图\r\n\t\tif (data.length === 2 && data[1].name === \"empty\") {\r\n\t\t\tconst radius = Math.min(chartWidth, chartHeight) / 2;\r\n\r\n\t\t\tsvg.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\t\t\tconst pie = d3.pie().value(d => d.value);\r\n\r\n\t\t\tsvg\r\n\t\t\t\t.selectAll(\"path\")\r\n\t\t\t\t.data(pie(data))\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"path\")\r\n\t\t\t\t.attr(\"d\", arc)\r\n\t\t\t\t.attr(\"fill\", (_, i) => (i === 0 ? \"#4CAF50\" : \"#eee\"));\r\n\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t\t.text(`${data[0].value}%`);\r\n\t\t}\r\n\t\t// 多个数据项 - 绘制堆叠柱状图\r\n\t\telse {\r\n\t\t\t// 准备堆叠数据\r\n\t\t\tconst stackData = data.map(d => ({ name: d.name, value: d.value }));\r\n\t\t\tconst total = d3.sum(stackData, d => d.value);\r\n\r\n\t\t\t// 计算百分比\r\n\t\t\tstackData.forEach(d => {\r\n\t\t\t\td.percentage = ((d.value / total) * 100).toFixed(1);\r\n\t\t\t});\r\n\r\n\t\t\t// 设置比例尺\r\n\t\t\tconst x = d3\r\n\t\t\t\t.scaleBand()\r\n\t\t\t\t.domain(stackData.map(d => d.name))\r\n\t\t\t\t.range([0, chartWidth])\r\n\t\t\t\t.padding(0.2);\r\n\r\n\t\t\tconst y = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\r\n\r\n\t\t\t// 创建堆叠\r\n\t\t\tconst stack = d3\r\n\t\t\t\t.stack()\r\n\t\t\t\t.keys([\"percentage\"])\r\n\t\t\t\t.order(d3.stackOrderNone)\r\n\t\t\t\t.offset(d3.stackOffsetNone);\r\n\r\n\t\t\tconst series = stack(stackData);\r\n\r\n\t\t\t// 颜色比例尺\r\n\t\t\tconst color = d3\r\n\t\t\t\t.scaleOrdinal()\r\n\t\t\t\t.domain(stackData.map(d => d.name))\r\n\t\t\t\t.range(d3.schemeCategory10);\r\n\r\n\t\t\t// 绘制堆叠条\r\n\t\t\tsvg\r\n\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t.data(series[0])\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"x\", d => x(d.data.name))\r\n\t\t\t\t.attr(\"y\", d => y(d[1]))\r\n\t\t\t\t.attr(\"height\", d => y(d[0]) - y(d[1]))\r\n\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t.attr(\"fill\", (d, i) => color(i))\r\n\t\t\t\t.attr(\"rx\", 3) // 圆角\r\n\t\t\t\t.attr(\"ry\", 3);\r\n\r\n\t\t\t// 添加数值标签\r\n\t\t\tsvg\r\n\t\t\t\t.selectAll(\".label\")\r\n\t\t\t\t.data(series[0])\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"x\", d => x(d.data.name) + x.bandwidth() / 2)\r\n\t\t\t\t.attr(\"y\", d => y(d[1]) - 5)\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.text(d => `${d.data.percentage}%`)\r\n\t\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t\t.style(\"fill\", \"#333\");\r\n\r\n\t\t\t// 添加x轴\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"transform\", `translate(0,${chartHeight})`)\r\n\t\t\t\t.call(d3.axisBottom(x))\r\n\t\t\t\t.selectAll(\"text\")\r\n\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t.attr(\"dx\", \"-.8em\")\r\n\t\t\t\t.attr(\"dy\", \".15em\")\r\n\t\t\t\t.attr(\"transform\", \"rotate(-45)\");\r\n\r\n\t\t\t// 添加y轴\r\n\t\t\tsvg.append(\"g\").call(d3.axisLeft(y).ticks(5));\r\n\t\t}\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tconst container = barChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 25, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(processedArray.value.map((_, i) => i))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.5);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(processedArray.value, d => d.value)])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => (props.type === \"percentage\" ? `${d.value}%` : d.value));\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tconst container = lineChart.value;\r\n\t\tif (!container || processedArray.value.length < 2) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n\r\n\t\t// 按年份排序\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width - 50)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(chartData, d => d.value) * 1.1])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\t// 绘制折线（去掉坐标轴）\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5)); // 更平滑的曲线\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke-width\", 3) // 加粗线条\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\t// 数据点（放大并添加白色边框）\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 5) // 增大半径\r\n\t\t\t.attr(\"fill\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 2);\r\n\r\n\t\t// 数值标签（只显示最后一个点）\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 12)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.style(\"fill\", \"#2196F3\")\r\n\t\t\t.text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder: 1px solid #eee; /* 调试边框 */\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}