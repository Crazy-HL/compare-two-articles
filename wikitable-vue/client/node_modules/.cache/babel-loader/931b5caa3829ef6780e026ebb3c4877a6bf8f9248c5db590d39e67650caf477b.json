{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-47a44700\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wiki-comparison\"\n};\nconst _hoisted_2 = {\n  class: \"comparison-title\"\n};\nconst _hoisted_3 = {\n  class: \"category-title\"\n};\nconst _hoisted_4 = {\n  class: \"comparison-table\"\n};\nconst _hoisted_5 = {\n  class: \"table-header\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-cell\"\n}, \"属性\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"header-cell\"\n};\nconst _hoisted_8 = {\n  class: \"header-cell\"\n};\nconst _hoisted_9 = {\n  class: \"row-cell field-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($props.leftTitle) + \" ↔ \" + _toDisplayString($props.rightTitle), 1 /* TEXT */), (_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.orderedCategories, category => {\n    return _createElementVNode(\"div\", {\n      key: category,\n      class: \"comparison-category\"\n    }, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString($setup.categoryLabels[category]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString($props.leftTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($props.rightTitle), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCommonFields(category), field => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: field,\n        class: \"table-row\"\n      }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(field), 1 /* TEXT */), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"row-cell\", {\n          'diff-cell': $setup.isDifferent(category, field)\n        }])\n      }, _toDisplayString($setup.formatValue($props.leftData[category]?.[field])), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"row-cell\", {\n          'diff-cell': $setup.isDifferent(category, field)\n        }])\n      }, _toDisplayString($setup.formatValue($props.rightData[category]?.[field])), 3 /* TEXT, CLASS */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$props","leftTitle","rightTitle","_Fragment","_renderList","$setup","orderedCategories","category","key","_hoisted_3","categoryLabels","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","getCommonFields","field","_hoisted_9","_normalizeClass","isDifferent","formatValue","leftData","rightData"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\WikiComparison.vue"],"sourcesContent":["<template>\r\n\t<div class=\"wiki-comparison\">\r\n\t\t<h2 class=\"comparison-title\">{{ leftTitle }} ↔ {{ rightTitle }}</h2>\r\n\r\n\t\t<div\r\n\t\t\tv-for=\"category in orderedCategories\"\r\n\t\t\t:key=\"category\"\r\n\t\t\tclass=\"comparison-category\">\r\n\t\t\t<h3 class=\"category-title\">{{ categoryLabels[category] }}</h3>\r\n\r\n\t\t\t<div class=\"comparison-table\">\r\n\t\t\t\t<div class=\"table-header\">\r\n\t\t\t\t\t<div class=\"header-cell\">属性</div>\r\n\t\t\t\t\t<div class=\"header-cell\">{{ leftTitle }}</div>\r\n\t\t\t\t\t<div class=\"header-cell\">{{ rightTitle }}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"field in getCommonFields(category)\"\r\n\t\t\t\t\t:key=\"field\"\r\n\t\t\t\t\tclass=\"table-row\">\r\n\t\t\t\t\t<div class=\"row-cell field-name\">{{ field }}</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"row-cell\"\r\n\t\t\t\t\t\t:class=\"{ 'diff-cell': isDifferent(category, field) }\">\r\n\t\t\t\t\t\t{{ formatValue(leftData[category]?.[field]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"row-cell\"\r\n\t\t\t\t\t\t:class=\"{ 'diff-cell': isDifferent(category, field) }\">\r\n\t\t\t\t\t\t{{ formatValue(rightData[category]?.[field]) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { computed } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tleftTitle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\trightTitle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tleftData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\trightData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\t// 分类顺序\r\n\tconst orderedCategories = [\r\n\t\t\"identifiers\",\r\n\t\t\"temporal\",\r\n\t\t\"quantitative\",\r\n\t\t\"categorical\",\r\n\t\t\"relational\",\r\n\t\t\"other\"\r\n\t];\r\n\r\n\t// 分类标签\r\n\tconst categoryLabels = {\r\n\t\tidentifiers: \"标识信息\",\r\n\t\ttemporal: \"时间信息\",\r\n\t\tquantitative: \"量化数据\",\r\n\t\tcategorical: \"分类信息\",\r\n\t\trelational: \"关联信息\",\r\n\t\tother: \"其他信息\"\r\n\t};\r\n\r\n\t// 获取两个数据源共有的字段\r\n\tconst getCommonFields = category => {\r\n\t\tconst leftFields = Object.keys(props.leftData?.[category] || {});\r\n\t\tconst rightFields = Object.keys(props.rightData?.[category] || {});\r\n\t\treturn [...new Set([...leftFields, ...rightFields])].sort();\r\n\t};\r\n\r\n\t// 检查字段值是否不同\r\n\tconst isDifferent = (category, field) => {\r\n\t\tconst leftVal = props.leftData?.[category]?.[field];\r\n\t\tconst rightVal = props.rightData?.[category]?.[field];\r\n\r\n\t\tif (!leftVal || !rightVal) return false;\r\n\r\n\t\t// 处理对象类型的值\r\n\t\tif (typeof leftVal === \"object\" && typeof rightVal === \"object\") {\r\n\t\t\treturn leftVal.normalized !== rightVal.normalized;\r\n\t\t}\r\n\r\n\t\treturn leftVal !== rightVal;\r\n\t};\r\n\r\n\t// 格式化显示值\r\n\tconst formatValue = value => {\r\n\t\tif (!value) return \"-\";\r\n\r\n\t\tif (typeof value === \"object\") {\r\n\t\t\t// 显示量化值的解析结果\r\n\t\t\tif (value.normalized) {\r\n\t\t\t\treturn `${value.original} (${value.normalized})`;\r\n\t\t\t}\r\n\t\t\treturn value.original || \"-\";\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.wiki-comparison {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\tmax-width: 1000px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 20px;\r\n\t}\r\n\r\n\t.comparison-title {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 30px;\r\n\t\tcolor: #24292e;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t\tpadding-bottom: 10px;\r\n\t}\r\n\r\n\t.comparison-category {\r\n\t\tmargin-bottom: 30px;\r\n\t}\r\n\r\n\t.category-title {\r\n\t\tmargin: 0 0 12px 0;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #0366d6;\r\n\t\tpadding-bottom: 6px;\r\n\t\tborder-bottom: 1px dashed #dfe2e5;\r\n\t}\r\n\r\n\t.comparison-table {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tborder: 1px solid #e1e4e8;\r\n\t\tborder-radius: 6px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.table-header {\r\n\t\tdisplay: contents;\r\n\t}\r\n\r\n\t.header-cell {\r\n\t\tpadding: 10px 12px;\r\n\t\tbackground-color: #f6f8fa;\r\n\t\tfont-weight: 600;\r\n\t\ttext-align: center;\r\n\t\tborder-bottom: 1px solid #e1e4e8;\r\n\t}\r\n\r\n\t.table-row {\r\n\t\tdisplay: contents;\r\n\t}\r\n\r\n\t.row-cell {\r\n\t\tpadding: 10px 12px;\r\n\t\tborder-bottom: 1px solid #eaecef;\r\n\t\tword-break: break-word;\r\n\t}\r\n\r\n\t.field-name {\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: #fafbfc;\r\n\t}\r\n\r\n\t.diff-cell {\r\n\t\tbackground-color: #fffbdd;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t/* 最后一行去掉底部边框 */\r\n\t.table-row:last-child .row-cell {\r\n\t\tborder-bottom: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAiB;;EACvBA,KAAK,EAAC;AAAkB;;EAMvBA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAkB;;EACvBA,KAAK,EAAC;AAAc;gEACxBC,mBAAA,CAAiC;EAA5BD,KAAK,EAAC;AAAa,GAAC,IAAE;;EACtBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAa;;EAOnBA,KAAK,EAAC;AAAqB;;uBApBpCE,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCLF,mBAAA,CAAoE,MAApEG,UAAoE,EAAAC,gBAAA,CAApCC,MAAA,CAAAC,SAAS,IAAG,KAAG,GAAAF,gBAAA,CAAGC,MAAA,CAAAE,UAAU,mB,cAE5DN,mBAAA,CA8BMO,SAAA,QAlCRC,WAAA,CAKsBC,MAAA,CAAAC,iBAAiB,EAA7BC,QAAQ;WADhBZ,mBAAA,CA8BM;MA5BJa,GAAG,EAAED,QAAQ;MACdb,KAAK,EAAC;QACNC,mBAAA,CAA8D,MAA9Dc,UAA8D,EAAAV,gBAAA,CAAhCM,MAAA,CAAAK,cAAc,CAACH,QAAQ,mBAErDZ,mBAAA,CAuBM,OAvBNgB,UAuBM,GAtBLhB,mBAAA,CAIM,OAJNiB,UAIM,GAHLC,UAAiC,EACjClB,mBAAA,CAA8C,OAA9CmB,UAA8C,EAAAf,gBAAA,CAAlBC,MAAA,CAAAC,SAAS,kBACrCN,mBAAA,CAA+C,OAA/CoB,UAA+C,EAAAhB,gBAAA,CAAnBC,MAAA,CAAAE,UAAU,iB,sBAGvCN,mBAAA,CAeMO,SAAA,QAhCVC,WAAA,CAkBqBC,MAAA,CAAAW,eAAe,CAACT,QAAQ,GAAjCU,KAAK;2BADbrB,mBAAA,CAeM;QAbJY,GAAG,EAAES,KAAK;QACXvB,KAAK,EAAC;UACNC,mBAAA,CAAkD,OAAlDuB,UAAkD,EAAAnB,gBAAA,CAAdkB,KAAK,kBACzCtB,mBAAA,CAIM;QAHLD,KAAK,EAvBXyB,eAAA,EAuBY,UAAU;UAAA,aACOd,MAAA,CAAAe,WAAW,CAACb,QAAQ,EAAEU,KAAK;QAAA;0BAC/CZ,MAAA,CAAAgB,WAAW,CAACrB,MAAA,CAAAsB,QAAQ,CAACf,QAAQ,IAAIU,KAAK,2BAE1CtB,mBAAA,CAIM;QAHLD,KAAK,EA5BXyB,eAAA,EA4BY,UAAU;UAAA,aACOd,MAAA,CAAAe,WAAW,CAACb,QAAQ,EAAEU,KAAK;QAAA;0BAC/CZ,MAAA,CAAAgB,WAAW,CAACrB,MAAA,CAAAuB,SAAS,CAAChB,QAAQ,IAAIU,KAAK,0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}