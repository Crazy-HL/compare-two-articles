{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'SparklineChart',\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n      validator: value => Array.isArray(value)\n    },\n    compareData: {\n      type: Array,\n      default: null\n    },\n    width: {\n      type: Number,\n      default: 250\n    },\n    height: {\n      type: Number,\n      default: 80\n    },\n    margin: {\n      type: Object,\n      default: () => ({\n        top: 5,\n        right: 5,\n        bottom: 5,\n        left: 5\n      })\n    },\n    lineColor: {\n      type: String,\n      default: \"#4a90e2\"\n    },\n    highlightColor: {\n      type: String,\n      default: \"#FFD700\"\n    },\n    showYearMarkers: {\n      type: Boolean,\n      default: true\n    },\n    teamColors: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"chart-mounted\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    const props = __props;\n    const emit = __emit;\n    const chartContainer = ref(null);\n    const svg = ref(null);\n    const innerWidth = computed(() => props.width - props.margin.left - props.margin.right);\n    const innerHeight = computed(() => props.height - props.margin.top - props.margin.bottom);\n    const sortedData = computed(() => {\n      if (!Array.isArray(props.data)) return [];\n      return [...props.data].filter(item => item && !isNaN(item.year) && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n    });\n    const hasData = computed(() => sortedData.value.length > 0);\n    const noDataMessage = computed(() => \"无数据\");\n    const chartType = computed(() => sortedData.value.length <= 3 ? \"bar\" : \"line\");\n    __expose({\n      chartType\n    });\n    const initChart = () => {\n      if (!chartContainer.value) return;\n      d3.select(chartContainer.value).selectAll(\"*\").remove();\n      if (!hasData.value) return;\n      svg.value = d3.select(chartContainer.value).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height);\n      const chart = svg.value.append(\"g\").attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\n      if (chartType.value === \"bar\") {\n        drawBarChart(chart);\n      } else {\n        drawLineChart(chart);\n      }\n      emit(\"chart-mounted\", {\n        chartType: chartType.value\n      });\n    };\n    const drawLineChart = chart => {\n      const xScale = d3.scaleLinear().domain(d3.extent(sortedData.value, d => d.year)).range([0, innerWidth.value]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(sortedData.value, d => d.value) * 1.1]).range([innerHeight.value, 0]);\n\n      // 按团队分组\n      const teamGroups = d3.group(sortedData.value, d => d.team || \"Unknown\");\n      teamGroups.forEach((teamData, team) => {\n        const line = d3.line().x(d => xScale(d.year)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n        // 绘制折线\n        chart.append(\"path\").datum(teamData).attr(\"fill\", \"none\").attr(\"stroke\", props.teamColors[team] || props.lineColor).attr(\"stroke-width\", 2).attr(\"d\", line);\n\n        // 绘制数据点\n        chart.selectAll(`.dot-${team}`).data(teamData).enter().append(\"circle\").attr(\"cx\", d => xScale(d.year)).attr(\"cy\", d => yScale(d.value)).attr(\"r\", 3).attr(\"fill\", props.teamColors[team] || props.lineColor);\n      });\n\n      // 高亮相同年份的点\n      if (props.compareData && props.showYearMarkers) {\n        const commonYears = getCommonYears(sortedData.value, props.compareData);\n        commonYears.forEach(year => {\n          const points = sortedData.value.filter(d => d.year === year);\n          points.forEach(point => {\n            chart.append(\"circle\").attr(\"cx\", xScale(point.year)).attr(\"cy\", yScale(point.value)).attr(\"r\", 5).attr(\"fill\", props.highlightColor).attr(\"stroke\", \"#FF8C00\").attr(\"stroke-width\", 1.5);\n          });\n        });\n      }\n    };\n    const drawBarChart = chart => {\n      const xScale = d3.scaleBand().domain(sortedData.value.map(d => d.year.toString())).range([0, innerWidth.value]).paddingInner(0.4).paddingOuter(0.2);\n      const calculatedWidth = xScale.bandwidth();\n      const barWidth = Math.min(calculatedWidth, props.maxBarWidth);\n      const adjustedPadding = (innerWidth.value - barWidth * sortedData.value.length) / (sortedData.value.length + 1);\n      const adjustedXScale = d3.scaleBand().domain(sortedData.value.map(d => d.year.toString())).range([0, innerWidth.value]).paddingInner(adjustedPadding / barWidth).paddingOuter(adjustedPadding / barWidth);\n      const maxValue = d3.max(sortedData.value, d => d.value);\n      const yScale = d3.scaleLinear().domain([0, maxValue * 1.1]).range([innerHeight.value, 0]);\n\n      // 绘制柱子\n      chart.selectAll(\".bar\").data(sortedData.value).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => adjustedXScale(d.year.toString()) + (adjustedXScale.bandwidth() - barWidth) / 2).attr(\"width\", barWidth).attr(\"y\", d => yScale(d.value)).attr(\"height\", d => innerHeight.value - yScale(d.value)).attr(\"fill\", d => props.teamColors[d.team] || props.lineColor).attr(\"rx\", 2).attr(\"ry\", 2);\n\n      // 添加数值标签\n      chart.selectAll(\".bar-label\").data(sortedData.value).enter().append(\"text\").attr(\"class\", \"bar-label\").attr(\"x\", d => adjustedXScale(d.year.toString()) + adjustedXScale.bandwidth() / 2).attr(\"y\", d => yScale(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => formatValue(d.value)).attr(\"font-size\", \"10px\").attr(\"fill\", \"#64748b\").style(\"visibility\", d => innerHeight.value - yScale(d.value) > 20 ? \"visible\" : \"hidden\");\n    };\n    const getCommonYears = (data1, data2) => {\n      const years1 = new Set(data1.map(d => d.year));\n      const years2 = new Set(data2.filter(d => d).map(d => d.year));\n      return [...years1].filter(year => years2.has(year));\n    };\n    const formatValue = value => {\n      if (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\n      if (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\n      return value.toLocaleString();\n    };\n    watch(() => [props.data, props.compareData, props.width, props.height, props.showYearMarkers, props.teamColors], initChart, {\n      deep: true\n    });\n    onMounted(initChart);\n    const __returned__ = {\n      props,\n      emit,\n      chartContainer,\n      svg,\n      innerWidth,\n      innerHeight,\n      sortedData,\n      hasData,\n      noDataMessage,\n      chartType,\n      initChart,\n      drawLineChart,\n      drawBarChart,\n      getCommonYears,\n      formatValue,\n      ref,\n      onMounted,\n      watch,\n      computed,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","d3","props","__props","emit","__emit","chartContainer","svg","innerWidth","width","margin","left","right","innerHeight","height","top","bottom","sortedData","Array","isArray","data","filter","item","isNaN","year","value","sort","a","b","hasData","length","noDataMessage","chartType","__expose","initChart","select","selectAll","remove","append","attr","chart","drawBarChart","drawLineChart","xScale","scaleLinear","domain","extent","d","range","yScale","max","teamGroups","group","team","forEach","teamData","line","x","y","curve","curveMonotoneX","datum","teamColors","lineColor","enter","compareData","showYearMarkers","commonYears","getCommonYears","points","point","highlightColor","scaleBand","map","toString","paddingInner","paddingOuter","calculatedWidth","bandwidth","barWidth","Math","min","maxBarWidth","adjustedPadding","adjustedXScale","maxValue","text","formatValue","style","data1","data2","years1","Set","years2","has","toFixed","toLocaleString","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/SparklineChart.vue"],"sourcesContent":["<template>\r\n\t<div ref=\"chartContainer\" class=\"sparkline-container\">\r\n\t\t<div v-if=\"!hasData\" class=\"no-data-message\">\r\n\t\t\t{{ noDataMessage }}\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, watch, computed } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tdata: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [],\r\n\t\t\tvalidator: value => Array.isArray(value)\r\n\t\t},\r\n\t\tcompareData: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\twidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 250\r\n\t\t},\r\n\t\theight: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 80\r\n\t\t},\r\n\t\tmargin: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ top: 5, right: 5, bottom: 5, left: 5 })\r\n\t\t},\r\n\t\tlineColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#4a90e2\"\r\n\t\t},\r\n\t\thighlightColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"#FFD700\"\r\n\t\t},\r\n\t\tshowYearMarkers: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tteamColors: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"chart-mounted\"]);\r\n\r\n\tconst chartContainer = ref(null);\r\n\tconst svg = ref(null);\r\n\r\n\tconst innerWidth = computed(\r\n\t\t() => props.width - props.margin.left - props.margin.right\r\n\t);\r\n\tconst innerHeight = computed(\r\n\t\t() => props.height - props.margin.top - props.margin.bottom\r\n\t);\r\n\r\n\tconst sortedData = computed(() => {\r\n\t\tif (!Array.isArray(props.data)) return [];\r\n\t\treturn [...props.data]\r\n\t\t\t.filter(item => item && !isNaN(item.year) && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\t});\r\n\r\n\tconst hasData = computed(() => sortedData.value.length > 0);\r\n\tconst noDataMessage = computed(() => \"无数据\");\r\n\tconst chartType = computed(() =>\r\n\t\tsortedData.value.length <= 3 ? \"bar\" : \"line\"\r\n\t);\r\n\r\n\tdefineExpose({\r\n\t\tchartType\r\n\t});\r\n\r\n\tconst initChart = () => {\r\n\t\tif (!chartContainer.value) return;\r\n\t\td3.select(chartContainer.value).selectAll(\"*\").remove();\r\n\t\tif (!hasData.value) return;\r\n\r\n\t\tsvg.value = d3\r\n\t\t\t.select(chartContainer.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", props.width)\r\n\t\t\t.attr(\"height\", props.height);\r\n\r\n\t\tconst chart = svg.value\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${props.margin.left},${props.margin.top})`);\r\n\r\n\t\tif (chartType.value === \"bar\") {\r\n\t\t\tdrawBarChart(chart);\r\n\t\t} else {\r\n\t\t\tdrawLineChart(chart);\r\n\t\t}\r\n\r\n\t\temit(\"chart-mounted\", { chartType: chartType.value });\r\n\t};\r\n\r\n\tconst drawLineChart = chart => {\r\n\t\tconst xScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(sortedData.value, d => d.year))\r\n\t\t\t.range([0, innerWidth.value]);\r\n\r\n\t\tconst yScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(sortedData.value, d => d.value) * 1.1])\r\n\t\t\t.range([innerHeight.value, 0]);\r\n\r\n\t\t// 按团队分组\r\n\t\tconst teamGroups = d3.group(sortedData.value, d => d.team || \"Unknown\");\r\n\r\n\t\tteamGroups.forEach((teamData, team) => {\r\n\t\t\tconst line = d3\r\n\t\t\t\t.line()\r\n\t\t\t\t.x(d => xScale(d.year))\r\n\t\t\t\t.y(d => yScale(d.value))\r\n\t\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\t\t// 绘制折线\r\n\t\t\tchart\r\n\t\t\t\t.append(\"path\")\r\n\t\t\t\t.datum(teamData)\r\n\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t.attr(\"stroke\", props.teamColors[team] || props.lineColor)\r\n\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t.attr(\"d\", line);\r\n\r\n\t\t\t// 绘制数据点\r\n\t\t\tchart\r\n\t\t\t\t.selectAll(`.dot-${team}`)\r\n\t\t\t\t.data(teamData)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"circle\")\r\n\t\t\t\t.attr(\"cx\", d => xScale(d.year))\r\n\t\t\t\t.attr(\"cy\", d => yScale(d.value))\r\n\t\t\t\t.attr(\"r\", 3)\r\n\t\t\t\t.attr(\"fill\", props.teamColors[team] || props.lineColor);\r\n\t\t});\r\n\r\n\t\t// 高亮相同年份的点\r\n\t\tif (props.compareData && props.showYearMarkers) {\r\n\t\t\tconst commonYears = getCommonYears(sortedData.value, props.compareData);\r\n\t\t\tcommonYears.forEach(year => {\r\n\t\t\t\tconst points = sortedData.value.filter(d => d.year === year);\r\n\t\t\t\tpoints.forEach(point => {\r\n\t\t\t\t\tchart\r\n\t\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t\t.attr(\"cx\", xScale(point.year))\r\n\t\t\t\t\t\t.attr(\"cy\", yScale(point.value))\r\n\t\t\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t\t\t\t.attr(\"fill\", props.highlightColor)\r\n\t\t\t\t\t\t.attr(\"stroke\", \"#FF8C00\")\r\n\t\t\t\t\t\t.attr(\"stroke-width\", 1.5);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst drawBarChart = chart => {\r\n\t\tconst xScale = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(sortedData.value.map(d => d.year.toString()))\r\n\t\t\t.range([0, innerWidth.value])\r\n\t\t\t.paddingInner(0.4)\r\n\t\t\t.paddingOuter(0.2);\r\n\r\n\t\tconst calculatedWidth = xScale.bandwidth();\r\n\t\tconst barWidth = Math.min(calculatedWidth, props.maxBarWidth);\r\n\t\tconst adjustedPadding =\r\n\t\t\t(innerWidth.value - barWidth * sortedData.value.length) /\r\n\t\t\t(sortedData.value.length + 1);\r\n\r\n\t\tconst adjustedXScale = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(sortedData.value.map(d => d.year.toString()))\r\n\t\t\t.range([0, innerWidth.value])\r\n\t\t\t.paddingInner(adjustedPadding / barWidth)\r\n\t\t\t.paddingOuter(adjustedPadding / barWidth);\r\n\r\n\t\tconst maxValue = d3.max(sortedData.value, d => d.value);\r\n\t\tconst yScale = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, maxValue * 1.1])\r\n\t\t\t.range([innerHeight.value, 0]);\r\n\r\n\t\t// 绘制柱子\r\n\t\tchart\r\n\t\t\t.selectAll(\".bar\")\r\n\t\t\t.data(sortedData.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"x\",\r\n\t\t\t\td =>\r\n\t\t\t\t\tadjustedXScale(d.year.toString()) +\r\n\t\t\t\t\t(adjustedXScale.bandwidth() - barWidth) / 2\r\n\t\t\t)\r\n\t\t\t.attr(\"width\", barWidth)\r\n\t\t\t.attr(\"y\", d => yScale(d.value))\r\n\t\t\t.attr(\"height\", d => innerHeight.value - yScale(d.value))\r\n\t\t\t.attr(\"fill\", d => props.teamColors[d.team] || props.lineColor)\r\n\t\t\t.attr(\"rx\", 2)\r\n\t\t\t.attr(\"ry\", 2);\r\n\r\n\t\t// 添加数值标签\r\n\t\tchart\r\n\t\t\t.selectAll(\".bar-label\")\r\n\t\t\t.data(sortedData.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"bar-label\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"x\",\r\n\t\t\t\td => adjustedXScale(d.year.toString()) + adjustedXScale.bandwidth() / 2\r\n\t\t\t)\r\n\t\t\t.attr(\"y\", d => yScale(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => formatValue(d.value))\r\n\t\t\t.attr(\"font-size\", \"10px\")\r\n\t\t\t.attr(\"fill\", \"#64748b\")\r\n\t\t\t.style(\"visibility\", d =>\r\n\t\t\t\tinnerHeight.value - yScale(d.value) > 20 ? \"visible\" : \"hidden\"\r\n\t\t\t);\r\n\t};\r\n\r\n\tconst getCommonYears = (data1, data2) => {\r\n\t\tconst years1 = new Set(data1.map(d => d.year));\r\n\t\tconst years2 = new Set(data2.filter(d => d).map(d => d.year));\r\n\t\treturn [...years1].filter(year => years2.has(year));\r\n\t};\r\n\r\n\tconst formatValue = value => {\r\n\t\tif (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`;\r\n\t\tif (value >= 1000) return `$${(value / 1000).toFixed(1)}K`;\r\n\t\treturn value.toLocaleString();\r\n\t};\r\n\r\n\twatch(\r\n\t\t() => [\r\n\t\t\tprops.data,\r\n\t\t\tprops.compareData,\r\n\t\t\tprops.width,\r\n\t\t\tprops.height,\r\n\t\t\tprops.showYearMarkers,\r\n\t\t\tprops.teamColors\r\n\t\t],\r\n\t\tinitChart,\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\tonMounted(initChart);\r\n</script>\r\n\r\n<style scoped>\r\n\t.sparkline-container {\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.no-data-message {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #ccc;\r\n\t\tfont-size: 12px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}