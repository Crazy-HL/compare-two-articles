{"ast":null,"code":"import { ref, computed, watch } from \"vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nimport { renderLineChart, renderBarChart, renderPieChart, renderNonVisualChart, renderRadarChart, renderStackedBarChart, renderScatterChart } from \"@/js/chartUtils\";\nexport default {\n  __name: 'TextPopup',\n  props: {\n    visible: Boolean,\n    content: String,\n    containerClass: String,\n    containerRef: String,\n    divId: String,\n    // 当前 Div 的 ID（div1 或 div3）\n    linkedOutline: Array // 关联章节数组\n  },\n  emits: [\"close\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const currentView = ref(\"text\");\n    const loading = ref(false);\n    const isChartRendered = ref(false);\n    const cachedChartData = ref(null);\n    const cachedChartType = ref(null);\n    const isDragging = ref(false);\n    const isDragOver = ref(false);\n    const isTable = computed(() => {\n      return /<table.*?>.*?<\\/table>/s.test(props.content);\n    });\n    const close = () => {\n      d3.select(`.${props.containerClass}`).html(\"\");\n      isChartRendered.value = false;\n      cachedChartData.value = null;\n      cachedChartType.value = null;\n      emit(\"close\");\n    };\n    const switchView = async view => {\n      currentView.value = view;\n      if (view === \"visual\") {\n        if (!isChartRendered.value) {\n          loading.value = true;\n          await processText();\n          loading.value = false;\n          isChartRendered.value = true;\n        } else if (cachedChartData.value && cachedChartType.value) {\n          renderChart(cachedChartData.value, cachedChartType.value);\n        }\n      }\n    };\n\n    // 监听 content 变化，触发关联章节的滚动和弹出\n    watch(() => props.content, newContent => {\n      if (newContent && props.visible) {\n        // 获取当前章节的 ID\n        const currentChapterId = findChapterId(newContent);\n        if (!currentChapterId) {\n          console.error(\"未找到选中的章节 ID\");\n          return;\n        }\n        console.log(\"当前章节 ID:\", currentChapterId);\n\n        // 通过 linkedOutline 找到关联章节\n        const linkedItem = props.linkedOutline.find(linked => linked.leftId === currentChapterId || linked.rightId === currentChapterId);\n        if (linkedItem) {\n          // 找到目标章节的 ID\n          const targetId = linkedItem.leftId === currentChapterId ? linkedItem.rightId : linkedItem.leftId;\n          console.log(\"关联章节 ID:\", targetId);\n\n          // 通过 eventBus 通知另一个 div 进行滚动和弹出\n          bus.emit(\"scroll-and-popup\", {\n            sourceDivId: props.divId,\n            // 当前 Div 的 ID\n            targetId: targetId,\n            // 关联章节的 ID\n            content: newContent // 选中的内容\n          });\n        } else {\n          console.error(\"未找到关联章节，currentChapterId:\", currentChapterId);\n        }\n      }\n    });\n\n    // 查找选中的文本所在的章节 ID\n    const findChapterId = selectedText => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(props.content, \"text/html\");\n\n      // 遍历所有章节（h1-h6）\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      for (const heading of headings) {\n        // 检查选中的文本是否在该章节的范围内\n        if (heading.textContent.includes(selectedText)) {\n          return heading.id; // 返回章节 ID\n        }\n      }\n      return null; // 未找到章节 ID\n    };\n    async function processText() {\n      try {\n        api.post(\"process_text\", {\n          text: props.content.toString().trim()\n        }, data => {\n          if (data.error) {\n            console.error(\"后端返回的错误:\", data.error);\n            alert(`处理文章内容时出错: ${data.message}`);\n            return;\n          }\n          const jsonData = data.json_data;\n          console.log(\"后端返回的数据:\", jsonData);\n          cachedChartData.value = jsonData;\n          cachedChartType.value = data.chart_classification;\n          d3.select(`.${props.containerClass}`).html(\"\");\n          if (data.data_type === \"Non-Visual\") {\n            renderNonVisualChart(`.${props.containerClass}`, data, {\n              message: \"当前数据无法可视化\"\n            });\n          } else {\n            renderChart(jsonData, data.chart_classification);\n          }\n        });\n      } catch (error) {\n        console.error(\"处理文章内容时出错:\", error);\n        alert(\"处理文章内容时出错，请稍后重试\");\n      }\n    }\n    function renderChart(rawJsonData, chartType) {\n      if (!rawJsonData || typeof rawJsonData !== \"object\") {\n        renderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\n          message: \"JSON 数据无效\"\n        });\n        console.error(\"JSON 数据无效:\", rawJsonData);\n        return;\n      }\n      console.log(\"&&&rawJsonData:\", rawJsonData);\n      const data = rawJsonData.data;\n      const options = rawJsonData.options || {};\n      if (chartType === \"Line Chart\") {\n        renderLineChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Bar Chart\") {\n        renderBarChart(`.${props.containerClass}`, rawJsonData);\n      } else if (chartType === \"Pie Chart\") {\n        renderPieChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Stacked Bar Chart\") {\n        renderStackedBarChart(`.${props.containerClass}`, data, options);\n      } else if (chartType === \"Radar Chart\") {\n        renderRadarChart(`.${props.containerClass}`, rawJsonData);\n      } else if (chartType === \"Scatter Chart\") {\n        renderScatterChart(`.${props.containerClass}`, rawJsonData);\n      } else {\n        console.error(\"未知的图表类型:\", chartType);\n      }\n    }\n    const handleDragStart = event => {\n      isDragging.value = true;\n      event.dataTransfer.setData(\"application/json\", JSON.stringify({\n        chartData: cachedChartData.value,\n        chartType: cachedChartType.value\n      }));\n      console.log(\"拖拽数据已设置:\", cachedChartData.value);\n    };\n    const handleDragEnd = () => {\n      isDragging.value = false;\n      isDragOver.value = false;\n    };\n    const handleDragEnter = () => {\n      isDragOver.value = true;\n    };\n    const handleDragLeave = () => {\n      isDragOver.value = false;\n    };\n    const __returned__ = {\n      props,\n      emit,\n      currentView,\n      loading,\n      isChartRendered,\n      cachedChartData,\n      cachedChartType,\n      isDragging,\n      isDragOver,\n      isTable,\n      close,\n      switchView,\n      findChapterId,\n      processText,\n      renderChart,\n      handleDragStart,\n      handleDragEnd,\n      handleDragEnter,\n      handleDragLeave,\n      ref,\n      computed,\n      watch,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      },\n      get renderLineChart() {\n        return renderLineChart;\n      },\n      get renderBarChart() {\n        return renderBarChart;\n      },\n      get renderPieChart() {\n        return renderPieChart;\n      },\n      get renderNonVisualChart() {\n        return renderNonVisualChart;\n      },\n      get renderRadarChart() {\n        return renderRadarChart;\n      },\n      get renderStackedBarChart() {\n        return renderStackedBarChart;\n      },\n      get renderScatterChart() {\n        return renderScatterChart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","d3","bus","renderLineChart","renderBarChart","renderPieChart","renderNonVisualChart","renderRadarChart","renderStackedBarChart","renderScatterChart","props","__props","emit","__emit","currentView","loading","isChartRendered","cachedChartData","cachedChartType","isDragging","isDragOver","isTable","test","content","close","select","containerClass","html","value","switchView","view","processText","renderChart","newContent","visible","currentChapterId","findChapterId","console","error","log","linkedItem","linkedOutline","find","linked","leftId","rightId","targetId","sourceDivId","divId","selectedText","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","heading","textContent","includes","id","api","post","text","toString","trim","data","alert","message","jsonData","json_data","chart_classification","data_type","rawJsonData","chartType","options","handleDragStart","event","dataTransfer","setData","JSON","stringify","chartData","handleDragEnd","handleDragEnter","handleDragLeave"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/TextPopup.vue"],"sourcesContent":["<template>\r\n\t<!-- 遮罩层 -->\r\n\t<div v-if=\"visible\" class=\"overlay\" @click=\"close\"></div>\r\n\r\n\t<!-- 弹出框 -->\r\n\t<div v-if=\"visible\" class=\"text-popup\" @click.stop>\r\n\t\t<!-- 切换视图按钮 -->\r\n\t\t<div class=\"view-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('text')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'text' }\"\r\n\t\t\t\ttitle=\"文本视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'align-left']\" />\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('visual')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'visual' }\"\r\n\t\t\t\ttitle=\"可视化视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'chart-bar']\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文本视图 -->\r\n\t\t<div v-show=\"currentView === 'text'\">\r\n\t\t\t<div v-if=\"isTable\" class=\"table-container\" v-html=\"content\"></div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<p>{{ content }}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化视图 -->\r\n\t\t<div\r\n\t\t\tv-show=\"currentView === 'visual'\"\r\n\t\t\tclass=\"visualization-container\"\r\n\t\t\t@dragstart=\"handleDragStart\"\r\n\t\t\t@dragend=\"handleDragEnd\"\r\n\t\t\t@dragenter=\"handleDragEnter\"\r\n\t\t\t@dragleave=\"handleDragLeave\"\r\n\t\t\tdraggable=\"true\"\r\n\t\t\t:class=\"{ dragging: isDragging, 'drag-over': isDragOver }\">\r\n\t\t\t<div v-if=\"loading\" class=\"loading-spinner\"></div>\r\n\t\t\t<div v-else :class=\"containerClass\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport {\r\n\t\trenderLineChart,\r\n\t\trenderBarChart,\r\n\t\trenderPieChart,\r\n\t\trenderNonVisualChart,\r\n\t\trenderRadarChart,\r\n\t\trenderStackedBarChart,\r\n\t\trenderScatterChart\r\n\t} from \"@/js/chartUtils\";\r\n\r\n\tconst props = defineProps({\r\n\t\tvisible: Boolean,\r\n\t\tcontent: String,\r\n\t\tcontainerClass: String,\r\n\t\tcontainerRef: String,\r\n\t\tdivId: String, // 当前 Div 的 ID（div1 或 div3）\r\n\t\tlinkedOutline: Array // 关联章节数组\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"close\"]);\r\n\r\n\tconst currentView = ref(\"text\");\r\n\tconst loading = ref(false);\r\n\tconst isChartRendered = ref(false);\r\n\tconst cachedChartData = ref(null);\r\n\tconst cachedChartType = ref(null);\r\n\tconst isDragging = ref(false);\r\n\tconst isDragOver = ref(false);\r\n\r\n\tconst isTable = computed(() => {\r\n\t\treturn /<table.*?>.*?<\\/table>/s.test(props.content);\r\n\t});\r\n\r\n\tconst close = () => {\r\n\t\td3.select(`.${props.containerClass}`).html(\"\");\r\n\t\tisChartRendered.value = false;\r\n\t\tcachedChartData.value = null;\r\n\t\tcachedChartType.value = null;\r\n\t\temit(\"close\");\r\n\t};\r\n\r\n\tconst switchView = async view => {\r\n\t\tcurrentView.value = view;\r\n\t\tif (view === \"visual\") {\r\n\t\t\tif (!isChartRendered.value) {\r\n\t\t\t\tloading.value = true;\r\n\t\t\t\tawait processText();\r\n\t\t\t\tloading.value = false;\r\n\t\t\t\tisChartRendered.value = true;\r\n\t\t\t} else if (cachedChartData.value && cachedChartType.value) {\r\n\t\t\t\trenderChart(cachedChartData.value, cachedChartType.value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听 content 变化，触发关联章节的滚动和弹出\r\n\twatch(\r\n\t\t() => props.content,\r\n\t\tnewContent => {\r\n\t\t\tif (newContent && props.visible) {\r\n\t\t\t\t// 获取当前章节的 ID\r\n\t\t\t\tconst currentChapterId = findChapterId(newContent);\r\n\t\t\t\tif (!currentChapterId) {\r\n\t\t\t\t\tconsole.error(\"未找到选中的章节 ID\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"当前章节 ID:\", currentChapterId);\r\n\r\n\t\t\t\t// 通过 linkedOutline 找到关联章节\r\n\t\t\t\tconst linkedItem = props.linkedOutline.find(\r\n\t\t\t\t\tlinked =>\r\n\t\t\t\t\t\tlinked.leftId === currentChapterId ||\r\n\t\t\t\t\t\tlinked.rightId === currentChapterId\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (linkedItem) {\r\n\t\t\t\t\t// 找到目标章节的 ID\r\n\t\t\t\t\tconst targetId =\r\n\t\t\t\t\t\tlinkedItem.leftId === currentChapterId\r\n\t\t\t\t\t\t\t? linkedItem.rightId\r\n\t\t\t\t\t\t\t: linkedItem.leftId;\r\n\t\t\t\t\tconsole.log(\"关联章节 ID:\", targetId);\r\n\r\n\t\t\t\t\t// 通过 eventBus 通知另一个 div 进行滚动和弹出\r\n\t\t\t\t\tbus.emit(\"scroll-and-popup\", {\r\n\t\t\t\t\t\tsourceDivId: props.divId, // 当前 Div 的 ID\r\n\t\t\t\t\t\ttargetId: targetId, // 关联章节的 ID\r\n\t\t\t\t\t\tcontent: newContent // 选中的内容\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"未找到关联章节，currentChapterId:\", currentChapterId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\t// 查找选中的文本所在的章节 ID\r\n\tconst findChapterId = selectedText => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(props.content, \"text/html\");\r\n\r\n\t\t// 遍历所有章节（h1-h6）\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tfor (const heading of headings) {\r\n\t\t\t// 检查选中的文本是否在该章节的范围内\r\n\t\t\tif (heading.textContent.includes(selectedText)) {\r\n\t\t\t\treturn heading.id; // 返回章节 ID\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null; // 未找到章节 ID\r\n\t};\r\n\r\n\tasync function processText() {\r\n\t\ttry {\r\n\t\t\tapi.post(\r\n\t\t\t\t\"process_text\",\r\n\t\t\t\t{ text: props.content.toString().trim() },\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tconsole.error(\"后端返回的错误:\", data.error);\r\n\t\t\t\t\t\talert(`处理文章内容时出错: ${data.message}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst jsonData = data.json_data;\r\n\t\t\t\t\tconsole.log(\"后端返回的数据:\", jsonData);\r\n\r\n\t\t\t\t\tcachedChartData.value = jsonData;\r\n\t\t\t\t\tcachedChartType.value = data.chart_classification;\r\n\r\n\t\t\t\t\td3.select(`.${props.containerClass}`).html(\"\");\r\n\r\n\t\t\t\t\tif (data.data_type === \"Non-Visual\") {\r\n\t\t\t\t\t\trenderNonVisualChart(`.${props.containerClass}`, data, {\r\n\t\t\t\t\t\t\tmessage: \"当前数据无法可视化\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderChart(jsonData, data.chart_classification);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"处理文章内容时出错:\", error);\r\n\t\t\talert(\"处理文章内容时出错，请稍后重试\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderChart(rawJsonData, chartType) {\r\n\t\tif (!rawJsonData || typeof rawJsonData !== \"object\") {\r\n\t\t\trenderNonVisualChart(`.${props.containerClass}`, rawJsonData, {\r\n\t\t\t\tmessage: \"JSON 数据无效\"\r\n\t\t\t});\r\n\t\t\tconsole.error(\"JSON 数据无效:\", rawJsonData);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"&&&rawJsonData:\", rawJsonData);\r\n\t\tconst data = rawJsonData.data;\r\n\t\tconst options = rawJsonData.options || {};\r\n\r\n\t\tif (chartType === \"Line Chart\") {\r\n\t\t\trenderLineChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Bar Chart\") {\r\n\t\t\trenderBarChart(`.${props.containerClass}`, rawJsonData);\r\n\t\t} else if (chartType === \"Pie Chart\") {\r\n\t\t\trenderPieChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Stacked Bar Chart\") {\r\n\t\t\trenderStackedBarChart(`.${props.containerClass}`, data, options);\r\n\t\t} else if (chartType === \"Radar Chart\") {\r\n\t\t\trenderRadarChart(`.${props.containerClass}`, rawJsonData);\r\n\t\t} else if (chartType === \"Scatter Chart\") {\r\n\t\t\trenderScatterChart(`.${props.containerClass}`, rawJsonData);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"未知的图表类型:\", chartType);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDragStart = event => {\r\n\t\tisDragging.value = true;\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t\"application/json\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tchartData: cachedChartData.value,\r\n\t\t\t\tchartType: cachedChartType.value\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(\"拖拽数据已设置:\", cachedChartData.value);\r\n\t};\r\n\r\n\tconst handleDragEnd = () => {\r\n\t\tisDragging.value = false;\r\n\t\tisDragOver.value = false;\r\n\t};\r\n\r\n\tconst handleDragEnter = () => {\r\n\t\tisDragOver.value = true;\r\n\t};\r\n\r\n\tconst handleDragLeave = () => {\r\n\t\tisDragOver.value = false;\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.1);\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tz-index: 90;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 90%;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tbackground: rgba(255, 255, 255, 0.98);\r\n\t\tpadding: 25px;\r\n\t\tbox-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 12px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 0.8vw;\r\n\t\tfont-weight: 500;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(20px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t\tborder: 1px solid rgba(255, 255, 255, 0.2);\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.view-switcher {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.view-switcher button {\r\n\t\tpadding: 25px;\r\n\t\tmargin: 0 5px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s ease, transform 0.2s ease;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.view-switcher button:hover {\r\n\t\tbackground-color: #ddd;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t.view-switcher button.active {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 300px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\ttransition: opacity 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;\r\n\t}\r\n\r\n\t.visualization-container.dragging {\r\n\t\topacity: 0.7;\r\n\t\ttransform: scale(0.95);\r\n\t\tbox-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n\t}\r\n\r\n\t.visualization-container.drag-over {\r\n\t\tborder: 2px dashed #0077b6;\r\n\t\tbackground-color: rgba(0, 119, 182, 0.1);\r\n\t}\r\n\r\n\t.table-container {\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t}\r\n\r\n\t.text-popup p {\r\n\t\tmargin: 0;\r\n\t\tpadding: 10px 15px;\r\n\t\tfont-size: 1.2rem;\r\n\t\tcolor: #333;\r\n\t\ttext-align: justify;\r\n\t\tline-height: 1.8;\r\n\t\tword-break: break-word;\r\n\t\twhite-space: pre-wrap;\r\n\t\tmax-width: 90%;\r\n\t\tborder-left: 4px solid #3498db;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tbox-shadow: inset 2px 2px 8px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t::v-deep .custom-table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tmargin: 5px auto;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 1px solid #0077b6;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow: hidden;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #333333;\r\n\t}\r\n\r\n\t::v-deep .custom-table th {\r\n\t\tbackground-color: #0077b6;\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #ffffff;\r\n\t\ttext-align: left;\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6;\r\n\t\tfont-size: 18px;\r\n\t}\r\n\r\n\t::v-deep .custom-table th,\r\n\t::v-deep .custom-table td {\r\n\t\tpadding: 12px;\r\n\t\tborder: 1px solid #0077b6;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\t::v-deep .custom-table tr:hover {\r\n\t\tbackground-color: #cbe8f6;\r\n\t\ttransition: background-color 0.3s ease-in-out;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}