{"ast":null,"code":"import { ref, computed, onMounted, watch } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    chartOptions: Object,\n    fieldKey: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n\n    // 数据清洗函数\n    const cleanValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n\n      // 特殊处理常见数据格式\n      if (String(value).includes(\"NaN ¥\")) return \"人民币 (CNY)\";\n\n      // 提取数值（处理带单位的数据）\n      const num = parseFloat(String(value).replace(/[^0-9.-]/g, \"\"));\n      return isNaN(num) ? value : num;\n    };\n\n    // 处理后的数据\n    const processedArray = computed(() => {\n      if (!Array.isArray(props.field)) return [];\n      return props.field.map(item => {\n        // 自动提取年份\n        let year = item.year;\n        if (!year && item.raw) {\n          const yearMatch = String(item.raw).match(/(20\\d{2})/);\n          year = yearMatch ? parseInt(yearMatch[1]) : null;\n        }\n        return {\n          value: cleanValue(item.value ?? item.raw),\n          unit: item.unit,\n          year: year,\n          raw: item.raw || item.value\n        };\n      }).filter(item => item.value !== null);\n    });\n\n    // 可视化类型判断（优先级从高到低）\n    const visualizationType = computed(() => {\n      // 1. 使用props指定的类型\n      if (props.visualization) return props.visualization;\n\n      // 2. 自动判断逻辑\n      if (isTimeSeriesData.value) return \"line-chart\";\n      if (isComparisonData.value) return \"bar-chart\";\n      if (isSinglePercentage.value) return \"pie-chart\";\n\n      // 3. 默认文本显示\n      return \"text-only\";\n    });\n\n    // 各种数据类型的判断\n    const isTimeSeriesData = computed(() => {\n      return processedArray.value.length >= 2 && processedArray.value.every(item => {\n        const hasYear = item.year || String(item.raw).match(/(20\\d{2})/);\n        const isValidValue = typeof item.value === \"number\";\n        return hasYear && isValidValue;\n      });\n    });\n    const isComparisonData = computed(() => {\n      return processedArray.value.length >= 1 && processedArray.value.length <= 5 && processedArray.value.every(item => typeof item.value === \"number\");\n    });\n    const isSinglePercentage = computed(() => {\n      return props.type === \"percentage\" && !Array.isArray(props.field) && typeof cleanValue(props.field?.value) === \"number\";\n    });\n    const hasData = computed(() => {\n      if (props.field === null || props.field === undefined) return false;\n      if (Array.isArray(props.field)) return processedArray.value.length > 0;\n      return props.field.value !== undefined && props.field.value !== null;\n    });\n    const isArray = computed(() => Array.isArray(props.field));\n\n    // 格式化显示文本\n    const formatTextValue = item => {\n      const value = item.value ?? item;\n      if (value === null || value === undefined) return \"-\";\n\n      // 处理特殊字段\n      if (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\n        return \"人民币 (CNY)\";\n      }\n      if (typeof value === \"number\") {\n        if (props.type === \"percentage\") return `${value}%`;\n        return value.toLocaleString() + (item.unit ? ` ${item.unit}` : \"\");\n      }\n      return value;\n    };\n\n    // 图表绘制方法\n    const drawPieChart = () => {\n      clearChart(pieChart);\n      if (!pieChart.value) return;\n      const percent = Math.min(100, Math.max(0, cleanValue(props.field.value)));\n      const data = [percent, 100 - percent];\n      const width = 80;\n      const height = 80;\n      const radius = Math.min(width, height) / 2;\n      const svg = d3.select(pieChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n      svg.selectAll(\"path\").data(d3.pie()(data)).enter().append(\"path\").attr(\"d\", arc).attr(\"fill\", (d, i) => i === 0 ? props.chartOptions?.color || \"#4CAF50\" : \"#eee\");\n      svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.3em\").text(`${percent}%`).style(\"font-size\", \"14px\").style(\"font-weight\", \"bold\");\n    };\n    const drawBarChart = () => {\n      clearChart(barChart);\n      if (!barChart.value || processedArray.value.length === 0) return;\n      const data = processedArray.value.map(item => ({\n        label: item.year || item.raw || \"\",\n        value: item.value\n      }));\n      const width = 150;\n      const height = 80;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(barChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleBand().domain(data.map(d => d.label)).range([margin.left, width - margin.right]).padding(0.2);\n      const y = d3.scaleLinear().domain([props.chartOptions?.minValue || 0, d3.max(data, d => d.value)]).range([height - margin.bottom, margin.top]);\n      svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", d => x(d.label)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - margin.bottom - y(d.value)).attr(\"fill\", props.chartOptions?.color || \"#2196F3\");\n\n      // 添加数值标签\n      svg.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", d => x(d.label) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => props.chartOptions?.yAxisUnit ? `${d.value}${props.chartOptions.yAxisUnit}` : d.value).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n    };\n    const drawLineChart = () => {\n      clearChart(lineChart);\n      if (!lineChart.value || processedArray.value.length < 2) return;\n\n      // 按年份排序\n      const chartData = [...processedArray.value].filter(item => item.year && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n      const width = 200;\n      const height = 80;\n      const margin = {\n        top: 10,\n        right: 20,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(lineChart.value).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const x = d3.scaleLinear().domain(d3.extent(chartData, d => d.year)).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain([props.chartOptions?.minValue || 0, d3.max(chartData, d => d.value) * 1.1]).range([height - margin.bottom, margin.top]);\n      const line = d3.line().x(d => x(d.year)).y(d => y(d.value)).curve(d3.curveMonotoneX);\n\n      // 绘制折线\n      svg.append(\"path\").datum(chartData).attr(\"d\", line).attr(\"stroke\", props.chartOptions?.color || \"#9C27B0\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n\n      // 绘制数据点\n      svg.selectAll(\"circle\").data(chartData).enter().append(\"circle\").attr(\"cx\", d => x(d.year)).attr(\"cy\", d => y(d.value)).attr(\"r\", 3).attr(\"fill\", props.chartOptions?.color || \"#9C27B0\");\n\n      // 添加最新值标签\n      const lastPoint = chartData[chartData.length - 1];\n      svg.append(\"text\").attr(\"x\", x(lastPoint.year) + 10).attr(\"y\", y(lastPoint.value)).attr(\"dy\", \"0.3em\").text(props.chartOptions?.yAxisUnit ? `${lastPoint.value}${props.chartOptions.yAxisUnit}` : lastPoint.value).style(\"font-size\", \"10px\").style(\"fill\", \"#333\");\n    };\n    const clearChart = element => {\n      if (element?.value) d3.select(element.value).selectAll(\"*\").remove();\n    };\n\n    // 监听变化\n    watch(() => [props.field, props.type, props.visualization, props.chartOptions], () => {\n      if (!hasData.value) return;\n      switch (visualizationType.value) {\n        case \"pie-chart\":\n          drawPieChart();\n          break;\n        case \"line-chart\":\n          drawLineChart();\n          break;\n        case \"bar-chart\":\n          drawBarChart();\n          break;\n      }\n    }, {\n      deep: true,\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      pieChart,\n      barChart,\n      lineChart,\n      cleanValue,\n      processedArray,\n      visualizationType,\n      isTimeSeriesData,\n      isComparisonData,\n      isSinglePercentage,\n      hasData,\n      isArray,\n      formatTextValue,\n      drawPieChart,\n      drawBarChart,\n      drawLineChart,\n      clearChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","d3","props","__props","pieChart","barChart","lineChart","cleanValue","value","undefined","String","includes","num","parseFloat","replace","isNaN","processedArray","Array","isArray","field","map","item","year","raw","yearMatch","match","parseInt","unit","filter","visualizationType","visualization","isTimeSeriesData","isComparisonData","isSinglePercentage","length","every","hasYear","isValidValue","type","hasData","formatTextValue","fieldKey","toLocaleString","drawPieChart","clearChart","percent","Math","min","max","data","width","height","radius","svg","select","append","attr","arc","innerRadius","outerRadius","selectAll","pie","enter","d","i","chartOptions","color","text","style","drawBarChart","label","margin","top","right","bottom","left","x","scaleBand","domain","range","padding","y","scaleLinear","minValue","bandwidth","yAxisUnit","drawLineChart","chartData","sort","a","b","extent","line","curve","curveMonotoneX","datum","lastPoint","element","remove","deep","immediate"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<!-- 百分比饼图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"pie-chart\"\r\n\t\t\t\tref=\"pieChart\"\r\n\t\t\t\t:style=\"{ backgroundColor: chartOptions?.backgroundColor }\"></div>\r\n\r\n\t\t\t<!-- 时间序列折线图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<!-- 比较柱状图 -->\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<!-- 文本显示 -->\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tchartOptions: Object,\r\n\t\tfieldKey: String\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\t// 数据清洗函数\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\t// 特殊处理常见数据格式\r\n\t\tif (String(value).includes(\"NaN ¥\")) return \"人民币 (CNY)\";\r\n\r\n\t\t// 提取数值（处理带单位的数据）\r\n\t\tconst num = parseFloat(String(value).replace(/[^0-9.-]/g, \"\"));\r\n\t\treturn isNaN(num) ? value : num;\r\n\t};\r\n\r\n\t// 处理后的数据\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!Array.isArray(props.field)) return [];\r\n\r\n\t\treturn props.field\r\n\t\t\t.map(item => {\r\n\t\t\t\t// 自动提取年份\r\n\t\t\t\tlet year = item.year;\r\n\t\t\t\tif (!year && item.raw) {\r\n\t\t\t\t\tconst yearMatch = String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\t\tyear = yearMatch ? parseInt(yearMatch[1]) : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\t\tunit: item.unit,\r\n\t\t\t\t\tyear: year,\r\n\t\t\t\t\traw: item.raw || item.value\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(item => item.value !== null);\r\n\t});\r\n\r\n\t// 可视化类型判断（优先级从高到低）\r\n\tconst visualizationType = computed(() => {\r\n\t\t// 1. 使用props指定的类型\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 2. 自动判断逻辑\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\t// 3. 默认文本显示\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\t// 各种数据类型的判断\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(item => {\r\n\t\t\t\tconst hasYear = item.year || String(item.raw).match(/(20\\d{2})/);\r\n\t\t\t\tconst isValidValue = typeof item.value === \"number\";\r\n\t\t\t\treturn hasYear && isValidValue;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.length <= 5 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\t// 格式化显示文本\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\t// 处理特殊字段\r\n\t\tif (props.fieldKey === \"Currency\" && value === \"NaN ¥\") {\r\n\t\t\treturn \"人民币 (CNY)\";\r\n\t\t}\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString() + (item.unit ? ` ${item.unit}` : \"\");\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t// 图表绘制方法\r\n\tconst drawPieChart = () => {\r\n\t\tclearChart(pieChart);\r\n\t\tif (!pieChart.value) return;\r\n\r\n\t\tconst percent = Math.min(100, Math.max(0, cleanValue(props.field.value)));\r\n\t\tconst data = [percent, 100 - percent];\r\n\r\n\t\tconst width = 80;\r\n\t\tconst height = 80;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(pieChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"path\")\r\n\t\t\t.data(d3.pie()(data))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", (d, i) =>\r\n\t\t\t\ti === 0 ? props.chartOptions?.color || \"#4CAF50\" : \"#eee\"\r\n\t\t\t);\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(`${percent}%`)\r\n\t\t\t.style(\"font-size\", \"14px\")\r\n\t\t\t.style(\"font-weight\", \"bold\");\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tclearChart(barChart);\r\n\t\tif (!barChart.value || processedArray.value.length === 0) return;\r\n\r\n\t\tconst data = processedArray.value.map(item => ({\r\n\t\t\tlabel: item.year || item.raw || \"\",\r\n\t\t\tvalue: item.value\r\n\t\t}));\r\n\r\n\t\tconst width = 150;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(barChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(data.map(d => d.label))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.2);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([props.chartOptions?.minValue || 0, d3.max(data, d => d.value)])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"rect\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"x\", d => x(d.label))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", props.chartOptions?.color || \"#2196F3\");\r\n\r\n\t\t// 添加数值标签\r\n\t\tsvg\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", d => x(d.label) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d =>\r\n\t\t\t\tprops.chartOptions?.yAxisUnit\r\n\t\t\t\t\t? `${d.value}${props.chartOptions.yAxisUnit}`\r\n\t\t\t\t\t: d.value\r\n\t\t\t)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tclearChart(lineChart);\r\n\t\tif (!lineChart.value || processedArray.value.length < 2) return;\r\n\r\n\t\t// 按年份排序\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst width = 200;\r\n\t\tconst height = 80;\r\n\t\tconst margin = { top: 10, right: 20, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(lineChart.value)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([\r\n\t\t\t\tprops.chartOptions?.minValue || 0,\r\n\t\t\t\td3.max(chartData, d => d.value) * 1.1\r\n\t\t\t])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveMonotoneX);\r\n\r\n\t\t// 绘制折线\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", props.chartOptions?.color || \"#9C27B0\")\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\t// 绘制数据点\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.attr(\"fill\", props.chartOptions?.color || \"#9C27B0\");\r\n\r\n\t\t// 添加最新值标签\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 10)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.3em\")\r\n\t\t\t.text(\r\n\t\t\t\tprops.chartOptions?.yAxisUnit\r\n\t\t\t\t\t? `${lastPoint.value}${props.chartOptions.yAxisUnit}`\r\n\t\t\t\t\t: lastPoint.value\r\n\t\t\t)\r\n\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t.style(\"fill\", \"#333\");\r\n\t};\r\n\r\n\tconst clearChart = element => {\r\n\t\tif (element?.value) d3.select(element.value).selectAll(\"*\").remove();\r\n\t};\r\n\r\n\t// 监听变化\r\n\twatch(\r\n\t\t() => [props.field, props.type, props.visualization, props.chartOptions],\r\n\t\t() => {\r\n\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ deep: true, immediate: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.pie-chart,\r\n\t.bar-chart,\r\n\t.line-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 80px;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tcolor: #999;\r\n\t\tfont-style: italic;\r\n\t\tpadding: 10px;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}