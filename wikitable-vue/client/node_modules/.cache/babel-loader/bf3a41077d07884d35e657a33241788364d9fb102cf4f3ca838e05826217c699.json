{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62c843dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['div0', $props.selectContentClass]),\n    id: $props.divId,\n    ref: \"divRef\"\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($setup.props.pageTitle), 1 /* TEXT */), $setup.loading ? (_openBlock(), _createBlock($setup[\"LoadingSpinner\"], {\n    key: 0\n  })) : $setup.error ? (_openBlock(), _createBlock($setup[\"ErrorDisplay\"], {\n    key: 1,\n    message: $setup.error,\n    onRetry: $setup.fetchWikipediaContent\n  }, null, 8 /* PROPS */, [\"message\"])) : (_openBlock(), _createBlock($setup[\"WikipediaContent\"], {\n    key: 2,\n    content: $setup.pageHtml,\n    onSelect: $setup.handleSelection\n  }, null, 8 /* PROPS */, [\"content\"])), _createVNode($setup[\"TextPopup\"], {\n    visible: $setup.showPopup[$props.divId],\n    content: $setup.selectedText[$props.divId],\n    containerClass: $props.divId === 'div1' ? 'chart-container1' : 'chart-container2',\n    containerRef: $setup.divRef,\n    onClose: $setup.closePopup\n  }, null, 8 /* PROPS */, [\"visible\", \"content\", \"containerClass\", \"containerRef\"]), _createVNode($setup[\"ArticleOutline\"], {\n    content: $setup.pageHtml,\n    divId: $props.divId\n  }, null, 8 /* PROPS */, [\"content\", \"divId\"])], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","selectContentClass","id","divId","ref","_createElementVNode","_toDisplayString","$setup","props","pageTitle","loading","_createBlock","key","error","message","onRetry","fetchWikipediaContent","content","pageHtml","onSelect","handleSelection","_createVNode","visible","showPopup","selectedText","containerClass","containerRef","divRef","onClose","closePopup","_hoisted_1"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ props.pageTitle }}</h1>\r\n\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\r\n\t\t<ArticleOutline :content=\"pageHtml\" :divId=\"divId\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport ArticleOutline from \"./ArticleOutline.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport { parseInfoboxForComparison } from \"@/js/wikiInfoboxParser\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String,\r\n\t\tlinkedOutline: Array\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\");\r\n\tconst loading = ref(true);\r\n\tconst error = ref(\"\");\r\n\tconst selectedText = ref({});\r\n\tconst showPopup = ref({});\r\n\tconst divRef = ref(null);\r\n\tconst highlightedParagraphs = ref({});\r\n\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, \"text/html\");\r\n\r\n\t\t\tconst infobox = doc.querySelector(\".infobox, .sidebar, .toccolours\");\r\n\t\t\tconst comparisonData = parseInfoboxForComparison(infobox);\r\n\t\t\tconst sidebar = doc.querySelector(\".sidebar\");\r\n\t\t\tif (sidebar) sidebar.remove();\r\n\r\n\t\t\tbus.emit(`${props.divId}_InfoboxData`, comparisonData);\r\n\r\n\t\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\t\theadings.forEach((heading, index) => {\r\n\t\t\t\tconst uniqueId = `heading-${index}-${props.divId}`;\r\n\t\t\t\theading.id = uniqueId;\r\n\t\t\t});\r\n\r\n\t\t\tconst tables = doc.querySelectorAll(\"table\");\r\n\t\t\ttables.forEach(table => {\r\n\t\t\t\ttable.classList.add(\"custom-table\");\r\n\t\t\t});\r\n\r\n\t\t\tconst styles = Array.from(doc.querySelectorAll('link[rel=\"stylesheet\"]'));\r\n\t\t\tstyles.forEach(link => {\r\n\t\t\t\tif (!document.querySelector(`link[href=\"${link.href}\"]`)) {\r\n\t\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\t\tstyleTag.href = link.href;\r\n\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst contentElement = doc.querySelector(\"body\");\r\n\t\t\tif (!contentElement) throw new Error(\"Content not found\");\r\n\r\n\t\t\tpageHtml.value = contentElement.innerHTML;\r\n\t\t\tinjectWikipediaStyles();\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t\tconsole.error(\"获取维基百科内容失败:\", err);\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst injectWikipediaStyles = () => {\r\n\t\tconst wikipediaStyles = [\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=site.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.cite.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=ext.scribunto.styles\",\r\n\t\t\t\"https://en.wikipedia.org/w/load.php?modules=skins.vector.styles\"\r\n\t\t];\r\n\r\n\t\twikipediaStyles.forEach(url => {\r\n\t\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\r\n\t\t\t\tconst styleTag = document.createElement(\"link\");\r\n\t\t\t\tstyleTag.rel = \"stylesheet\";\r\n\t\t\t\tstyleTag.href = url;\r\n\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleHoverInfobox = ({ fieldKey, infoboxTitle }) => {\r\n\t\tif (props.pageTitle !== infoboxTitle) return;\r\n\r\n\t\tconst infobox = divRef.value.querySelector(\r\n\t\t\t\".infobox, .sidebar, .toccolours\"\r\n\t\t);\r\n\t\tif (!infobox) return;\r\n\r\n\t\tclearInfoboxHighlights();\r\n\r\n\t\tconst rows = infobox.querySelectorAll(\"tr\");\r\n\t\tfor (const row of rows) {\r\n\t\t\tconst th = row.querySelector(\"th\");\r\n\t\t\tif (th && th.textContent.trim() === fieldKey) {\r\n\t\t\t\trow.classList.add(\"infobox-highlight\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUnhoverInfobox = () => {\r\n\t\tclearInfoboxHighlights();\r\n\t};\r\n\r\n\tconst clearInfoboxHighlights = () => {\r\n\t\tconst infobox = divRef.value.querySelector(\r\n\t\t\t\".infobox, .sidebar, .toccolours\"\r\n\t\t);\r\n\t\tif (infobox) {\r\n\t\t\tinfobox.querySelectorAll(\".infobox-highlight\").forEach(row => {\r\n\t\t\t\trow.classList.remove(\"infobox-highlight\");\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSelection = content => {\r\n\t\tconst isTable = /<table.*?>.*?<\\/table>/s.test(content);\r\n\t\tconst selection = window.getSelection();\r\n\t\tif (!selection || selection.rangeCount === 0) return;\r\n\r\n\t\tconst range = selection.getRangeAt(0);\r\n\t\tconst selectedNodes = range.cloneContents().childNodes;\r\n\r\n\t\tlet sourceId = undefined;\r\n\t\tfor (const node of selectedNodes) {\r\n\t\t\tif (\r\n\t\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(node.tagName)\r\n\t\t\t) {\r\n\t\t\t\tsourceId = node.id;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!sourceId) {\r\n\t\t\tlet startElement = range.startContainer;\r\n\t\t\twhile (startElement && !/^h[1-6]$/i.test(startElement.tagName)) {\r\n\t\t\t\tstartElement = startElement.parentElement;\r\n\t\t\t}\r\n\t\t\tsourceId = startElement ? startElement.id : undefined;\r\n\t\t}\r\n\r\n\t\tif (!sourceId) {\r\n\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\tbus.emit(`${props.divId}_Event`, { content });\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\thandleSelectionWithSourceId(content, sourceId, isTable);\r\n\t};\r\n\r\n\tconst handleSelectionWithSourceId = (content, sourceId, isTable) => {\r\n\t\tselectedText.value[props.divId] = content;\r\n\t\tbus.emit(`${props.divId}_Event`, { content });\r\n\t\tshowPopup.value[props.divId] = true;\r\n\r\n\t\tif (isTable) {\r\n\t\t\tconst { linkedItem, chapterContent } = extractLinkedChapterContent(\r\n\t\t\t\tsourceId,\r\n\t\t\t\tprops.divId\r\n\t\t\t);\r\n\r\n\t\t\tif (linkedItem && chapterContent) {\r\n\t\t\t\tconst otherContainerId = props.divId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\t\t\tconst targetId =\r\n\t\t\t\t\tprops.divId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\t\t\tconst targetElement = document.getElementById(targetId);\r\n\t\t\t\tif (targetElement) {\r\n\t\t\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbus.emit(`${otherContainerId}_Event`, { content: chapterContent });\r\n\t\t\t\tbus.emit(`${otherContainerId}Event`, {\r\n\t\t\t\t\tcontent: chapterContent,\r\n\t\t\t\t\tsourceId: sourceId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnextTick(() => {\r\n\t\t\tupdatePopupPosition();\r\n\t\t});\r\n\t};\r\n\r\n\tconst closePopup = () => {\r\n\t\tshowPopup.value[props.divId] = false;\r\n\t\tselectedText.value[props.divId] = \"\";\r\n\t\tconst container =\r\n\t\t\tprops.divId === \"div1\" ? \".chart-container1\" : \".chart-container2\";\r\n\t\td3.select(container).html(\"\");\r\n\t};\r\n\r\n\tconst updatePopupPosition = () => {\r\n\t\tif (showPopup.value[props.divId] && divRef.value) {\r\n\t\t\tconst popup = divRef.value.querySelector(\".text-popup\");\r\n\t\t\tconst overlay = divRef.value.querySelector(\".overlay\");\r\n\t\t\tif (popup && overlay) {\r\n\t\t\t\tconst rect = divRef.value.getBoundingClientRect();\r\n\t\t\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\t\t\tconst scrollLeft = divRef.value.scrollLeft;\r\n\r\n\t\t\t\toverlay.style.top = `${scrollTop}px`;\r\n\t\t\t\toverlay.style.left = `${scrollLeft}px`;\r\n\t\t\t\toverlay.style.width = `${divRef.value.clientWidth}px`;\r\n\t\t\t\toverlay.style.height = `${divRef.value.clientHeight}px`;\r\n\r\n\t\t\t\tpopup.style.top = `${rect.height / 2 + scrollTop}px`;\r\n\t\t\t\tpopup.style.left = `${rect.width / 2 + scrollLeft}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst extractLinkedChapterContent = (sourceId, sourceContainerId) => {\r\n\t\tif (!props.linkedOutline) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst linkedItem = props.linkedOutline.find(\r\n\t\t\tlinked => linked.leftId === sourceId || linked.rightId === sourceId\r\n\t\t);\r\n\t\tif (!linkedItem) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst targetContainerId = sourceContainerId === \"div1\" ? \"div3\" : \"div1\";\r\n\t\tconst targetId =\r\n\t\t\tsourceContainerId === \"div1\" ? linkedItem.rightId : linkedItem.leftId;\r\n\r\n\t\tconst targetContainer = document.getElementById(targetContainerId);\r\n\t\tif (!targetContainer) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tconst targetElement = targetContainer.querySelector(`#${targetId}`);\r\n\t\tif (!targetElement) {\r\n\t\t\treturn { linkedItem: null, chapterContent: \"\" };\r\n\t\t}\r\n\r\n\t\tlet chapterContent = \"\";\r\n\t\tlet currentNode = targetElement;\r\n\r\n\t\twhile (currentNode) {\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode !== targetElement &&\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE &&\r\n\t\t\t\t/^h[1-6]$/i.test(currentNode.tagName)\r\n\t\t\t) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE ||\r\n\t\t\t\tcurrentNode.nodeType === Node.TEXT_NODE\r\n\t\t\t) {\r\n\t\t\t\tchapterContent += currentNode.outerHTML || currentNode.textContent;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentNode = currentNode.nextSibling;\r\n\t\t}\r\n\r\n\t\treturn { linkedItem, chapterContent };\r\n\t};\r\n\r\n\t// 新增的大段文字高亮功能\r\n\tconst highlightParagraphs = fieldKey => {\r\n\t\tclearHighlights();\r\n\r\n\t\tif (!divRef.value) return;\r\n\r\n\t\t// 1. 尝试精准匹配（优先使用大段文本匹配）\r\n\t\tconst exactMatches = getExactMatchesForField(fieldKey);\r\n\t\tif (exactMatches.length > 0) {\r\n\t\t\tfor (const match of exactMatches) {\r\n\t\t\t\tif (match.length > 100) {\r\n\t\t\t\t\t// 超长文本使用段落匹配\r\n\t\t\t\t\tif (highlightParagraphByContent(match)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (match.length > 20) {\r\n\t\t\t\t\t// 中等长度使用改进的文本匹配\r\n\t\t\t\t\tif (highlightLargeText(match)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 短文本使用原始方法\r\n\t\t\t\t\thighlightExactText(match);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. 模糊匹配\r\n\t\thighlightFuzzyMatches(fieldKey);\r\n\t};\r\n\r\n\tconst highlightLargeText = textToHighlight => {\r\n\t\tconst contentElement = divRef.value.querySelector(\".wikipedia-content\");\r\n\t\tif (!contentElement) return false;\r\n\r\n\t\t// 创建临时div用于处理HTML内容\r\n\t\tconst tempDiv = document.createElement(\"div\");\r\n\t\ttempDiv.innerHTML = contentElement.innerHTML;\r\n\r\n\t\t// 使用更智能的匹配方式处理大段文本\r\n\t\tconst processNode = node => {\r\n\t\t\tif (node.nodeType === Node.TEXT_NODE) {\r\n\t\t\t\tconst text = node.nodeValue;\r\n\t\t\t\tif (text.includes(textToHighlight)) {\r\n\t\t\t\t\tconst parent = node.parentNode;\r\n\t\t\t\t\tconst html = parent.innerHTML;\r\n\r\n\t\t\t\t\t// 使用字符串替换而不是正则表达式\r\n\t\t\t\t\tconst highlightedHtml = html\r\n\t\t\t\t\t\t.split(textToHighlight)\r\n\t\t\t\t\t\t.join(`<span class=\"highlight-exact\">${textToHighlight}</span>`);\r\n\r\n\t\t\t\t\tparent.innerHTML = highlightedHtml;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else if (node.nodeType === Node.ELEMENT_NODE) {\r\n\t\t\t\t// 处理子节点\r\n\t\t\t\tfor (let i = 0; i < node.childNodes.length; i++) {\r\n\t\t\t\t\tif (processNode(node.childNodes[i])) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tlet found = false;\r\n\t\tfor (let i = 0; i < tempDiv.childNodes.length; i++) {\r\n\t\t\tif (processNode(tempDiv.childNodes[i])) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (found) {\r\n\t\t\tcontentElement.innerHTML = tempDiv.innerHTML;\r\n\r\n\t\t\tconst highlights = contentElement.querySelectorAll(\".highlight-exact\");\r\n\t\t\tif (!highlightedParagraphs.value[props.divId]) {\r\n\t\t\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t\t\t}\r\n\t\t\thighlightedParagraphs.value[props.divId].push(...highlights);\r\n\r\n\t\t\tif (highlights.length > 0) {\r\n\t\t\t\thighlights[0].scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\tblock: \"center\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn found;\r\n\t};\r\n\r\n\tconst highlightParagraphByContent = paragraphText => {\r\n\t\tconst contentElement = divRef.value.querySelector(\".wikipedia-content\");\r\n\t\tif (!contentElement) return false;\r\n\r\n\t\tconst paragraphs = contentElement.querySelectorAll(\"p\");\r\n\t\tlet found = false;\r\n\r\n\t\tfor (const paragraph of paragraphs) {\r\n\t\t\tif (paragraph.textContent.includes(paragraphText)) {\r\n\t\t\t\tconst html = paragraph.innerHTML;\r\n\t\t\t\t// 使用字符串替换而不是正则表达式\r\n\t\t\t\tconst highlightedHtml = html\r\n\t\t\t\t\t.split(paragraphText)\r\n\t\t\t\t\t.join(`<span class=\"highlight-exact\">${paragraphText}</span>`);\r\n\r\n\t\t\t\tparagraph.innerHTML = highlightedHtml;\r\n\t\t\t\tfound = true;\r\n\r\n\t\t\t\tif (!highlightedParagraphs.value[props.divId]) {\r\n\t\t\t\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t\t\t\t}\r\n\t\t\t\thighlightedParagraphs.value[props.divId].push(\r\n\t\t\t\t\t...paragraph.querySelectorAll(\".highlight-exact\")\r\n\t\t\t\t);\r\n\r\n\t\t\t\tparagraph.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\tblock: \"center\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn found;\r\n\t};\r\n\r\n\tconst highlightExactText = textToHighlight => {\r\n\t\tconst contentElement = divRef.value.querySelector(\".wikipedia-content\");\r\n\t\tif (!contentElement) return;\r\n\r\n\t\tconst walker = document.createTreeWalker(\r\n\t\t\tcontentElement,\r\n\t\t\tNodeFilter.SHOW_TEXT,\r\n\t\t\tnull,\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tlet node;\r\n\t\twhile ((node = walker.nextNode())) {\r\n\t\t\tif (node.nodeValue.includes(textToHighlight)) {\r\n\t\t\t\tconst span = document.createElement(\"span\");\r\n\t\t\t\tspan.className = \"highlight-exact\";\r\n\t\t\t\tconst text = node.nodeValue;\r\n\t\t\t\tconst newText = document.createTextNode(text);\r\n\t\t\t\tspan.appendChild(newText);\r\n\r\n\t\t\t\tnode.parentNode.replaceChild(span, node);\r\n\r\n\t\t\t\tif (!highlightedParagraphs.value[props.divId]) {\r\n\t\t\t\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t\t\t\t}\r\n\t\t\t\thighlightedParagraphs.value[props.divId].push(span);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst highlightFuzzyMatches = fieldKey => {\r\n\t\tconst contentElement = divRef.value.querySelector(\".wikipedia-content\");\r\n\t\tif (!contentElement) return;\r\n\r\n\t\tconst { keywords, secondaryKeywords } = getKeywordsForField(fieldKey);\r\n\r\n\t\tlet found = false;\r\n\t\tfor (const keyword of keywords) {\r\n\t\t\tif (highlightLargeText(keyword)) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!found) {\r\n\t\t\tfor (const keyword of secondaryKeywords) {\r\n\t\t\t\tif (highlightLargeText(keyword)) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!found) {\r\n\t\t\tconst simpleKeywords = [fieldKey.toLowerCase()];\r\n\t\t\tfor (const keyword of simpleKeywords) {\r\n\t\t\t\thighlightExactText(keyword);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst getExactMatchesForField = fieldKey => {\r\n\t\t// 这里可以替换为从后端API获取\r\n\t\tconst exactMatchesMap = {\r\n\t\t\tGDP: [\"gross domestic product\", \"GDP\"],\r\n\t\t\tPopulation: [\"gross domestic product\", \"inhabitants\"],\r\n\t\t\t\"GDP growth\": [\"gross domestic product\", \"GDP growth\"]\r\n\t\t\t// 其他字段的精准匹配内容\r\n\t\t};\r\n\r\n\t\treturn exactMatchesMap[fieldKey] || [];\r\n\t};\r\n\r\n\tconst getKeywordsForField = fieldKey => {\r\n\t\tconst keywordsMap = {\r\n\t\t\tGDP: {\r\n\t\t\t\tkeywords: [\"gross domestic product\", \"economic output\", \"economy size\"],\r\n\t\t\t\tsecondaryKeywords: [\"GDP\", \"economic\", \"production\"]\r\n\t\t\t},\r\n\t\t\tPopulation: {\r\n\t\t\t\tkeywords: [\"population\", \"inhabitants\", \"residents\"],\r\n\t\t\t\tsecondaryKeywords: [\"people\", \"citizens\", \"demographics\"]\r\n\t\t\t}\r\n\t\t\t// 其他字段\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\tkeywordsMap[fieldKey] || {\r\n\t\t\t\tkeywords: [fieldKey.toLowerCase()],\r\n\t\t\t\tsecondaryKeywords: []\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst escapeRegExp = string => {\r\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\t};\r\n\r\n\tconst clearHighlights = () => {\r\n\t\tif (!highlightedParagraphs.value[props.divId]) return;\r\n\r\n\t\thighlightedParagraphs.value[props.divId].forEach(highlight => {\r\n\t\t\tif (highlight.parentNode) {\r\n\t\t\t\tconst textNode = document.createTextNode(highlight.textContent);\r\n\t\t\t\thighlight.parentNode.replaceChild(textNode, highlight);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thighlightedParagraphs.value[props.divId] = [];\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.addEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\r\n\t\tconst hoverEvent = `hover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\t\tconst unhoverEvent = `unhover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\r\n\t\tbus.on(hoverEvent, handleHoverInfobox);\r\n\t\tbus.on(unhoverEvent, handleUnhoverInfobox);\r\n\r\n\t\tbus.on(`${props.divId}Event`, ({ content, sourceId }) => {\r\n\t\t\tselectedText.value[props.divId] = content;\r\n\t\t\tshowPopup.value[props.divId] = true;\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tupdatePopupPosition();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 新增事件监听\r\n\t\tbus.on(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\r\n\t\tbus.on(`clear-${props.divId}-highlights`, clearHighlights);\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tif (divRef.value) {\r\n\t\t\tdivRef.value.removeEventListener(\"scroll\", updatePopupPosition);\r\n\t\t}\r\n\r\n\t\tconst hoverEvent = `hover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\t\tconst unhoverEvent = `unhover-${\r\n\t\t\tprops.divId === \"div1\" ? \"left\" : \"right\"\r\n\t\t}-infobox`;\r\n\r\n\t\tbus.off(hoverEvent, handleHoverInfobox);\r\n\t\tbus.off(unhoverEvent, handleUnhoverInfobox);\r\n\t\tbus.off(`${props.divId}Event`);\r\n\r\n\t\t// 移除新增事件监听\r\n\t\tbus.off(`highlight-${props.divId}-paragraphs`, highlightParagraphs);\r\n\t\tbus.off(`clear-${props.divId}-highlights`, clearHighlights);\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20px;\r\n\t\tcolor: #2c3e50;\r\n\t}\r\n\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t::selection {\r\n\t\tbackground-color: rgba(255, 255, 0, 0.3);\r\n\t\tcolor: inherit;\r\n\t}\r\n</style>\r\n\r\n<style>\r\n\t.infobox tr.infobox-highlight th,\r\n\t.infobox tr.infobox-highlight td,\r\n\t.sidebar tr.infobox-highlight th,\r\n\t.sidebar tr.infobox-highlight td,\r\n\t.toccolours tr.infobox-highlight th,\r\n\t.toccolours tr.infobox-highlight td {\r\n\t\tbackground-color: #fffacd !important;\r\n\t\tbox-shadow: 0 0 8px rgba(255, 235, 59, 0.8) !important;\r\n\t\ttransition: all 0.15s ease !important;\r\n\t}\r\n\r\n\t.highlight-exact {\r\n\t\tbackground-color: rgba(255, 235, 59, 0.6);\r\n\t\tpadding: 2px 0;\r\n\t\tborder-radius: 3px;\r\n\t\tbox-shadow: 0 0 0 2px rgba(255, 235, 59, 0.3);\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t.highlight-fuzzy {\r\n\t\tbackground-color: rgba(255, 152, 0, 0.4);\r\n\t\tpadding: 2px 0;\r\n\t\tborder-radius: 3px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tp:hover .highlight-exact {\r\n\t\tbackground-color: rgba(255, 235, 59, 0.8);\r\n\t\ttransform: scale(1.01);\r\n\t}\r\n</style>\r\n"],"mappings":";;mBAAA;;uBACCA,mBAAA,CAsBM;IAtBAC,KAAK,EADZC,eAAA,UACuBC,MAAA,CAAAC,kBAAkB;IAAIC,EAAE,EAAEF,MAAA,CAAAG,KAAK;IAAEC,GAAG,EAAC;MAC1DC,mBAAA,CAA8B,YAAAC,gBAAA,CAAvBC,MAAA,CAAAC,KAAK,CAACC,SAAS,kBAEAF,MAAA,CAAAG,OAAO,I,cAA7BC,YAAA,CAAiCJ,MAAA;IAJnCK,GAAA;EAAA,MAOcL,MAAA,CAAAM,KAAK,I,cADjBF,YAAA,CAGkCJ,MAAA;IATpCK,GAAA;IAQIE,OAAO,EAAEP,MAAA,CAAAM,KAAK;IACdE,OAAK,EAAER,MAAA,CAAAS;yDAETL,YAAA,CAAyEJ,MAAA;IAX3EK,GAAA;IAW4BK,OAAO,EAAEV,MAAA,CAAAW,QAAQ;IAAGC,QAAM,EAAEZ,MAAA,CAAAa;yCAEtDC,YAAA,CAOuBd,MAAA;IANrBe,OAAO,EAAEf,MAAA,CAAAgB,SAAS,CAACvB,MAAA,CAAAG,KAAK;IACxBc,OAAO,EAAEV,MAAA,CAAAiB,YAAY,CAACxB,MAAA,CAAAG,KAAK;IAC3BsB,cAAc,EAAQzB,MAAA,CAAAG,KAAK;IAG3BuB,YAAY,EAAEnB,MAAA,CAAAoB,MAAM;IACpBC,OAAK,EAAErB,MAAA,CAAAsB;qFAETR,YAAA,CAAqDd,MAAA;IAApCU,OAAO,EAAEV,MAAA,CAAAW,QAAQ;IAAGf,KAAK,EAAEH,MAAA,CAAAG;yEAtB9C2B,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}