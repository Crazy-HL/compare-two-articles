{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-history\"\n};\nconst _hoisted_4 = {\n  class: \"message-content\"\n};\nconst _hoisted_5 = {\n  class: \"input-container\"\n};\nconst _hoisted_6 = {\n  class: \"button-container\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"vis\"\n}, [/*#__PURE__*/_createCommentVNode(\" 可用于显示图形或其他内容 \")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 历史对话记录 \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role])\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(message.content), 1 /* TEXT */)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 输入框和操作按钮 \"), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.userQuestion]]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    })\n  }, \"发送\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return _ctx.compareTexts && _ctx.compareTexts(...arguments);\n    })\n  }, \"对比文章\")])])]), _createCommentVNode(\" 视觉内容容器 \"), _hoisted_7]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","_ctx","chatHistory","message","index","key","_normalizeClass","role","_hoisted_4","_toDisplayString","content","_hoisted_5","_cache","$event","userQuestion","rows","placeholder","_hoisted_6","onClick","askQuestion","arguments","compareTexts","_hoisted_7"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<!-- 聊天容器 -->\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<!-- 历史对话记录 -->\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p>{{ message.content }}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- 输入框和操作按钮 -->\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\">发送</button>\r\n\t\t\t\t\t<button @click=\"compareTexts\">对比文章</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 视觉内容容器 -->\r\n\t\t<div class=\"vis\">\r\n\t\t\t<!-- 可用于显示图形或其他内容 -->\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\t// 脚本部分保持不变\r\n</script>\r\n\r\n<style scoped>\r\n\t/* 主容器 */\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column; /* 设置为垂直布局 */\r\n\t\twidth: 800px; /* 设置宽度固定，避免调整宽度 */\r\n\t\theight: 100vh; /* 设置高度为视口高度 */\r\n\t\tmargin: 0 auto; /* 保证容器居中 */\r\n\t}\r\n\r\n\t/* 聊天容器 */\r\n\t.chat-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column; /* 设置为垂直布局 */\r\n\t\tbackground-color: #f9f9f9;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 8px;\r\n\t\tbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n\t\tflex: 1; /* 使聊天容器占据剩余的空间 */\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 历史对话记录 */\r\n\t.chat-history {\r\n\t\tflex: 1; /* 使用 flex 使其占据剩余空间 */\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tmax-height: 300px; /* 限制高度，避免过长 */\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t/* 消息样式 */\r\n\t.message {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 10px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #e0e0e0;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #d1e7dd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f8f9fa;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t/* 输入框和按钮容器 */\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 60px; /* 高度调整 */\r\n\t\tresize: none;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 16px;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\tbutton:hover {\r\n\t\tbackground-color: #45a049;\r\n\t}\r\n\r\n\t/* 视觉内容容器 */\r\n\t.vis {\r\n\t\twidth: 100%; /* 保持宽度不变 */\r\n\t\tflex: 1; /* 让 visual 容器占据剩余空间 */\r\n\t\tbackground-color: #f3f3f3;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #000000;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAgB;;EAErBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;;EAQzBA,KAAK,EAAC;AAAiB;;EAKtBA,KAAK,EAAC;AAAkB;gEAQ/BC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAK,I,aACfE,mBAAA,kBAAqB,C;;uBA/BvBC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCLF,mBAAA,UAAa,EACbD,mBAAA,CAyBM,OAzBNI,UAyBM,GAxBLH,mBAAA,YAAe,EACfD,mBAAA,CAUM,OAVNK,UAUM,I,kBATLH,mBAAA,CAQMI,SAAA,QAdVC,WAAA,CAOgCC,IAAA,CAAAC,WAAW,EAP3C,CAOaC,OAAO,EAAEC,KAAK;yBADvBT,mBAAA,CAQM;MANJU,GAAG,EAAED,KAAK;MACVZ,KAAK,EATXc,eAAA,aASyBH,OAAO,CAACI,IAAI;QAChCd,mBAAA,CAGM,OAHNe,UAGM,GAFLf,mBAAA,CAA8D,gBAAAgB,gBAAA,CAAnDN,OAAO,CAACI,IAAI,8BAA6B,GAAC,iBACrDd,mBAAA,CAA4B,WAAAgB,gBAAA,CAAtBN,OAAO,CAACO,OAAO,iB;oCAKxBhB,mBAAA,cAAiB,EACjBD,mBAAA,CASM,OATNkB,UASM,G,gBARLlB,mBAAA,CAGuC;IAtB3C,uBAAAmB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBcZ,IAAA,CAAAa,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC;iDAFHf,IAAA,CAAAa,YAAY,E,GAGtBrB,mBAAA,CAGM,OAHNwB,UAGM,GAFLxB,mBAAA,CAAwC;IAA/ByB,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEX,IAAA,CAAAkB,WAAA,IAAAlB,IAAA,CAAAkB,WAAA,IAAAC,SAAA,CAAW;IAAA;KAAE,IAAE,GAC/B3B,mBAAA,CAA2C;IAAlCyB,OAAK,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEX,IAAA,CAAAoB,YAAA,IAAApB,IAAA,CAAAoB,YAAA,IAAAD,SAAA,CAAY;IAAA;KAAE,MAAI,E,OAKrC1B,mBAAA,YAAe,EACf4B,UAEM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}