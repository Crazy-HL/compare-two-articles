{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\nimport LoadingSpinner from \"./LoadingSpinner.vue\";\nimport ErrorDisplay from \"./ErrorDisplay.vue\";\nimport WikipediaContent from \"./WikipediaContent.vue\";\nimport TextPopup from \"./TextPopup.vue\";\nimport * as d3 from \"d3\";\nimport bus from \"@/js/eventBus.js\";\nimport { debounce } from \"lodash\";\nexport default {\n  __name: 'ParentComponent',\n  props: {\n    pageTitle: String,\n    divId: String,\n    selectContentClass: String\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pageHtml = ref(\"\"); // 文章 HTML 内容\n    const loading = ref(true); // 加载状态\n    const error = ref(\"\"); // 错误信息\n    const selectedText = ref({}); // 存储每个 div 的选中内容\n    const showPopup = ref({}); // 存储每个 div 的弹窗显示状态\n    const divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\n    const chapters = ref([]); // 存储章节信息\n\n    // 提取章节信息\n    const extractChapters = htmlContent => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(htmlContent, \"text/html\");\n      const headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n      const chapters = Array.from(headings).map(heading => {\n        // 生成有效的 id\n        const id = heading.textContent.trim().toLowerCase().replace(/[^a-z0-9]+/g, \"-\") // 替换非字母数字字符为 -\n        .replace(/^-+|-+$/g, \"\"); // 去除开头和结尾的 -\n\n        // 如果 heading 没有 id，则设置生成的 id\n        if (!heading.id) {\n          heading.id = id;\n        }\n        return {\n          id: heading.id,\n          text: heading.textContent.trim(),\n          level: parseInt(heading.tagName.replace(\"H\", \"\"), 10),\n          // 记录章节级别（1-6）\n          element: heading\n        };\n      });\n      return chapters;\n    };\n\n    // 处理滚动事件\n    const handleScroll = debounce(() => {\n      if (!divRef.value) return;\n      const scrollTop = divRef.value.scrollTop;\n      let currentChapter = null;\n\n      // 查找当前章节\n      for (const chapter of chapters.value) {\n        const escapedId = CSS.escape(chapter.id); // 转义 id\n        const element = divRef.value.querySelector(`#${escapedId}`);\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          if (rect.top >= 0 && rect.top <= divRef.value.clientHeight * 0.5) {\n            currentChapter = chapter;\n            break;\n          }\n        }\n      }\n\n      // 如果找到当前章节，发送同步事件\n      if (currentChapter) {\n        bus.emit(\"syncScroll\", {\n          chapterId: currentChapter.id,\n          source: props.divId\n        });\n      }\n    }, 100);\n\n    // 同步滚动到指定章节\n    const syncScroll = chapterId => {\n      const escapedId = CSS.escape(chapterId); // 转义 id\n      const chapterElement = divRef.value.querySelector(`#${escapedId}`);\n      if (chapterElement) {\n        chapterElement.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } else {\n        // 如果没有完全匹配的章节，尝试匹配相似的章节\n        const sourceChapter = chapters.value.find(chap => chap.id === chapterId);\n        if (sourceChapter) {\n          const similarChapter = findSimilarChapter(sourceChapter.text);\n          if (similarChapter) {\n            const escapedSimilarId = CSS.escape(similarChapter.id);\n            const similarElement = divRef.value.querySelector(`#${escapedSimilarId}`);\n            if (similarElement) {\n              similarElement.scrollIntoView({\n                behavior: \"smooth\"\n              });\n            }\n          }\n        }\n      }\n    };\n\n    // 查找相似的章节\n    const findSimilarChapter = text => {\n      let maxSimilarity = 0;\n      let bestMatch = null;\n      for (const chapter of chapters.value) {\n        const similarity = calculateSimilarity(text, chapter.text);\n        if (similarity > maxSimilarity) {\n          maxSimilarity = similarity;\n          bestMatch = chapter;\n        }\n      }\n\n      // 如果相似度超过阈值，则返回匹配的章节\n      return maxSimilarity > 0.7 ? bestMatch : null;\n    };\n\n    // 计算文本相似度（使用简单的余弦相似度）\n    const calculateSimilarity = (text1, text2) => {\n      const words1 = text1.toLowerCase().split(/\\s+/);\n      const words2 = text2.toLowerCase().split(/\\s+/);\n      const uniqueWords = new Set([...words1, ...words2]);\n      const vector1 = Array.from(uniqueWords).map(word => words1.includes(word) ? 1 : 0);\n      const vector2 = Array.from(uniqueWords).map(word => words2.includes(word) ? 1 : 0);\n      const dotProduct = vector1.reduce((sum, val, i) => sum + val * vector2[i], 0);\n      const magnitude1 = Math.sqrt(vector1.reduce((sum, val) => sum + val * val, 0));\n      const magnitude2 = Math.sqrt(vector2.reduce((sum, val) => sum + val * val, 0));\n      return dotProduct / (magnitude1 * magnitude2);\n    };\n\n    // 获取 Wikipedia 页面内容\n    const fetchWikipediaContent = async () => {\n      try {\n        const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(props.pageTitle)}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const html = await response.text();\n        pageHtml.value = html;\n        chapters.value = extractChapters(html);\n      } catch (err) {\n        error.value = \"Error fetching Wikipedia content: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 监听滚动同步事件\n    onMounted(() => {\n      fetchWikipediaContent();\n      divRef.value.addEventListener(\"scroll\", handleScroll);\n      bus.on(\"syncScroll\", data => {\n        if (data.source !== props.divId) {\n          syncScroll(data.chapterId);\n        }\n      });\n    });\n    onUnmounted(() => {\n      divRef.value.removeEventListener(\"scroll\", handleScroll);\n      bus.off(\"syncScroll\");\n    });\n    const __returned__ = {\n      props,\n      pageHtml,\n      loading,\n      error,\n      selectedText,\n      showPopup,\n      divRef,\n      chapters,\n      extractChapters,\n      handleScroll,\n      syncScroll,\n      findSimilarChapter,\n      calculateSimilarity,\n      fetchWikipediaContent,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      LoadingSpinner,\n      ErrorDisplay,\n      WikipediaContent,\n      TextPopup,\n      get d3() {\n        return d3;\n      },\n      get bus() {\n        return bus;\n      },\n      get debounce() {\n        return debounce;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","LoadingSpinner","ErrorDisplay","WikipediaContent","TextPopup","d3","bus","debounce","props","__props","pageHtml","loading","error","selectedText","showPopup","divRef","chapters","extractChapters","htmlContent","parser","DOMParser","doc","parseFromString","headings","querySelectorAll","Array","from","map","heading","id","textContent","trim","toLowerCase","replace","text","level","parseInt","tagName","element","handleScroll","value","scrollTop","currentChapter","chapter","escapedId","CSS","escape","querySelector","rect","getBoundingClientRect","top","clientHeight","emit","chapterId","source","divId","syncScroll","chapterElement","scrollIntoView","behavior","sourceChapter","find","chap","similarChapter","findSimilarChapter","escapedSimilarId","similarElement","maxSimilarity","bestMatch","similarity","calculateSimilarity","text1","text2","words1","split","words2","uniqueWords","Set","vector1","word","includes","vector2","dotProduct","reduce","sum","val","i","magnitude1","Math","sqrt","magnitude2","fetchWikipediaContent","apiUrl","encodeURIComponent","pageTitle","response","fetch","ok","Error","html","err","message","addEventListener","on","data","removeEventListener","off"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/ParentComponent.vue"],"sourcesContent":["<template>\r\n\t<div :class=\"['div0', selectContentClass]\" :id=\"divId\" ref=\"divRef\">\r\n\t\t<h1>{{ pageTitle }}</h1>\r\n\r\n\t\t<!-- 加载动画 -->\r\n\t\t<LoadingSpinner v-if=\"loading\" />\r\n\r\n\t\t<!-- 错误信息 -->\r\n\t\t<ErrorDisplay\r\n\t\t\tv-else-if=\"error\"\r\n\t\t\t:message=\"error\"\r\n\t\t\t@retry=\"fetchWikipediaContent\" />\r\n\r\n\t\t<!-- 文章内容 -->\r\n\t\t<WikipediaContent v-else :content=\"pageHtml\" @select=\"handleSelection\" />\r\n\r\n\t\t<!-- 弹出框 -->\r\n\t\t<TextPopup\r\n\t\t\t:visible=\"showPopup[divId]\"\r\n\t\t\t:content=\"selectedText[divId]\"\r\n\t\t\t:containerClass=\"\r\n\t\t\t\tdivId === 'div1' ? 'chart-container1' : 'chart-container2'\r\n\t\t\t\"\r\n\t\t\t:containerRef=\"divRef\"\r\n\t\t\t@close=\"closePopup\" />\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, nextTick } from \"vue\";\r\n\timport LoadingSpinner from \"./LoadingSpinner.vue\";\r\n\timport ErrorDisplay from \"./ErrorDisplay.vue\";\r\n\timport WikipediaContent from \"./WikipediaContent.vue\";\r\n\timport TextPopup from \"./TextPopup.vue\";\r\n\timport * as d3 from \"d3\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport { debounce } from \"lodash\";\r\n\r\n\tconst props = defineProps({\r\n\t\tpageTitle: String,\r\n\t\tdivId: String,\r\n\t\tselectContentClass: String\r\n\t});\r\n\r\n\tconst pageHtml = ref(\"\"); // 文章 HTML 内容\r\n\tconst loading = ref(true); // 加载状态\r\n\tconst error = ref(\"\"); // 错误信息\r\n\tconst selectedText = ref({}); // 存储每个 div 的选中内容\r\n\tconst showPopup = ref({}); // 存储每个 div 的弹窗显示状态\r\n\tconst divRef = ref(null); // `Div1` 或 `Div3` 的 DOM 参考\r\n\tconst chapters = ref([]); // 存储章节信息\r\n\r\n\t// 提取章节信息\r\n\tconst extractChapters = htmlContent => {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(htmlContent, \"text/html\");\r\n\t\tconst headings = doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\t\tconst chapters = Array.from(headings).map(heading => {\r\n\t\t\t// 生成有效的 id\r\n\t\t\tconst id = heading.textContent\r\n\t\t\t\t.trim()\r\n\t\t\t\t.toLowerCase()\r\n\t\t\t\t.replace(/[^a-z0-9]+/g, \"-\") // 替换非字母数字字符为 -\r\n\t\t\t\t.replace(/^-+|-+$/g, \"\"); // 去除开头和结尾的 -\r\n\r\n\t\t\t// 如果 heading 没有 id，则设置生成的 id\r\n\t\t\tif (!heading.id) {\r\n\t\t\t\theading.id = id;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tid: heading.id,\r\n\t\t\t\ttext: heading.textContent.trim(),\r\n\t\t\t\tlevel: parseInt(heading.tagName.replace(\"H\", \"\"), 10), // 记录章节级别（1-6）\r\n\t\t\t\telement: heading\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn chapters;\r\n\t};\r\n\r\n\t// 处理滚动事件\r\n\tconst handleScroll = debounce(() => {\r\n\t\tif (!divRef.value) return;\r\n\r\n\t\tconst scrollTop = divRef.value.scrollTop;\r\n\t\tlet currentChapter = null;\r\n\r\n\t\t// 查找当前章节\r\n\t\tfor (const chapter of chapters.value) {\r\n\t\t\tconst escapedId = CSS.escape(chapter.id); // 转义 id\r\n\t\t\tconst element = divRef.value.querySelector(`#${escapedId}`);\r\n\t\t\tif (element) {\r\n\t\t\t\tconst rect = element.getBoundingClientRect();\r\n\t\t\t\tif (rect.top >= 0 && rect.top <= divRef.value.clientHeight * 0.5) {\r\n\t\t\t\t\tcurrentChapter = chapter;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 如果找到当前章节，发送同步事件\r\n\t\tif (currentChapter) {\r\n\t\t\tbus.emit(\"syncScroll\", {\r\n\t\t\t\tchapterId: currentChapter.id,\r\n\t\t\t\tsource: props.divId\r\n\t\t\t});\r\n\t\t}\r\n\t}, 100);\r\n\r\n\t// 同步滚动到指定章节\r\n\tconst syncScroll = chapterId => {\r\n\t\tconst escapedId = CSS.escape(chapterId); // 转义 id\r\n\t\tconst chapterElement = divRef.value.querySelector(`#${escapedId}`);\r\n\t\tif (chapterElement) {\r\n\t\t\tchapterElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t} else {\r\n\t\t\t// 如果没有完全匹配的章节，尝试匹配相似的章节\r\n\t\t\tconst sourceChapter = chapters.value.find(chap => chap.id === chapterId);\r\n\t\t\tif (sourceChapter) {\r\n\t\t\t\tconst similarChapter = findSimilarChapter(sourceChapter.text);\r\n\t\t\t\tif (similarChapter) {\r\n\t\t\t\t\tconst escapedSimilarId = CSS.escape(similarChapter.id);\r\n\t\t\t\t\tconst similarElement = divRef.value.querySelector(\r\n\t\t\t\t\t\t`#${escapedSimilarId}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (similarElement) {\r\n\t\t\t\t\t\tsimilarElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 查找相似的章节\r\n\tconst findSimilarChapter = text => {\r\n\t\tlet maxSimilarity = 0;\r\n\t\tlet bestMatch = null;\r\n\r\n\t\tfor (const chapter of chapters.value) {\r\n\t\t\tconst similarity = calculateSimilarity(text, chapter.text);\r\n\t\t\tif (similarity > maxSimilarity) {\r\n\t\t\t\tmaxSimilarity = similarity;\r\n\t\t\t\tbestMatch = chapter;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 如果相似度超过阈值，则返回匹配的章节\r\n\t\treturn maxSimilarity > 0.7 ? bestMatch : null;\r\n\t};\r\n\r\n\t// 计算文本相似度（使用简单的余弦相似度）\r\n\tconst calculateSimilarity = (text1, text2) => {\r\n\t\tconst words1 = text1.toLowerCase().split(/\\s+/);\r\n\t\tconst words2 = text2.toLowerCase().split(/\\s+/);\r\n\t\tconst uniqueWords = new Set([...words1, ...words2]);\r\n\r\n\t\tconst vector1 = Array.from(uniqueWords).map(word =>\r\n\t\t\twords1.includes(word) ? 1 : 0\r\n\t\t);\r\n\t\tconst vector2 = Array.from(uniqueWords).map(word =>\r\n\t\t\twords2.includes(word) ? 1 : 0\r\n\t\t);\r\n\r\n\t\tconst dotProduct = vector1.reduce(\r\n\t\t\t(sum, val, i) => sum + val * vector2[i],\r\n\t\t\t0\r\n\t\t);\r\n\t\tconst magnitude1 = Math.sqrt(\r\n\t\t\tvector1.reduce((sum, val) => sum + val * val, 0)\r\n\t\t);\r\n\t\tconst magnitude2 = Math.sqrt(\r\n\t\t\tvector2.reduce((sum, val) => sum + val * val, 0)\r\n\t\t);\r\n\r\n\t\treturn dotProduct / (magnitude1 * magnitude2);\r\n\t};\r\n\r\n\t// 获取 Wikipedia 页面内容\r\n\tconst fetchWikipediaContent = async () => {\r\n\t\ttry {\r\n\t\t\tconst apiUrl = `https://en.wikipedia.org/api/rest_v1/page/html/${encodeURIComponent(\r\n\t\t\t\tprops.pageTitle\r\n\t\t\t)}`;\r\n\t\t\tconst response = await fetch(apiUrl);\r\n\t\t\tif (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n\t\t\tconst html = await response.text();\r\n\t\t\tpageHtml.value = html;\r\n\t\t\tchapters.value = extractChapters(html);\r\n\t\t} catch (err) {\r\n\t\t\terror.value = \"Error fetching Wikipedia content: \" + err.message;\r\n\t\t} finally {\r\n\t\t\tloading.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 监听滚动同步事件\r\n\tonMounted(() => {\r\n\t\tfetchWikipediaContent();\r\n\t\tdivRef.value.addEventListener(\"scroll\", handleScroll);\r\n\t\tbus.on(\"syncScroll\", data => {\r\n\t\t\tif (data.source !== props.divId) {\r\n\t\t\t\tsyncScroll(data.chapterId);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tdivRef.value.removeEventListener(\"scroll\", handleScroll);\r\n\t\tbus.off(\"syncScroll\");\r\n\t});\r\n</script>\r\n\r\n<style scoped>\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t/* 文章容器 */\r\n\t.div0 {\r\n\t\tposition: relative;\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t#div1,\r\n\t#div3 {\r\n\t\twidth: 55%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow: auto;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.showHtml {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\toverflow: auto;\r\n\t}\r\n\r\n\t/* 选中文本的高亮样式 */\r\n\t::selection {\r\n\t\tbackground-color: yellow;\r\n\t\tcolor: black;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}