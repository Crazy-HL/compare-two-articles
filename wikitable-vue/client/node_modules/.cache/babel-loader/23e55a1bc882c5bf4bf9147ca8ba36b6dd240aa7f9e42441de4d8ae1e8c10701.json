{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35226a1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"field-visualization\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chart-container pie-chart\",\n  ref: \"pieChart\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"chart-container line-chart\",\n  ref: \"lineChart\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"chart-container bar-chart\",\n  ref: \"barChart\"\n};\nconst _hoisted_5 = {\n  key: 3,\n  class: \"text-display\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.hasData ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$setup.visualizationType === 'pie-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $setup.visualizationType === 'line-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $setup.visualizationType === 'bar-chart' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $setup.visualizationType === 'text-only' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$setup.isArray ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.processedArray, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-item\"\n    }, _toDisplayString($setup.formatTextValue(item)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($setup.formatTextValue($props.field)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"无数据\"))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasData","_Fragment","visualizationType","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","isArray","_renderList","processedArray","item","index","formatTextValue","_createTextVNode","_toDisplayString","$props","field","_hoisted_6"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\compoents_base\\FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String,\r\n\t\tyRange: Array,\r\n\t\tcompareData: [Object, Array]\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理劳动力分布数据格式\r\n\t\tif (Array.isArray(props.field)) {\r\n\t\t\treturn props.field\r\n\t\t\t\t.filter(item => item.value && typeof item.value === \"number\")\r\n\t\t\t\t.map(item => {\r\n\t\t\t\t\tconst rawText = item.raw || \"\";\r\n\t\t\t\t\tconst nameMatch = rawText.match(/^([^:]+):/);\r\n\t\t\t\t\tconst name = nameMatch ? nameMatch[1].trim() : \"未知行业\";\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\t\tunit: item.unit || \"%\",\r\n\t\t\t\t\t\traw: item.raw\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 其他数据格式处理...\r\n\t\tif (typeof props.field === \"object\" && !Array.isArray(props.field)) {\r\n\t\t\treturn Object.entries(props.field)\r\n\t\t\t\t.map(([name, value]) => ({\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tvalue: parseFloat(value) || 0,\r\n\t\t\t\t\tunit: \"%\",\r\n\t\t\t\t\traw: `${name}: ${value}`\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t});\r\n\r\n\tconst visualizationType = computed(() => {\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\tif (props.fieldKey === \"Labor force by occupation\") {\r\n\t\t\treturn \"pie-chart\";\r\n\t\t}\r\n\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.some(item => item.year) &&\r\n\t\t\tprocessedArray.value.length >= 2\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn processedArray.value.every(item => typeof item.value === \"number\");\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn props.type === \"percentage\" && processedArray.value.length === 1;\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (!props.field) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\treturn props.field.value !== undefined;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\tconst formatTextValue = item => {\r\n\t\tif (!item) return \"-\";\r\n\t\tif (item.raw) return item.raw;\r\n\t\tif (item.value) return `${item.value}${item.unit || \"\"}`;\r\n\t\treturn \"-\";\r\n\t};\r\n\r\n\tconst drawPieChart = () => {\r\n\t\tconst container = pieChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst radius = Math.min(width, height) / 2 - 10;\r\n\t\tconst labelRadius = radius * 0.7;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst color = d3\r\n\t\t\t.scaleOrdinal()\r\n\t\t\t.domain(processedArray.value.map(d => d.name))\r\n\t\t\t.range(d3.schemeCategory10);\r\n\r\n\t\tconst pie = d3\r\n\t\t\t.pie()\r\n\t\t\t.value(d => d.value)\r\n\t\t\t.sort(null);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tconst labelArc = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\r\n\r\n\t\tconst arcs = svg\r\n\t\t\t.selectAll(\".arc\")\r\n\t\t\t.data(pie(processedArray.value))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"arc\");\r\n\r\n\t\t// 绘制扇形\r\n\t\tarcs\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", d => color(d.data.name))\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 1)\r\n\t\t\t.on(\"mouseover\", function (event, d) {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 0.8);\r\n\t\t\t\ttooltip\r\n\t\t\t\t\t.style(\"visibility\", \"visible\")\r\n\t\t\t\t\t.html(`${d.data.name}<br>${d.data.value}${d.data.unit}`);\r\n\t\t\t})\r\n\t\t\t.on(\"mousemove\", function (event) {\r\n\t\t\t\ttooltip\r\n\t\t\t\t\t.style(\"top\", event.pageY - 10 + \"px\")\r\n\t\t\t\t\t.style(\"left\", event.pageX + 10 + \"px\");\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", function () {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 1);\r\n\t\t\t\ttooltip.style(\"visibility\", \"hidden\");\r\n\t\t\t});\r\n\r\n\t\t// 添加标签\r\n\t\tarcs\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"transform\", d => `translate(${labelArc.centroid(d)})`)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => `${d.data.value}${d.data.unit}`)\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.style(\"fill\", \"white\");\r\n\r\n\t\t// 添加图例\r\n\t\tconst legend = svg\r\n\t\t\t.selectAll(\".legend\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"legend\")\r\n\t\t\t.attr(\r\n\t\t\t\t\"transform\",\r\n\t\t\t\t(d, i) => `translate(${radius + 20},${i * 20 - radius / 2})`\r\n\t\t\t);\r\n\r\n\t\tlegend\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"width\", 18)\r\n\t\t\t.attr(\"height\", 18)\r\n\t\t\t.attr(\"fill\", d => color(d.name));\r\n\r\n\t\tlegend\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", 24)\r\n\t\t\t.attr(\"y\", 9)\r\n\t\t\t.attr(\"dy\", \".35em\")\r\n\t\t\t.text(d => d.name)\r\n\t\t\t.style(\"font-size\", \"12px\");\r\n\r\n\t\t// 添加年份信息\r\n\t\tconst yearItem = Array.isArray(props.field)\r\n\t\t\t? props.field.find(item => item.raw && /\\(.*\\d{4}.*\\)/.test(item.raw))\r\n\t\t\t: null;\r\n\r\n\t\tif (yearItem) {\r\n\t\t\tsvg\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"y\", radius + 20)\r\n\t\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t\t.text(yearItem.raw)\r\n\t\t\t\t.style(\"font-size\", \"10px\")\r\n\t\t\t\t.style(\"fill\", \"#666\");\r\n\t\t}\r\n\r\n\t\t// 添加悬浮提示框\r\n\t\tconst tooltip = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"div\")\r\n\t\t\t.attr(\"class\", \"tooltip\")\r\n\t\t\t.style(\"position\", \"absolute\")\r\n\t\t\t.style(\"visibility\", \"hidden\")\r\n\t\t\t.style(\"background\", \"rgba(0,0,0,0.7)\")\r\n\t\t\t.style(\"color\", \"white\")\r\n\t\t\t.style(\"padding\", \"5px 10px\")\r\n\t\t\t.style(\"border-radius\", \"4px\")\r\n\t\t\t.style(\"font-size\", \"12px\");\r\n\t};\r\n\r\n\t// ...其他图表绘制方法保持不变...\r\n\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n\r\n<style>\r\n\t/* 全局工具提示样式 */\r\n\t.tooltip {\r\n\t\tposition: absolute;\r\n\t\tz-index: 100;\r\n\t\tpointer-events: none;\r\n\t\ttransition: all 0.2s ease;\r\n\t}\r\n\r\n\t.pie-chart .legend {\r\n\t\tfont-size: 12px;\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n\r\n\t.pie-chart .legend rect {\r\n\t\tstroke: #fff;\r\n\t\tstroke-width: 1px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAqB;;EADjCC,GAAA;EAKID,KAAK,EAAC,2BAA2B;EACjCE,GAAG,EAAC;;;EANRD,GAAA;EAUID,KAAK,EAAC,4BAA4B;EAClCE,GAAG,EAAC;;;EAXRD,GAAA;EAeID,KAAK,EAAC,2BAA2B;EACjCE,GAAG,EAAC;;;EAhBRD,GAAA;EAkBiDD,KAAK,EAAC;;;EAlBvDC,GAAA;EAgCcD,KAAK,EAAC;;;uBA/BnBG,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BWC,MAAA,CAAAC,OAAO,I,cAAvBH,mBAAA,CA6BWI,SAAA;IA/BbN,GAAA;EAAA,IAIUI,MAAA,CAAAG,iBAAiB,oB,cADxBL,mBAAA,CAGsB,OAHtBM,UAGsB,iCANzBC,mBAAA,gBASUL,MAAA,CAAAG,iBAAiB,qB,cADxBL,mBAAA,CAGuB,OAHvBQ,UAGuB,iCAX1BD,mBAAA,gBAcUL,MAAA,CAAAG,iBAAiB,oB,cADxBL,mBAAA,CAGsB,OAHtBS,UAGsB,iCAhBzBF,mBAAA,gBAkBcL,MAAA,CAAAG,iBAAiB,oB,cAA5BL,mBAAA,CAYM,OAZNU,UAYM,GAXWR,MAAA,CAAAS,OAAO,I,kBACtBX,mBAAA,CAKMI,SAAA;IAzBXN,GAAA;EAAA,GAAAc,WAAA,CAqB8BV,MAAA,CAAAW,cAAc,EArB5C,CAqBcC,IAAI,EAAEC,KAAK;yBADpBf,mBAAA,CAKM;MAHJF,GAAG,EAAEiB,KAAK;MACXlB,KAAK,EAAC;wBACHK,MAAA,CAAAc,eAAe,CAACF,IAAI;kDAGzBd,mBAAA,CAEWI,SAAA;IA7BfN,GAAA;EAAA,IAAAmB,gBAAA,CAAAC,gBAAA,CA4BQhB,MAAA,CAAAc,eAAe,CAACG,MAAA,CAAAC,KAAK,kB,kCA5B7Bb,mBAAA,e,8CAgCEP,mBAAA,CAAqC,OAArCqB,UAAqC,EAAT,KAAG,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}