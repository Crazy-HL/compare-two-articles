{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e821d1e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-history\"\n};\nconst _hoisted_4 = {\n  class: \"message-content\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"message-meta\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"loading-spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"vis-container\"\n};\nconst _hoisted_10 = {\n  class: \"input\"\n};\nconst _hoisted_11 = {\n  class: \"input-container\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  class: \"button-container\"\n};\nconst _hoisted_14 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  const _component_CompareTable = _resolveComponent(\"CompareTable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role, {\n        error: message.error\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"strong\", null, _toDisplayString(message.role === \"user\" ? \"用户\" : \"GPT\") + \":\", 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_5), message.timestamp ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(message.timestamp), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createTextVNode(\" 正在处理中... \")])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_CompareTable, {\n    class: \"compare-table\",\n    \"div1-raw-data\": _ctx.div1RawData,\n    \"div3-raw-data\": _ctx.div3RawData,\n    onCompareAttribute: _ctx.handleAttributeComparison\n  }, null, 8 /* PROPS */, [\"div1-raw-data\", \"div3-raw-data\", \"onCompareAttribute\"])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.userQuestion = $event),\n    rows: \"2\",\n    placeholder: \"请输入你想问的问题...\",\n    disabled: _ctx.isLoading\n  }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, _ctx.userQuestion]]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.askQuestion && _ctx.askQuestion(...arguments);\n    }),\n    disabled: _ctx.isLoading\n  }, _toDisplayString(_ctx.isLoading ? \"处理中...\" : \"发送\"), 9 /* TEXT, PROPS */, _hoisted_14)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","_ctx","chatHistory","message","index","_normalizeClass","role","error","_hoisted_4","_toDisplayString","innerHTML","content","_hoisted_5","timestamp","_hoisted_6","_createCommentVNode","isLoading","_hoisted_7","_hoisted_8","_createTextVNode","_hoisted_9","_createVNode","_component_CompareTable","div1RawData","div3RawData","onCompareAttribute","handleAttributeComparison","_hoisted_10","_hoisted_11","_cache","$event","userQuestion","rows","placeholder","disabled","_hoisted_12","_hoisted_13","onClick","askQuestion","arguments","_hoisted_14"],"sources":["D:\\vue_frame\\vue_frame\\wikitable-vue\\client\\src\\components\\Div2.vue"],"sourcesContent":["<template>\r\n\t<div class=\"main-container\">\r\n\t\t<div class=\"chat-container\">\r\n\t\t\t<div class=\"chat-history\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-for=\"(message, index) in chatHistory\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:class=\"['message', message.role, { error: message.error }]\">\r\n\t\t\t\t\t<div class=\"message-content\">\r\n\t\t\t\t\t\t<strong>{{ message.role === \"user\" ? \"用户\" : \"GPT\" }}:</strong>\r\n\t\t\t\t\t\t<p v-html=\"message.content\"></p>\r\n\t\t\t\t\t\t<div class=\"message-meta\" v-if=\"message.timestamp\">\r\n\t\t\t\t\t\t\t{{ message.timestamp }}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isLoading\" class=\"loading-indicator\">\r\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\r\n\t\t\t\t\t正在处理中...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"vis-container\">\r\n\t\t\t<CompareTable\r\n\t\t\t\tclass=\"compare-table\"\r\n\t\t\t\t:div1-raw-data=\"div1RawData\"\r\n\t\t\t\t:div3-raw-data=\"div3RawData\"\r\n\t\t\t\t@compareAttribute=\"handleAttributeComparison\" />\r\n\t\t</div>\r\n\t\t<div class=\"input\">\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tv-model=\"userQuestion\"\r\n\t\t\t\t\trows=\"2\"\r\n\t\t\t\t\tplaceholder=\"请输入你想问的问题...\"\r\n\t\t\t\t\t:disabled=\"isLoading\"></textarea>\r\n\t\t\t\t<div class=\"button-container\">\r\n\t\t\t\t\t<button @click=\"askQuestion\" :disabled=\"isLoading\">\r\n\t\t\t\t\t\t{{ isLoading ? \"处理中...\" : \"发送\" }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, onMounted, onUnmounted, watch, nextTick } from \"vue\";\r\n\timport bus from \"@/js/eventBus.js\";\r\n\timport CompareTable from \"@/components/compoents_base/CompareTable.vue\";\r\n\timport { COMPARABLE_FIELDS } from \"@/components/compoents_base/CompareTable.vue\";\r\n\t// Div2.vue 顶部修改导入方式\r\n\timport CompareTable, {\r\n\t\tCOMPARABLE_FIELDS\r\n\t} from \"@/components/compoents_base/CompareTable.vue\";\r\n\r\n\t// 添加默认字段作为后备\r\n\tconst comparableFields = ref(COMPARABLE_FIELDS || []);\r\n\tconst userQuestion = ref(\"\");\r\n\tconst chatHistory = ref([]);\r\n\tconst div1RawData = ref(null);\r\n\tconst div3RawData = ref(null);\r\n\tconst isLoading = ref(false);\r\n\tconst previousAnalysis = ref(\"\");\r\n\tconst currentComparisonContext = ref(null);\r\n\tconst leftInfobox = ref(null);\r\n\tconst rightInfobox = ref(null);\r\n\r\n\t// 加载聊天历史\r\n\tconst loadChatHistory = () => {\r\n\t\tconst saved = localStorage.getItem(\"chatHistory\");\r\n\t\tif (saved) {\r\n\t\t\ttry {\r\n\t\t\t\tchatHistory.value = JSON.parse(saved);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"加载聊天记录失败:\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// 保存聊天历史\r\n\twatch(\r\n\t\tchatHistory,\r\n\t\tnewVal => {\r\n\t\t\tlocalStorage.setItem(\"chatHistory\", JSON.stringify(newVal));\r\n\t\t},\r\n\t\t{ deep: true }\r\n\t);\r\n\r\n\t// 滚动到底部\r\n\tconst scrollToBottom = () => {\r\n\t\tnextTick(() => {\r\n\t\t\tconst container = document.querySelector(\".chat-history\");\r\n\t\t\tif (container) {\r\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDiv1Event = data => {\r\n\t\tdiv1RawData.value = data.content;\r\n\t\tif (data.infobox) {\r\n\t\t\tleftInfobox.value = data.infobox;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDiv3Event = data => {\r\n\t\tdiv3RawData.value = data.content;\r\n\t\tif (data.infobox) {\r\n\t\t\trightInfobox.value = data.infobox;\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(() => {\r\n\t\tloadChatHistory();\r\n\t\tbus.on(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.on(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.on(\"div1_InfoboxData\", data => {\r\n\t\t\tleftInfobox.value = data;\r\n\t\t});\r\n\t\tbus.on(\"div3_InfoboxData\", data => {\r\n\t\t\trightInfobox.value = data;\r\n\t\t});\r\n\t});\r\n\r\n\tonUnmounted(() => {\r\n\t\tbus.off(\"div1_Event\", handleDiv1Event);\r\n\t\tbus.off(\"div3_Event\", handleDiv3Event);\r\n\t\tbus.off(\"div1_InfoboxData\");\r\n\t\tbus.off(\"div3_InfoboxData\");\r\n\t});\r\n\r\n\tconst formatAnalysisResult = text => {\r\n\t\tif (!text) return \"\";\r\n\t\ttext = text.replace(/### (.*)/g, \"<h3>$1</h3>\");\r\n\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\r\n\t\ttext = text.replace(/\\n/g, \"<br>\");\r\n\t\ttext = text.replace(/(?:^|\\n)(\\d+\\.\\s+.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(?:^|\\n)-\\s+(.*)/g, \"<li>$1</li>\");\r\n\t\ttext = text.replace(/(<li>.*<\\/li>)/gs, \"<ul>$1</ul>\");\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// 从Infobox数据中提取特定字段\r\n\tconst getFieldData = (infobox, fieldKey) => {\r\n\t\tif (!infobox?.sections) return null;\r\n\t\tfor (const section of Object.values(infobox.sections)) {\r\n\t\t\tif (section[fieldKey] !== undefined) {\r\n\t\t\t\treturn section[fieldKey];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst handleAttributeComparison = async ({\r\n\t\tfieldKey,\r\n\t\tleftData,\r\n\t\trightData,\r\n\t\tleftTitle,\r\n\t\trightTitle,\r\n\t\tfieldType,\r\n\t\tfieldLabel\r\n\t}) => {\r\n\t\tif (!leftData || !rightData) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"请先选择要对比的数据\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `正在对比分析<strong>${fieldKey}</strong>属性......`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t});\r\n\r\n\t\t\t// 保存当前对比上下文（包含完整的Infobox数据）\r\n\t\t\tcurrentComparisonContext.value = {\r\n\t\t\t\tfieldKey,\r\n\t\t\t\tleftData,\r\n\t\t\t\trightData,\r\n\t\t\t\tleftTitle,\r\n\t\t\t\trightTitle,\r\n\t\t\t\tfieldType,\r\n\t\t\t\tfieldLabel,\r\n\t\t\t\tleftInfobox: leftInfobox.value,\r\n\t\t\t\trightInfobox: rightInfobox.value,\r\n\t\t\t\tallFields: COMPARABLE_FIELDS\r\n\t\t\t};\r\n\r\n\t\t\tawait api.post(\r\n\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData,\r\n\t\t\t\t\t\trightData,\r\n\t\t\t\t\t\tleftTitle,\r\n\t\t\t\t\t\trightTitle,\r\n\t\t\t\t\t\tfieldKey,\r\n\t\t\t\t\t\tfieldType,\r\n\t\t\t\t\t\tallFields: COMPARABLE_FIELDS.map(field => ({\r\n\t\t\t\t\t\t\tkey: field.key,\r\n\t\t\t\t\t\t\ttype: field.type,\r\n\t\t\t\t\t\t\tleftValue: getFieldData(leftInfobox.value, field.key),\r\n\t\t\t\t\t\t\trightValue: getFieldData(rightInfobox.value, field.key)\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t\tleftInfobox: leftInfobox.value,\r\n\t\t\t\t\t\trightInfobox: rightInfobox.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\"\r\n\t\t\t\t},\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif (response?.analysis) {\r\n\t\t\t\t\t\tpreviousAnalysis.value = response.analysis;\r\n\t\t\t\t\t\tconst formattedAnalysis = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnalysis,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"无效的响应格式\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"对比分析失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `对比分析失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n\r\n\tconst askQuestion = async () => {\r\n\t\tif (!userQuestion.value.trim()) {\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: \"问题不能为空\",\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst question = userQuestion.value;\r\n\t\tchatHistory.value.push({\r\n\t\t\trole: \"user\",\r\n\t\t\tcontent: question,\r\n\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t});\r\n\t\tuserQuestion.value = \"\";\r\n\r\n\t\tisLoading.value = true;\r\n\r\n\t\ttry {\r\n\t\t\t// 检查是否是分析原因的请求\r\n\t\t\tconst isAnalysisRequest =\r\n\t\t\t\tquestion.includes(\"原因\") ||\r\n\t\t\t\tquestion.includes(\"为什么\") ||\r\n\t\t\t\tquestion.includes(\"分析\") ||\r\n\t\t\t\tquestion.includes(\"结合\");\r\n\r\n\t\t\tif (isAnalysisRequest && currentComparisonContext.value) {\r\n\t\t\t\t// 构建包含所有字段数据的请求\r\n\t\t\t\tconst requestData = {\r\n\t\t\t\t\tchartData: {\r\n\t\t\t\t\t\tleftData: currentComparisonContext.value.leftInfobox,\r\n\t\t\t\t\t\trightData: currentComparisonContext.value.rightInfobox,\r\n\t\t\t\t\t\tleftTitle: currentComparisonContext.value.leftTitle,\r\n\t\t\t\t\t\trightTitle: currentComparisonContext.value.rightTitle,\r\n\t\t\t\t\t\tfieldKey: question,\r\n\t\t\t\t\t\tallFields: COMPARABLE_FIELDS.map(field => ({\r\n\t\t\t\t\t\t\tkey: field.key,\r\n\t\t\t\t\t\t\ttype: field.type,\r\n\t\t\t\t\t\t\tleftValue: getFieldData(\r\n\t\t\t\t\t\t\t\tcurrentComparisonContext.value.leftInfobox,\r\n\t\t\t\t\t\t\t\tfield.key\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\trightValue: getFieldData(\r\n\t\t\t\t\t\t\t\tcurrentComparisonContext.value.rightInfobox,\r\n\t\t\t\t\t\t\t\tfield.key\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t\tpreviousConclusion: previousAnalysis.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchartType: \"comparison\",\r\n\t\t\t\t\tanalysisRequest: true\r\n\t\t\t\t};\r\n\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"compare_attributes\",\r\n\t\t\t\t\trequestData,\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.analysis);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else if (leftInfobox.value && rightInfobox.value) {\r\n\t\t\t\t// 普通提问逻辑\r\n\t\t\t\tawait api.post(\r\n\t\t\t\t\t\"gpt_ask\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestion: question,\r\n\t\t\t\t\t\tleftInfobox: leftInfobox.value,\r\n\t\t\t\t\t\trightInfobox: rightInfobox.value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tconst formattedAnswer = formatAnalysisResult(response.answer);\r\n\t\t\t\t\t\tchatHistory.value.push({\r\n\t\t\t\t\t\t\trole: \"assistant\",\r\n\t\t\t\t\t\t\tcontent: formattedAnswer,\r\n\t\t\t\t\t\t\ttimestamp: new Date().toLocaleString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"请先加载两个Infobox的数据\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"请求失败:\", error);\r\n\t\t\tchatHistory.value.push({\r\n\t\t\t\trole: \"assistant\",\r\n\t\t\t\tcontent: `请求失败: ${error.message || \"未知错误\"}`,\r\n\t\t\t\ttimestamp: new Date().toLocaleString(),\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tisLoading.value = false;\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.main-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 5px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\t.chat-container {\r\n\t\tflex: 0 0 20%;\r\n\t\tmin-height: 200px;\r\n\t\tmax-height: 30vh;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 12px;\r\n\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.chat-history {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tmargin-bottom: 20px;\r\n\t\tscroll-behavior: smooth;\r\n\t}\r\n\r\n\t.input {\r\n\t\tflex: 0.3;\r\n\t}\r\n\r\n\t.message {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\t.message-content {\r\n\t\tpadding: 12px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.message.user .message-content {\r\n\t\tbackground-color: #e3f2fd;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t.message.assistant .message-content {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t.message.error .message-content {\r\n\t\tbackground-color: #ffebee;\r\n\t\tborder-left: 3px solid #f44336;\r\n\t}\r\n\r\n\t.message-meta {\r\n\t\tfont-size: 12px;\r\n\t\tcolor: #999;\r\n\t\tmargin-top: 4px;\r\n\t}\r\n\r\n\t.loading-indicator {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t\tpadding: 10px;\r\n\t\tbackground: rgba(255, 255, 255, 0.8);\r\n\t\tposition: sticky;\r\n\t\tbottom: 0;\r\n\t}\r\n\r\n\t.loading-spinner {\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tborder: 2px solid #f3f3f3;\r\n\t\tborder-top: 2px solid #4caf50;\r\n\t\tborder-radius: 50%;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t.vis-container {\r\n\t\tflex: 1.2;\r\n\t\tpadding: 8px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid #e0e0e0;\r\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\t\tmin-width: 320px;\r\n\t}\r\n\r\n\t.compare-table {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.input-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 2;\r\n\t\tflex-direction: column;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tresize: none;\r\n\t\tpadding: 12px;\r\n\t\tfont-size: 14px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: #fafafa;\r\n\t\ttransition: border-color 0.3s ease;\r\n\t}\r\n\r\n\ttextarea:disabled {\r\n\t\tbackground-color: #eee;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\ttextarea:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #4caf50;\r\n\t}\r\n\r\n\t.button-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 0.2;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tflex: 1;\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #4caf50;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\tbutton:hover:not(:disabled) {\r\n\t\tbackground-color: #45a049;\r\n\t\ttransform: translateY(-1px);\r\n\t}\r\n\r\n\tbutton:active:not(:disabled) {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #cccccc;\r\n\t\tcursor: not-allowed;\r\n\t\ttransform: none;\r\n\t}\r\n</style>\r\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBARjC;;EAAAC,GAAA;EAWWD,KAAK,EAAC;;;EAXjBC,GAAA;EAgB0BD,KAAK,EAAC;;gEAC3BE,mBAAA,CAAmC;EAA9BF,KAAK,EAAC;AAAiB;;EAM1BA,KAAK,EAAC;AAAe;;EAOrBA,KAAK,EAAC;AAAO;;EACZA,KAAK,EAAC;AAAiB;oBA/B/B;;EAqCSA,KAAK,EAAC;AAAkB;oBArCjC;;;uBACCG,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CLF,mBAAA,CAmBM,OAnBNG,UAmBM,GAlBLH,mBAAA,CAiBM,OAjBNI,UAiBM,I,kBAhBLH,mBAAA,CAWMI,SAAA,QAfVC,WAAA,CAKgCC,IAAA,CAAAC,WAAW,EAL3C,CAKaC,OAAO,EAAEC,KAAK;yBADvBT,mBAAA,CAWM;MATJF,GAAG,EAAEW,KAAK;MACVZ,KAAK,EAPXa,eAAA,aAOyBF,OAAO,CAACG,IAAI;QAAAC,KAAA,EAAWJ,OAAO,CAACI;MAAK;QACxDb,mBAAA,CAMM,OANNc,UAMM,GALLd,mBAAA,CAA8D,gBAAAe,gBAAA,CAAnDN,OAAO,CAACG,IAAI,8BAA6B,GAAC,iBACrDZ,mBAAA,CAAgC;MAA7BgB,SAAwB,EAAhBP,OAAO,CAACQ;4BAVzBC,UAAA,GAWsCT,OAAO,CAACU,SAAS,I,cAAjDlB,mBAAA,CAEM,OAFNmB,UAEM,EAAAL,gBAAA,CADFN,OAAO,CAACU,SAAS,oBAZ3BE,mBAAA,e;kCAgBed,IAAA,CAAAe,SAAS,I,cAApBrB,mBAAA,CAGM,OAHNsB,UAGM,GAFLC,UAAmC,EAjBxCC,gBAAA,CAiBwC,YAEpC,E,KAnBJJ,mBAAA,e,KAuBErB,mBAAA,CAMM,OANN0B,UAMM,GALLC,YAAA,CAIiDC,uBAAA;IAHhD9B,KAAK,EAAC,eAAe;IACpB,eAAa,EAAES,IAAA,CAAAsB,WAAW;IAC1B,eAAa,EAAEtB,IAAA,CAAAuB,WAAW;IAC1BC,kBAAgB,EAAExB,IAAA,CAAAyB;uFAErBhC,mBAAA,CAaM,OAbNiC,WAaM,GAZLjC,mBAAA,CAWM,OAXNkC,WAWM,G,gBAVLlC,mBAAA,CAIkC;IApCtC,uBAAAmC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiCc7B,IAAA,CAAA8B,YAAY,GAAAD,MAAA;IACrBE,IAAI,EAAC,GAAG;IACRC,WAAW,EAAC,cAAc;IACzBC,QAAQ,EAAEjC,IAAA,CAAAe;0BApChBmB,WAAA,I,cAiCclC,IAAA,CAAA8B,YAAY,E,GAItBrC,mBAAA,CAIM,OAJN0C,WAIM,GAHL1C,mBAAA,CAES;IAFA2C,OAAK,EAAAR,MAAA,QAAAA,MAAA;MAAA,OAAE5B,IAAA,CAAAqC,WAAA,IAAArC,IAAA,CAAAqC,WAAA,IAAAC,SAAA,CAAW;IAAA;IAAGL,QAAQ,EAAEjC,IAAA,CAAAe;sBACpCf,IAAA,CAAAe,SAAS,0CAvClBwB,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}