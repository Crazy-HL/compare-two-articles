{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  __name: 'PopupOverlay',\n  props: {\n    show: Boolean,\n    // 控制弹出框和遮罩层的显示\n    selectedText: String,\n    // 选中的文本内容\n    divId: String,\n    // 当前 div 的 ID\n    visualizationLoading: Boolean // 可视化加载状态\n  },\n  emits: [\"closePopup\", \"switchView\"],\n  setup(__props, _ref) {\n    let {\n      expose: __expose,\n      emit: __emit\n    } = _ref;\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const currentView = ref(\"text\"); // 当前视图模式：text 或 visual\n\n    // 判断是否是表格内容\n    const isTable = content => {\n      return /<table.*?>.*?<\\/table>/s.test(content);\n    };\n\n    // 关闭弹出框\n    const closePopup = () => {\n      emit(\"closePopup\");\n    };\n\n    // 切换视图\n    const switchView = view => {\n      currentView.value = view;\n      emit(\"switchView\", view);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      currentView,\n      isTable,\n      closePopup,\n      switchView,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","props","__props","emit","__emit","currentView","isTable","content","test","closePopup","switchView","view","value"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/base/PopupOverlay.vue"],"sourcesContent":["<template>\r\n\t<!-- 遮罩层 -->\r\n\t<div v-if=\"show\" class=\"overlay\" @click=\"closePopup\"></div>\r\n\r\n\t<!-- 弹出框 -->\r\n\t<div v-if=\"show\" class=\"text-popup\" @click=\"closePopup\">\r\n\t\t<!-- 切换视图按钮 -->\r\n\t\t<div class=\"view-switcher\">\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('text')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'text' }\"\r\n\t\t\t\ttitle=\"文本视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'align-left']\" />\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\t@click.prevent.stop=\"switchView('visual')\"\r\n\t\t\t\t:class=\"{ active: currentView === 'visual' }\"\r\n\t\t\t\ttitle=\"可视化视图\">\r\n\t\t\t\t<font-awesome-icon :icon=\"['fas', 'chart-bar']\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<!-- 文本视图 -->\r\n\t\t<div v-if=\"currentView === 'text'\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"isTable(selectedText)\"\r\n\t\t\t\tclass=\"table-container\"\r\n\t\t\t\tv-html=\"selectedText\"></div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<p>{{ selectedText }}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- 可视化视图 -->\r\n\t\t<div v-if=\"currentView === 'visual'\" class=\"visualization-container\">\r\n\t\t\t<div v-if=\"visualizationLoading\" class=\"loading-spinner\"></div>\r\n\t\t\t<div v-else-if=\"divId === 'div1'\" class=\"chart-container1\"></div>\r\n\t\t\t<div v-else class=\"chart-container2\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref } from \"vue\";\r\n\r\n\tconst props = defineProps({\r\n\t\tshow: Boolean, // 控制弹出框和遮罩层的显示\r\n\t\tselectedText: String, // 选中的文本内容\r\n\t\tdivId: String, // 当前 div 的 ID\r\n\t\tvisualizationLoading: Boolean // 可视化加载状态\r\n\t});\r\n\r\n\tconst emit = defineEmits([\"closePopup\", \"switchView\"]);\r\n\r\n\tconst currentView = ref(\"text\"); // 当前视图模式：text 或 visual\r\n\r\n\t// 判断是否是表格内容\r\n\tconst isTable = content => {\r\n\t\treturn /<table.*?>.*?<\\/table>/s.test(content);\r\n\t};\r\n\r\n\t// 关闭弹出框\r\n\tconst closePopup = () => {\r\n\t\temit(\"closePopup\");\r\n\t};\r\n\r\n\t// 切换视图\r\n\tconst switchView = view => {\r\n\t\tcurrentView.value = view;\r\n\t\temit(\"switchView\", view);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(255, 255, 255, 0.1);\r\n\t\tbackdrop-filter: blur(10px);\r\n\t\tz-index: 90;\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t}\r\n\r\n\t.text-popup {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 90%;\r\n\t\tmax-height: 80vh;\r\n\t\toverflow: auto;\r\n\t\tbackground: rgba(255, 255, 255, 0.98);\r\n\t\tpadding: 25px;\r\n\t\tbox-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4);\r\n\t\tborder-radius: 12px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 0.8vw;\r\n\t\tfont-weight: 500;\r\n\t\tline-height: 1.6;\r\n\t\tcolor: #333;\r\n\t\tz-index: 100;\r\n\t\tcursor: pointer;\r\n\t\tbackdrop-filter: blur(20px);\r\n\t\tanimation: fadeIn 0.3s ease-in-out;\r\n\t\tborder: 1px solid rgba(255, 255, 255, 0.2);\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.table-container {\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tfont-family: \"Arial\", sans-serif;\r\n\t}\r\n\r\n\t.text-popup p {\r\n\t\tmargin: 0;\r\n\t\tpadding: 10px 15px;\r\n\t\tfont-size: 1.2rem;\r\n\t\tcolor: #333;\r\n\t\ttext-align: justify;\r\n\t\tline-height: 1.8;\r\n\t\tword-break: break-word;\r\n\t\twhite-space: pre-wrap;\r\n\t\tmax-width: 90%;\r\n\t\tborder-left: 4px solid #3498db;\r\n\t\tbackground: rgba(255, 255, 255, 0.9);\r\n\t\tbox-shadow: inset 2px 2px 8px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.view-switcher {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t.view-switcher button {\r\n\t\tpadding: 25px;\r\n\t\tmargin: 0 5px;\r\n\t\tborder: none;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s ease, transform 0.2s ease;\r\n\t\twidth: 36px;\r\n\t\theight: 36px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.view-switcher button:hover {\r\n\t\tbackground-color: #ddd;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t.view-switcher button.active {\r\n\t\tbackground-color: #0077b6;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.visualization-container {\r\n\t\twidth: 100%;\r\n\t\theight: 300px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t@keyframes fadeIn {\r\n\t\t0% {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"AA4CC,SAASA,GAAG,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;IAEzB,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAyC;IAEtD,MAAMC,WAAW,GAAGL,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAMM,OAAO,GAAGC,OAAO,IAAI;MAC1B,OAAO,yBAAyB,CAACC,IAAI,CAACD,OAAO,CAAC;IAC/C,CAAC;;IAED;IACA,MAAME,UAAU,GAAGA,CAAA,KAAM;MACxBN,IAAI,CAAC,YAAY,CAAC;IACnB,CAAC;;IAED;IACA,MAAMO,UAAU,GAAGC,IAAI,IAAI;MAC1BN,WAAW,CAACO,KAAK,GAAGD,IAAI;MACxBR,IAAI,CAAC,YAAY,EAAEQ,IAAI,CAAC;IACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}