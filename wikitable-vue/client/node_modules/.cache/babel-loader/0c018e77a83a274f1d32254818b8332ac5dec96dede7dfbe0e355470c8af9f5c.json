{"ast":null,"code":"import { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport * as d3 from \"d3\";\nexport default {\n  __name: 'FieldVisualization',\n  props: {\n    field: [Object, Array, String, Number],\n    type: String,\n    visualization: String,\n    fieldKey: String,\n    yRange: Array,\n    compareData: [Object, Array]\n  },\n  setup(__props, _ref) {\n    let {\n      expose: __expose\n    } = _ref;\n    __expose();\n    const props = __props;\n    const pieChart = ref(null);\n    const barChart = ref(null);\n    const lineChart = ref(null);\n    const cleanValue = value => {\n      if (value === null || value === undefined) return null;\n      if (typeof value === \"number\") return value;\n      if (typeof value === \"string\") {\n        // 处理百分比值\n        const percentValue = parseFloat(value.replace(\"%\", \"\"));\n        if (!isNaN(percentValue)) return percentValue;\n\n        // 处理其他数值\n        const num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\n        return isNaN(num) ? value : num;\n      }\n      return value;\n    };\n    const processedArray = computed(() => {\n      if (!props.field) return [];\n\n      // 处理对象形式的百分比分布数据\n      if (typeof props.field === \"object\" && !Array.isArray(props.field)) {\n        return Object.entries(props.field).map(_ref2 => {\n          let [name, value] = _ref2;\n          return {\n            name: name,\n            value: cleanValue(value),\n            raw: value\n          };\n        }).filter(item => !isNaN(item.value));\n      }\n\n      // 处理数组形式的数据\n      const rawArray = Array.isArray(props.field) ? props.field : [props.field];\n      return rawArray.map(item => ({\n        name: item.name || item.key || \"数据\",\n        value: cleanValue(item.value ?? item.raw),\n        year: item.year ? parseInt(item.year) : null,\n        raw: item.raw || item.value\n      })).filter(item => item.value !== null && !isNaN(item.value));\n    });\n    const visualizationType = computed(() => {\n      if (props.visualization) return props.visualization;\n\n      // 如果是对象形式的百分比数据，优先使用饼图\n      if (typeof props.field === \"object\" && !Array.isArray(props.field)) {\n        return \"pie-chart\";\n      }\n      if (isTimeSeriesData.value) return \"line-chart\";\n      if (isComparisonData.value) return \"bar-chart\";\n      if (isSinglePercentage.value) return \"pie-chart\";\n      return \"text-only\";\n    });\n    const isTimeSeriesData = computed(() => {\n      return processedArray.value.length >= 2 && processedArray.value.every(item => item.year && typeof item.value === \"number\");\n    });\n    const isComparisonData = computed(() => {\n      return processedArray.value.length >= 1 && processedArray.value.every(item => typeof item.value === \"number\");\n    });\n    const isSinglePercentage = computed(() => {\n      return props.type === \"percentage\" && !Array.isArray(props.field) && typeof cleanValue(props.field?.value) === \"number\";\n    });\n    const hasData = computed(() => {\n      if (props.field === null || props.field === undefined) return false;\n      if (Array.isArray(props.field)) return processedArray.value.length > 0;\n      if (typeof props.field === \"object\") return Object.keys(props.field).length > 0;\n      return props.field.value !== undefined && props.field.value !== null;\n    });\n    const isArray = computed(() => Array.isArray(props.field));\n    const formatTextValue = item => {\n      const value = item.value ?? item;\n      if (value === null || value === undefined) return \"-\";\n      if (typeof value === \"number\") {\n        if (props.type === \"percentage\") return `${value}%`;\n        return value.toLocaleString();\n      }\n      return value;\n    };\n    const drawPieChart = () => {\n      const container = pieChart.value;\n      if (!container || processedArray.value.length === 0) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const radius = Math.min(width, height) / 2;\n      const labelRadius = radius * 0.7;\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      const color = d3.scaleOrdinal().domain(processedArray.value.map(d => d.name)).range(d3.schemeCategory10);\n      const pie = d3.pie().value(d => d.value).sort(null);\n      const arc = d3.arc().innerRadius(0).outerRadius(radius);\n      const labelArc = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n      const arcs = svg.selectAll(\".arc\").data(pie(processedArray.value)).enter().append(\"g\").attr(\"class\", \"arc\");\n\n      // 绘制扇形\n      arcs.append(\"path\").attr(\"d\", arc).attr(\"fill\", d => color(d.data.name)).attr(\"stroke\", \"white\").attr(\"stroke-width\", 1).on(\"mouseover\", function () {\n        d3.select(this).attr(\"opacity\", 0.8);\n      }).on(\"mouseout\", function () {\n        d3.select(this).attr(\"opacity\", 1);\n      });\n\n      // 添加标签\n      arcs.append(\"text\").attr(\"transform\", d => `translate(${labelArc.centroid(d)})`).attr(\"text-anchor\", \"middle\").text(d => `${d.data.name}: ${d.data.value}%`).style(\"font-size\", \"12px\").style(\"font-weight\", \"bold\").style(\"fill\", \"white\").style(\"text-shadow\", \"1px 1px 2px rgba(0,0,0,0.7)\");\n    };\n    const drawBarChart = () => {\n      const container = barChart.value;\n      if (!container || processedArray.value.length === 0) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 10,\n        right: 10,\n        bottom: 20,\n        left: 10\n      };\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      const maxValue = props.yRange ? props.yRange[1] : d3.max(processedArray.value, d => d.value);\n      const minValue = props.yRange ? props.yRange[0] : 0;\n      const x = d3.scaleBand().domain(processedArray.value.map((_, i) => i)).range([margin.left, width - margin.right]).padding(0.5);\n      const y = d3.scaleLinear().domain([minValue, maxValue]).range([height - margin.bottom, margin.top]);\n      svg.selectAll(\".main-bar\").data(processedArray.value).enter().append(\"rect\").attr(\"class\", \"main-bar\").attr(\"x\", (_, i) => x(i)).attr(\"y\", d => y(d.value)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - margin.bottom - y(d.value)).attr(\"fill\", \"#2196F3\");\n      svg.selectAll(\".value-text\").data(processedArray.value).enter().append(\"text\").attr(\"class\", \"value-text\").attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2).attr(\"y\", d => y(d.value) - 5).attr(\"text-anchor\", \"middle\").text(d => props.type === \"percentage\" ? `${d.value}%` : d.value);\n    };\n    const drawLineChart = () => {\n      const container = lineChart.value;\n      if (!container || processedArray.value.length < 2) return;\n      container.innerHTML = \"\";\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      };\n      const chartData = [...processedArray.value].filter(item => item.year && !isNaN(item.value)).sort((a, b) => a.year - b.year);\n      const svg = d3.select(container).append(\"svg\").attr(\"width\", width - 50).attr(\"height\", height);\n      const x = d3.scaleLinear().domain(d3.extent(chartData, d => d.year)).range([margin.left, width - margin.right]);\n      const y = d3.scaleLinear().domain([0, d3.max(chartData, d => d.value) * 1.1]).range([height - margin.bottom, margin.top]);\n      const line = d3.line().x(d => x(d.year)).y(d => y(d.value)).curve(d3.curveCatmullRom.alpha(0.5));\n      svg.append(\"path\").datum(chartData).attr(\"d\", line).attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 3).attr(\"fill\", \"none\");\n      svg.selectAll(\"circle\").data(chartData).enter().append(\"circle\").attr(\"cx\", d => x(d.year)).attr(\"cy\", d => y(d.value)).attr(\"r\", 5).attr(\"fill\", \"#2196F3\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 2);\n      const lastPoint = chartData[chartData.length - 1];\n      svg.append(\"text\").attr(\"x\", x(lastPoint.year) + 12).attr(\"y\", y(lastPoint.value)).attr(\"dy\", \"0.35em\").style(\"font-size\", \"12px\").style(\"font-weight\", \"bold\").style(\"fill\", \"#2196F3\").text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\n    };\n    watch(() => [props.field, visualizationType.value], () => {\n      nextTick(() => {\n        if (!hasData.value) return;\n        switch (visualizationType.value) {\n          case \"pie-chart\":\n            drawPieChart();\n            break;\n          case \"line-chart\":\n            drawLineChart();\n            break;\n          case \"bar-chart\":\n            drawBarChart();\n            break;\n        }\n      });\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const __returned__ = {\n      props,\n      pieChart,\n      barChart,\n      lineChart,\n      cleanValue,\n      processedArray,\n      visualizationType,\n      isTimeSeriesData,\n      isComparisonData,\n      isSinglePercentage,\n      hasData,\n      isArray,\n      formatTextValue,\n      drawPieChart,\n      drawBarChart,\n      drawLineChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      nextTick,\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","nextTick","d3","props","__props","pieChart","barChart","lineChart","cleanValue","value","undefined","percentValue","parseFloat","replace","isNaN","num","processedArray","field","Array","isArray","Object","entries","map","_ref2","name","raw","filter","item","rawArray","key","year","parseInt","visualizationType","visualization","isTimeSeriesData","isComparisonData","isSinglePercentage","length","every","type","hasData","keys","formatTextValue","toLocaleString","drawPieChart","container","innerHTML","width","clientWidth","height","clientHeight","radius","Math","min","labelRadius","svg","select","append","attr","color","scaleOrdinal","domain","d","range","schemeCategory10","pie","sort","arc","innerRadius","outerRadius","labelArc","arcs","selectAll","data","enter","on","centroid","text","style","drawBarChart","margin","top","right","bottom","left","maxValue","yRange","max","minValue","x","scaleBand","_","i","padding","y","scaleLinear","bandwidth","drawLineChart","chartData","a","b","extent","line","curve","curveCatmullRom","alpha","datum","lastPoint","immediate","deep"],"sources":["D:/vue_frame/vue_frame/wikitable-vue/client/src/components/compoents_base/FieldVisualization.vue"],"sourcesContent":["<template>\r\n\t<div class=\"field-visualization\">\r\n\t\t<template v-if=\"hasData\">\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'pie-chart'\"\r\n\t\t\t\tclass=\"chart-container pie-chart\"\r\n\t\t\t\tref=\"pieChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'line-chart'\"\r\n\t\t\t\tclass=\"chart-container line-chart\"\r\n\t\t\t\tref=\"lineChart\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tv-if=\"visualizationType === 'bar-chart'\"\r\n\t\t\t\tclass=\"chart-container bar-chart\"\r\n\t\t\t\tref=\"barChart\"></div>\r\n\r\n\t\t\t<div v-if=\"visualizationType === 'text-only'\" class=\"text-display\">\r\n\t\t\t\t<template v-if=\"isArray\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tv-for=\"(item, index) in processedArray\"\r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"text-item\">\r\n\t\t\t\t\t\t{{ formatTextValue(item) }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t{{ formatTextValue(field) }}\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t\t<div v-else class=\"no-data\">无数据</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, watch, nextTick } from \"vue\";\r\n\timport * as d3 from \"d3\";\r\n\r\n\tconst props = defineProps({\r\n\t\tfield: [Object, Array, String, Number],\r\n\t\ttype: String,\r\n\t\tvisualization: String,\r\n\t\tfieldKey: String,\r\n\t\tyRange: Array,\r\n\t\tcompareData: [Object, Array]\r\n\t});\r\n\r\n\tconst pieChart = ref(null);\r\n\tconst barChart = ref(null);\r\n\tconst lineChart = ref(null);\r\n\r\n\tconst cleanValue = value => {\r\n\t\tif (value === null || value === undefined) return null;\r\n\t\tif (typeof value === \"number\") return value;\r\n\r\n\t\tif (typeof value === \"string\") {\r\n\t\t\t// 处理百分比值\r\n\t\t\tconst percentValue = parseFloat(value.replace(\"%\", \"\"));\r\n\t\t\tif (!isNaN(percentValue)) return percentValue;\r\n\r\n\t\t\t// 处理其他数值\r\n\t\t\tconst num = parseFloat(value.replace(/[^0-9.-]/g, \"\"));\r\n\t\t\treturn isNaN(num) ? value : num;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tconst processedArray = computed(() => {\r\n\t\tif (!props.field) return [];\r\n\r\n\t\t// 处理对象形式的百分比分布数据\r\n\t\tif (typeof props.field === \"object\" && !Array.isArray(props.field)) {\r\n\t\t\treturn Object.entries(props.field)\r\n\t\t\t\t.map(([name, value]) => ({\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tvalue: cleanValue(value),\r\n\t\t\t\t\traw: value\r\n\t\t\t\t}))\r\n\t\t\t\t.filter(item => !isNaN(item.value));\r\n\t\t}\r\n\r\n\t\t// 处理数组形式的数据\r\n\t\tconst rawArray = Array.isArray(props.field) ? props.field : [props.field];\r\n\t\treturn rawArray\r\n\t\t\t.map(item => ({\r\n\t\t\t\tname: item.name || item.key || \"数据\",\r\n\t\t\t\tvalue: cleanValue(item.value ?? item.raw),\r\n\t\t\t\tyear: item.year ? parseInt(item.year) : null,\r\n\t\t\t\traw: item.raw || item.value\r\n\t\t\t}))\r\n\t\t\t.filter(item => item.value !== null && !isNaN(item.value));\r\n\t});\r\n\r\n\tconst visualizationType = computed(() => {\r\n\t\tif (props.visualization) return props.visualization;\r\n\r\n\t\t// 如果是对象形式的百分比数据，优先使用饼图\r\n\t\tif (typeof props.field === \"object\" && !Array.isArray(props.field)) {\r\n\t\t\treturn \"pie-chart\";\r\n\t\t}\r\n\r\n\t\tif (isTimeSeriesData.value) return \"line-chart\";\r\n\t\tif (isComparisonData.value) return \"bar-chart\";\r\n\t\tif (isSinglePercentage.value) return \"pie-chart\";\r\n\r\n\t\treturn \"text-only\";\r\n\t});\r\n\r\n\tconst isTimeSeriesData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 2 &&\r\n\t\t\tprocessedArray.value.every(\r\n\t\t\t\titem => item.year && typeof item.value === \"number\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\tconst isComparisonData = computed(() => {\r\n\t\treturn (\r\n\t\t\tprocessedArray.value.length >= 1 &&\r\n\t\t\tprocessedArray.value.every(item => typeof item.value === \"number\")\r\n\t\t);\r\n\t});\r\n\r\n\tconst isSinglePercentage = computed(() => {\r\n\t\treturn (\r\n\t\t\tprops.type === \"percentage\" &&\r\n\t\t\t!Array.isArray(props.field) &&\r\n\t\t\ttypeof cleanValue(props.field?.value) === \"number\"\r\n\t\t);\r\n\t});\r\n\r\n\tconst hasData = computed(() => {\r\n\t\tif (props.field === null || props.field === undefined) return false;\r\n\t\tif (Array.isArray(props.field)) return processedArray.value.length > 0;\r\n\t\tif (typeof props.field === \"object\")\r\n\t\t\treturn Object.keys(props.field).length > 0;\r\n\t\treturn props.field.value !== undefined && props.field.value !== null;\r\n\t});\r\n\r\n\tconst isArray = computed(() => Array.isArray(props.field));\r\n\r\n\tconst formatTextValue = item => {\r\n\t\tconst value = item.value ?? item;\r\n\t\tif (value === null || value === undefined) return \"-\";\r\n\r\n\t\tif (typeof value === \"number\") {\r\n\t\t\tif (props.type === \"percentage\") return `${value}%`;\r\n\t\t\treturn value.toLocaleString();\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tconst drawPieChart = () => {\r\n\t\tconst container = pieChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst radius = Math.min(width, height) / 2;\r\n\t\tconst labelRadius = radius * 0.7;\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n\t\tconst color = d3\r\n\t\t\t.scaleOrdinal()\r\n\t\t\t.domain(processedArray.value.map(d => d.name))\r\n\t\t\t.range(d3.schemeCategory10);\r\n\r\n\t\tconst pie = d3\r\n\t\t\t.pie()\r\n\t\t\t.value(d => d.value)\r\n\t\t\t.sort(null);\r\n\r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n\t\tconst labelArc = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\r\n\r\n\t\tconst arcs = svg\r\n\t\t\t.selectAll(\".arc\")\r\n\t\t\t.data(pie(processedArray.value))\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"arc\");\r\n\r\n\t\t// 绘制扇形\r\n\t\tarcs\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", arc)\r\n\t\t\t.attr(\"fill\", d => color(d.data.name))\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 1)\r\n\t\t\t.on(\"mouseover\", function () {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 0.8);\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", function () {\r\n\t\t\t\td3.select(this).attr(\"opacity\", 1);\r\n\t\t\t});\r\n\r\n\t\t// 添加标签\r\n\t\tarcs\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"transform\", d => `translate(${labelArc.centroid(d)})`)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => `${d.data.name}: ${d.data.value}%`)\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.style(\"fill\", \"white\")\r\n\t\t\t.style(\"text-shadow\", \"1px 1px 2px rgba(0,0,0,0.7)\");\r\n\t};\r\n\r\n\tconst drawBarChart = () => {\r\n\t\tconst container = barChart.value;\r\n\t\tif (!container || processedArray.value.length === 0) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 10, right: 10, bottom: 20, left: 10 };\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst maxValue = props.yRange\r\n\t\t\t? props.yRange[1]\r\n\t\t\t: d3.max(processedArray.value, d => d.value);\r\n\r\n\t\tconst minValue = props.yRange ? props.yRange[0] : 0;\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleBand()\r\n\t\t\t.domain(processedArray.value.map((_, i) => i))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\t.padding(0.5);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([minValue, maxValue])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\".main-bar\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"main-bar\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i))\r\n\t\t\t.attr(\"y\", d => y(d.value))\r\n\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t.attr(\"height\", d => height - margin.bottom - y(d.value))\r\n\t\t\t.attr(\"fill\", \"#2196F3\");\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\".value-text\")\r\n\t\t\t.data(processedArray.value)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"class\", \"value-text\")\r\n\t\t\t.attr(\"x\", (_, i) => x(i) + x.bandwidth() / 2)\r\n\t\t\t.attr(\"y\", d => y(d.value) - 5)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.text(d => (props.type === \"percentage\" ? `${d.value}%` : d.value));\r\n\t};\r\n\r\n\tconst drawLineChart = () => {\r\n\t\tconst container = lineChart.value;\r\n\t\tif (!container || processedArray.value.length < 2) return;\r\n\r\n\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\tconst width = container.clientWidth;\r\n\t\tconst height = container.clientHeight;\r\n\t\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n\r\n\t\tconst chartData = [...processedArray.value]\r\n\t\t\t.filter(item => item.year && !isNaN(item.value))\r\n\t\t\t.sort((a, b) => a.year - b.year);\r\n\r\n\t\tconst svg = d3\r\n\t\t\t.select(container)\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width - 50)\r\n\t\t\t.attr(\"height\", height);\r\n\r\n\t\tconst x = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain(d3.extent(chartData, d => d.year))\r\n\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\tconst y = d3\r\n\t\t\t.scaleLinear()\r\n\t\t\t.domain([0, d3.max(chartData, d => d.value) * 1.1])\r\n\t\t\t.range([height - margin.bottom, margin.top]);\r\n\r\n\t\tconst line = d3\r\n\t\t\t.line()\r\n\t\t\t.x(d => x(d.year))\r\n\t\t\t.y(d => y(d.value))\r\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5));\r\n\r\n\t\tsvg\r\n\t\t\t.append(\"path\")\r\n\t\t\t.datum(chartData)\r\n\t\t\t.attr(\"d\", line)\r\n\t\t\t.attr(\"stroke\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke-width\", 3)\r\n\t\t\t.attr(\"fill\", \"none\");\r\n\r\n\t\tsvg\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(chartData)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"cx\", d => x(d.year))\r\n\t\t\t.attr(\"cy\", d => y(d.value))\r\n\t\t\t.attr(\"r\", 5)\r\n\t\t\t.attr(\"fill\", \"#2196F3\")\r\n\t\t\t.attr(\"stroke\", \"white\")\r\n\t\t\t.attr(\"stroke-width\", 2);\r\n\r\n\t\tconst lastPoint = chartData[chartData.length - 1];\r\n\t\tsvg\r\n\t\t\t.append(\"text\")\r\n\t\t\t.attr(\"x\", x(lastPoint.year) + 12)\r\n\t\t\t.attr(\"y\", y(lastPoint.value))\r\n\t\t\t.attr(\"dy\", \"0.35em\")\r\n\t\t\t.style(\"font-size\", \"12px\")\r\n\t\t\t.style(\"font-weight\", \"bold\")\r\n\t\t\t.style(\"fill\", \"#2196F3\")\r\n\t\t\t.text(`${lastPoint.value}${props.type === \"percentage\" ? \"%\" : \"\"}`);\r\n\t};\r\n\r\n\twatch(\r\n\t\t() => [props.field, visualizationType.value],\r\n\t\t() => {\r\n\t\t\tnextTick(() => {\r\n\t\t\t\tif (!hasData.value) return;\r\n\r\n\t\t\t\tswitch (visualizationType.value) {\r\n\t\t\t\t\tcase \"pie-chart\":\r\n\t\t\t\t\t\tdrawPieChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"line-chart\":\r\n\t\t\t\t\t\tdrawLineChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bar-chart\":\r\n\t\t\t\t\t\tdrawBarChart();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{ immediate: true, deep: true }\r\n\t);\r\n</script>\r\n\r\n<style scoped>\r\n\t.field-visualization {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 120px;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.chart-container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.text-display {\r\n\t\tpadding: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t.text-item {\r\n\t\tmargin: 4px 0;\r\n\t}\r\n\r\n\t.no-data {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tcolor: #999;\r\n\t}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}